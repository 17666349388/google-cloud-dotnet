### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.JsonWebSignature.Header
  commentId: T:Google.Apis.Auth.JsonWebSignature.Header
  id: JsonWebSignature.Header
  parent: Google.Apis.Auth
  children:
  - Google.Apis.Auth.JsonWebSignature.Header.Algorithm
  - Google.Apis.Auth.JsonWebSignature.Header.critical
  - Google.Apis.Auth.JsonWebSignature.Header.Jwk
  - Google.Apis.Auth.JsonWebSignature.Header.JwkUrl
  - Google.Apis.Auth.JsonWebSignature.Header.KeyId
  - Google.Apis.Auth.JsonWebSignature.Header.X509Certificate
  - Google.Apis.Auth.JsonWebSignature.Header.X509Thumbprint
  - Google.Apis.Auth.JsonWebSignature.Header.X509Url
  langs:
  - csharp
  - vb
  name: JsonWebSignature.Header
  nameWithType: JsonWebSignature.Header
  fullName: Google.Apis.Auth.JsonWebSignature.Header
  type: Class
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Header
    path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
    startLine: 35
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nHeader as specified in http://tools.ietf.org/html/draft-ietf-jose-json-web-signature-11#section-4.1.\n"
  example: []
  syntax:
    content: 'public class Header : JsonWebToken.Header'
    content.vb: >-
      Public Class Header
          Inherits JsonWebToken.Header
  inheritance:
  - System.Object
  - Google.Apis.Auth.JsonWebToken.Header
  derivedClasses:
  - Google.Apis.Auth.GoogleJsonWebSignature.Header
  inheritedMembers:
  - Google.Apis.Auth.JsonWebToken.Header.Type
  - Google.Apis.Auth.JsonWebToken.Header.ContentType
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Auth.JsonWebSignature.Header.Algorithm
  commentId: P:Google.Apis.Auth.JsonWebSignature.Header.Algorithm
  id: Algorithm
  parent: Google.Apis.Auth.JsonWebSignature.Header
  langs:
  - csharp
  - vb
  name: Algorithm
  nameWithType: JsonWebSignature.Header.Algorithm
  fullName: Google.Apis.Auth.JsonWebSignature.Header.Algorithm
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Algorithm
    path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
    startLine: 41
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or set the algorithm header parameter that identifies the cryptographic algorithm used to secure \nthe JWS or <code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("alg")]

      public string Algorithm { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("alg")>

      Public Property Algorithm As String
  overload: Google.Apis.Auth.JsonWebSignature.Header.Algorithm*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: alg
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebSignature.Header.JwkUrl
  commentId: P:Google.Apis.Auth.JsonWebSignature.Header.JwkUrl
  id: JwkUrl
  parent: Google.Apis.Auth.JsonWebSignature.Header
  langs:
  - csharp
  - vb
  name: JwkUrl
  nameWithType: JsonWebSignature.Header.JwkUrl
  fullName: Google.Apis.Auth.JsonWebSignature.Header.JwkUrl
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: JwkUrl
    path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
    startLine: 49
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets the JSON Web Key URL header parameter that is an absolute URL that refers to a resource \nfor a set of JSON-encoded public keys, one of which corresponds to the key that was used to digitally \nsign the JWS or <code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("jku")]

      public string JwkUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("jku")>

      Public Property JwkUrl As String
  overload: Google.Apis.Auth.JsonWebSignature.Header.JwkUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: jku
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebSignature.Header.Jwk
  commentId: P:Google.Apis.Auth.JsonWebSignature.Header.Jwk
  id: Jwk
  parent: Google.Apis.Auth.JsonWebSignature.Header
  langs:
  - csharp
  - vb
  name: Jwk
  nameWithType: JsonWebSignature.Header.Jwk
  fullName: Google.Apis.Auth.JsonWebSignature.Header.Jwk
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Jwk
    path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
    startLine: 56
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets JSON Web Key header parameter that is a public key that corresponds to the key used to \ndigitally sign the JWS or <code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("jwk")]

      public string Jwk { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("jwk")>

      Public Property Jwk As String
  overload: Google.Apis.Auth.JsonWebSignature.Header.Jwk*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: jwk
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebSignature.Header.KeyId
  commentId: P:Google.Apis.Auth.JsonWebSignature.Header.KeyId
  id: KeyId
  parent: Google.Apis.Auth.JsonWebSignature.Header
  langs:
  - csharp
  - vb
  name: KeyId
  nameWithType: JsonWebSignature.Header.KeyId
  fullName: Google.Apis.Auth.JsonWebSignature.Header.KeyId
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: KeyId
    path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
    startLine: 63
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets key ID header parameter that is a hint indicating which specific key owned by the signer \nshould be used to validate the digital signature or <code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("kid")]

      public string KeyId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("kid")>

      Public Property KeyId As String
  overload: Google.Apis.Auth.JsonWebSignature.Header.KeyId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: kid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebSignature.Header.X509Url
  commentId: P:Google.Apis.Auth.JsonWebSignature.Header.X509Url
  id: X509Url
  parent: Google.Apis.Auth.JsonWebSignature.Header
  langs:
  - csharp
  - vb
  name: X509Url
  nameWithType: JsonWebSignature.Header.X509Url
  fullName: Google.Apis.Auth.JsonWebSignature.Header.X509Url
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: X509Url
    path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
    startLine: 71
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets X.509 URL header parameter that is an absolute URL that refers to a resource for the X.509\npublic key certificate or certificate chain corresponding to the key used to digitally sign the JWS or \n<code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("x5u")]

      public string X509Url { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("x5u")>

      Public Property X509Url As String
  overload: Google.Apis.Auth.JsonWebSignature.Header.X509Url*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: x5u
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebSignature.Header.X509Thumbprint
  commentId: P:Google.Apis.Auth.JsonWebSignature.Header.X509Thumbprint
  id: X509Thumbprint
  parent: Google.Apis.Auth.JsonWebSignature.Header
  langs:
  - csharp
  - vb
  name: X509Thumbprint
  nameWithType: JsonWebSignature.Header.X509Thumbprint
  fullName: Google.Apis.Auth.JsonWebSignature.Header.X509Thumbprint
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: X509Thumbprint
    path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
    startLine: 79
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets X.509 certificate thumb print header parameter that provides a base64url encoded SHA-1 \nthumb-print (a.k.a. digest) of the DER encoding of an X.509 certificate that can be used to match the \ncertificate or <code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("x5t")]

      public string X509Thumbprint { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("x5t")>

      Public Property X509Thumbprint As String
  overload: Google.Apis.Auth.JsonWebSignature.Header.X509Thumbprint*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: x5t
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebSignature.Header.X509Certificate
  commentId: P:Google.Apis.Auth.JsonWebSignature.Header.X509Certificate
  id: X509Certificate
  parent: Google.Apis.Auth.JsonWebSignature.Header
  langs:
  - csharp
  - vb
  name: X509Certificate
  nameWithType: JsonWebSignature.Header.X509Certificate
  fullName: Google.Apis.Auth.JsonWebSignature.Header.X509Certificate
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: X509Certificate
    path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
    startLine: 86
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets X.509 certificate chain header parameter contains the X.509 public key certificate or \ncertificate chain corresponding to the key used to digitally sign the JWS or <code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("x5c")]

      public string X509Certificate { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("x5c")>

      Public Property X509Certificate As String
  overload: Google.Apis.Auth.JsonWebSignature.Header.X509Certificate*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: x5c
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebSignature.Header.critical
  commentId: P:Google.Apis.Auth.JsonWebSignature.Header.critical
  id: critical
  parent: Google.Apis.Auth.JsonWebSignature.Header
  langs:
  - csharp
  - vb
  name: critical
  nameWithType: JsonWebSignature.Header.critical
  fullName: Google.Apis.Auth.JsonWebSignature.Header.critical
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: critical
    path: Src/Support/GoogleApis.Auth/JsonWebSignature.cs
    startLine: 93
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets array listing the header parameter names that define extensions that are used in the JWS \nheader that MUST be understood and processed or <code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("crit")]

      public IList<string> critical { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: >-
      <JsonProperty("crit")>

      Public Property critical As IList(Of String)
  overload: Google.Apis.Auth.JsonWebSignature.Header.critical*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: crit
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Apis.Auth
  commentId: N:Google.Apis.Auth
  isExternal: false
  name: Google.Apis.Auth
  nameWithType: Google.Apis.Auth
  fullName: Google.Apis.Auth
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Auth.JsonWebToken.Header
  commentId: T:Google.Apis.Auth.JsonWebToken.Header
  parent: Google.Apis.Auth
  isExternal: false
  name: JsonWebToken.Header
  nameWithType: JsonWebToken.Header
  fullName: Google.Apis.Auth.JsonWebToken.Header
- uid: Google.Apis.Auth.JsonWebToken.Header.Type
  commentId: P:Google.Apis.Auth.JsonWebToken.Header.Type
  parent: Google.Apis.Auth.JsonWebToken.Header
  isExternal: false
  name: Type
  nameWithType: JsonWebToken.Header.Type
  fullName: Google.Apis.Auth.JsonWebToken.Header.Type
- uid: Google.Apis.Auth.JsonWebToken.Header.ContentType
  commentId: P:Google.Apis.Auth.JsonWebToken.Header.ContentType
  parent: Google.Apis.Auth.JsonWebToken.Header
  isExternal: false
  name: ContentType
  nameWithType: JsonWebToken.Header.ContentType
  fullName: Google.Apis.Auth.JsonWebToken.Header.ContentType
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Auth.JsonWebSignature.Header.Algorithm*
  commentId: Overload:Google.Apis.Auth.JsonWebSignature.Header.Algorithm
  isExternal: false
  name: Algorithm
  nameWithType: JsonWebSignature.Header.Algorithm
  fullName: Google.Apis.Auth.JsonWebSignature.Header.Algorithm
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Auth.JsonWebSignature.Header.JwkUrl*
  commentId: Overload:Google.Apis.Auth.JsonWebSignature.Header.JwkUrl
  isExternal: false
  name: JwkUrl
  nameWithType: JsonWebSignature.Header.JwkUrl
  fullName: Google.Apis.Auth.JsonWebSignature.Header.JwkUrl
- uid: Google.Apis.Auth.JsonWebSignature.Header.Jwk*
  commentId: Overload:Google.Apis.Auth.JsonWebSignature.Header.Jwk
  isExternal: false
  name: Jwk
  nameWithType: JsonWebSignature.Header.Jwk
  fullName: Google.Apis.Auth.JsonWebSignature.Header.Jwk
- uid: Google.Apis.Auth.JsonWebSignature.Header.KeyId*
  commentId: Overload:Google.Apis.Auth.JsonWebSignature.Header.KeyId
  isExternal: false
  name: KeyId
  nameWithType: JsonWebSignature.Header.KeyId
  fullName: Google.Apis.Auth.JsonWebSignature.Header.KeyId
- uid: Google.Apis.Auth.JsonWebSignature.Header.X509Url*
  commentId: Overload:Google.Apis.Auth.JsonWebSignature.Header.X509Url
  isExternal: false
  name: X509Url
  nameWithType: JsonWebSignature.Header.X509Url
  fullName: Google.Apis.Auth.JsonWebSignature.Header.X509Url
- uid: Google.Apis.Auth.JsonWebSignature.Header.X509Thumbprint*
  commentId: Overload:Google.Apis.Auth.JsonWebSignature.Header.X509Thumbprint
  isExternal: false
  name: X509Thumbprint
  nameWithType: JsonWebSignature.Header.X509Thumbprint
  fullName: Google.Apis.Auth.JsonWebSignature.Header.X509Thumbprint
- uid: Google.Apis.Auth.JsonWebSignature.Header.X509Certificate*
  commentId: Overload:Google.Apis.Auth.JsonWebSignature.Header.X509Certificate
  isExternal: false
  name: X509Certificate
  nameWithType: JsonWebSignature.Header.X509Certificate
  fullName: Google.Apis.Auth.JsonWebSignature.Header.X509Certificate
- uid: Google.Apis.Auth.JsonWebSignature.Header.critical*
  commentId: Overload:Google.Apis.Auth.JsonWebSignature.Header.critical
  isExternal: false
  name: critical
  nameWithType: JsonWebSignature.Header.critical
  fullName: Google.Apis.Auth.JsonWebSignature.Header.critical
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
