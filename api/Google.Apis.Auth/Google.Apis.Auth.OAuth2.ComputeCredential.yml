### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.OAuth2.ComputeCredential
  commentId: T:Google.Apis.Auth.OAuth2.ComputeCredential
  id: ComputeCredential
  parent: Google.Apis.Auth.OAuth2
  children:
  - Google.Apis.Auth.OAuth2.ComputeCredential.#ctor
  - Google.Apis.Auth.OAuth2.ComputeCredential.#ctor(Google.Apis.Auth.OAuth2.ComputeCredential.Initializer)
  - Google.Apis.Auth.OAuth2.ComputeCredential.IsRunningOnComputeEngine
  - Google.Apis.Auth.OAuth2.ComputeCredential.MetadataServerUrl
  - Google.Apis.Auth.OAuth2.ComputeCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ComputeCredential
  nameWithType: ComputeCredential
  fullName: Google.Apis.Auth.OAuth2.ComputeCredential
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ComputeCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ComputeCredential
    path: Src/Support/Google.Apis.Auth/OAuth2/ComputeCredential.cs
    startLine: 36
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nGoogle OAuth 2.0 credential for accessing protected resources using an access token. The Google OAuth 2.0 \nAuthorization Server supports server-to-server interactions such as those between a web application and Google\nCloud Storage. The requesting application has to prove its own identity to gain access to an API, and an \nend-user doesn&apos;t have to be involved. \n<p>\nMore details about Compute Engine authentication is available at:\nhttps://cloud.google.com/compute/docs/authentication.\n</p>\n"
  example: []
  syntax:
    content: 'public class ComputeCredential : ServiceCredential, ICredential, IConfigurableHttpClientInitializer, ITokenAccess, IHttpExecuteInterceptor, IHttpUnsuccessfulResponseHandler'
    content.vb: >-
      Public Class ComputeCredential
          Inherits ServiceCredential
          Implements ICredential, IConfigurableHttpClientInitializer, ITokenAccess, IHttpExecuteInterceptor, IHttpUnsuccessfulResponseHandler
  inheritance:
  - System.Object
  - Google.Apis.Auth.OAuth2.ServiceCredential
  implements:
  - Google.Apis.Auth.OAuth2.ICredential
  - Google.Apis.Http.IConfigurableHttpClientInitializer
  - Google.Apis.Auth.OAuth2.ITokenAccess
  - Google.Apis.Http.IHttpExecuteInterceptor
  - Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  inheritedMembers:
  - Google.Apis.Auth.OAuth2.ServiceCredential.Logger
  - Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl
  - Google.Apis.Auth.OAuth2.ServiceCredential.Clock
  - Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod
  - Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient
  - Google.Apis.Auth.OAuth2.ServiceCredential.Token
  - Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  - Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  - Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Auth.OAuth2.ComputeCredential.MetadataServerUrl
  commentId: F:Google.Apis.Auth.OAuth2.ComputeCredential.MetadataServerUrl
  id: MetadataServerUrl
  parent: Google.Apis.Auth.OAuth2.ComputeCredential
  langs:
  - csharp
  - vb
  name: MetadataServerUrl
  nameWithType: ComputeCredential.MetadataServerUrl
  fullName: Google.Apis.Auth.OAuth2.ComputeCredential.MetadataServerUrl
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ComputeCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MetadataServerUrl
    path: Src/Support/Google.Apis.Auth/OAuth2/ComputeCredential.cs
    startLine: 39
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: The metadata server url.
  example: []
  syntax:
    content: public const string MetadataServerUrl = "http://169.254.169.254"
    return:
      type: System.String
    content.vb: Public Const MetadataServerUrl As String = "http://169.254.169.254"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Auth.OAuth2.ComputeCredential.#ctor
  commentId: M:Google.Apis.Auth.OAuth2.ComputeCredential.#ctor
  id: '#ctor'
  parent: Google.Apis.Auth.OAuth2.ComputeCredential
  langs:
  - csharp
  - vb
  name: ComputeCredential()
  nameWithType: ComputeCredential.ComputeCredential()
  fullName: Google.Apis.Auth.OAuth2.ComputeCredential.ComputeCredential()
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ComputeCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis.Auth/OAuth2/ComputeCredential.cs
    startLine: 76
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Constructs a new Compute credential instance.
  example: []
  syntax:
    content: public ComputeCredential()
    content.vb: Public Sub New
  overload: Google.Apis.Auth.OAuth2.ComputeCredential.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.ComputeCredential.#ctor(Google.Apis.Auth.OAuth2.ComputeCredential.Initializer)
  commentId: M:Google.Apis.Auth.OAuth2.ComputeCredential.#ctor(Google.Apis.Auth.OAuth2.ComputeCredential.Initializer)
  id: '#ctor(Google.Apis.Auth.OAuth2.ComputeCredential.Initializer)'
  parent: Google.Apis.Auth.OAuth2.ComputeCredential
  langs:
  - csharp
  - vb
  name: ComputeCredential(ComputeCredential.Initializer)
  nameWithType: ComputeCredential.ComputeCredential(ComputeCredential.Initializer)
  fullName: Google.Apis.Auth.OAuth2.ComputeCredential.ComputeCredential(Google.Apis.Auth.OAuth2.ComputeCredential.Initializer)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ComputeCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis.Auth/OAuth2/ComputeCredential.cs
    startLine: 79
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Constructs a new Compute credential instance.
  example: []
  syntax:
    content: public ComputeCredential(ComputeCredential.Initializer initializer)
    parameters:
    - id: initializer
      type: Google.Apis.Auth.OAuth2.ComputeCredential.Initializer
    content.vb: Public Sub New(initializer As ComputeCredential.Initializer)
  overload: Google.Apis.Auth.OAuth2.ComputeCredential.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.ComputeCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ComputeCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  id: RequestAccessTokenAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.ComputeCredential
  langs:
  - csharp
  - vb
  name: RequestAccessTokenAsync(CancellationToken)
  nameWithType: ComputeCredential.RequestAccessTokenAsync(CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.ComputeCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ComputeCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RequestAccessTokenAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/ComputeCredential.cs
    startLine: 84
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Requests a new token.
  example: []
  syntax:
    content: public override Task<bool> RequestAccessTokenAsync(CancellationToken taskCancellationToken)
    parameters:
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if a new token was received successfully.
    content.vb: Public Overrides Function RequestAccessTokenAsync(taskCancellationToken As CancellationToken) As Task(Of Boolean)
  overridden: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  overload: Google.Apis.Auth.OAuth2.ComputeCredential.RequestAccessTokenAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Apis.Auth.OAuth2.ComputeCredential.IsRunningOnComputeEngine
  commentId: M:Google.Apis.Auth.OAuth2.ComputeCredential.IsRunningOnComputeEngine
  id: IsRunningOnComputeEngine
  parent: Google.Apis.Auth.OAuth2.ComputeCredential
  langs:
  - csharp
  - vb
  name: IsRunningOnComputeEngine()
  nameWithType: ComputeCredential.IsRunningOnComputeEngine()
  fullName: Google.Apis.Auth.OAuth2.ComputeCredential.IsRunningOnComputeEngine()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ComputeCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IsRunningOnComputeEngine
    path: Src/Support/Google.Apis.Auth/OAuth2/ComputeCredential.cs
    startLine: 101
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nDetects if application is running on Google Compute Engine. This is achieved by attempting to contact\nGCE metadata server, that is only available on GCE. The check is only performed the first time you\ncall this method, subsequent invocations used cached result of the first call.\n"
  example: []
  syntax:
    content: public static Task<bool> IsRunningOnComputeEngine()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Shared Function IsRunningOnComputeEngine As Task(Of Boolean)
  overload: Google.Apis.Auth.OAuth2.ComputeCredential.IsRunningOnComputeEngine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Google.Apis.Auth.OAuth2
  commentId: N:Google.Apis.Auth.OAuth2
  isExternal: false
  name: Google.Apis.Auth.OAuth2
  nameWithType: Google.Apis.Auth.OAuth2
  fullName: Google.Apis.Auth.OAuth2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Auth.OAuth2.ServiceCredential
  commentId: T:Google.Apis.Auth.OAuth2.ServiceCredential
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ServiceCredential
  nameWithType: ServiceCredential
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential
- uid: Google.Apis.Auth.OAuth2.ICredential
  commentId: T:Google.Apis.Auth.OAuth2.ICredential
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ICredential
  nameWithType: ICredential
  fullName: Google.Apis.Auth.OAuth2.ICredential
- uid: Google.Apis.Http.IConfigurableHttpClientInitializer
  commentId: T:Google.Apis.Http.IConfigurableHttpClientInitializer
  parent: Google.Apis.Http
  isExternal: false
  name: IConfigurableHttpClientInitializer
  nameWithType: IConfigurableHttpClientInitializer
  fullName: Google.Apis.Http.IConfigurableHttpClientInitializer
- uid: Google.Apis.Auth.OAuth2.ITokenAccess
  commentId: T:Google.Apis.Auth.OAuth2.ITokenAccess
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ITokenAccess
  nameWithType: ITokenAccess
  fullName: Google.Apis.Auth.OAuth2.ITokenAccess
- uid: Google.Apis.Http.IHttpExecuteInterceptor
  commentId: T:Google.Apis.Http.IHttpExecuteInterceptor
  parent: Google.Apis.Http
  isExternal: false
  name: IHttpExecuteInterceptor
  nameWithType: IHttpExecuteInterceptor
  fullName: Google.Apis.Http.IHttpExecuteInterceptor
- uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  commentId: T:Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  parent: Google.Apis.Http
  isExternal: false
  name: IHttpUnsuccessfulResponseHandler
  nameWithType: IHttpUnsuccessfulResponseHandler
  fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Logger
  commentId: F:Google.Apis.Auth.OAuth2.ServiceCredential.Logger
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: Logger
  nameWithType: ServiceCredential.Logger
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Logger
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: TokenServerUrl
  nameWithType: ServiceCredential.TokenServerUrl
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Clock
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.Clock
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: Clock
  nameWithType: ServiceCredential.Clock
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Clock
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: AccessMethod
  nameWithType: ServiceCredential.AccessMethod
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: HttpClient
  nameWithType: ServiceCredential.HttpClient
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Token
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.Token
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: Token
  nameWithType: ServiceCredential.Token
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Token
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: Initialize(ConfigurableHttpClient)
  nameWithType: ServiceCredential.Initialize(ConfigurableHttpClient)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
    name: Initialize
    nameWithType: ServiceCredential.Initialize
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.ConfigurableHttpClient
    name: ConfigurableHttpClient
    nameWithType: ConfigurableHttpClient
    fullName: Google.Apis.Http.ConfigurableHttpClient
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
    name: Initialize
    nameWithType: ServiceCredential.Initialize
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.ConfigurableHttpClient
    name: ConfigurableHttpClient
    nameWithType: ConfigurableHttpClient
    fullName: Google.Apis.Http.ConfigurableHttpClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: true
  name: InterceptAsync(HttpRequestMessage, CancellationToken)
  nameWithType: ServiceCredential.InterceptAsync(HttpRequestMessage, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: InterceptAsync
    nameWithType: ServiceCredential.InterceptAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: InterceptAsync
    nameWithType: ServiceCredential.InterceptAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: HandleResponseAsync(HandleUnsuccessfulResponseArgs)
  nameWithType: ServiceCredential.HandleResponseAsync(HandleUnsuccessfulResponseArgs)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
    name: HandleResponseAsync
    nameWithType: ServiceCredential.HandleResponseAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.HandleUnsuccessfulResponseArgs
    name: HandleUnsuccessfulResponseArgs
    nameWithType: HandleUnsuccessfulResponseArgs
    fullName: Google.Apis.Http.HandleUnsuccessfulResponseArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
    name: HandleResponseAsync
    nameWithType: ServiceCredential.HandleResponseAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.HandleUnsuccessfulResponseArgs
    name: HandleUnsuccessfulResponseArgs
    nameWithType: HandleUnsuccessfulResponseArgs
    fullName: Google.Apis.Http.HandleUnsuccessfulResponseArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: true
  name: GetAccessTokenForRequestAsync(String, CancellationToken)
  nameWithType: ServiceCredential.GetAccessTokenForRequestAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
    name: GetAccessTokenForRequestAsync
    nameWithType: ServiceCredential.GetAccessTokenForRequestAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
    name: GetAccessTokenForRequestAsync
    nameWithType: ServiceCredential.GetAccessTokenForRequestAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Http
  commentId: N:Google.Apis.Http
  isExternal: false
  name: Google.Apis.Http
  nameWithType: Google.Apis.Http
  fullName: Google.Apis.Http
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Auth.OAuth2.ComputeCredential.#ctor*
  commentId: Overload:Google.Apis.Auth.OAuth2.ComputeCredential.#ctor
  isExternal: false
  name: ComputeCredential
  nameWithType: ComputeCredential.ComputeCredential
  fullName: Google.Apis.Auth.OAuth2.ComputeCredential.ComputeCredential
- uid: Google.Apis.Auth.OAuth2.ComputeCredential.Initializer
  commentId: T:Google.Apis.Auth.OAuth2.ComputeCredential.Initializer
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ComputeCredential.Initializer
  nameWithType: ComputeCredential.Initializer
  fullName: Google.Apis.Auth.OAuth2.ComputeCredential.Initializer
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: true
  name: RequestAccessTokenAsync(CancellationToken)
  nameWithType: ServiceCredential.RequestAccessTokenAsync(CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
    name: RequestAccessTokenAsync
    nameWithType: ServiceCredential.RequestAccessTokenAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
    name: RequestAccessTokenAsync
    nameWithType: ServiceCredential.RequestAccessTokenAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.ComputeCredential.RequestAccessTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.ComputeCredential.RequestAccessTokenAsync
  isExternal: false
  name: RequestAccessTokenAsync
  nameWithType: ComputeCredential.RequestAccessTokenAsync
  fullName: Google.Apis.Auth.OAuth2.ComputeCredential.RequestAccessTokenAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Apis.Auth.OAuth2.ComputeCredential.IsRunningOnComputeEngine*
  commentId: Overload:Google.Apis.Auth.OAuth2.ComputeCredential.IsRunningOnComputeEngine
  isExternal: false
  name: IsRunningOnComputeEngine
  nameWithType: ComputeCredential.IsRunningOnComputeEngine
  fullName: Google.Apis.Auth.OAuth2.ComputeCredential.IsRunningOnComputeEngine
