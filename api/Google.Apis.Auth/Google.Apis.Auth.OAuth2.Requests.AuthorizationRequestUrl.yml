### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl
  commentId: T:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl
  id: AuthorizationRequestUrl
  parent: Google.Apis.Auth.OAuth2.Requests
  children:
  - Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.#ctor(System.Uri)
  - Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.AuthorizationServerUrl
  - Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ClientId
  - Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.RedirectUri
  - Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ResponseType
  - Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.Scope
  - Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.State
  langs:
  - csharp
  - vb
  name: AuthorizationRequestUrl
  nameWithType: AuthorizationRequestUrl
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AuthorizationRequestUrl
    path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
    startLine: 24
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Requests
  summary: "\nOAuth 2.0 request URL for an authorization web page to allow the end user to authorize the application to \naccess their protected resources, as specified in http://tools.ietf.org/html/rfc6749#section-3.1.\n"
  example: []
  syntax:
    content: public class AuthorizationRequestUrl
    content.vb: Public Class AuthorizationRequestUrl
  inheritance:
  - System.Object
  derivedClasses:
  - Google.Apis.Auth.OAuth2.Requests.AuthorizationCodeRequestUrl
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ResponseType
  commentId: P:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ResponseType
  id: ResponseType
  parent: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl
  langs:
  - csharp
  - vb
  name: ResponseType
  nameWithType: AuthorizationRequestUrl.ResponseType
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ResponseType
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ResponseType
    path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
    startLine: 31
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Requests
  summary: "\nGets or sets the response type which must be <code>code</code> for requesting an authorization code or \n<code>token</code> for requesting an access token (implicit grant), or space separated registered extension \nvalues. See http://tools.ietf.org/html/rfc6749#section-3.1.1 for more details\n"
  example: []
  syntax:
    content: >-
      [RequestParameter("response_type", RequestParameterType.Query)]

      public string ResponseType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("response_type", RequestParameterType.Query)>

      Public Property ResponseType As String
  overload: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ResponseType*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: response_type
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ClientId
  commentId: P:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ClientId
  id: ClientId
  parent: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: AuthorizationRequestUrl.ClientId
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ClientId
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ClientId
    path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
    startLine: 35
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Requests
  summary: Gets or sets the client identifier.
  example: []
  syntax:
    content: >-
      [RequestParameter("client_id", RequestParameterType.Query)]

      public string ClientId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("client_id", RequestParameterType.Query)>

      Public Property ClientId As String
  overload: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ClientId*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: client_id
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.RedirectUri
  commentId: P:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.RedirectUri
  id: RedirectUri
  parent: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl
  langs:
  - csharp
  - vb
  name: RedirectUri
  nameWithType: AuthorizationRequestUrl.RedirectUri
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.RedirectUri
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RedirectUri
    path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
    startLine: 43
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Requests
  summary: "\nGets or sets the URI that the authorization server directs the resource owner&apos;s user-agent back to the \nclient after a successful authorization grant, as specified in \nhttp://tools.ietf.org/html/rfc6749#section-3.1.2 or <code>null</code> for none.\n"
  example: []
  syntax:
    content: >-
      [RequestParameter("redirect_uri", RequestParameterType.Query)]

      public string RedirectUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("redirect_uri", RequestParameterType.Query)>

      Public Property RedirectUri As String
  overload: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.RedirectUri*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: redirect_uri
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.Scope
  commentId: P:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.Scope
  id: Scope
  parent: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl
  langs:
  - csharp
  - vb
  name: Scope
  nameWithType: AuthorizationRequestUrl.Scope
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.Scope
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Scope
    path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
    startLine: 50
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Requests
  summary: "\nGets or sets space-separated list of scopes, as specified in http://tools.ietf.org/html/rfc6749#section-3.3\nor <code>null</code> for none.\n"
  example: []
  syntax:
    content: >-
      [RequestParameter("scope", RequestParameterType.Query)]

      public string Scope { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("scope", RequestParameterType.Query)>

      Public Property Scope As String
  overload: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.Scope*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: scope
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.State
  commentId: P:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.State
  id: State
  parent: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl
  langs:
  - csharp
  - vb
  name: State
  nameWithType: AuthorizationRequestUrl.State
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.State
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: State
    path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
    startLine: 57
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Requests
  summary: "\nGets or sets the state (an opaque value used by the client to maintain state between the request and \ncallback, as mentioned in http://tools.ietf.org/html/rfc6749#section-3.1.2.2 or <code>null</code> for none.\n"
  example: []
  syntax:
    content: >-
      [RequestParameter("state", RequestParameterType.Query)]

      public string State { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("state", RequestParameterType.Query)>

      Public Property State As String
  overload: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.State*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: state
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.AuthorizationServerUrl
  commentId: P:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.AuthorizationServerUrl
  id: AuthorizationServerUrl
  parent: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl
  langs:
  - csharp
  - vb
  name: AuthorizationServerUrl
  nameWithType: AuthorizationRequestUrl.AuthorizationServerUrl
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.AuthorizationServerUrl
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AuthorizationServerUrl
    path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
    startLine: 62
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Requests
  summary: Gets the authorization server URI.
  example: []
  syntax:
    content: public Uri AuthorizationServerUrl { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property AuthorizationServerUrl As Uri
  overload: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.AuthorizationServerUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.#ctor(System.Uri)
  commentId: M:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl
  langs:
  - csharp
  - vb
  name: AuthorizationRequestUrl(Uri)
  nameWithType: AuthorizationRequestUrl.AuthorizationRequestUrl(Uri)
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.AuthorizationRequestUrl(System.Uri)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis.Auth/OAuth2/Requests/AuthorizationRequestUrl.cs
    startLine: 69
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Requests
  summary: Constructs a new authorization request with the specified URI.
  example: []
  syntax:
    content: public AuthorizationRequestUrl(Uri authorizationServerUrl)
    parameters:
    - id: authorizationServerUrl
      type: System.Uri
      description: Authorization server URI
    content.vb: Public Sub New(authorizationServerUrl As Uri)
  overload: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Apis.Auth.OAuth2.Requests
  commentId: N:Google.Apis.Auth.OAuth2.Requests
  isExternal: false
  name: Google.Apis.Auth.OAuth2.Requests
  nameWithType: Google.Apis.Auth.OAuth2.Requests
  fullName: Google.Apis.Auth.OAuth2.Requests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ResponseType*
  commentId: Overload:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ResponseType
  isExternal: false
  name: ResponseType
  nameWithType: AuthorizationRequestUrl.ResponseType
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ResponseType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ClientId*
  commentId: Overload:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ClientId
  isExternal: false
  name: ClientId
  nameWithType: AuthorizationRequestUrl.ClientId
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.ClientId
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.RedirectUri*
  commentId: Overload:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.RedirectUri
  isExternal: false
  name: RedirectUri
  nameWithType: AuthorizationRequestUrl.RedirectUri
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.RedirectUri
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.Scope*
  commentId: Overload:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.Scope
  isExternal: false
  name: Scope
  nameWithType: AuthorizationRequestUrl.Scope
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.Scope
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.State*
  commentId: Overload:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.State
  isExternal: false
  name: State
  nameWithType: AuthorizationRequestUrl.State
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.State
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.AuthorizationServerUrl*
  commentId: Overload:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.AuthorizationServerUrl
  isExternal: false
  name: AuthorizationServerUrl
  nameWithType: AuthorizationRequestUrl.AuthorizationServerUrl
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.AuthorizationServerUrl
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.#ctor*
  commentId: Overload:Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.#ctor
  isExternal: false
  name: AuthorizationRequestUrl
  nameWithType: AuthorizationRequestUrl.AuthorizationRequestUrl
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationRequestUrl.AuthorizationRequestUrl
