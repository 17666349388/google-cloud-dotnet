### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp
  commentId: T:Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp
  id: IAuthorizationCodeInstalledApp
  parent: Google.Apis.Auth.OAuth2
  children:
  - Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.AuthorizeAsync(System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.CodeReceiver
  - Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.Flow
  langs:
  - csharp
  - vb
  name: IAuthorizationCodeInstalledApp
  nameWithType: IAuthorizationCodeInstalledApp
  fullName: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp
  type: Interface
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/IAuthorizationCodeInstalledApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IAuthorizationCodeInstalledApp
    path: Src/Support/GoogleApis.Auth/OAuth2/IAuthorizationCodeInstalledApp.cs
    startLine: 26
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nAuthorization code flow for an installed application that persists end-user credentials.\n"
  example: []
  syntax:
    content: public interface IAuthorizationCodeInstalledApp
    content.vb: Public Interface IAuthorizationCodeInstalledApp
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.Flow
  commentId: P:Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.Flow
  id: Flow
  parent: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp
  langs:
  - csharp
  - vb
  name: Flow
  nameWithType: IAuthorizationCodeInstalledApp.Flow
  fullName: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.Flow
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/IAuthorizationCodeInstalledApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Flow
    path: Src/Support/GoogleApis.Auth/OAuth2/IAuthorizationCodeInstalledApp.cs
    startLine: 29
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Gets the authorization code flow.
  example: []
  syntax:
    content: IAuthorizationCodeFlow Flow { get; }
    parameters: []
    return:
      type: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
    content.vb: ReadOnly Property Flow As IAuthorizationCodeFlow
  overload: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.Flow*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.CodeReceiver
  commentId: P:Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.CodeReceiver
  id: CodeReceiver
  parent: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp
  langs:
  - csharp
  - vb
  name: CodeReceiver
  nameWithType: IAuthorizationCodeInstalledApp.CodeReceiver
  fullName: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.CodeReceiver
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/IAuthorizationCodeInstalledApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CodeReceiver
    path: Src/Support/GoogleApis.Auth/OAuth2/IAuthorizationCodeInstalledApp.cs
    startLine: 32
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Gets the code receiver.
  example: []
  syntax:
    content: ICodeReceiver CodeReceiver { get; }
    parameters: []
    return:
      type: Google.Apis.Auth.OAuth2.ICodeReceiver
    content.vb: ReadOnly Property CodeReceiver As ICodeReceiver
  overload: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.CodeReceiver*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.AuthorizeAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.AuthorizeAsync(System.String,System.Threading.CancellationToken)
  id: AuthorizeAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp
  langs:
  - csharp
  - vb
  name: AuthorizeAsync(String, CancellationToken)
  nameWithType: IAuthorizationCodeInstalledApp.AuthorizeAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.AuthorizeAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/IAuthorizationCodeInstalledApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AuthorizeAsync
    path: Src/Support/GoogleApis.Auth/OAuth2/IAuthorizationCodeInstalledApp.cs
    startLine: 38
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Asynchronously authorizes the installed application to access user's protected data.
  example: []
  syntax:
    content: Task<UserCredential> AuthorizeAsync(string userId, CancellationToken taskCancellationToken)
    parameters:
    - id: userId
      type: System.String
      description: User identifier
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel an operation
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.UserCredential}
      description: The user's credential
    content.vb: Function AuthorizeAsync(userId As String, taskCancellationToken As CancellationToken) As Task(Of UserCredential)
  overload: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.AuthorizeAsync*
references:
- uid: Google.Apis.Auth.OAuth2
  commentId: N:Google.Apis.Auth.OAuth2
  isExternal: false
  name: Google.Apis.Auth.OAuth2
  nameWithType: Google.Apis.Auth.OAuth2
  fullName: Google.Apis.Auth.OAuth2
- uid: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.Flow*
  commentId: Overload:Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.Flow
  isExternal: false
  name: Flow
  nameWithType: IAuthorizationCodeInstalledApp.Flow
  fullName: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.Flow
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  commentId: T:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  parent: Google.Apis.Auth.OAuth2.Flows
  isExternal: false
  name: IAuthorizationCodeFlow
  nameWithType: IAuthorizationCodeFlow
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
- uid: Google.Apis.Auth.OAuth2.Flows
  commentId: N:Google.Apis.Auth.OAuth2.Flows
  isExternal: false
  name: Google.Apis.Auth.OAuth2.Flows
  nameWithType: Google.Apis.Auth.OAuth2.Flows
  fullName: Google.Apis.Auth.OAuth2.Flows
- uid: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.CodeReceiver*
  commentId: Overload:Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.CodeReceiver
  isExternal: false
  name: CodeReceiver
  nameWithType: IAuthorizationCodeInstalledApp.CodeReceiver
  fullName: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.CodeReceiver
- uid: Google.Apis.Auth.OAuth2.ICodeReceiver
  commentId: T:Google.Apis.Auth.OAuth2.ICodeReceiver
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ICodeReceiver
  nameWithType: ICodeReceiver
  fullName: Google.Apis.Auth.OAuth2.ICodeReceiver
- uid: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.AuthorizeAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.AuthorizeAsync
  isExternal: false
  name: AuthorizeAsync
  nameWithType: IAuthorizationCodeInstalledApp.AuthorizeAsync
  fullName: Google.Apis.Auth.OAuth2.IAuthorizationCodeInstalledApp.AuthorizeAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.UserCredential}
  commentId: T:System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.UserCredential}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<UserCredential>
  nameWithType: Task<UserCredential>
  fullName: System.Threading.Tasks.Task<Google.Apis.Auth.OAuth2.UserCredential>
  nameWithType.vb: Task(Of UserCredential)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Apis.Auth.OAuth2.UserCredential)
  name.vb: Task(Of UserCredential)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Auth.OAuth2.UserCredential
    name: UserCredential
    nameWithType: UserCredential
    fullName: Google.Apis.Auth.OAuth2.UserCredential
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Auth.OAuth2.UserCredential
    name: UserCredential
    nameWithType: UserCredential
    fullName: Google.Apis.Auth.OAuth2.UserCredential
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
