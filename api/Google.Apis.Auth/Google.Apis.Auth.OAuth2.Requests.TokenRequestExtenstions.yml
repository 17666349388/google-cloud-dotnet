### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.OAuth2.Requests.TokenRequestExtenstions
  commentId: T:Google.Apis.Auth.OAuth2.Requests.TokenRequestExtenstions
  id: TokenRequestExtenstions
  parent: Google.Apis.Auth.OAuth2.Requests
  children:
  - Google.Apis.Auth.OAuth2.Requests.TokenRequestExtenstions.ExecuteAsync(Google.Apis.Auth.OAuth2.Requests.TokenRequest,System.Net.Http.HttpClient,System.String,System.Threading.CancellationToken,Google.Apis.Util.IClock)
  langs:
  - csharp
  - vb
  name: TokenRequestExtenstions
  nameWithType: TokenRequestExtenstions
  fullName: Google.Apis.Auth.OAuth2.Requests.TokenRequestExtenstions
  type: Class
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/Requests/TokenRequestExtenstions.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TokenRequestExtenstions
    path: Src/Support/GoogleApis.Auth/OAuth2/Requests/TokenRequestExtenstions.cs
    startLine: 28
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Requests
  summary: Extension methods to <xref href="Google.Apis.Auth.OAuth2.Requests.TokenRequest" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class TokenRequestExtenstions
    content.vb: Public Module TokenRequestExtenstions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Google.Apis.Auth.OAuth2.Requests.TokenRequestExtenstions.ExecuteAsync(Google.Apis.Auth.OAuth2.Requests.TokenRequest,System.Net.Http.HttpClient,System.String,System.Threading.CancellationToken,Google.Apis.Util.IClock)
  commentId: M:Google.Apis.Auth.OAuth2.Requests.TokenRequestExtenstions.ExecuteAsync(Google.Apis.Auth.OAuth2.Requests.TokenRequest,System.Net.Http.HttpClient,System.String,System.Threading.CancellationToken,Google.Apis.Util.IClock)
  id: ExecuteAsync(Google.Apis.Auth.OAuth2.Requests.TokenRequest,System.Net.Http.HttpClient,System.String,System.Threading.CancellationToken,Google.Apis.Util.IClock)
  isExtensionMethod: true
  parent: Google.Apis.Auth.OAuth2.Requests.TokenRequestExtenstions
  langs:
  - csharp
  - vb
  name: ExecuteAsync(TokenRequest, HttpClient, String, CancellationToken, IClock)
  nameWithType: TokenRequestExtenstions.ExecuteAsync(TokenRequest, HttpClient, String, CancellationToken, IClock)
  fullName: Google.Apis.Auth.OAuth2.Requests.TokenRequestExtenstions.ExecuteAsync(Google.Apis.Auth.OAuth2.Requests.TokenRequest, System.Net.Http.HttpClient, System.String, System.Threading.CancellationToken, Google.Apis.Util.IClock)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/Requests/TokenRequestExtenstions.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteAsync
    path: Src/Support/GoogleApis.Auth/OAuth2/Requests/TokenRequestExtenstions.cs
    startLine: 44
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Requests
  summary: "\nExecutes the token request in order to receive a \n<xref href=\"Google.Apis.Auth.OAuth2.Responses.TokenResponse\" data-throw-if-not-resolved=\"false\"></xref>. In case the token server returns an \nerror, a <xref href=\"Google.Apis.Auth.OAuth2.Responses.TokenResponseException\" data-throw-if-not-resolved=\"false\"></xref> is thrown.\n"
  example: []
  syntax:
    content: public static Task<TokenResponse> ExecuteAsync(this TokenRequest request, HttpClient httpClient, string tokenServerUrl, CancellationToken taskCancellationToken, IClock clock)
    parameters:
    - id: request
      type: Google.Apis.Auth.OAuth2.Requests.TokenRequest
      description: The token request.
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: The HTTP client used to create an HTTP request.
    - id: tokenServerUrl
      type: System.String
      description: The token server URL.
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation.
    - id: clock
      type: Google.Apis.Util.IClock
      description: "\nThe clock which is used to set the\n<xref href=\"Google.Apis.Auth.OAuth2.Responses.TokenResponse.Issued\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
      description: Token response with the new access token.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteAsync(request As TokenRequest, httpClient As HttpClient, tokenServerUrl As String, taskCancellationToken As CancellationToken, clock As IClock) As Task(Of TokenResponse)
  overload: Google.Apis.Auth.OAuth2.Requests.TokenRequestExtenstions.ExecuteAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Google.Apis.Auth.OAuth2.Requests.TokenRequest
  commentId: T:Google.Apis.Auth.OAuth2.Requests.TokenRequest
  parent: Google.Apis.Auth.OAuth2.Requests
  isExternal: false
  name: TokenRequest
  nameWithType: TokenRequest
  fullName: Google.Apis.Auth.OAuth2.Requests.TokenRequest
- uid: Google.Apis.Auth.OAuth2.Requests
  commentId: N:Google.Apis.Auth.OAuth2.Requests
  isExternal: false
  name: Google.Apis.Auth.OAuth2.Requests
  nameWithType: Google.Apis.Auth.OAuth2.Requests
  fullName: Google.Apis.Auth.OAuth2.Requests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  commentId: T:Google.Apis.Auth.OAuth2.Responses.TokenResponse
  parent: Google.Apis.Auth.OAuth2.Responses
  isExternal: false
  name: TokenResponse
  nameWithType: TokenResponse
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponseException
  commentId: T:Google.Apis.Auth.OAuth2.Responses.TokenResponseException
  isExternal: false
  name: TokenResponseException
  nameWithType: TokenResponseException
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponseException
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.Issued
  commentId: P:Google.Apis.Auth.OAuth2.Responses.TokenResponse.Issued
- uid: Google.Apis.Auth.OAuth2.Requests.TokenRequestExtenstions.ExecuteAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.Requests.TokenRequestExtenstions.ExecuteAsync
  isExternal: false
  name: ExecuteAsync
  nameWithType: TokenRequestExtenstions.ExecuteAsync
  fullName: Google.Apis.Auth.OAuth2.Requests.TokenRequestExtenstions.ExecuteAsync
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Google.Apis.Util.IClock
  commentId: T:Google.Apis.Util.IClock
  parent: Google.Apis.Util
  isExternal: false
  name: IClock
  nameWithType: IClock
  fullName: Google.Apis.Util.IClock
- uid: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
  commentId: T:System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TokenResponse>
  nameWithType: Task<TokenResponse>
  fullName: System.Threading.Tasks.Task<Google.Apis.Auth.OAuth2.Responses.TokenResponse>
  nameWithType.vb: Task(Of TokenResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Apis.Auth.OAuth2.Responses.TokenResponse)
  name.vb: Task(Of TokenResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.Responses
  commentId: N:Google.Apis.Auth.OAuth2.Responses
  isExternal: false
  name: Google.Apis.Auth.OAuth2.Responses
  nameWithType: Google.Apis.Auth.OAuth2.Responses
  fullName: Google.Apis.Auth.OAuth2.Responses
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
