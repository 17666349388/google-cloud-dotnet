### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  commentId: T:Google.Apis.Auth.OAuth2.Responses.TokenResponse
  id: TokenResponse
  parent: Google.Apis.Auth.OAuth2.Responses
  children:
  - Google.Apis.Auth.OAuth2.Responses.TokenResponse.AccessToken
  - Google.Apis.Auth.OAuth2.Responses.TokenResponse.ExpiresInSeconds
  - Google.Apis.Auth.OAuth2.Responses.TokenResponse.FromHttpResponseAsync(HttpResponseMessage,Google.Apis.Util.IClock,Google.Apis.Logging.ILogger)
  - Google.Apis.Auth.OAuth2.Responses.TokenResponse.IdToken
  - Google.Apis.Auth.OAuth2.Responses.TokenResponse.IsExpired(Google.Apis.Util.IClock)
  - Google.Apis.Auth.OAuth2.Responses.TokenResponse.Issued
  - Google.Apis.Auth.OAuth2.Responses.TokenResponse.IssuedUtc
  - Google.Apis.Auth.OAuth2.Responses.TokenResponse.RefreshToken
  - Google.Apis.Auth.OAuth2.Responses.TokenResponse.Scope
  - Google.Apis.Auth.OAuth2.Responses.TokenResponse.TokenType
  langs:
  - csharp
  - vb
  name: TokenResponse
  nameWithType: TokenResponse
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TokenResponse
    path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
    startLine: 30
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Responses
  summary: "\nOAuth 2.0 model for a successful access token response as specified in \nhttp://tools.ietf.org/html/rfc6749#section-5.1.\n"
  example: []
  syntax:
    content: public class TokenResponse
    content.vb: Public Class TokenResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.AccessToken
  commentId: P:Google.Apis.Auth.OAuth2.Responses.TokenResponse.AccessToken
  id: AccessToken
  parent: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  langs:
  - csharp
  - vb
  name: AccessToken
  nameWithType: TokenResponse.AccessToken
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.AccessToken
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AccessToken
    path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
    startLine: 35
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Responses
  summary: Gets or sets the access token issued by the authorization server.
  example: []
  syntax:
    content: public string AccessToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AccessToken As String
  overload: Google.Apis.Auth.OAuth2.Responses.TokenResponse.AccessToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.TokenType
  commentId: P:Google.Apis.Auth.OAuth2.Responses.TokenResponse.TokenType
  id: TokenType
  parent: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  langs:
  - csharp
  - vb
  name: TokenType
  nameWithType: TokenResponse.TokenType
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.TokenType
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TokenType
    path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
    startLine: 41
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Responses
  summary: "\nGets or sets the token type as specified in http://tools.ietf.org/html/rfc6749#section-7.1.\n"
  example: []
  syntax:
    content: public string TokenType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TokenType As String
  overload: Google.Apis.Auth.OAuth2.Responses.TokenResponse.TokenType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.ExpiresInSeconds
  commentId: P:Google.Apis.Auth.OAuth2.Responses.TokenResponse.ExpiresInSeconds
  id: ExpiresInSeconds
  parent: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  langs:
  - csharp
  - vb
  name: ExpiresInSeconds
  nameWithType: TokenResponse.ExpiresInSeconds
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.ExpiresInSeconds
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExpiresInSeconds
    path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
    startLine: 45
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Responses
  summary: Gets or sets the lifetime in seconds of the access token.
  example: []
  syntax:
    content: public long ? ExpiresInSeconds { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Property ExpiresInSeconds As Long?
  overload: Google.Apis.Auth.OAuth2.Responses.TokenResponse.ExpiresInSeconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.RefreshToken
  commentId: P:Google.Apis.Auth.OAuth2.Responses.TokenResponse.RefreshToken
  id: RefreshToken
  parent: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  langs:
  - csharp
  - vb
  name: RefreshToken
  nameWithType: TokenResponse.RefreshToken
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.RefreshToken
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RefreshToken
    path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
    startLine: 53
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Responses
  summary: "\nGets or sets the refresh token which can be used to obtain a new access token.\nFor example, the value &quot;3600&quot; denotes that the access token will expire in one hour from the time the \nresponse was generated.\n"
  example: []
  syntax:
    content: public string RefreshToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RefreshToken As String
  overload: Google.Apis.Auth.OAuth2.Responses.TokenResponse.RefreshToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.Scope
  commentId: P:Google.Apis.Auth.OAuth2.Responses.TokenResponse.Scope
  id: Scope
  parent: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  langs:
  - csharp
  - vb
  name: Scope
  nameWithType: TokenResponse.Scope
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.Scope
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Scope
    path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
    startLine: 59
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Responses
  summary: "\nGets or sets the scope of the access token as specified in http://tools.ietf.org/html/rfc6749#section-3.3.\n"
  example: []
  syntax:
    content: public string Scope { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Scope As String
  overload: Google.Apis.Auth.OAuth2.Responses.TokenResponse.Scope*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IdToken
  commentId: P:Google.Apis.Auth.OAuth2.Responses.TokenResponse.IdToken
  id: IdToken
  parent: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  langs:
  - csharp
  - vb
  name: IdToken
  nameWithType: TokenResponse.IdToken
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IdToken
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IdToken
    path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
    startLine: 65
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Responses
  summary: "\nGets or sets the id_token, which is a JSON Web Token (JWT) as specified in http://tools.ietf.org/html/draft-ietf-oauth-json-web-token\n"
  example: []
  syntax:
    content: public string IdToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IdToken As String
  overload: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IdToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.Issued
  commentId: P:Google.Apis.Auth.OAuth2.Responses.TokenResponse.Issued
  id: Issued
  parent: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  langs:
  - csharp
  - vb
  name: Issued
  nameWithType: TokenResponse.Issued
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.Issued
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Issued
    path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
    startLine: 73
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Responses
  summary: "\nThe date and time that this token was issued, expressed in the system time zone.\nThis property only exists for backward compatibility; it can cause inappropriate behavior around\ntime zone transitions (e.g. daylight saving transitions).\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use IssuedUtc instead")]

      public DateTime Issued { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <Obsolete("Use IssuedUtc instead")>

      Public Property Issued As Date
  overload: Google.Apis.Auth.OAuth2.Responses.TokenResponse.Issued*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use IssuedUtc instead
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IssuedUtc
  commentId: P:Google.Apis.Auth.OAuth2.Responses.TokenResponse.IssuedUtc
  id: IssuedUtc
  parent: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  langs:
  - csharp
  - vb
  name: IssuedUtc
  nameWithType: TokenResponse.IssuedUtc
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IssuedUtc
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IssuedUtc
    path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
    startLine: 87
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Responses
  summary: "\nThe date and time that this token was issued, expressed in UTC.\n"
  remarks: "\nThis should be set by the CLIENT after the token was received from the server.\n"
  example: []
  syntax:
    content: public DateTime IssuedUtc { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property IssuedUtc As Date
  overload: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IssuedUtc*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IsExpired(Google.Apis.Util.IClock)
  commentId: M:Google.Apis.Auth.OAuth2.Responses.TokenResponse.IsExpired(Google.Apis.Util.IClock)
  id: IsExpired(Google.Apis.Util.IClock)
  parent: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  langs:
  - csharp
  - vb
  name: IsExpired(IClock)
  nameWithType: TokenResponse.IsExpired(IClock)
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IsExpired(Google.Apis.Util.IClock)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IsExpired
    path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
    startLine: 93
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Responses
  summary: "\nReturns <code>true</code> if the token is expired or it&apos;s going to be expired in the next minute.\n"
  example: []
  syntax:
    content: public bool IsExpired(IClock clock)
    parameters:
    - id: clock
      type: Google.Apis.Util.IClock
    return:
      type: System.Boolean
    content.vb: Public Function IsExpired(clock As IClock) As Boolean
  overload: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IsExpired*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.FromHttpResponseAsync(HttpResponseMessage,Google.Apis.Util.IClock,Google.Apis.Logging.ILogger)
  commentId: M:Google.Apis.Auth.OAuth2.Responses.TokenResponse.FromHttpResponseAsync(HttpResponseMessage,Google.Apis.Util.IClock,Google.Apis.Logging.ILogger)
  id: FromHttpResponseAsync(HttpResponseMessage,Google.Apis.Util.IClock,Google.Apis.Logging.ILogger)
  parent: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  langs:
  - csharp
  - vb
  name: FromHttpResponseAsync(HttpResponseMessage, IClock, ILogger)
  nameWithType: TokenResponse.FromHttpResponseAsync(HttpResponseMessage, IClock, ILogger)
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.FromHttpResponseAsync(HttpResponseMessage, Google.Apis.Util.IClock, Google.Apis.Logging.ILogger)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: FromHttpResponseAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/Responses/TokenResponse.cs
    startLine: 115
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Responses
  summary: "\nAsynchronously parses a <xref href=\"Google.Apis.Auth.OAuth2.Responses.TokenResponse\" data-throw-if-not-resolved=\"false\"></xref> instance from the specified <see cref=\"!:HttpResponseMessage\"></see>.\n"
  example: []
  syntax:
    content: public static Task<TokenResponse> FromHttpResponseAsync(HttpResponseMessage response, IClock clock, ILogger logger)
    parameters:
    - id: response
      type: HttpResponseMessage
      description: The http response from which to parse the token.
    - id: clock
      type: Google.Apis.Util.IClock
      description: The clock used to set the <xref href="Google.Apis.Auth.OAuth2.Responses.TokenResponse.Issued" data-throw-if-not-resolved="false"></xref> value of the token.
    - id: logger
      type: Google.Apis.Logging.ILogger
      description: The logger used to output messages incase of error.
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
      description: "\nA task containing the <xref href=\"Google.Apis.Auth.OAuth2.Responses.TokenResponse\" data-throw-if-not-resolved=\"false\"></xref> parsed form the response message.\n"
    content.vb: Public Shared Function FromHttpResponseAsync(response As HttpResponseMessage, clock As IClock, logger As ILogger) As Task(Of TokenResponse)
  overload: Google.Apis.Auth.OAuth2.Responses.TokenResponse.FromHttpResponseAsync*
  exceptions:
  - type: Google.Apis.Auth.OAuth2.Responses.TokenResponseException
    commentId: T:Google.Apis.Auth.OAuth2.Responses.TokenResponseException
    description: "\nThe response was not successful or there is an error parsing the response into valid <xref href=\"Google.Apis.Auth.OAuth2.Responses.TokenResponse\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Google.Apis.Auth.OAuth2.Responses
  commentId: N:Google.Apis.Auth.OAuth2.Responses
  isExternal: false
  name: Google.Apis.Auth.OAuth2.Responses
  nameWithType: Google.Apis.Auth.OAuth2.Responses
  fullName: Google.Apis.Auth.OAuth2.Responses
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.AccessToken*
  commentId: Overload:Google.Apis.Auth.OAuth2.Responses.TokenResponse.AccessToken
  isExternal: false
  name: AccessToken
  nameWithType: TokenResponse.AccessToken
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.AccessToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.TokenType*
  commentId: Overload:Google.Apis.Auth.OAuth2.Responses.TokenResponse.TokenType
  isExternal: false
  name: TokenType
  nameWithType: TokenResponse.TokenType
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.TokenType
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.ExpiresInSeconds*
  commentId: Overload:Google.Apis.Auth.OAuth2.Responses.TokenResponse.ExpiresInSeconds
  isExternal: false
  name: ExpiresInSeconds
  nameWithType: TokenResponse.ExpiresInSeconds
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.ExpiresInSeconds
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.RefreshToken*
  commentId: Overload:Google.Apis.Auth.OAuth2.Responses.TokenResponse.RefreshToken
  isExternal: false
  name: RefreshToken
  nameWithType: TokenResponse.RefreshToken
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.RefreshToken
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.Scope*
  commentId: Overload:Google.Apis.Auth.OAuth2.Responses.TokenResponse.Scope
  isExternal: false
  name: Scope
  nameWithType: TokenResponse.Scope
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.Scope
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IdToken*
  commentId: Overload:Google.Apis.Auth.OAuth2.Responses.TokenResponse.IdToken
  isExternal: false
  name: IdToken
  nameWithType: TokenResponse.IdToken
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IdToken
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.Issued*
  commentId: Overload:Google.Apis.Auth.OAuth2.Responses.TokenResponse.Issued
  isExternal: false
  name: Issued
  nameWithType: TokenResponse.Issued
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.Issued
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IssuedUtc*
  commentId: Overload:Google.Apis.Auth.OAuth2.Responses.TokenResponse.IssuedUtc
  isExternal: false
  name: IssuedUtc
  nameWithType: TokenResponse.IssuedUtc
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IssuedUtc
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IsExpired*
  commentId: Overload:Google.Apis.Auth.OAuth2.Responses.TokenResponse.IsExpired
  isExternal: false
  name: IsExpired
  nameWithType: TokenResponse.IsExpired
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.IsExpired
- uid: Google.Apis.Util.IClock
  commentId: T:Google.Apis.Util.IClock
  parent: Google.Apis.Util
  isExternal: false
  name: IClock
  nameWithType: IClock
  fullName: Google.Apis.Util.IClock
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  commentId: T:Google.Apis.Auth.OAuth2.Responses.TokenResponse
  parent: Google.Apis.Auth.OAuth2.Responses
  isExternal: false
  name: TokenResponse
  nameWithType: TokenResponse
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.Issued
  commentId: P:Google.Apis.Auth.OAuth2.Responses.TokenResponse.Issued
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse.FromHttpResponseAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.Responses.TokenResponse.FromHttpResponseAsync
  isExternal: false
  name: FromHttpResponseAsync
  nameWithType: TokenResponse.FromHttpResponseAsync
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse.FromHttpResponseAsync
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponseException
  commentId: T:Google.Apis.Auth.OAuth2.Responses.TokenResponseException
  isExternal: false
  name: TokenResponseException
  nameWithType: TokenResponseException
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponseException
- uid: HttpResponseMessage
  commentId: '!:HttpResponseMessage'
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: HttpResponseMessage
- uid: Google.Apis.Logging.ILogger
  commentId: T:Google.Apis.Logging.ILogger
  parent: Google.Apis.Logging
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Google.Apis.Logging.ILogger
- uid: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
  commentId: T:System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TokenResponse>
  nameWithType: Task<TokenResponse>
  fullName: System.Threading.Tasks.Task<Google.Apis.Auth.OAuth2.Responses.TokenResponse>
  nameWithType.vb: Task(Of TokenResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Apis.Auth.OAuth2.Responses.TokenResponse)
  name.vb: Task(Of TokenResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging
  commentId: N:Google.Apis.Logging
  isExternal: false
  name: Google.Apis.Logging
  nameWithType: Google.Apis.Logging
  fullName: Google.Apis.Logging
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
