### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp
  commentId: T:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp
  id: AuthorizationCodeWebApp
  parent: Google.Apis.Auth.OAuth2.Web
  children:
  - Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.#ctor(Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow,System.String,System.String)
  - Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthorizeAsync(System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.Flow
  - Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.RedirectUri
  - Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.ShouldRequestAuthorizationCode(Google.Apis.Auth.OAuth2.Responses.TokenResponse)
  - Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.State
  - Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.StateKey
  - Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.StateRandomLength
  langs:
  - csharp
  - vb
  name: AuthorizationCodeWebApp
  nameWithType: AuthorizationCodeWebApp
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AuthorizationCodeWebApp
    path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
    startLine: 29
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Web
  summary: "\nThread safe OAuth 2.0 authorization code flow for a web application that persists end-user credentials.\n"
  example: []
  syntax:
    content: public class AuthorizationCodeWebApp
    content.vb: Public Class AuthorizationCodeWebApp
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.StateKey
  commentId: F:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.StateKey
  id: StateKey
  parent: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp
  langs:
  - csharp
  - vb
  name: StateKey
  nameWithType: AuthorizationCodeWebApp.StateKey
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.StateKey
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: StateKey
    path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
    startLine: 35
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Web
  summary: "\nThe state key. As part of making the request for authorization code we save the original request to verify \nthat this server create the original request.\n"
  example: []
  syntax:
    content: public const string StateKey = "oauth_"
    return:
      type: System.String
    content.vb: Public Const StateKey As String = "oauth_"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.StateRandomLength
  commentId: F:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.StateRandomLength
  id: StateRandomLength
  parent: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp
  langs:
  - csharp
  - vb
  name: StateRandomLength
  nameWithType: AuthorizationCodeWebApp.StateRandomLength
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.StateRandomLength
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: StateRandomLength
    path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
    startLine: 38
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Web
  summary: The length of the random number which will be added to the end of the state parameter.
  example: []
  syntax:
    content: public const int StateRandomLength = 8
    return:
      type: System.Int32
    content.vb: Public Const StateRandomLength As Integer = 8
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.Flow
  commentId: P:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.Flow
  id: Flow
  parent: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp
  langs:
  - csharp
  - vb
  name: Flow
  nameWithType: AuthorizationCodeWebApp.Flow
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.Flow
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Flow
    path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
    startLine: 64
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Web
  summary: Gets the authorization code flow.
  example: []
  syntax:
    content: public IAuthorizationCodeFlow Flow { get; }
    parameters: []
    return:
      type: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
    content.vb: Public ReadOnly Property Flow As IAuthorizationCodeFlow
  overload: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.Flow*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.RedirectUri
  commentId: P:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.RedirectUri
  id: RedirectUri
  parent: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp
  langs:
  - csharp
  - vb
  name: RedirectUri
  nameWithType: AuthorizationCodeWebApp.RedirectUri
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.RedirectUri
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RedirectUri
    path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
    startLine: 70
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Web
  summary: Gets the OAuth2 callback redirect URI.
  example: []
  syntax:
    content: public string RedirectUri { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RedirectUri As String
  overload: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.RedirectUri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.State
  commentId: P:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.State
  id: State
  parent: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp
  langs:
  - csharp
  - vb
  name: State
  nameWithType: AuthorizationCodeWebApp.State
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.State
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: State
    path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
    startLine: 76
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Web
  summary: Gets the state which is used to navigate back to the page that started the OAuth flow.
  example: []
  syntax:
    content: public string State { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property State As String
  overload: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.#ctor(Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow,System.String,System.String)
  commentId: M:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.#ctor(Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow,System.String,System.String)
  id: '#ctor(Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow,System.String,System.String)'
  parent: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp
  langs:
  - csharp
  - vb
  name: AuthorizationCodeWebApp(IAuthorizationCodeFlow, String, String)
  nameWithType: AuthorizationCodeWebApp.AuthorizationCodeWebApp(IAuthorizationCodeFlow, String, String)
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthorizationCodeWebApp(Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
    startLine: 84
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Web
  summary: "\nConstructs a new authorization code installed application with the given flow and code receiver.\n"
  example: []
  syntax:
    content: public AuthorizationCodeWebApp(IAuthorizationCodeFlow flow, string redirectUri, string state)
    parameters:
    - id: flow
      type: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
    - id: redirectUri
      type: System.String
    - id: state
      type: System.String
    content.vb: Public Sub New(flow As IAuthorizationCodeFlow, redirectUri As String, state As String)
  overload: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthorizeAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthorizeAsync(System.String,System.Threading.CancellationToken)
  id: AuthorizeAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp
  langs:
  - csharp
  - vb
  name: AuthorizeAsync(String, CancellationToken)
  nameWithType: AuthorizationCodeWebApp.AuthorizeAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthorizeAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AuthorizeAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
    startLine: 98
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Web
  summary: Asynchronously authorizes the web application to access user's protected data.
  example: []
  syntax:
    content: public Task<AuthorizationCodeWebApp.AuthResult> AuthorizeAsync(string userId, CancellationToken taskCancellationToken)
    parameters:
    - id: userId
      type: System.String
      description: User identifier
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel an operation
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult}
      description: "\nAuth result object which contains the user's credential or redirect URI for the authorization server\n"
    content.vb: Public Function AuthorizeAsync(userId As String, taskCancellationToken As CancellationToken) As Task(Of AuthorizationCodeWebApp.AuthResult)
  overload: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthorizeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.ShouldRequestAuthorizationCode(Google.Apis.Auth.OAuth2.Responses.TokenResponse)
  commentId: M:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.ShouldRequestAuthorizationCode(Google.Apis.Auth.OAuth2.Responses.TokenResponse)
  id: ShouldRequestAuthorizationCode(Google.Apis.Auth.OAuth2.Responses.TokenResponse)
  parent: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp
  langs:
  - csharp
  - vb
  name: ShouldRequestAuthorizationCode(TokenResponse)
  nameWithType: AuthorizationCodeWebApp.ShouldRequestAuthorizationCode(TokenResponse)
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.ShouldRequestAuthorizationCode(Google.Apis.Auth.OAuth2.Responses.TokenResponse)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ShouldRequestAuthorizationCode
    path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
    startLine: 131
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Web
  summary: "\nDetermines the need for retrieval of a new authorization code, based on the given token and the \nauthorization code flow.\n"
  example: []
  syntax:
    content: public bool ShouldRequestAuthorizationCode(TokenResponse token)
    parameters:
    - id: token
      type: Google.Apis.Auth.OAuth2.Responses.TokenResponse
    return:
      type: System.Boolean
    content.vb: Public Function ShouldRequestAuthorizationCode(token As TokenResponse) As Boolean
  overload: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.ShouldRequestAuthorizationCode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Apis.Auth.OAuth2.Web
  commentId: N:Google.Apis.Auth.OAuth2.Web
  isExternal: false
  name: Google.Apis.Auth.OAuth2.Web
  nameWithType: Google.Apis.Auth.OAuth2.Web
  fullName: Google.Apis.Auth.OAuth2.Web
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.Flow*
  commentId: Overload:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.Flow
  isExternal: false
  name: Flow
  nameWithType: AuthorizationCodeWebApp.Flow
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.Flow
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  commentId: T:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  parent: Google.Apis.Auth.OAuth2.Flows
  isExternal: false
  name: IAuthorizationCodeFlow
  nameWithType: IAuthorizationCodeFlow
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
- uid: Google.Apis.Auth.OAuth2.Flows
  commentId: N:Google.Apis.Auth.OAuth2.Flows
  isExternal: false
  name: Google.Apis.Auth.OAuth2.Flows
  nameWithType: Google.Apis.Auth.OAuth2.Flows
  fullName: Google.Apis.Auth.OAuth2.Flows
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.RedirectUri*
  commentId: Overload:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.RedirectUri
  isExternal: false
  name: RedirectUri
  nameWithType: AuthorizationCodeWebApp.RedirectUri
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.RedirectUri
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.State*
  commentId: Overload:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.State
  isExternal: false
  name: State
  nameWithType: AuthorizationCodeWebApp.State
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.State
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.#ctor*
  commentId: Overload:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.#ctor
  isExternal: false
  name: AuthorizationCodeWebApp
  nameWithType: AuthorizationCodeWebApp.AuthorizationCodeWebApp
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthorizationCodeWebApp
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthorizeAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthorizeAsync
  isExternal: false
  name: AuthorizeAsync
  nameWithType: AuthorizationCodeWebApp.AuthorizeAsync
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthorizeAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult}
  commentId: T:System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AuthorizationCodeWebApp.AuthResult>
  nameWithType: Task<AuthorizationCodeWebApp.AuthResult>
  fullName: System.Threading.Tasks.Task<Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult>
  nameWithType.vb: Task(Of AuthorizationCodeWebApp.AuthResult)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult)
  name.vb: Task(Of AuthorizationCodeWebApp.AuthResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult
    name: AuthorizationCodeWebApp.AuthResult
    nameWithType: AuthorizationCodeWebApp.AuthResult
    fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult
    name: AuthorizationCodeWebApp.AuthResult
    nameWithType: AuthorizationCodeWebApp.AuthResult
    fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.ShouldRequestAuthorizationCode*
  commentId: Overload:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.ShouldRequestAuthorizationCode
  isExternal: false
  name: ShouldRequestAuthorizationCode
  nameWithType: AuthorizationCodeWebApp.ShouldRequestAuthorizationCode
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.ShouldRequestAuthorizationCode
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  commentId: T:Google.Apis.Auth.OAuth2.Responses.TokenResponse
  parent: Google.Apis.Auth.OAuth2.Responses
  isExternal: false
  name: TokenResponse
  nameWithType: TokenResponse
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Apis.Auth.OAuth2.Responses
  commentId: N:Google.Apis.Auth.OAuth2.Responses
  isExternal: false
  name: Google.Apis.Auth.OAuth2.Responses
  nameWithType: Google.Apis.Auth.OAuth2.Responses
  fullName: Google.Apis.Auth.OAuth2.Responses
