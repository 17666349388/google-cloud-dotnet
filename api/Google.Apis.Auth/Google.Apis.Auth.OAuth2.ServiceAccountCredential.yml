### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential
  commentId: T:Google.Apis.Auth.OAuth2.ServiceAccountCredential
  id: ServiceAccountCredential
  parent: Google.Apis.Auth.OAuth2
  children:
  - Google.Apis.Auth.OAuth2.ServiceAccountCredential.#ctor(Google.Apis.Auth.OAuth2.ServiceAccountCredential.Initializer)
  - Google.Apis.Auth.OAuth2.ServiceAccountCredential.CreateSignature(System.Byte[])
  - Google.Apis.Auth.OAuth2.ServiceAccountCredential.FromServiceAccountData(System.IO.Stream)
  - Google.Apis.Auth.OAuth2.ServiceAccountCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.ServiceAccountCredential.Id
  - Google.Apis.Auth.OAuth2.ServiceAccountCredential.Key
  - Google.Apis.Auth.OAuth2.ServiceAccountCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.ServiceAccountCredential.Scopes
  - Google.Apis.Auth.OAuth2.ServiceAccountCredential.UnixEpoch
  - Google.Apis.Auth.OAuth2.ServiceAccountCredential.User
  langs:
  - csharp
  - vb
  name: ServiceAccountCredential
  nameWithType: ServiceAccountCredential
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ServiceAccountCredential
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
    startLine: 56
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nGoogle OAuth 2.0 credential for accessing protected resources using an access token. The Google OAuth 2.0 \nAuthorization Server supports server-to-server interactions such as those between a web application and Google\nCloud Storage. The requesting application has to prove its own identity to gain access to an API, and an \nend-user doesn&apos;t have to be involved. \n<p>\nTake a look in https://developers.google.com/accounts/docs/OAuth2ServiceAccount for more details.\n</p>\n<p>\nSince version 1.9.3, service account credential also supports JSON Web Token access token scenario.\nIn this scenario, instead of sending a signed JWT claim to a token server and exchanging it for \nan access token, a locally signed JWT claim bound to an appropriate URI is used as an access token\ndirectly.\nSee <xref href=\"Google.Apis.Auth.OAuth2.ServiceAccountCredential.GetAccessTokenForRequestAsync(System.String%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> for explanation when JWT access token\nis used and when regular OAuth2 token is used.\n</p>\n"
  example: []
  syntax:
    content: 'public class ServiceAccountCredential : ServiceCredential, ICredential, IConfigurableHttpClientInitializer, ITokenAccess, IHttpExecuteInterceptor, IHttpUnsuccessfulResponseHandler'
    content.vb: >-
      Public Class ServiceAccountCredential
          Inherits ServiceCredential
          Implements ICredential, IConfigurableHttpClientInitializer, ITokenAccess, IHttpExecuteInterceptor, IHttpUnsuccessfulResponseHandler
  inheritance:
  - System.Object
  - Google.Apis.Auth.OAuth2.ServiceCredential
  implements:
  - Google.Apis.Auth.OAuth2.ICredential
  - Google.Apis.Http.IConfigurableHttpClientInitializer
  - Google.Apis.Auth.OAuth2.ITokenAccess
  - Google.Apis.Http.IHttpExecuteInterceptor
  - Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  inheritedMembers:
  - Google.Apis.Auth.OAuth2.ServiceCredential.Logger
  - Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl
  - Google.Apis.Auth.OAuth2.ServiceCredential.Clock
  - Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod
  - Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient
  - Google.Apis.Auth.OAuth2.ServiceCredential.Token
  - Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  - Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.UnixEpoch
  commentId: F:Google.Apis.Auth.OAuth2.ServiceAccountCredential.UnixEpoch
  id: UnixEpoch
  parent: Google.Apis.Auth.OAuth2.ServiceAccountCredential
  langs:
  - csharp
  - vb
  name: UnixEpoch
  nameWithType: ServiceAccountCredential.UnixEpoch
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.UnixEpoch
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UnixEpoch
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
    startLine: 119
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Unix epoch as a <code>DateTime</code>
  example: []
  syntax:
    content: protected static readonly DateTime UnixEpoch
    return:
      type: System.DateTime
    content.vb: Protected Shared ReadOnly UnixEpoch As Date
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Id
  commentId: P:Google.Apis.Auth.OAuth2.ServiceAccountCredential.Id
  id: Id
  parent: Google.Apis.Auth.OAuth2.ServiceAccountCredential
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ServiceAccountCredential.Id
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Id
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Id
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
    startLine: 127
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Gets the service account ID (typically an e-mail address).
  example: []
  syntax:
    content: public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Id As String
  overload: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.User
  commentId: P:Google.Apis.Auth.OAuth2.ServiceAccountCredential.User
  id: User
  parent: Google.Apis.Auth.OAuth2.ServiceAccountCredential
  langs:
  - csharp
  - vb
  name: User
  nameWithType: ServiceAccountCredential.User
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.User
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: User
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
    startLine: 133
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nGets the email address of the user the application is trying to impersonate in the service account flow \nor <code>null</code>.\n"
  example: []
  syntax:
    content: public string User { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property User As String
  overload: Google.Apis.Auth.OAuth2.ServiceAccountCredential.User*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Scopes
  commentId: P:Google.Apis.Auth.OAuth2.ServiceAccountCredential.Scopes
  id: Scopes
  parent: Google.Apis.Auth.OAuth2.ServiceAccountCredential
  langs:
  - csharp
  - vb
  name: Scopes
  nameWithType: ServiceAccountCredential.Scopes
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Scopes
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Scopes
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
    startLine: 136
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Gets the service account scopes.
  example: []
  syntax:
    content: public IEnumerable<string> Scopes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property Scopes As IEnumerable(Of String)
  overload: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Scopes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Key
  commentId: P:Google.Apis.Auth.OAuth2.ServiceAccountCredential.Key
  id: Key
  parent: Google.Apis.Auth.OAuth2.ServiceAccountCredential
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: ServiceAccountCredential.Key
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Key
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Key
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
    startLine: 142
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nGets the key which is used to sign the request, as specified in\nhttps://developers.google.com/accounts/docs/OAuth2ServiceAccount#computingsignature.\n"
  example: []
  syntax:
    content: public RSACryptoServiceProvider Key { get; }
    parameters: []
    return:
      type: System.Security.Cryptography.RSACryptoServiceProvider
    content.vb: Public ReadOnly Property Key As RSACryptoServiceProvider
  overload: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Key*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.#ctor(Google.Apis.Auth.OAuth2.ServiceAccountCredential.Initializer)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceAccountCredential.#ctor(Google.Apis.Auth.OAuth2.ServiceAccountCredential.Initializer)
  id: '#ctor(Google.Apis.Auth.OAuth2.ServiceAccountCredential.Initializer)'
  parent: Google.Apis.Auth.OAuth2.ServiceAccountCredential
  langs:
  - csharp
  - vb
  name: ServiceAccountCredential(ServiceAccountCredential.Initializer)
  nameWithType: ServiceAccountCredential.ServiceAccountCredential(ServiceAccountCredential.Initializer)
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.ServiceAccountCredential(Google.Apis.Auth.OAuth2.ServiceAccountCredential.Initializer)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
    startLine: 148
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Constructs a new service account credential using the given initializer.
  example: []
  syntax:
    content: public ServiceAccountCredential(ServiceAccountCredential.Initializer initializer)
    parameters:
    - id: initializer
      type: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Initializer
    content.vb: Public Sub New(initializer As ServiceAccountCredential.Initializer)
  overload: Google.Apis.Auth.OAuth2.ServiceAccountCredential.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.FromServiceAccountData(System.IO.Stream)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceAccountCredential.FromServiceAccountData(System.IO.Stream)
  id: FromServiceAccountData(System.IO.Stream)
  parent: Google.Apis.Auth.OAuth2.ServiceAccountCredential
  langs:
  - csharp
  - vb
  name: FromServiceAccountData(Stream)
  nameWithType: ServiceAccountCredential.FromServiceAccountData(Stream)
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.FromServiceAccountData(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: FromServiceAccountData
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
    startLine: 164
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nCreates a new <xref href=\"Google.Apis.Auth.OAuth2.ServiceAccountCredential\" data-throw-if-not-resolved=\"false\"></xref> instance from JSON credential data.\n"
  example: []
  syntax:
    content: public static ServiceAccountCredential FromServiceAccountData(Stream credentialData)
    parameters:
    - id: credentialData
      type: System.IO.Stream
      description: The stream from which to read the JSON key data for a service account. Must not be null.
    return:
      type: Google.Apis.Auth.OAuth2.ServiceAccountCredential
      description: The credentials parsed from the service account key data.
    content.vb: Public Shared Function FromServiceAccountData(credentialData As Stream) As ServiceAccountCredential
  overload: Google.Apis.Auth.OAuth2.ServiceAccountCredential.FromServiceAccountData*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe <span class=\"paramref\">credentialData</span> does not contain valid JSON service account key data.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceAccountCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  id: RequestAccessTokenAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.ServiceAccountCredential
  langs:
  - csharp
  - vb
  name: RequestAccessTokenAsync(CancellationToken)
  nameWithType: ServiceAccountCredential.RequestAccessTokenAsync(CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RequestAccessTokenAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
    startLine: 181
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nRequests a new token as specified in \nhttps://developers.google.com/accounts/docs/OAuth2ServiceAccount#makingrequest.\n"
  example: []
  syntax:
    content: public override Task<bool> RequestAccessTokenAsync(CancellationToken taskCancellationToken)
    parameters:
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if a new token was received successfully.
    content.vb: Public Overrides Function RequestAccessTokenAsync(taskCancellationToken As CancellationToken) As Task(Of Boolean)
  overridden: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  overload: Google.Apis.Auth.OAuth2.ServiceAccountCredential.RequestAccessTokenAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceAccountCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  id: GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.ServiceAccountCredential
  langs:
  - csharp
  - vb
  name: GetAccessTokenForRequestAsync(String, CancellationToken)
  nameWithType: ServiceAccountCredential.GetAccessTokenForRequestAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.GetAccessTokenForRequestAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GetAccessTokenForRequestAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
    startLine: 207
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nGets an access token to authorize a request.\nIf <span class=\"paramref\">authUri</span> is set and this credential has no scopes associated\nwith it, a locally signed JWT access token for given <span class=\"paramref\">authUri</span>\nis returned. Otherwise, an OAuth2 access token obtained from token server will be returned.\nA cached token is used if possible and the token is only refreshed once it&apos;s close to its expiry.\n"
  example: []
  syntax:
    content: public override Task<string> GetAccessTokenForRequestAsync(string authUri = null, CancellationToken cancellationToken = null)
    parameters:
    - id: authUri
      type: System.String
      description: The URI the returned token will grant access to.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The access token.
    content.vb: Public Overrides Function GetAccessTokenForRequestAsync(authUri As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overridden: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  overload: Google.Apis.Auth.OAuth2.ServiceAccountCredential.GetAccessTokenForRequestAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.CreateSignature(System.Byte[])
  commentId: M:Google.Apis.Auth.OAuth2.ServiceAccountCredential.CreateSignature(System.Byte[])
  id: CreateSignature(System.Byte[])
  parent: Google.Apis.Auth.OAuth2.ServiceAccountCredential
  langs:
  - csharp
  - vb
  name: CreateSignature(Byte[])
  nameWithType: ServiceAccountCredential.CreateSignature(Byte[])
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.CreateSignature(System.Byte[])
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CreateSignature
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceAccountCredential.cs
    startLine: 263
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nCreates a base64 encoded signature for the SHA-256 hash of the specified data.\n"
  example: []
  syntax:
    content: public string CreateSignature(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
      description: The data to hash and sign. Must not be null.
    return:
      type: System.String
      description: The base-64 encoded signature.
    content.vb: Public Function CreateSignature(data As Byte()) As String
  overload: Google.Apis.Auth.OAuth2.ServiceAccountCredential.CreateSignature*
  nameWithType.vb: ServiceAccountCredential.CreateSignature(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Auth.OAuth2.ServiceAccountCredential.CreateSignature(System.Byte())
  name.vb: CreateSignature(Byte())
references:
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceAccountCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
- uid: Google.Apis.Auth.OAuth2
  commentId: N:Google.Apis.Auth.OAuth2
  isExternal: false
  name: Google.Apis.Auth.OAuth2
  nameWithType: Google.Apis.Auth.OAuth2
  fullName: Google.Apis.Auth.OAuth2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Auth.OAuth2.ServiceCredential
  commentId: T:Google.Apis.Auth.OAuth2.ServiceCredential
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ServiceCredential
  nameWithType: ServiceCredential
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential
- uid: Google.Apis.Auth.OAuth2.ICredential
  commentId: T:Google.Apis.Auth.OAuth2.ICredential
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ICredential
  nameWithType: ICredential
  fullName: Google.Apis.Auth.OAuth2.ICredential
- uid: Google.Apis.Http.IConfigurableHttpClientInitializer
  commentId: T:Google.Apis.Http.IConfigurableHttpClientInitializer
  parent: Google.Apis.Http
  isExternal: false
  name: IConfigurableHttpClientInitializer
  nameWithType: IConfigurableHttpClientInitializer
  fullName: Google.Apis.Http.IConfigurableHttpClientInitializer
- uid: Google.Apis.Auth.OAuth2.ITokenAccess
  commentId: T:Google.Apis.Auth.OAuth2.ITokenAccess
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ITokenAccess
  nameWithType: ITokenAccess
  fullName: Google.Apis.Auth.OAuth2.ITokenAccess
- uid: Google.Apis.Http.IHttpExecuteInterceptor
  commentId: T:Google.Apis.Http.IHttpExecuteInterceptor
  parent: Google.Apis.Http
  isExternal: false
  name: IHttpExecuteInterceptor
  nameWithType: IHttpExecuteInterceptor
  fullName: Google.Apis.Http.IHttpExecuteInterceptor
- uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  commentId: T:Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  parent: Google.Apis.Http
  isExternal: false
  name: IHttpUnsuccessfulResponseHandler
  nameWithType: IHttpUnsuccessfulResponseHandler
  fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Logger
  commentId: F:Google.Apis.Auth.OAuth2.ServiceCredential.Logger
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: Logger
  nameWithType: ServiceCredential.Logger
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Logger
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: TokenServerUrl
  nameWithType: ServiceCredential.TokenServerUrl
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Clock
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.Clock
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: Clock
  nameWithType: ServiceCredential.Clock
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Clock
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: AccessMethod
  nameWithType: ServiceCredential.AccessMethod
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: HttpClient
  nameWithType: ServiceCredential.HttpClient
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Token
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.Token
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: Token
  nameWithType: ServiceCredential.Token
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Token
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: Initialize(ConfigurableHttpClient)
  nameWithType: ServiceCredential.Initialize(ConfigurableHttpClient)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
    name: Initialize
    nameWithType: ServiceCredential.Initialize
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.ConfigurableHttpClient
    name: ConfigurableHttpClient
    nameWithType: ConfigurableHttpClient
    fullName: Google.Apis.Http.ConfigurableHttpClient
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
    name: Initialize
    nameWithType: ServiceCredential.Initialize
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.ConfigurableHttpClient
    name: ConfigurableHttpClient
    nameWithType: ConfigurableHttpClient
    fullName: Google.Apis.Http.ConfigurableHttpClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: true
  name: InterceptAsync(HttpRequestMessage, CancellationToken)
  nameWithType: ServiceCredential.InterceptAsync(HttpRequestMessage, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: InterceptAsync
    nameWithType: ServiceCredential.InterceptAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: InterceptAsync
    nameWithType: ServiceCredential.InterceptAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: false
  name: HandleResponseAsync(HandleUnsuccessfulResponseArgs)
  nameWithType: ServiceCredential.HandleResponseAsync(HandleUnsuccessfulResponseArgs)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
    name: HandleResponseAsync
    nameWithType: ServiceCredential.HandleResponseAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.HandleUnsuccessfulResponseArgs
    name: HandleUnsuccessfulResponseArgs
    nameWithType: HandleUnsuccessfulResponseArgs
    fullName: Google.Apis.Http.HandleUnsuccessfulResponseArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
    name: HandleResponseAsync
    nameWithType: ServiceCredential.HandleResponseAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.HandleUnsuccessfulResponseArgs
    name: HandleUnsuccessfulResponseArgs
    nameWithType: HandleUnsuccessfulResponseArgs
    fullName: Google.Apis.Http.HandleUnsuccessfulResponseArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Http
  commentId: N:Google.Apis.Http
  isExternal: false
  name: Google.Apis.Http
  nameWithType: Google.Apis.Http
  fullName: Google.Apis.Http
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Id*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceAccountCredential.Id
  isExternal: false
  name: Id
  nameWithType: ServiceAccountCredential.Id
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.User*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceAccountCredential.User
  isExternal: false
  name: User
  nameWithType: ServiceAccountCredential.User
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.User
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Scopes*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceAccountCredential.Scopes
  isExternal: false
  name: Scopes
  nameWithType: ServiceAccountCredential.Scopes
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Scopes
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Key*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceAccountCredential.Key
  isExternal: false
  name: Key
  nameWithType: ServiceAccountCredential.Key
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Key
- uid: System.Security.Cryptography.RSACryptoServiceProvider
  commentId: T:System.Security.Cryptography.RSACryptoServiceProvider
  parent: System.Security.Cryptography
  isExternal: true
  name: RSACryptoServiceProvider
  nameWithType: RSACryptoServiceProvider
  fullName: System.Security.Cryptography.RSACryptoServiceProvider
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.#ctor*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceAccountCredential.#ctor
  isExternal: false
  name: ServiceAccountCredential
  nameWithType: ServiceAccountCredential.ServiceAccountCredential
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.ServiceAccountCredential
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Initializer
  commentId: T:Google.Apis.Auth.OAuth2.ServiceAccountCredential.Initializer
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ServiceAccountCredential.Initializer
  nameWithType: ServiceAccountCredential.Initializer
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.Initializer
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential
  commentId: T:Google.Apis.Auth.OAuth2.ServiceAccountCredential
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ServiceAccountCredential
  nameWithType: ServiceAccountCredential
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.FromServiceAccountData*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceAccountCredential.FromServiceAccountData
  isExternal: false
  name: FromServiceAccountData
  nameWithType: ServiceAccountCredential.FromServiceAccountData
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.FromServiceAccountData
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: true
  name: RequestAccessTokenAsync(CancellationToken)
  nameWithType: ServiceCredential.RequestAccessTokenAsync(CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
    name: RequestAccessTokenAsync
    nameWithType: ServiceCredential.RequestAccessTokenAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
    name: RequestAccessTokenAsync
    nameWithType: ServiceCredential.RequestAccessTokenAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.RequestAccessTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceAccountCredential.RequestAccessTokenAsync
  isExternal: false
  name: RequestAccessTokenAsync
  nameWithType: ServiceAccountCredential.RequestAccessTokenAsync
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.RequestAccessTokenAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  isExternal: true
  name: GetAccessTokenForRequestAsync(String, CancellationToken)
  nameWithType: ServiceCredential.GetAccessTokenForRequestAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
    name: GetAccessTokenForRequestAsync
    nameWithType: ServiceCredential.GetAccessTokenForRequestAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
    name: GetAccessTokenForRequestAsync
    nameWithType: ServiceCredential.GetAccessTokenForRequestAsync
    fullName: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.GetAccessTokenForRequestAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceAccountCredential.GetAccessTokenForRequestAsync
  isExternal: false
  name: GetAccessTokenForRequestAsync
  nameWithType: ServiceAccountCredential.GetAccessTokenForRequestAsync
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.GetAccessTokenForRequestAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.ServiceAccountCredential.CreateSignature*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceAccountCredential.CreateSignature
  isExternal: false
  name: CreateSignature
  nameWithType: ServiceAccountCredential.CreateSignature
  fullName: Google.Apis.Auth.OAuth2.ServiceAccountCredential.CreateSignature
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
