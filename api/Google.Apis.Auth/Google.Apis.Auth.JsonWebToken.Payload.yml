### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.JsonWebToken.Payload
  commentId: T:Google.Apis.Auth.JsonWebToken.Payload
  id: JsonWebToken.Payload
  parent: Google.Apis.Auth
  children:
  - Google.Apis.Auth.JsonWebToken.Payload.Audience
  - Google.Apis.Auth.JsonWebToken.Payload.AudienceAsList
  - Google.Apis.Auth.JsonWebToken.Payload.ExpirationTimeSeconds
  - Google.Apis.Auth.JsonWebToken.Payload.IssuedAtTimeSeconds
  - Google.Apis.Auth.JsonWebToken.Payload.Issuer
  - Google.Apis.Auth.JsonWebToken.Payload.JwtId
  - Google.Apis.Auth.JsonWebToken.Payload.NotBeforeTimeSeconds
  - Google.Apis.Auth.JsonWebToken.Payload.Subject
  - Google.Apis.Auth.JsonWebToken.Payload.Type
  langs:
  - csharp
  - vb
  name: JsonWebToken.Payload
  nameWithType: JsonWebToken.Payload
  fullName: Google.Apis.Auth.JsonWebToken.Payload
  type: Class
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Payload
    path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
    startLine: 48
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nJWT Payload as specified in http://tools.ietf.org/html/draft-ietf-oauth-json-web-token-08#section-4.1.\n"
  example: []
  syntax:
    content: public class Payload
    content.vb: Public Class Payload
  inheritance:
  - System.Object
  derivedClasses:
  - Google.Apis.Auth.JsonWebSignature.Payload
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Auth.JsonWebToken.Payload.Issuer
  commentId: P:Google.Apis.Auth.JsonWebToken.Payload.Issuer
  id: Issuer
  parent: Google.Apis.Auth.JsonWebToken.Payload
  langs:
  - csharp
  - vb
  name: Issuer
  nameWithType: JsonWebToken.Payload.Issuer
  fullName: Google.Apis.Auth.JsonWebToken.Payload.Issuer
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Issuer
    path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
    startLine: 53
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets issuer claim that identifies the principal that issued the JWT or <code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("iss")]

      public string Issuer { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("iss")>

      Public Property Issuer As String
  overload: Google.Apis.Auth.JsonWebToken.Payload.Issuer*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: iss
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebToken.Payload.Subject
  commentId: P:Google.Apis.Auth.JsonWebToken.Payload.Subject
  id: Subject
  parent: Google.Apis.Auth.JsonWebToken.Payload
  langs:
  - csharp
  - vb
  name: Subject
  nameWithType: JsonWebToken.Payload.Subject
  fullName: Google.Apis.Auth.JsonWebToken.Payload.Subject
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Subject
    path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
    startLine: 59
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets subject claim identifying the principal that is the subject of the JWT or <code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("sub")]

      public string Subject { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("sub")>

      Public Property Subject As String
  overload: Google.Apis.Auth.JsonWebToken.Payload.Subject*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sub
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebToken.Payload.Audience
  commentId: P:Google.Apis.Auth.JsonWebToken.Payload.Audience
  id: Audience
  parent: Google.Apis.Auth.JsonWebToken.Payload
  langs:
  - csharp
  - vb
  name: Audience
  nameWithType: JsonWebToken.Payload.Audience
  fullName: Google.Apis.Auth.JsonWebToken.Payload.Audience
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Audience
    path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
    startLine: 66
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets audience claim that identifies the audience that the JWT is intended for (should either be\na string or list) or <code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("aud")]

      public object Audience { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: >-
      <JsonProperty("aud")>

      Public Property Audience As Object
  overload: Google.Apis.Auth.JsonWebToken.Payload.Audience*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: aud
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebToken.Payload.ExpirationTimeSeconds
  commentId: P:Google.Apis.Auth.JsonWebToken.Payload.ExpirationTimeSeconds
  id: ExpirationTimeSeconds
  parent: Google.Apis.Auth.JsonWebToken.Payload
  langs:
  - csharp
  - vb
  name: ExpirationTimeSeconds
  nameWithType: JsonWebToken.Payload.ExpirationTimeSeconds
  fullName: Google.Apis.Auth.JsonWebToken.Payload.ExpirationTimeSeconds
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExpirationTimeSeconds
    path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
    startLine: 73
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets expiration time claim that identifies the expiration time (in seconds) on or after which \nthe token MUST NOT be accepted for processing or <code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("exp")]

      public long ? ExpirationTimeSeconds { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("exp")>

      Public Property ExpirationTimeSeconds As Long?
  overload: Google.Apis.Auth.JsonWebToken.Payload.ExpirationTimeSeconds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: exp
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebToken.Payload.NotBeforeTimeSeconds
  commentId: P:Google.Apis.Auth.JsonWebToken.Payload.NotBeforeTimeSeconds
  id: NotBeforeTimeSeconds
  parent: Google.Apis.Auth.JsonWebToken.Payload
  langs:
  - csharp
  - vb
  name: NotBeforeTimeSeconds
  nameWithType: JsonWebToken.Payload.NotBeforeTimeSeconds
  fullName: Google.Apis.Auth.JsonWebToken.Payload.NotBeforeTimeSeconds
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NotBeforeTimeSeconds
    path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
    startLine: 80
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets not before claim that identifies the time (in seconds) before which the token MUST NOT be\naccepted for processing or <code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("nbf")]

      public long ? NotBeforeTimeSeconds { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("nbf")>

      Public Property NotBeforeTimeSeconds As Long?
  overload: Google.Apis.Auth.JsonWebToken.Payload.NotBeforeTimeSeconds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: nbf
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebToken.Payload.IssuedAtTimeSeconds
  commentId: P:Google.Apis.Auth.JsonWebToken.Payload.IssuedAtTimeSeconds
  id: IssuedAtTimeSeconds
  parent: Google.Apis.Auth.JsonWebToken.Payload
  langs:
  - csharp
  - vb
  name: IssuedAtTimeSeconds
  nameWithType: JsonWebToken.Payload.IssuedAtTimeSeconds
  fullName: Google.Apis.Auth.JsonWebToken.Payload.IssuedAtTimeSeconds
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IssuedAtTimeSeconds
    path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
    startLine: 87
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets issued at claim that identifies the time (in seconds) at which the JWT was issued or \n<code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("iat")]

      public long ? IssuedAtTimeSeconds { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("iat")>

      Public Property IssuedAtTimeSeconds As Long?
  overload: Google.Apis.Auth.JsonWebToken.Payload.IssuedAtTimeSeconds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: iat
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebToken.Payload.JwtId
  commentId: P:Google.Apis.Auth.JsonWebToken.Payload.JwtId
  id: JwtId
  parent: Google.Apis.Auth.JsonWebToken.Payload
  langs:
  - csharp
  - vb
  name: JwtId
  nameWithType: JsonWebToken.Payload.JwtId
  fullName: Google.Apis.Auth.JsonWebToken.Payload.JwtId
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: JwtId
    path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
    startLine: 93
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets JWT ID claim that provides a unique identifier for the JWT or <code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("jti")]

      public string JwtId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("jti")>

      Public Property JwtId As String
  overload: Google.Apis.Auth.JsonWebToken.Payload.JwtId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: jti
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebToken.Payload.Type
  commentId: P:Google.Apis.Auth.JsonWebToken.Payload.Type
  id: Type
  parent: Google.Apis.Auth.JsonWebToken.Payload
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: JsonWebToken.Payload.Type
  fullName: Google.Apis.Auth.JsonWebToken.Payload.Type
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Type
    path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
    startLine: 100
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: "\nGets or sets type claim that is used to declare a type for the contents of this JWT Claims Set or \n<code>null</code>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("typ")]

      public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("typ")>

      Public Property Type As String
  overload: Google.Apis.Auth.JsonWebToken.Payload.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: typ
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.JsonWebToken.Payload.AudienceAsList
  commentId: P:Google.Apis.Auth.JsonWebToken.Payload.AudienceAsList
  id: AudienceAsList
  parent: Google.Apis.Auth.JsonWebToken.Payload
  langs:
  - csharp
  - vb
  name: AudienceAsList
  nameWithType: JsonWebToken.Payload.AudienceAsList
  fullName: Google.Apis.Auth.JsonWebToken.Payload.AudienceAsList
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AudienceAsList
    path: Src/Support/GoogleApis.Auth/JsonWebToken.cs
    startLine: 104
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth
  summary: Gets the audience property as a list.
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public IEnumerable<string> AudienceAsList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property AudienceAsList As IEnumerable(Of String)
  overload: Google.Apis.Auth.JsonWebToken.Payload.AudienceAsList*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Google.Apis.Auth
  commentId: N:Google.Apis.Auth
  isExternal: false
  name: Google.Apis.Auth
  nameWithType: Google.Apis.Auth
  fullName: Google.Apis.Auth
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Auth.JsonWebToken.Payload.Issuer*
  commentId: Overload:Google.Apis.Auth.JsonWebToken.Payload.Issuer
  isExternal: false
  name: Issuer
  nameWithType: JsonWebToken.Payload.Issuer
  fullName: Google.Apis.Auth.JsonWebToken.Payload.Issuer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Auth.JsonWebToken.Payload.Subject*
  commentId: Overload:Google.Apis.Auth.JsonWebToken.Payload.Subject
  isExternal: false
  name: Subject
  nameWithType: JsonWebToken.Payload.Subject
  fullName: Google.Apis.Auth.JsonWebToken.Payload.Subject
- uid: Google.Apis.Auth.JsonWebToken.Payload.Audience*
  commentId: Overload:Google.Apis.Auth.JsonWebToken.Payload.Audience
  isExternal: false
  name: Audience
  nameWithType: JsonWebToken.Payload.Audience
  fullName: Google.Apis.Auth.JsonWebToken.Payload.Audience
- uid: Google.Apis.Auth.JsonWebToken.Payload.ExpirationTimeSeconds*
  commentId: Overload:Google.Apis.Auth.JsonWebToken.Payload.ExpirationTimeSeconds
  isExternal: false
  name: ExpirationTimeSeconds
  nameWithType: JsonWebToken.Payload.ExpirationTimeSeconds
  fullName: Google.Apis.Auth.JsonWebToken.Payload.ExpirationTimeSeconds
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.JsonWebToken.Payload.NotBeforeTimeSeconds*
  commentId: Overload:Google.Apis.Auth.JsonWebToken.Payload.NotBeforeTimeSeconds
  isExternal: false
  name: NotBeforeTimeSeconds
  nameWithType: JsonWebToken.Payload.NotBeforeTimeSeconds
  fullName: Google.Apis.Auth.JsonWebToken.Payload.NotBeforeTimeSeconds
- uid: Google.Apis.Auth.JsonWebToken.Payload.IssuedAtTimeSeconds*
  commentId: Overload:Google.Apis.Auth.JsonWebToken.Payload.IssuedAtTimeSeconds
  isExternal: false
  name: IssuedAtTimeSeconds
  nameWithType: JsonWebToken.Payload.IssuedAtTimeSeconds
  fullName: Google.Apis.Auth.JsonWebToken.Payload.IssuedAtTimeSeconds
- uid: Google.Apis.Auth.JsonWebToken.Payload.JwtId*
  commentId: Overload:Google.Apis.Auth.JsonWebToken.Payload.JwtId
  isExternal: false
  name: JwtId
  nameWithType: JsonWebToken.Payload.JwtId
  fullName: Google.Apis.Auth.JsonWebToken.Payload.JwtId
- uid: Google.Apis.Auth.JsonWebToken.Payload.Type*
  commentId: Overload:Google.Apis.Auth.JsonWebToken.Payload.Type
  isExternal: false
  name: Type
  nameWithType: JsonWebToken.Payload.Type
  fullName: Google.Apis.Auth.JsonWebToken.Payload.Type
- uid: Google.Apis.Auth.JsonWebToken.Payload.AudienceAsList*
  commentId: Overload:Google.Apis.Auth.JsonWebToken.Payload.AudienceAsList
  isExternal: false
  name: AudienceAsList
  nameWithType: JsonWebToken.Payload.AudienceAsList
  fullName: Google.Apis.Auth.JsonWebToken.Payload.AudienceAsList
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
