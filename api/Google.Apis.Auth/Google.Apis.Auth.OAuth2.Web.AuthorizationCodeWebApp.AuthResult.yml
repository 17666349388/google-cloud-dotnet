### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult
  commentId: T:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult
  id: AuthorizationCodeWebApp.AuthResult
  parent: Google.Apis.Auth.OAuth2.Web
  children:
  - Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.Credential
  - Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.RedirectUri
  langs:
  - csharp
  - vb
  name: AuthorizationCodeWebApp.AuthResult
  nameWithType: AuthorizationCodeWebApp.AuthResult
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AuthResult
    path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
    startLine: 44
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Web
  summary: "\nAuthResult which contains the user&apos;s credentials if it was loaded successfully from the store. Otherwise\nit contains the redirect URI for the authorization server.\n"
  example: []
  syntax:
    content: public class AuthResult
    content.vb: Public Class AuthResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.Credential
  commentId: P:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.Credential
  id: Credential
  parent: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult
  langs:
  - csharp
  - vb
  name: Credential
  nameWithType: AuthorizationCodeWebApp.AuthResult.Credential
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.Credential
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Credential
    path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
    startLine: 49
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Web
  summary: "\nGets or sets the user&apos;s credentials or <code>null</code> in case the end user needs to authorize.\n"
  example: []
  syntax:
    content: public UserCredential Credential { get; set; }
    parameters: []
    return:
      type: Google.Apis.Auth.OAuth2.UserCredential
    content.vb: Public Property Credential As UserCredential
  overload: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.Credential*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.RedirectUri
  commentId: P:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.RedirectUri
  id: RedirectUri
  parent: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult
  langs:
  - csharp
  - vb
  name: RedirectUri
  nameWithType: AuthorizationCodeWebApp.AuthResult.RedirectUri
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.RedirectUri
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RedirectUri
    path: Src/Support/Google.Apis.Auth/OAuth2/Web/AuthorizationCodeWebApp.cs
    startLine: 56
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Web
  summary: "\nGets or sets the redirect URI to for the user to authorize against the authorization server or \n<code>null</code> in case the <xref href=\"Google.Apis.Auth.OAuth2.UserCredential\" data-throw-if-not-resolved=\"false\"></xref> was loaded from the data \nstore.\n"
  example: []
  syntax:
    content: public string RedirectUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RedirectUri As String
  overload: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.RedirectUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Apis.Auth.OAuth2.Web
  commentId: N:Google.Apis.Auth.OAuth2.Web
  name: Google.Apis.Auth.OAuth2.Web
  nameWithType: Google.Apis.Auth.OAuth2.Web
  fullName: Google.Apis.Auth.OAuth2.Web
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.Credential*
  commentId: Overload:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.Credential
  name: Credential
  nameWithType: AuthorizationCodeWebApp.AuthResult.Credential
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.Credential
- uid: Google.Apis.Auth.OAuth2.UserCredential
  commentId: T:Google.Apis.Auth.OAuth2.UserCredential
  parent: Google.Apis.Auth.OAuth2
  name: UserCredential
  nameWithType: UserCredential
  fullName: Google.Apis.Auth.OAuth2.UserCredential
- uid: Google.Apis.Auth.OAuth2
  commentId: N:Google.Apis.Auth.OAuth2
  name: Google.Apis.Auth.OAuth2
  nameWithType: Google.Apis.Auth.OAuth2
  fullName: Google.Apis.Auth.OAuth2
- uid: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.RedirectUri*
  commentId: Overload:Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.RedirectUri
  name: RedirectUri
  nameWithType: AuthorizationCodeWebApp.AuthResult.RedirectUri
  fullName: Google.Apis.Auth.OAuth2.Web.AuthorizationCodeWebApp.AuthResult.RedirectUri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
