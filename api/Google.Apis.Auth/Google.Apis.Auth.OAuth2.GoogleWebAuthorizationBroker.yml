### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker
  commentId: T:Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker
  id: GoogleWebAuthorizationBroker
  parent: Google.Apis.Auth.OAuth2
  children:
  - Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(Google.Apis.Auth.OAuth2.ClientSecrets,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken,Google.Apis.Util.Store.IDataStore,Google.Apis.Auth.OAuth2.ICodeReceiver)
  - Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(Google.Apis.Auth.OAuth2.Flows.GoogleAuthorizationCodeFlow.Initializer,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken,Google.Apis.Util.Store.IDataStore,Google.Apis.Auth.OAuth2.ICodeReceiver)
  - Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken,Google.Apis.Util.Store.IDataStore,Google.Apis.Auth.OAuth2.ICodeReceiver)
  - Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.Folder
  - Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.ReauthorizeAsync(Google.Apis.Auth.OAuth2.UserCredential,System.Threading.CancellationToken,Google.Apis.Auth.OAuth2.ICodeReceiver)
  langs:
  - csharp
  - vb
  name: GoogleWebAuthorizationBroker
  nameWithType: GoogleWebAuthorizationBroker
  fullName: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/GoogleWebAuthorizationBroker.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GoogleWebAuthorizationBroker
    path: Src/Support/Google.Apis.Auth/OAuth2/GoogleWebAuthorizationBroker.cs
    startLine: 34
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: A helper utility to manage the authorization code flow.
  remarks: "\nThis class is only suitable for client-side use, as it starts a local browser that requires\nuser interaction.\nDo not use this class when executing on a web server, or any cases where the authenticating\nend-user is not able to do directly interact with a launched browser.\n"
  example: []
  syntax:
    content: public class GoogleWebAuthorizationBroker
    content.vb: Public Class GoogleWebAuthorizationBroker
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.Folder
  commentId: F:Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.Folder
  id: Folder
  parent: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker
  langs:
  - csharp
  - vb
  name: Folder
  nameWithType: GoogleWebAuthorizationBroker.Folder
  fullName: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.Folder
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/GoogleWebAuthorizationBroker.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Folder
    path: Src/Support/Google.Apis.Auth/OAuth2/GoogleWebAuthorizationBroker.cs
    startLine: 42
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: The folder which is used by the <xref href="Google.Apis.Util.Store.FileDataStore" data-throw-if-not-resolved="false"></xref>.
  remarks: "\nThe reason that this is not &apos;private const&apos; is that a user can change it and store the credentials in a\ndifferent location.\n"
  example: []
  syntax:
    content: public static string Folder
    return:
      type: System.String
    content.vb: Public Shared Folder As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(Google.Apis.Auth.OAuth2.ClientSecrets,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken,Google.Apis.Util.Store.IDataStore,Google.Apis.Auth.OAuth2.ICodeReceiver)
  commentId: M:Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(Google.Apis.Auth.OAuth2.ClientSecrets,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken,Google.Apis.Util.Store.IDataStore,Google.Apis.Auth.OAuth2.ICodeReceiver)
  id: AuthorizeAsync(Google.Apis.Auth.OAuth2.ClientSecrets,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken,Google.Apis.Util.Store.IDataStore,Google.Apis.Auth.OAuth2.ICodeReceiver)
  parent: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker
  langs:
  - csharp
  - vb
  name: AuthorizeAsync(ClientSecrets, IEnumerable<String>, String, CancellationToken, IDataStore, ICodeReceiver)
  nameWithType: GoogleWebAuthorizationBroker.AuthorizeAsync(ClientSecrets, IEnumerable<String>, String, CancellationToken, IDataStore, ICodeReceiver)
  fullName: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(Google.Apis.Auth.OAuth2.ClientSecrets, System.Collections.Generic.IEnumerable<System.String>, System.String, System.Threading.CancellationToken, Google.Apis.Util.Store.IDataStore, Google.Apis.Auth.OAuth2.ICodeReceiver)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/GoogleWebAuthorizationBroker.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AuthorizeAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/GoogleWebAuthorizationBroker.cs
    startLine: 61
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nAsynchronously authorizes the specified user.\nRequires user interaction; see <xref href=\"Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker\" data-throw-if-not-resolved=\"false\"></xref> remarks for more details.\n"
  remarks: "\nIn case no data store is specified, <xref href=\"Google.Apis.Util.Store.FileDataStore\" data-throw-if-not-resolved=\"false\"></xref> will be used by \ndefault.\n"
  example: []
  syntax:
    content: public static Task<UserCredential> AuthorizeAsync(ClientSecrets clientSecrets, IEnumerable<string> scopes, string user, CancellationToken taskCancellationToken, IDataStore dataStore = null, ICodeReceiver codeReceiver = null)
    parameters:
    - id: clientSecrets
      type: Google.Apis.Auth.OAuth2.ClientSecrets
      description: The client secrets.
    - id: scopes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "\nThe scopes which indicate the Google API access your application is requesting.\n"
    - id: user
      type: System.String
      description: The user to authorize.
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel an operation.
    - id: dataStore
      type: Google.Apis.Util.Store.IDataStore
      description: The data store, if not specified a file data store will be used.
    - id: codeReceiver
      type: Google.Apis.Auth.OAuth2.ICodeReceiver
      description: The code receiver, if not specified a local server code receiver will be used.
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.UserCredential}
      description: User credential.
    content.vb: Public Shared Function AuthorizeAsync(clientSecrets As ClientSecrets, scopes As IEnumerable(Of String), user As String, taskCancellationToken As CancellationToken, dataStore As IDataStore = Nothing, codeReceiver As ICodeReceiver = Nothing) As Task(Of UserCredential)
  overload: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync*
  nameWithType.vb: GoogleWebAuthorizationBroker.AuthorizeAsync(ClientSecrets, IEnumerable(Of String), String, CancellationToken, IDataStore, ICodeReceiver)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(Google.Apis.Auth.OAuth2.ClientSecrets, System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Threading.CancellationToken, Google.Apis.Util.Store.IDataStore, Google.Apis.Auth.OAuth2.ICodeReceiver)
  name.vb: AuthorizeAsync(ClientSecrets, IEnumerable(Of String), String, CancellationToken, IDataStore, ICodeReceiver)
- uid: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken,Google.Apis.Util.Store.IDataStore,Google.Apis.Auth.OAuth2.ICodeReceiver)
  commentId: M:Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken,Google.Apis.Util.Store.IDataStore,Google.Apis.Auth.OAuth2.ICodeReceiver)
  id: AuthorizeAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken,Google.Apis.Util.Store.IDataStore,Google.Apis.Auth.OAuth2.ICodeReceiver)
  parent: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker
  langs:
  - csharp
  - vb
  name: AuthorizeAsync(Stream, IEnumerable<String>, String, CancellationToken, IDataStore, ICodeReceiver)
  nameWithType: GoogleWebAuthorizationBroker.AuthorizeAsync(Stream, IEnumerable<String>, String, CancellationToken, IDataStore, ICodeReceiver)
  fullName: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(System.IO.Stream, System.Collections.Generic.IEnumerable<System.String>, System.String, System.Threading.CancellationToken, Google.Apis.Util.Store.IDataStore, Google.Apis.Auth.OAuth2.ICodeReceiver)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/GoogleWebAuthorizationBroker.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AuthorizeAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/GoogleWebAuthorizationBroker.cs
    startLine: 92
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nAsynchronously authorizes the specified user.\nRequires user interaction; see <xref href=\"Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker\" data-throw-if-not-resolved=\"false\"></xref> remarks for more details.\n"
  remarks: "\nIn case no data store is specified, <xref href=\"Google.Apis.Util.Store.FileDataStore\" data-throw-if-not-resolved=\"false\"></xref> will be used by \ndefault.\n"
  example: []
  syntax:
    content: public static Task<UserCredential> AuthorizeAsync(Stream clientSecretsStream, IEnumerable<string> scopes, string user, CancellationToken taskCancellationToken, IDataStore dataStore = null, ICodeReceiver codeReceiver = null)
    parameters:
    - id: clientSecretsStream
      type: System.IO.Stream
      description: "\nThe client secrets stream. The authorization code flow constructor is responsible for disposing the stream.\n"
    - id: scopes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "\nThe scopes which indicate the Google API access your application is requesting.\n"
    - id: user
      type: System.String
      description: The user to authorize.
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel an operation.
    - id: dataStore
      type: Google.Apis.Util.Store.IDataStore
      description: The data store, if not specified a file data store will be used.
    - id: codeReceiver
      type: Google.Apis.Auth.OAuth2.ICodeReceiver
      description: The code receiver, if not specified a local server code receiver will be used.
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.UserCredential}
      description: User credential.
    content.vb: Public Shared Function AuthorizeAsync(clientSecretsStream As Stream, scopes As IEnumerable(Of String), user As String, taskCancellationToken As CancellationToken, dataStore As IDataStore = Nothing, codeReceiver As ICodeReceiver = Nothing) As Task(Of UserCredential)
  overload: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync*
  nameWithType.vb: GoogleWebAuthorizationBroker.AuthorizeAsync(Stream, IEnumerable(Of String), String, CancellationToken, IDataStore, ICodeReceiver)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(System.IO.Stream, System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Threading.CancellationToken, Google.Apis.Util.Store.IDataStore, Google.Apis.Auth.OAuth2.ICodeReceiver)
  name.vb: AuthorizeAsync(Stream, IEnumerable(Of String), String, CancellationToken, IDataStore, ICodeReceiver)
- uid: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.ReauthorizeAsync(Google.Apis.Auth.OAuth2.UserCredential,System.Threading.CancellationToken,Google.Apis.Auth.OAuth2.ICodeReceiver)
  commentId: M:Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.ReauthorizeAsync(Google.Apis.Auth.OAuth2.UserCredential,System.Threading.CancellationToken,Google.Apis.Auth.OAuth2.ICodeReceiver)
  id: ReauthorizeAsync(Google.Apis.Auth.OAuth2.UserCredential,System.Threading.CancellationToken,Google.Apis.Auth.OAuth2.ICodeReceiver)
  parent: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker
  langs:
  - csharp
  - vb
  name: ReauthorizeAsync(UserCredential, CancellationToken, ICodeReceiver)
  nameWithType: GoogleWebAuthorizationBroker.ReauthorizeAsync(UserCredential, CancellationToken, ICodeReceiver)
  fullName: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.ReauthorizeAsync(Google.Apis.Auth.OAuth2.UserCredential, System.Threading.CancellationToken, Google.Apis.Auth.OAuth2.ICodeReceiver)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/GoogleWebAuthorizationBroker.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ReauthorizeAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/GoogleWebAuthorizationBroker.cs
    startLine: 113
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nAsynchronously reauthorizes the user. This method should be called if the users want to authorize after \nthey revoked the token.\nRequires user interaction; see <xref href=\"Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker\" data-throw-if-not-resolved=\"false\"></xref> remarks for more details.\n"
  example: []
  syntax:
    content: public static Task ReauthorizeAsync(UserCredential userCredential, CancellationToken taskCancellationToken, ICodeReceiver codeReceiver = null)
    parameters:
    - id: userCredential
      type: Google.Apis.Auth.OAuth2.UserCredential
      description: "The current user credential. Its <xref href=\"Google.Apis.Auth.OAuth2.UserCredential.Token\" data-throw-if-not-resolved=\"false\"></xref> will be\nupdated. "
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel an operation.
    - id: codeReceiver
      type: Google.Apis.Auth.OAuth2.ICodeReceiver
      description: The code receiver, if not specified a local server code receiver will be used.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function ReauthorizeAsync(userCredential As UserCredential, taskCancellationToken As CancellationToken, codeReceiver As ICodeReceiver = Nothing) As Task
  overload: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.ReauthorizeAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(Google.Apis.Auth.OAuth2.Flows.GoogleAuthorizationCodeFlow.Initializer,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken,Google.Apis.Util.Store.IDataStore,Google.Apis.Auth.OAuth2.ICodeReceiver)
  commentId: M:Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(Google.Apis.Auth.OAuth2.Flows.GoogleAuthorizationCodeFlow.Initializer,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken,Google.Apis.Util.Store.IDataStore,Google.Apis.Auth.OAuth2.ICodeReceiver)
  id: AuthorizeAsync(Google.Apis.Auth.OAuth2.Flows.GoogleAuthorizationCodeFlow.Initializer,System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken,Google.Apis.Util.Store.IDataStore,Google.Apis.Auth.OAuth2.ICodeReceiver)
  parent: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker
  langs:
  - csharp
  - vb
  name: AuthorizeAsync(GoogleAuthorizationCodeFlow.Initializer, IEnumerable<String>, String, CancellationToken, IDataStore, ICodeReceiver)
  nameWithType: GoogleWebAuthorizationBroker.AuthorizeAsync(GoogleAuthorizationCodeFlow.Initializer, IEnumerable<String>, String, CancellationToken, IDataStore, ICodeReceiver)
  fullName: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(Google.Apis.Auth.OAuth2.Flows.GoogleAuthorizationCodeFlow.Initializer, System.Collections.Generic.IEnumerable<System.String>, System.String, System.Threading.CancellationToken, Google.Apis.Util.Store.IDataStore, Google.Apis.Auth.OAuth2.ICodeReceiver)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/GoogleWebAuthorizationBroker.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AuthorizeAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/GoogleWebAuthorizationBroker.cs
    startLine: 141
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nThe core logic for asynchronously authorizing the specified user.\nRequires user interaction; see <xref href=\"Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker\" data-throw-if-not-resolved=\"false\"></xref> remarks for more details.\n"
  example: []
  syntax:
    content: public static Task<UserCredential> AuthorizeAsync(GoogleAuthorizationCodeFlow.Initializer initializer, IEnumerable<string> scopes, string user, CancellationToken taskCancellationToken, IDataStore dataStore = null, ICodeReceiver codeReceiver = null)
    parameters:
    - id: initializer
      type: Google.Apis.Auth.OAuth2.Flows.GoogleAuthorizationCodeFlow.Initializer
      description: The authorization code initializer.
    - id: scopes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "\nThe scopes which indicate the Google API access your application is requesting.\n"
    - id: user
      type: System.String
      description: The user to authorize.
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel an operation.
    - id: dataStore
      type: Google.Apis.Util.Store.IDataStore
      description: The data store, if not specified a file data store will be used.
    - id: codeReceiver
      type: Google.Apis.Auth.OAuth2.ICodeReceiver
      description: The code receiver, if not specified a local server code receiver will be used.
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.UserCredential}
      description: User credential.
    content.vb: Public Shared Function AuthorizeAsync(initializer As GoogleAuthorizationCodeFlow.Initializer, scopes As IEnumerable(Of String), user As String, taskCancellationToken As CancellationToken, dataStore As IDataStore = Nothing, codeReceiver As ICodeReceiver = Nothing) As Task(Of UserCredential)
  overload: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync*
  nameWithType.vb: GoogleWebAuthorizationBroker.AuthorizeAsync(GoogleAuthorizationCodeFlow.Initializer, IEnumerable(Of String), String, CancellationToken, IDataStore, ICodeReceiver)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync(Google.Apis.Auth.OAuth2.Flows.GoogleAuthorizationCodeFlow.Initializer, System.Collections.Generic.IEnumerable(Of System.String), System.String, System.Threading.CancellationToken, Google.Apis.Util.Store.IDataStore, Google.Apis.Auth.OAuth2.ICodeReceiver)
  name.vb: AuthorizeAsync(GoogleAuthorizationCodeFlow.Initializer, IEnumerable(Of String), String, CancellationToken, IDataStore, ICodeReceiver)
references:
- uid: Google.Apis.Auth.OAuth2
  commentId: N:Google.Apis.Auth.OAuth2
  isExternal: false
  name: Google.Apis.Auth.OAuth2
  nameWithType: Google.Apis.Auth.OAuth2
  fullName: Google.Apis.Auth.OAuth2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Util.Store.FileDataStore
  commentId: T:Google.Apis.Util.Store.FileDataStore
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker
  commentId: T:Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker
  isExternal: false
  name: GoogleWebAuthorizationBroker
  nameWithType: GoogleWebAuthorizationBroker
  fullName: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker
- uid: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync
  isExternal: false
  name: AuthorizeAsync
  nameWithType: GoogleWebAuthorizationBroker.AuthorizeAsync
  fullName: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.AuthorizeAsync
- uid: Google.Apis.Auth.OAuth2.ClientSecrets
  commentId: T:Google.Apis.Auth.OAuth2.ClientSecrets
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ClientSecrets
  nameWithType: ClientSecrets
  fullName: Google.Apis.Auth.OAuth2.ClientSecrets
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Google.Apis.Util.Store.IDataStore
  commentId: T:Google.Apis.Util.Store.IDataStore
  parent: Google.Apis.Util.Store
  isExternal: false
  name: IDataStore
  nameWithType: IDataStore
  fullName: Google.Apis.Util.Store.IDataStore
- uid: Google.Apis.Auth.OAuth2.ICodeReceiver
  commentId: T:Google.Apis.Auth.OAuth2.ICodeReceiver
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ICodeReceiver
  nameWithType: ICodeReceiver
  fullName: Google.Apis.Auth.OAuth2.ICodeReceiver
- uid: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.UserCredential}
  commentId: T:System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.UserCredential}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<UserCredential>
  nameWithType: Task<UserCredential>
  fullName: System.Threading.Tasks.Task<Google.Apis.Auth.OAuth2.UserCredential>
  nameWithType.vb: Task(Of UserCredential)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Apis.Auth.OAuth2.UserCredential)
  name.vb: Task(Of UserCredential)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Auth.OAuth2.UserCredential
    name: UserCredential
    nameWithType: UserCredential
    fullName: Google.Apis.Auth.OAuth2.UserCredential
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Auth.OAuth2.UserCredential
    name: UserCredential
    nameWithType: UserCredential
    fullName: Google.Apis.Auth.OAuth2.UserCredential
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Google.Apis.Util.Store
  commentId: N:Google.Apis.Util.Store
  isExternal: false
  name: Google.Apis.Util.Store
  nameWithType: Google.Apis.Util.Store
  fullName: Google.Apis.Util.Store
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Google.Apis.Auth.OAuth2.UserCredential.Token
  commentId: P:Google.Apis.Auth.OAuth2.UserCredential.Token
- uid: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.ReauthorizeAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.ReauthorizeAsync
  isExternal: false
  name: ReauthorizeAsync
  nameWithType: GoogleWebAuthorizationBroker.ReauthorizeAsync
  fullName: Google.Apis.Auth.OAuth2.GoogleWebAuthorizationBroker.ReauthorizeAsync
- uid: Google.Apis.Auth.OAuth2.UserCredential
  commentId: T:Google.Apis.Auth.OAuth2.UserCredential
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: UserCredential
  nameWithType: UserCredential
  fullName: Google.Apis.Auth.OAuth2.UserCredential
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Google.Apis.Auth.OAuth2.Flows.GoogleAuthorizationCodeFlow.Initializer
  commentId: T:Google.Apis.Auth.OAuth2.Flows.GoogleAuthorizationCodeFlow.Initializer
  parent: Google.Apis.Auth.OAuth2.Flows
  isExternal: false
  name: GoogleAuthorizationCodeFlow.Initializer
  nameWithType: GoogleAuthorizationCodeFlow.Initializer
  fullName: Google.Apis.Auth.OAuth2.Flows.GoogleAuthorizationCodeFlow.Initializer
- uid: Google.Apis.Auth.OAuth2.Flows
  commentId: N:Google.Apis.Auth.OAuth2.Flows
  isExternal: false
  name: Google.Apis.Auth.OAuth2.Flows
  nameWithType: Google.Apis.Auth.OAuth2.Flows
  fullName: Google.Apis.Auth.OAuth2.Flows
