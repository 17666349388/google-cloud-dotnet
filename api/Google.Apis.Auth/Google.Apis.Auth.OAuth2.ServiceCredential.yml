### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.OAuth2.ServiceCredential
  commentId: T:Google.Apis.Auth.OAuth2.ServiceCredential
  id: ServiceCredential
  parent: Google.Apis.Auth.OAuth2
  children:
  - Google.Apis.Auth.OAuth2.ServiceCredential.#ctor(Google.Apis.Auth.OAuth2.ServiceCredential.Initializer)
  - Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod
  - Google.Apis.Auth.OAuth2.ServiceCredential.Clock
  - Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  - Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient
  - Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  - Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.ServiceCredential.Logger
  - Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.ServiceCredential.Token
  - Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl
  langs:
  - csharp
  - vb
  name: ServiceCredential
  nameWithType: ServiceCredential
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ServiceCredential
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
    startLine: 41
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nThis type of Google OAuth 2.0 credential enables access to protected resources using an access token when\ninteracting server to server. For example, a service account credential could be used to access Google Cloud\nStorage from a web application without a user's involvement.\n<p>\n<pre><code>ServiceAccountCredential</code></pre> inherits from this class in order to support Service Account. More\ndetails available at: https://developers.google.com/accounts/docs/OAuth2ServiceAccount.\n<xref href=\"Google.Apis.Auth.OAuth2.ComputeCredential\" data-throw-if-not-resolved=\"false\"></xref> is another example for a class that inherits from this\nclass in order to support Compute credentials. For more information about Compute authentication, see:\nhttps://cloud.google.com/compute/docs/authentication.\n</p>\n"
  example: []
  syntax:
    content: 'public abstract class ServiceCredential : ICredential, IConfigurableHttpClientInitializer, ITokenAccess, IHttpExecuteInterceptor, IHttpUnsuccessfulResponseHandler'
    content.vb: >-
      Public MustInherit Class ServiceCredential
          Implements ICredential, IConfigurableHttpClientInitializer, ITokenAccess, IHttpExecuteInterceptor, IHttpUnsuccessfulResponseHandler
  inheritance:
  - System.Object
  derivedClasses:
  - Google.Apis.Auth.OAuth2.ComputeCredential
  - Google.Apis.Auth.OAuth2.ServiceAccountCredential
  implements:
  - Google.Apis.Auth.OAuth2.ICredential
  - Google.Apis.Http.IConfigurableHttpClientInitializer
  - Google.Apis.Auth.OAuth2.ITokenAccess
  - Google.Apis.Http.IHttpExecuteInterceptor
  - Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Logger
  commentId: F:Google.Apis.Auth.OAuth2.ServiceCredential.Logger
  id: Logger
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: ServiceCredential.Logger
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Logger
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Logger
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
    startLine: 44
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Logger for this class
  example: []
  syntax:
    content: protected static readonly ILogger Logger
    return:
      type: Google.Apis.Logging.ILogger
    content.vb: Protected Shared ReadOnly Logger As ILogger
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl
  id: TokenServerUrl
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  langs:
  - csharp
  - vb
  name: TokenServerUrl
  nameWithType: ServiceCredential.TokenServerUrl
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TokenServerUrl
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
    startLine: 100
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Gets the token server URL.
  example: []
  syntax:
    content: public string TokenServerUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TokenServerUrl As String
  overload: Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Clock
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.Clock
  id: Clock
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  langs:
  - csharp
  - vb
  name: Clock
  nameWithType: ServiceCredential.Clock
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Clock
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Clock
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
    startLine: 103
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Gets the clock used to refresh the token if it expires.
  example: []
  syntax:
    content: public IClock Clock { get; }
    parameters: []
    return:
      type: Google.Apis.Util.IClock
    content.vb: Public ReadOnly Property Clock As IClock
  overload: Google.Apis.Auth.OAuth2.ServiceCredential.Clock*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod
  id: AccessMethod
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  langs:
  - csharp
  - vb
  name: AccessMethod
  nameWithType: ServiceCredential.AccessMethod
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AccessMethod
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
    startLine: 106
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Gets the method for presenting the access token to the resource server.
  example: []
  syntax:
    content: public IAccessMethod AccessMethod { get; }
    parameters: []
    return:
      type: Google.Apis.Auth.OAuth2.IAccessMethod
    content.vb: Public ReadOnly Property AccessMethod As IAccessMethod
  overload: Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient
  id: HttpClient
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  langs:
  - csharp
  - vb
  name: HttpClient
  nameWithType: ServiceCredential.HttpClient
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: HttpClient
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
    startLine: 109
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Gets the HTTP client used to make authentication requests to the server.
  example: []
  syntax:
    content: public ConfigurableHttpClient HttpClient { get; }
    parameters: []
    return:
      type: Google.Apis.Http.ConfigurableHttpClient
    content.vb: Public ReadOnly Property HttpClient As ConfigurableHttpClient
  overload: Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Token
  commentId: P:Google.Apis.Auth.OAuth2.ServiceCredential.Token
  id: Token
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: ServiceCredential.Token
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Token
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Token
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
    startLine: 115
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Gets the token response which contains the access token.
  example: []
  syntax:
    content: public TokenResponse Token { get; protected set; }
    parameters: []
    return:
      type: Google.Apis.Auth.OAuth2.Responses.TokenResponse
    content.vb: Public Property Token As TokenResponse
  overload: Google.Apis.Auth.OAuth2.ServiceCredential.Token*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.#ctor(Google.Apis.Auth.OAuth2.ServiceCredential.Initializer)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.#ctor(Google.Apis.Auth.OAuth2.ServiceCredential.Initializer)
  id: '#ctor(Google.Apis.Auth.OAuth2.ServiceCredential.Initializer)'
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  langs:
  - csharp
  - vb
  name: ServiceCredential(ServiceCredential.Initializer)
  nameWithType: ServiceCredential.ServiceCredential(ServiceCredential.Initializer)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.ServiceCredential(Google.Apis.Auth.OAuth2.ServiceCredential.Initializer)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
    startLine: 134
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Constructs a new service account credential using the given initializer.
  example: []
  syntax:
    content: public ServiceCredential(ServiceCredential.Initializer initializer)
    parameters:
    - id: initializer
      type: Google.Apis.Auth.OAuth2.ServiceCredential.Initializer
    content.vb: Public Sub New(initializer As ServiceCredential.Initializer)
  overload: Google.Apis.Auth.OAuth2.ServiceCredential.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  id: Initialize(Google.Apis.Http.ConfigurableHttpClient)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  langs:
  - csharp
  - vb
  name: Initialize(ConfigurableHttpClient)
  nameWithType: ServiceCredential.Initialize(ConfigurableHttpClient)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Initialize
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
    startLine: 156
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  example: []
  syntax:
    content: public void Initialize(ConfigurableHttpClient httpClient)
    parameters:
    - id: httpClient
      type: Google.Apis.Http.ConfigurableHttpClient
    content.vb: Public Sub Initialize(httpClient As ConfigurableHttpClient)
  overload: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize*
  implements:
  - Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  langs:
  - csharp
  - vb
  name: InterceptAsync(HttpRequestMessage, CancellationToken)
  nameWithType: ServiceCredential.InterceptAsync(HttpRequestMessage, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: InterceptAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
    startLine: 167
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  example: []
  syntax:
    content: public Task InterceptAsync(HttpRequestMessage request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function InterceptAsync(request As HttpRequestMessage, cancellationToken As CancellationToken) As Task
  overload: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync*
  implements:
  - Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  id: HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  langs:
  - csharp
  - vb
  name: HandleResponseAsync(HandleUnsuccessfulResponseArgs)
  nameWithType: ServiceCredential.HandleResponseAsync(HandleUnsuccessfulResponseArgs)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: HandleResponseAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
    startLine: 182
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nDecorates unsuccessful responses, returns true if the response gets modified.\nSee IHttpUnsuccessfulResponseHandler for more information. \n"
  example: []
  syntax:
    content: public Task<bool> HandleResponseAsync(HandleUnsuccessfulResponseArgs args)
    parameters:
    - id: args
      type: Google.Apis.Http.HandleUnsuccessfulResponseArgs
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function HandleResponseAsync(args As HandleUnsuccessfulResponseArgs) As Task(Of Boolean)
  overload: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync*
  implements:
  - Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  id: GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  langs:
  - csharp
  - vb
  name: GetAccessTokenForRequestAsync(String, CancellationToken)
  nameWithType: ServiceCredential.GetAccessTokenForRequestAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GetAccessTokenForRequestAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
    startLine: 211
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nGets an access token to authorize a request. If the existing token has expired, try to refresh it first.\n<xref href=\"Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync(System.String%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public virtual Task<string> GetAccessTokenForRequestAsync(string authUri = null, CancellationToken cancellationToken = null)
    parameters:
    - id: authUri
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Overridable Function GetAccessTokenForRequestAsync(authUri As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync*
  implements:
  - Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  id: RequestAccessTokenAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.ServiceCredential
  langs:
  - csharp
  - vb
  name: RequestAccessTokenAsync(CancellationToken)
  nameWithType: ServiceCredential.RequestAccessTokenAsync(CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RequestAccessTokenAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/ServiceCredential.cs
    startLine: 231
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Requests a new token.
  example: []
  syntax:
    content: public abstract Task<bool> RequestAccessTokenAsync(CancellationToken taskCancellationToken)
    parameters:
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if a new token was received successfully.
    content.vb: Public MustOverride Function RequestAccessTokenAsync(taskCancellationToken As CancellationToken) As Task(Of Boolean)
  overload: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Google.Apis.Auth.OAuth2.ComputeCredential
  commentId: T:Google.Apis.Auth.OAuth2.ComputeCredential
  isExternal: false
  name: ComputeCredential
  nameWithType: ComputeCredential
  fullName: Google.Apis.Auth.OAuth2.ComputeCredential
- uid: Google.Apis.Auth.OAuth2
  commentId: N:Google.Apis.Auth.OAuth2
  isExternal: false
  name: Google.Apis.Auth.OAuth2
  nameWithType: Google.Apis.Auth.OAuth2
  fullName: Google.Apis.Auth.OAuth2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Auth.OAuth2.ICredential
  commentId: T:Google.Apis.Auth.OAuth2.ICredential
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ICredential
  nameWithType: ICredential
  fullName: Google.Apis.Auth.OAuth2.ICredential
- uid: Google.Apis.Http.IConfigurableHttpClientInitializer
  commentId: T:Google.Apis.Http.IConfigurableHttpClientInitializer
  parent: Google.Apis.Http
  isExternal: false
  name: IConfigurableHttpClientInitializer
  nameWithType: IConfigurableHttpClientInitializer
  fullName: Google.Apis.Http.IConfigurableHttpClientInitializer
- uid: Google.Apis.Auth.OAuth2.ITokenAccess
  commentId: T:Google.Apis.Auth.OAuth2.ITokenAccess
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ITokenAccess
  nameWithType: ITokenAccess
  fullName: Google.Apis.Auth.OAuth2.ITokenAccess
- uid: Google.Apis.Http.IHttpExecuteInterceptor
  commentId: T:Google.Apis.Http.IHttpExecuteInterceptor
  parent: Google.Apis.Http
  isExternal: false
  name: IHttpExecuteInterceptor
  nameWithType: IHttpExecuteInterceptor
  fullName: Google.Apis.Http.IHttpExecuteInterceptor
- uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  commentId: T:Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  parent: Google.Apis.Http
  isExternal: false
  name: IHttpUnsuccessfulResponseHandler
  nameWithType: IHttpUnsuccessfulResponseHandler
  fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Http
  commentId: N:Google.Apis.Http
  isExternal: false
  name: Google.Apis.Http
  nameWithType: Google.Apis.Http
  fullName: Google.Apis.Http
- uid: Google.Apis.Logging.ILogger
  commentId: T:Google.Apis.Logging.ILogger
  parent: Google.Apis.Logging
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Google.Apis.Logging.ILogger
- uid: Google.Apis.Logging
  commentId: N:Google.Apis.Logging
  isExternal: false
  name: Google.Apis.Logging
  nameWithType: Google.Apis.Logging
  fullName: Google.Apis.Logging
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl
  isExternal: false
  name: TokenServerUrl
  nameWithType: ServiceCredential.TokenServerUrl
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.TokenServerUrl
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Clock*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceCredential.Clock
  isExternal: false
  name: Clock
  nameWithType: ServiceCredential.Clock
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Clock
- uid: Google.Apis.Util.IClock
  commentId: T:Google.Apis.Util.IClock
  parent: Google.Apis.Util
  isExternal: false
  name: IClock
  nameWithType: IClock
  fullName: Google.Apis.Util.IClock
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod
  isExternal: false
  name: AccessMethod
  nameWithType: ServiceCredential.AccessMethod
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.AccessMethod
- uid: Google.Apis.Auth.OAuth2.IAccessMethod
  commentId: T:Google.Apis.Auth.OAuth2.IAccessMethod
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: IAccessMethod
  nameWithType: IAccessMethod
  fullName: Google.Apis.Auth.OAuth2.IAccessMethod
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient
  isExternal: false
  name: HttpClient
  nameWithType: ServiceCredential.HttpClient
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.HttpClient
- uid: Google.Apis.Http.ConfigurableHttpClient
  commentId: T:Google.Apis.Http.ConfigurableHttpClient
  parent: Google.Apis.Http
  isExternal: false
  name: ConfigurableHttpClient
  nameWithType: ConfigurableHttpClient
  fullName: Google.Apis.Http.ConfigurableHttpClient
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Token*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceCredential.Token
  isExternal: false
  name: Token
  nameWithType: ServiceCredential.Token
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Token
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  commentId: T:Google.Apis.Auth.OAuth2.Responses.TokenResponse
  parent: Google.Apis.Auth.OAuth2.Responses
  isExternal: false
  name: TokenResponse
  nameWithType: TokenResponse
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse
- uid: Google.Apis.Auth.OAuth2.Responses
  commentId: N:Google.Apis.Auth.OAuth2.Responses
  isExternal: false
  name: Google.Apis.Auth.OAuth2.Responses
  nameWithType: Google.Apis.Auth.OAuth2.Responses
  fullName: Google.Apis.Auth.OAuth2.Responses
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.#ctor*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceCredential.#ctor
  isExternal: false
  name: ServiceCredential
  nameWithType: ServiceCredential.ServiceCredential
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.ServiceCredential
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Initializer
  commentId: T:Google.Apis.Auth.OAuth2.ServiceCredential.Initializer
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: ServiceCredential.Initializer
  nameWithType: ServiceCredential.Initializer
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Initializer
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceCredential.Initialize
  isExternal: false
  name: Initialize
  nameWithType: ServiceCredential.Initialize
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.Initialize
- uid: Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  commentId: M:Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  parent: Google.Apis.Http.IConfigurableHttpClientInitializer
  isExternal: false
  name: Initialize(ConfigurableHttpClient)
  nameWithType: IConfigurableHttpClientInitializer.Initialize(ConfigurableHttpClient)
  fullName: Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  spec.csharp:
  - uid: Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize(Google.Apis.Http.ConfigurableHttpClient)
    name: Initialize
    nameWithType: IConfigurableHttpClientInitializer.Initialize
    fullName: Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.ConfigurableHttpClient
    name: ConfigurableHttpClient
    nameWithType: ConfigurableHttpClient
    fullName: Google.Apis.Http.ConfigurableHttpClient
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize(Google.Apis.Http.ConfigurableHttpClient)
    name: Initialize
    nameWithType: IConfigurableHttpClientInitializer.Initialize
    fullName: Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.ConfigurableHttpClient
    name: ConfigurableHttpClient
    nameWithType: ConfigurableHttpClient
    fullName: Google.Apis.Http.ConfigurableHttpClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync
  isExternal: false
  name: InterceptAsync
  nameWithType: ServiceCredential.InterceptAsync
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.InterceptAsync
- uid: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: Google.Apis.Http.IHttpExecuteInterceptor
  isExternal: true
  name: InterceptAsync(HttpRequestMessage, CancellationToken)
  nameWithType: IHttpExecuteInterceptor.InterceptAsync(HttpRequestMessage, CancellationToken)
  fullName: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: InterceptAsync
    nameWithType: IHttpExecuteInterceptor.InterceptAsync
    fullName: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: InterceptAsync
    nameWithType: IHttpExecuteInterceptor.InterceptAsync
    fullName: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync
  isExternal: false
  name: HandleResponseAsync
  nameWithType: ServiceCredential.HandleResponseAsync
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.HandleResponseAsync
- uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  commentId: M:Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  parent: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  isExternal: false
  name: HandleResponseAsync(HandleUnsuccessfulResponseArgs)
  nameWithType: IHttpUnsuccessfulResponseHandler.HandleResponseAsync(HandleUnsuccessfulResponseArgs)
  fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  spec.csharp:
  - uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
    name: HandleResponseAsync
    nameWithType: IHttpUnsuccessfulResponseHandler.HandleResponseAsync
    fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.HandleUnsuccessfulResponseArgs
    name: HandleUnsuccessfulResponseArgs
    nameWithType: HandleUnsuccessfulResponseArgs
    fullName: Google.Apis.Http.HandleUnsuccessfulResponseArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
    name: HandleResponseAsync
    nameWithType: IHttpUnsuccessfulResponseHandler.HandleResponseAsync
    fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.HandleUnsuccessfulResponseArgs
    name: HandleUnsuccessfulResponseArgs
    nameWithType: HandleUnsuccessfulResponseArgs
    fullName: Google.Apis.Http.HandleUnsuccessfulResponseArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Http.HandleUnsuccessfulResponseArgs
  commentId: T:Google.Apis.Http.HandleUnsuccessfulResponseArgs
  parent: Google.Apis.Http
  isExternal: false
  name: HandleUnsuccessfulResponseArgs
  nameWithType: HandleUnsuccessfulResponseArgs
  fullName: Google.Apis.Http.HandleUnsuccessfulResponseArgs
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.ITokenAccess
  isExternal: true
  name: GetAccessTokenForRequestAsync(String, CancellationToken)
  nameWithType: ITokenAccess.GetAccessTokenForRequestAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
    name: GetAccessTokenForRequestAsync
    nameWithType: ITokenAccess.GetAccessTokenForRequestAsync
    fullName: Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
    name: GetAccessTokenForRequestAsync
    nameWithType: ITokenAccess.GetAccessTokenForRequestAsync
    fullName: Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync
  isExternal: false
  name: GetAccessTokenForRequestAsync
  nameWithType: ServiceCredential.GetAccessTokenForRequestAsync
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.GetAccessTokenForRequestAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync
  isExternal: false
  name: RequestAccessTokenAsync
  nameWithType: ServiceCredential.RequestAccessTokenAsync
  fullName: Google.Apis.Auth.OAuth2.ServiceCredential.RequestAccessTokenAsync
