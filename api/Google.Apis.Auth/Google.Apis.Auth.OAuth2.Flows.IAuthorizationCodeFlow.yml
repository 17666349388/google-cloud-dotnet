### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  commentId: T:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  id: IAuthorizationCodeFlow
  parent: Google.Apis.Auth.OAuth2.Flows
  children:
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.AccessMethod
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.Clock
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest(System.String)
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DataStore
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync(System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync(System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval
  langs:
  - csharp
  - vb
  name: IAuthorizationCodeFlow
  nameWithType: IAuthorizationCodeFlow
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  type: Interface
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IAuthorizationCodeFlow
    path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
    startLine: 28
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: OAuth 2.0 authorization code flow that manages and persists end-user credentials.
  example: []
  syntax:
    content: 'public interface IAuthorizationCodeFlow : IDisposable'
    content.vb: >-
      Public Interface IAuthorizationCodeFlow
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.AccessMethod
  commentId: P:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.AccessMethod
  id: AccessMethod
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: AccessMethod
  nameWithType: IAuthorizationCodeFlow.AccessMethod
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.AccessMethod
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AccessMethod
    path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
    startLine: 31
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Gets the method for presenting the access token to the resource server.
  example: []
  syntax:
    content: IAccessMethod AccessMethod { get; }
    parameters: []
    return:
      type: Google.Apis.Auth.OAuth2.IAccessMethod
    content.vb: ReadOnly Property AccessMethod As IAccessMethod
  overload: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.AccessMethod*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.Clock
  commentId: P:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.Clock
  id: Clock
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: Clock
  nameWithType: IAuthorizationCodeFlow.Clock
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.Clock
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Clock
    path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
    startLine: 34
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Gets the clock.
  example: []
  syntax:
    content: IClock Clock { get; }
    parameters: []
    return:
      type: Google.Apis.Util.IClock
    content.vb: ReadOnly Property Clock As IClock
  overload: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.Clock*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DataStore
  commentId: P:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DataStore
  id: DataStore
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: DataStore
  nameWithType: IAuthorizationCodeFlow.DataStore
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DataStore
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DataStore
    path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
    startLine: 37
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Gets the data store used to store the credentials.
  example: []
  syntax:
    content: IDataStore DataStore { get; }
    parameters: []
    return:
      type: Google.Apis.Util.Store.IDataStore
    content.vb: ReadOnly Property DataStore As IDataStore
  overload: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DataStore*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync(System.String,System.Threading.CancellationToken)
  id: LoadTokenAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: LoadTokenAsync(String, CancellationToken)
  nameWithType: IAuthorizationCodeFlow.LoadTokenAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LoadTokenAsync
    path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
    startLine: 46
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: "\nAsynchronously loads the user's token using the flow's\n<xref href=\"Google.Apis.Util.Store.IDataStore\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: Task<TokenResponse> LoadTokenAsync(string userId, CancellationToken taskCancellationToken)
    parameters:
    - id: userId
      type: System.String
      description: User identifier
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
      description: Token response
    content.vb: Function LoadTokenAsync(userId As String, taskCancellationToken As CancellationToken) As Task(Of TokenResponse)
  overload: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync*
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync(System.String,System.Threading.CancellationToken)
  id: DeleteTokenAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: DeleteTokenAsync(String, CancellationToken)
  nameWithType: IAuthorizationCodeFlow.DeleteTokenAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DeleteTokenAsync
    path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
    startLine: 54
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: "\nAsynchronously deletes the user's token using the flow's\n<xref href=\"Google.Apis.Util.Store.IDataStore\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: Task DeleteTokenAsync(string userId, CancellationToken taskCancellationToken)
    parameters:
    - id: userId
      type: System.String
      description: User identifier.
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteTokenAsync(userId As String, taskCancellationToken As CancellationToken) As Task
  overload: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync*
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest(System.String)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest(System.String)
  id: CreateAuthorizationCodeRequest(System.String)
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: CreateAuthorizationCodeRequest(String)
  nameWithType: IAuthorizationCodeFlow.CreateAuthorizationCodeRequest(String)
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest(System.String)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CreateAuthorizationCodeRequest
    path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
    startLine: 57
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Creates an authorization code request with the specified redirect URI.
  example: []
  syntax:
    content: AuthorizationCodeRequestUrl CreateAuthorizationCodeRequest(string redirectUri)
    parameters:
    - id: redirectUri
      type: System.String
    return:
      type: Google.Apis.Auth.OAuth2.Requests.AuthorizationCodeRequestUrl
    content.vb: Function CreateAuthorizationCodeRequest(redirectUri As String) As AuthorizationCodeRequestUrl
  overload: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest*
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: ExchangeCodeForTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: ExchangeCodeForTokenAsync(String, String, String, CancellationToken)
  nameWithType: IAuthorizationCodeFlow.ExchangeCodeForTokenAsync(String, String, String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExchangeCodeForTokenAsync
    path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
    startLine: 65
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Asynchronously exchanges code with a token.
  example: []
  syntax:
    content: Task<TokenResponse> ExchangeCodeForTokenAsync(string userId, string code, string redirectUri, CancellationToken taskCancellationToken)
    parameters:
    - id: userId
      type: System.String
      description: User identifier.
    - id: code
      type: System.String
      description: Authorization code received from the authorization server.
    - id: redirectUri
      type: System.String
      description: Redirect URI which is used in the token request.
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
      description: Token response which contains the access token.
    content.vb: Function ExchangeCodeForTokenAsync(userId As String, code As String, redirectUri As String, taskCancellationToken As CancellationToken) As Task(Of TokenResponse)
  overload: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync*
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: RefreshTokenAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationCodeFlow.RefreshTokenAsync(String, String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RefreshTokenAsync
    path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
    startLine: 73
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Asynchronously refreshes an access token using a refresh token.
  example: []
  syntax:
    content: Task<TokenResponse> RefreshTokenAsync(string userId, string refreshToken, CancellationToken taskCancellationToken)
    parameters:
    - id: userId
      type: System.String
      description: User identifier.
    - id: refreshToken
      type: System.String
      description: Refresh token which is used to get a new access token.
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
      description: Token response which contains the access token and the input refresh token.
    content.vb: Function RefreshTokenAsync(userId As String, refreshToken As String, taskCancellationToken As CancellationToken) As Task(Of TokenResponse)
  overload: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync*
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: RevokeTokenAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationCodeFlow.RevokeTokenAsync(String, String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RevokeTokenAsync
    path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
    startLine: 87
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: "\nAsynchronously revokes the specified token. This method disconnects the user's account from the OAuth 2.0\napplication. It should be called upon removing the user account from the site."
  remarks: "\nIf revoking the token succeeds, the user's credential is removed from the data store and the user MUST\nauthorize the application again before the application can access the user's private resources.\n"
  example: []
  syntax:
    content: Task RevokeTokenAsync(string userId, string token, CancellationToken taskCancellationToken)
    parameters:
    - id: userId
      type: System.String
      description: User identifier.
    - id: token
      type: System.String
      description: Access token to be revoked.
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task
      description: <code>true</code> if the token was revoked successfully.
    content.vb: Function RevokeTokenAsync(userId As String, token As String, taskCancellationToken As CancellationToken) As Task
  overload: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync*
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval
  id: ShouldForceTokenRetrieval
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: ShouldForceTokenRetrieval()
  nameWithType: IAuthorizationCodeFlow.ShouldForceTokenRetrieval()
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval()
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ShouldForceTokenRetrieval
    path: Src/Support/GoogleApis.Auth/OAuth2/Flows/IAuthorizationCodeFlow.cs
    startLine: 92
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: "\nIndicates if a new token needs to be retrieved and stored regardless of normal circumstances.\n"
  example: []
  syntax:
    content: bool ShouldForceTokenRetrieval()
    return:
      type: System.Boolean
    content.vb: Function ShouldForceTokenRetrieval As Boolean
  overload: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval*
references:
- uid: Google.Apis.Auth.OAuth2.Flows
  commentId: N:Google.Apis.Auth.OAuth2.Flows
  isExternal: false
  name: Google.Apis.Auth.OAuth2.Flows
  nameWithType: Google.Apis.Auth.OAuth2.Flows
  fullName: Google.Apis.Auth.OAuth2.Flows
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.AccessMethod*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.AccessMethod
  isExternal: false
  name: AccessMethod
  nameWithType: IAuthorizationCodeFlow.AccessMethod
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.AccessMethod
- uid: Google.Apis.Auth.OAuth2.IAccessMethod
  commentId: T:Google.Apis.Auth.OAuth2.IAccessMethod
  parent: Google.Apis.Auth.OAuth2
  isExternal: false
  name: IAccessMethod
  nameWithType: IAccessMethod
  fullName: Google.Apis.Auth.OAuth2.IAccessMethod
- uid: Google.Apis.Auth.OAuth2
  commentId: N:Google.Apis.Auth.OAuth2
  isExternal: false
  name: Google.Apis.Auth.OAuth2
  nameWithType: Google.Apis.Auth.OAuth2
  fullName: Google.Apis.Auth.OAuth2
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.Clock*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.Clock
  isExternal: false
  name: Clock
  nameWithType: IAuthorizationCodeFlow.Clock
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.Clock
- uid: Google.Apis.Util.IClock
  commentId: T:Google.Apis.Util.IClock
  parent: Google.Apis.Util
  isExternal: false
  name: IClock
  nameWithType: IClock
  fullName: Google.Apis.Util.IClock
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DataStore*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DataStore
  isExternal: false
  name: DataStore
  nameWithType: IAuthorizationCodeFlow.DataStore
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DataStore
- uid: Google.Apis.Util.Store.IDataStore
  commentId: T:Google.Apis.Util.Store.IDataStore
  parent: Google.Apis.Util.Store
  isExternal: false
  name: IDataStore
  nameWithType: IDataStore
  fullName: Google.Apis.Util.Store.IDataStore
- uid: Google.Apis.Util.Store
  commentId: N:Google.Apis.Util.Store
  isExternal: false
  name: Google.Apis.Util.Store
  nameWithType: Google.Apis.Util.Store
  fullName: Google.Apis.Util.Store
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync
  isExternal: false
  name: LoadTokenAsync
  nameWithType: IAuthorizationCodeFlow.LoadTokenAsync
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
  commentId: T:System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TokenResponse>
  nameWithType: Task<TokenResponse>
  fullName: System.Threading.Tasks.Task<Google.Apis.Auth.OAuth2.Responses.TokenResponse>
  nameWithType.vb: Task(Of TokenResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Apis.Auth.OAuth2.Responses.TokenResponse)
  name.vb: Task(Of TokenResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync
  isExternal: false
  name: DeleteTokenAsync
  nameWithType: IAuthorizationCodeFlow.DeleteTokenAsync
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest
  isExternal: false
  name: CreateAuthorizationCodeRequest
  nameWithType: IAuthorizationCodeFlow.CreateAuthorizationCodeRequest
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationCodeRequestUrl
  commentId: T:Google.Apis.Auth.OAuth2.Requests.AuthorizationCodeRequestUrl
  parent: Google.Apis.Auth.OAuth2.Requests
  isExternal: false
  name: AuthorizationCodeRequestUrl
  nameWithType: AuthorizationCodeRequestUrl
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationCodeRequestUrl
- uid: Google.Apis.Auth.OAuth2.Requests
  commentId: N:Google.Apis.Auth.OAuth2.Requests
  isExternal: false
  name: Google.Apis.Auth.OAuth2.Requests
  nameWithType: Google.Apis.Auth.OAuth2.Requests
  fullName: Google.Apis.Auth.OAuth2.Requests
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync
  isExternal: false
  name: ExchangeCodeForTokenAsync
  nameWithType: IAuthorizationCodeFlow.ExchangeCodeForTokenAsync
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync
  isExternal: false
  name: RefreshTokenAsync
  nameWithType: IAuthorizationCodeFlow.RefreshTokenAsync
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync
  isExternal: false
  name: RevokeTokenAsync
  nameWithType: IAuthorizationCodeFlow.RevokeTokenAsync
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval
  isExternal: false
  name: ShouldForceTokenRetrieval
  nameWithType: IAuthorizationCodeFlow.ShouldForceTokenRetrieval
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
