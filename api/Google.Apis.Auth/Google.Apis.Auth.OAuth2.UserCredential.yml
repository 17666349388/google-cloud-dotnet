### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.OAuth2.UserCredential
  commentId: T:Google.Apis.Auth.OAuth2.UserCredential
  id: UserCredential
  parent: Google.Apis.Auth.OAuth2
  children:
  - Google.Apis.Auth.OAuth2.UserCredential.#ctor(Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow,System.String,Google.Apis.Auth.OAuth2.Responses.TokenResponse)
  - Google.Apis.Auth.OAuth2.UserCredential.Flow
  - Google.Apis.Auth.OAuth2.UserCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.UserCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  - Google.Apis.Auth.OAuth2.UserCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  - Google.Apis.Auth.OAuth2.UserCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.UserCredential.Logger
  - Google.Apis.Auth.OAuth2.UserCredential.RefreshTokenAsync(System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.UserCredential.RevokeTokenAsync(System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.UserCredential.Token
  - Google.Apis.Auth.OAuth2.UserCredential.UserId
  langs:
  - csharp
  - vb
  name: UserCredential
  nameWithType: UserCredential
  fullName: Google.Apis.Auth.OAuth2.UserCredential
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UserCredential
    path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
    startLine: 33
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nOAuth 2.0 credential for accessing protected resources using an access token, as well as optionally refreshing \nthe access token when it expires using a refresh token.\n"
  example: []
  syntax:
    content: 'public class UserCredential : ICredential, IConfigurableHttpClientInitializer, ITokenAccess, IHttpExecuteInterceptor, IHttpUnsuccessfulResponseHandler'
    content.vb: >-
      Public Class UserCredential
          Implements ICredential, IConfigurableHttpClientInitializer, ITokenAccess, IHttpExecuteInterceptor, IHttpUnsuccessfulResponseHandler
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Auth.OAuth2.ICredential
  - Google.Apis.Http.IConfigurableHttpClientInitializer
  - Google.Apis.Auth.OAuth2.ITokenAccess
  - Google.Apis.Http.IHttpExecuteInterceptor
  - Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Auth.OAuth2.UserCredential.Logger
  commentId: F:Google.Apis.Auth.OAuth2.UserCredential.Logger
  id: Logger
  parent: Google.Apis.Auth.OAuth2.UserCredential
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: UserCredential.Logger
  fullName: Google.Apis.Auth.OAuth2.UserCredential.Logger
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Logger
    path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
    startLine: 36
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Logger for this class.
  example: []
  syntax:
    content: protected static readonly ILogger Logger
    return:
      type: Google.Apis.Logging.ILogger
    content.vb: Protected Shared ReadOnly Logger As ILogger
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.UserCredential.Token
  commentId: P:Google.Apis.Auth.OAuth2.UserCredential.Token
  id: Token
  parent: Google.Apis.Auth.OAuth2.UserCredential
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: UserCredential.Token
  fullName: Google.Apis.Auth.OAuth2.UserCredential.Token
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Token
    path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
    startLine: 39
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Gets or sets the token response which contains the access token.
  example: []
  syntax:
    content: public TokenResponse Token { get; set; }
    parameters: []
    return:
      type: Google.Apis.Auth.OAuth2.Responses.TokenResponse
    content.vb: Public Property Token As TokenResponse
  overload: Google.Apis.Auth.OAuth2.UserCredential.Token*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.UserCredential.Flow
  commentId: P:Google.Apis.Auth.OAuth2.UserCredential.Flow
  id: Flow
  parent: Google.Apis.Auth.OAuth2.UserCredential
  langs:
  - csharp
  - vb
  name: Flow
  nameWithType: UserCredential.Flow
  fullName: Google.Apis.Auth.OAuth2.UserCredential.Flow
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Flow
    path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
    startLine: 46
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Gets the authorization code flow.
  example: []
  syntax:
    content: public IAuthorizationCodeFlow Flow { get; }
    parameters: []
    return:
      type: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
    content.vb: Public ReadOnly Property Flow As IAuthorizationCodeFlow
  overload: Google.Apis.Auth.OAuth2.UserCredential.Flow*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.UserCredential.UserId
  commentId: P:Google.Apis.Auth.OAuth2.UserCredential.UserId
  id: UserId
  parent: Google.Apis.Auth.OAuth2.UserCredential
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: UserCredential.UserId
  fullName: Google.Apis.Auth.OAuth2.UserCredential.UserId
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UserId
    path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
    startLine: 49
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Gets the user identity.
  example: []
  syntax:
    content: public string UserId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property UserId As String
  overload: Google.Apis.Auth.OAuth2.UserCredential.UserId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.UserCredential.#ctor(Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow,System.String,Google.Apis.Auth.OAuth2.Responses.TokenResponse)
  commentId: M:Google.Apis.Auth.OAuth2.UserCredential.#ctor(Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow,System.String,Google.Apis.Auth.OAuth2.Responses.TokenResponse)
  id: '#ctor(Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow,System.String,Google.Apis.Auth.OAuth2.Responses.TokenResponse)'
  parent: Google.Apis.Auth.OAuth2.UserCredential
  langs:
  - csharp
  - vb
  name: UserCredential(IAuthorizationCodeFlow, String, TokenResponse)
  nameWithType: UserCredential.UserCredential(IAuthorizationCodeFlow, String, TokenResponse)
  fullName: Google.Apis.Auth.OAuth2.UserCredential.UserCredential(Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow, System.String, Google.Apis.Auth.OAuth2.Responses.TokenResponse)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
    startLine: 57
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: Constructs a new credential instance.
  example: []
  syntax:
    content: public UserCredential(IAuthorizationCodeFlow flow, string userId, TokenResponse token)
    parameters:
    - id: flow
      type: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
      description: Authorization code flow.
    - id: userId
      type: System.String
      description: User identifier.
    - id: token
      type: Google.Apis.Auth.OAuth2.Responses.TokenResponse
      description: An initial token for the user.
    content.vb: Public Sub New(flow As IAuthorizationCodeFlow, userId As String, token As TokenResponse)
  overload: Google.Apis.Auth.OAuth2.UserCredential.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.UserCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.UserCredential.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.UserCredential
  langs:
  - csharp
  - vb
  name: InterceptAsync(HttpRequestMessage, CancellationToken)
  nameWithType: UserCredential.InterceptAsync(HttpRequestMessage, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.UserCredential.InterceptAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: InterceptAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
    startLine: 72
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nDefault implementation is to try to refresh the access token if there is no access token or if we are 1 \nminute away from expiration. If token server is unavailable, it will try to use the access token even if \nhas expired. If successful, it will call <xref href=\"Google.Apis.Auth.OAuth2.IAccessMethod.Intercept(System.Net.Http.HttpRequestMessage%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task InterceptAsync(HttpRequestMessage request, CancellationToken taskCancellationToken)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function InterceptAsync(request As HttpRequestMessage, taskCancellationToken As CancellationToken) As Task
  overload: Google.Apis.Auth.OAuth2.UserCredential.InterceptAsync*
  implements:
  - Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.UserCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  commentId: M:Google.Apis.Auth.OAuth2.UserCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  id: HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  parent: Google.Apis.Auth.OAuth2.UserCredential
  langs:
  - csharp
  - vb
  name: HandleResponseAsync(HandleUnsuccessfulResponseArgs)
  nameWithType: UserCredential.HandleResponseAsync(HandleUnsuccessfulResponseArgs)
  fullName: Google.Apis.Auth.OAuth2.UserCredential.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: HandleResponseAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
    startLine: 83
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  example: []
  syntax:
    content: public Task<bool> HandleResponseAsync(HandleUnsuccessfulResponseArgs args)
    parameters:
    - id: args
      type: Google.Apis.Http.HandleUnsuccessfulResponseArgs
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function HandleResponseAsync(args As HandleUnsuccessfulResponseArgs) As Task(Of Boolean)
  overload: Google.Apis.Auth.OAuth2.UserCredential.HandleResponseAsync*
  implements:
  - Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.UserCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  commentId: M:Google.Apis.Auth.OAuth2.UserCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  id: Initialize(Google.Apis.Http.ConfigurableHttpClient)
  parent: Google.Apis.Auth.OAuth2.UserCredential
  langs:
  - csharp
  - vb
  name: Initialize(ConfigurableHttpClient)
  nameWithType: UserCredential.Initialize(ConfigurableHttpClient)
  fullName: Google.Apis.Auth.OAuth2.UserCredential.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Initialize
    path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
    startLine: 100
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  example: []
  syntax:
    content: public void Initialize(ConfigurableHttpClient httpClient)
    parameters:
    - id: httpClient
      type: Google.Apis.Http.ConfigurableHttpClient
    content.vb: Public Sub Initialize(httpClient As ConfigurableHttpClient)
  overload: Google.Apis.Auth.OAuth2.UserCredential.Initialize*
  implements:
  - Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.UserCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.UserCredential.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  id: GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.UserCredential
  langs:
  - csharp
  - vb
  name: GetAccessTokenForRequestAsync(String, CancellationToken)
  nameWithType: UserCredential.GetAccessTokenForRequestAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.UserCredential.GetAccessTokenForRequestAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GetAccessTokenForRequestAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
    startLine: 110
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nGets an access token to authorize a request.\nImplementations should handle automatic refreshes of the token\nif they are supported.\nThe <code data-dev-comment-type=\"paramref\" class=\"paramref\">authUri</code> might be required by some credential types\n(e.g. the JWT access token) while other credential types\nmigth just ignore it.\n"
  example: []
  syntax:
    content: public virtual Task<string> GetAccessTokenForRequestAsync(string authUri = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: authUri
      type: System.String
      description: The URI the returned token will grant access to.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The access token.
    content.vb: Public Overridable Function GetAccessTokenForRequestAsync(authUri As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: Google.Apis.Auth.OAuth2.UserCredential.GetAccessTokenForRequestAsync*
  implements:
  - Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Auth.OAuth2.UserCredential.RefreshTokenAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.UserCredential.RefreshTokenAsync(System.Threading.CancellationToken)
  id: RefreshTokenAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.UserCredential
  langs:
  - csharp
  - vb
  name: RefreshTokenAsync(CancellationToken)
  nameWithType: UserCredential.RefreshTokenAsync(CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.UserCredential.RefreshTokenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RefreshTokenAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
    startLine: 122
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nRefreshes the token by calling to\n<xref href=\"Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String%2cSystem.String%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\nThen it updates the <xref href=\"Google.Apis.Auth.OAuth2.Responses.TokenResponse\" data-throw-if-not-resolved=\"false\"></xref> with the new token instance.\n"
  example: []
  syntax:
    content: public Task<bool> RefreshTokenAsync(CancellationToken taskCancellationToken)
    parameters:
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel an operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the token was refreshed.
    content.vb: Public Function RefreshTokenAsync(taskCancellationToken As CancellationToken) As Task(Of Boolean)
  overload: Google.Apis.Auth.OAuth2.UserCredential.RefreshTokenAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.UserCredential.RevokeTokenAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.UserCredential.RevokeTokenAsync(System.Threading.CancellationToken)
  id: RevokeTokenAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.UserCredential
  langs:
  - csharp
  - vb
  name: RevokeTokenAsync(CancellationToken)
  nameWithType: UserCredential.RevokeTokenAsync(CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.UserCredential.RevokeTokenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RevokeTokenAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/UserCredential.cs
    startLine: 152
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2
  summary: "\nAsynchronously revokes the token by calling\n<xref href=\"Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String%2cSystem.String%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task<bool> RevokeTokenAsync(CancellationToken taskCancellationToken)
    parameters:
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel an operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the token was revoked successfully.
    content.vb: Public Function RevokeTokenAsync(taskCancellationToken As CancellationToken) As Task(Of Boolean)
  overload: Google.Apis.Auth.OAuth2.UserCredential.RevokeTokenAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Apis.Auth.OAuth2
  commentId: N:Google.Apis.Auth.OAuth2
  name: Google.Apis.Auth.OAuth2
  nameWithType: Google.Apis.Auth.OAuth2
  fullName: Google.Apis.Auth.OAuth2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Auth.OAuth2.ICredential
  commentId: T:Google.Apis.Auth.OAuth2.ICredential
  parent: Google.Apis.Auth.OAuth2
  name: ICredential
  nameWithType: ICredential
  fullName: Google.Apis.Auth.OAuth2.ICredential
- uid: Google.Apis.Http.IConfigurableHttpClientInitializer
  commentId: T:Google.Apis.Http.IConfigurableHttpClientInitializer
  parent: Google.Apis.Http
  name: IConfigurableHttpClientInitializer
  nameWithType: IConfigurableHttpClientInitializer
  fullName: Google.Apis.Http.IConfigurableHttpClientInitializer
- uid: Google.Apis.Auth.OAuth2.ITokenAccess
  commentId: T:Google.Apis.Auth.OAuth2.ITokenAccess
  parent: Google.Apis.Auth.OAuth2
  name: ITokenAccess
  nameWithType: ITokenAccess
  fullName: Google.Apis.Auth.OAuth2.ITokenAccess
- uid: Google.Apis.Http.IHttpExecuteInterceptor
  commentId: T:Google.Apis.Http.IHttpExecuteInterceptor
  parent: Google.Apis.Http
  name: IHttpExecuteInterceptor
  nameWithType: IHttpExecuteInterceptor
  fullName: Google.Apis.Http.IHttpExecuteInterceptor
- uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  commentId: T:Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  parent: Google.Apis.Http
  name: IHttpUnsuccessfulResponseHandler
  nameWithType: IHttpUnsuccessfulResponseHandler
  fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Http
  commentId: N:Google.Apis.Http
  name: Google.Apis.Http
  nameWithType: Google.Apis.Http
  fullName: Google.Apis.Http
- uid: Google.Apis.Logging.ILogger
  commentId: T:Google.Apis.Logging.ILogger
  parent: Google.Apis.Logging
  name: ILogger
  nameWithType: ILogger
  fullName: Google.Apis.Logging.ILogger
- uid: Google.Apis.Logging
  commentId: N:Google.Apis.Logging
  name: Google.Apis.Logging
  nameWithType: Google.Apis.Logging
  fullName: Google.Apis.Logging
- uid: Google.Apis.Auth.OAuth2.UserCredential.Token*
  commentId: Overload:Google.Apis.Auth.OAuth2.UserCredential.Token
  name: Token
  nameWithType: UserCredential.Token
  fullName: Google.Apis.Auth.OAuth2.UserCredential.Token
- uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  commentId: T:Google.Apis.Auth.OAuth2.Responses.TokenResponse
  parent: Google.Apis.Auth.OAuth2.Responses
  name: TokenResponse
  nameWithType: TokenResponse
  fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse
- uid: Google.Apis.Auth.OAuth2.Responses
  commentId: N:Google.Apis.Auth.OAuth2.Responses
  name: Google.Apis.Auth.OAuth2.Responses
  nameWithType: Google.Apis.Auth.OAuth2.Responses
  fullName: Google.Apis.Auth.OAuth2.Responses
- uid: Google.Apis.Auth.OAuth2.UserCredential.Flow*
  commentId: Overload:Google.Apis.Auth.OAuth2.UserCredential.Flow
  name: Flow
  nameWithType: UserCredential.Flow
  fullName: Google.Apis.Auth.OAuth2.UserCredential.Flow
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  commentId: T:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  parent: Google.Apis.Auth.OAuth2.Flows
  name: IAuthorizationCodeFlow
  nameWithType: IAuthorizationCodeFlow
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
- uid: Google.Apis.Auth.OAuth2.Flows
  commentId: N:Google.Apis.Auth.OAuth2.Flows
  name: Google.Apis.Auth.OAuth2.Flows
  nameWithType: Google.Apis.Auth.OAuth2.Flows
  fullName: Google.Apis.Auth.OAuth2.Flows
- uid: Google.Apis.Auth.OAuth2.UserCredential.UserId*
  commentId: Overload:Google.Apis.Auth.OAuth2.UserCredential.UserId
  name: UserId
  nameWithType: UserCredential.UserId
  fullName: Google.Apis.Auth.OAuth2.UserCredential.UserId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Auth.OAuth2.UserCredential.#ctor*
  commentId: Overload:Google.Apis.Auth.OAuth2.UserCredential.#ctor
  name: UserCredential
  nameWithType: UserCredential.UserCredential
  fullName: Google.Apis.Auth.OAuth2.UserCredential.UserCredential
- uid: Google.Apis.Auth.OAuth2.IAccessMethod.Intercept(System.Net.Http.HttpRequestMessage,System.String)
  commentId: M:Google.Apis.Auth.OAuth2.IAccessMethod.Intercept(System.Net.Http.HttpRequestMessage,System.String)
  parent: Google.Apis.Auth.OAuth2.IAccessMethod
  isExternal: true
  name: Intercept(HttpRequestMessage, String)
  nameWithType: IAccessMethod.Intercept(HttpRequestMessage, String)
  fullName: Google.Apis.Auth.OAuth2.IAccessMethod.Intercept(System.Net.Http.HttpRequestMessage, System.String)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.IAccessMethod.Intercept(System.Net.Http.HttpRequestMessage,System.String)
    name: Intercept
    nameWithType: IAccessMethod.Intercept
    fullName: Google.Apis.Auth.OAuth2.IAccessMethod.Intercept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.IAccessMethod.Intercept(System.Net.Http.HttpRequestMessage,System.String)
    name: Intercept
    nameWithType: IAccessMethod.Intercept
    fullName: Google.Apis.Auth.OAuth2.IAccessMethod.Intercept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.UserCredential.InterceptAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.UserCredential.InterceptAsync
  name: InterceptAsync
  nameWithType: UserCredential.InterceptAsync
  fullName: Google.Apis.Auth.OAuth2.UserCredential.InterceptAsync
- uid: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: Google.Apis.Http.IHttpExecuteInterceptor
  isExternal: true
  name: InterceptAsync(HttpRequestMessage, CancellationToken)
  nameWithType: IHttpExecuteInterceptor.InterceptAsync(HttpRequestMessage, CancellationToken)
  fullName: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: InterceptAsync
    nameWithType: IHttpExecuteInterceptor.InterceptAsync
    fullName: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: InterceptAsync
    nameWithType: IHttpExecuteInterceptor.InterceptAsync
    fullName: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Google.Apis.Auth.OAuth2.IAccessMethod
  commentId: T:Google.Apis.Auth.OAuth2.IAccessMethod
  parent: Google.Apis.Auth.OAuth2
  name: IAccessMethod
  nameWithType: IAccessMethod
  fullName: Google.Apis.Auth.OAuth2.IAccessMethod
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Apis.Auth.OAuth2.UserCredential.HandleResponseAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.UserCredential.HandleResponseAsync
  name: HandleResponseAsync
  nameWithType: UserCredential.HandleResponseAsync
  fullName: Google.Apis.Auth.OAuth2.UserCredential.HandleResponseAsync
- uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  commentId: M:Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  parent: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  name: HandleResponseAsync(HandleUnsuccessfulResponseArgs)
  nameWithType: IHttpUnsuccessfulResponseHandler.HandleResponseAsync(HandleUnsuccessfulResponseArgs)
  fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
  spec.csharp:
  - uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
    name: HandleResponseAsync
    nameWithType: IHttpUnsuccessfulResponseHandler.HandleResponseAsync
    fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.HandleUnsuccessfulResponseArgs
    name: HandleUnsuccessfulResponseArgs
    nameWithType: HandleUnsuccessfulResponseArgs
    fullName: Google.Apis.Http.HandleUnsuccessfulResponseArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync(Google.Apis.Http.HandleUnsuccessfulResponseArgs)
    name: HandleResponseAsync
    nameWithType: IHttpUnsuccessfulResponseHandler.HandleResponseAsync
    fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler.HandleResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.HandleUnsuccessfulResponseArgs
    name: HandleUnsuccessfulResponseArgs
    nameWithType: HandleUnsuccessfulResponseArgs
    fullName: Google.Apis.Http.HandleUnsuccessfulResponseArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Http.HandleUnsuccessfulResponseArgs
  commentId: T:Google.Apis.Http.HandleUnsuccessfulResponseArgs
  parent: Google.Apis.Http
  name: HandleUnsuccessfulResponseArgs
  nameWithType: HandleUnsuccessfulResponseArgs
  fullName: Google.Apis.Http.HandleUnsuccessfulResponseArgs
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.UserCredential.Initialize*
  commentId: Overload:Google.Apis.Auth.OAuth2.UserCredential.Initialize
  name: Initialize
  nameWithType: UserCredential.Initialize
  fullName: Google.Apis.Auth.OAuth2.UserCredential.Initialize
- uid: Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  commentId: M:Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  parent: Google.Apis.Http.IConfigurableHttpClientInitializer
  name: Initialize(ConfigurableHttpClient)
  nameWithType: IConfigurableHttpClientInitializer.Initialize(ConfigurableHttpClient)
  fullName: Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize(Google.Apis.Http.ConfigurableHttpClient)
  spec.csharp:
  - uid: Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize(Google.Apis.Http.ConfigurableHttpClient)
    name: Initialize
    nameWithType: IConfigurableHttpClientInitializer.Initialize
    fullName: Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.ConfigurableHttpClient
    name: ConfigurableHttpClient
    nameWithType: ConfigurableHttpClient
    fullName: Google.Apis.Http.ConfigurableHttpClient
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize(Google.Apis.Http.ConfigurableHttpClient)
    name: Initialize
    nameWithType: IConfigurableHttpClientInitializer.Initialize
    fullName: Google.Apis.Http.IConfigurableHttpClientInitializer.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.ConfigurableHttpClient
    name: ConfigurableHttpClient
    nameWithType: ConfigurableHttpClient
    fullName: Google.Apis.Http.ConfigurableHttpClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Http.ConfigurableHttpClient
  commentId: T:Google.Apis.Http.ConfigurableHttpClient
  parent: Google.Apis.Http
  name: ConfigurableHttpClient
  nameWithType: ConfigurableHttpClient
  fullName: Google.Apis.Http.ConfigurableHttpClient
- uid: Google.Apis.Auth.OAuth2.UserCredential.GetAccessTokenForRequestAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.UserCredential.GetAccessTokenForRequestAsync
  name: GetAccessTokenForRequestAsync
  nameWithType: UserCredential.GetAccessTokenForRequestAsync
  fullName: Google.Apis.Auth.OAuth2.UserCredential.GetAccessTokenForRequestAsync
- uid: Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.ITokenAccess
  isExternal: true
  name: GetAccessTokenForRequestAsync(String, CancellationToken)
  nameWithType: ITokenAccess.GetAccessTokenForRequestAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
    name: GetAccessTokenForRequestAsync
    nameWithType: ITokenAccess.GetAccessTokenForRequestAsync
    fullName: Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync(System.String,System.Threading.CancellationToken)
    name: GetAccessTokenForRequestAsync
    nameWithType: ITokenAccess.GetAccessTokenForRequestAsync
    fullName: Google.Apis.Auth.OAuth2.ITokenAccess.GetAccessTokenForRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  isExternal: true
  name: RefreshTokenAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationCodeFlow.RefreshTokenAsync(String, String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RefreshTokenAsync
    nameWithType: IAuthorizationCodeFlow.RefreshTokenAsync
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RefreshTokenAsync
    nameWithType: IAuthorizationCodeFlow.RefreshTokenAsync
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.UserCredential.RefreshTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.UserCredential.RefreshTokenAsync
  name: RefreshTokenAsync
  nameWithType: UserCredential.RefreshTokenAsync
  fullName: Google.Apis.Auth.OAuth2.UserCredential.RefreshTokenAsync
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  isExternal: true
  name: RevokeTokenAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationCodeFlow.RevokeTokenAsync(String, String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RevokeTokenAsync
    nameWithType: IAuthorizationCodeFlow.RevokeTokenAsync
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RevokeTokenAsync
    nameWithType: IAuthorizationCodeFlow.RevokeTokenAsync
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.UserCredential.RevokeTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.UserCredential.RevokeTokenAsync
  name: RevokeTokenAsync
  nameWithType: UserCredential.RevokeTokenAsync
  fullName: Google.Apis.Auth.OAuth2.UserCredential.RevokeTokenAsync
