### YamlMime:ManagedReference
items:
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  commentId: T:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  id: AuthorizationCodeFlow
  parent: Google.Apis.Auth.OAuth2.Flows
  children:
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.#ctor(Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Initializer)
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AccessMethod
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AuthorizationServerUrl
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ClientSecrets
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Clock
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.CreateAuthorizationCodeRequest(System.String)
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DataStore
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DeleteTokenAsync(System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Dispose
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ExchangeCodeForTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.FetchTokenAsync(System.String,Google.Apis.Auth.OAuth2.Requests.TokenRequest,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.HttpClient
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.LoadTokenAsync(System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Scopes
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ShouldForceTokenRetrieval
  - Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.TokenServerUrl
  langs:
  - csharp
  - vb
  name: AuthorizationCodeFlow
  nameWithType: AuthorizationCodeFlow
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AuthorizationCodeFlow
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 42
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: "\nThread-safe OAuth 2.0 authorization code flow that manages and persists end-user credentials.\n<p>\nThis is designed to simplify the flow in which an end-user authorizes the application to access their protected\ndata, and then the application has access to their data based on an access token and a refresh token to refresh \nthat access token when it expires.\n</p>\n"
  example: []
  syntax:
    content: 'public class AuthorizationCodeFlow : IAuthorizationCodeFlow, IDisposable'
    content.vb: >-
      Public Class AuthorizationCodeFlow
          Implements IAuthorizationCodeFlow, IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - Google.Apis.Auth.OAuth2.Flows.GoogleAuthorizationCodeFlow
  implements:
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.TokenServerUrl
  commentId: P:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.TokenServerUrl
  id: TokenServerUrl
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: TokenServerUrl
  nameWithType: AuthorizationCodeFlow.TokenServerUrl
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.TokenServerUrl
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TokenServerUrl
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 133
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Gets the token server URL.
  example: []
  syntax:
    content: public string TokenServerUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TokenServerUrl As String
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.TokenServerUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AuthorizationServerUrl
  commentId: P:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AuthorizationServerUrl
  id: AuthorizationServerUrl
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: AuthorizationServerUrl
  nameWithType: AuthorizationCodeFlow.AuthorizationServerUrl
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AuthorizationServerUrl
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AuthorizationServerUrl
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 136
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Gets the authorization code server URL.
  example: []
  syntax:
    content: public string AuthorizationServerUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AuthorizationServerUrl As String
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AuthorizationServerUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ClientSecrets
  commentId: P:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ClientSecrets
  id: ClientSecrets
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: ClientSecrets
  nameWithType: AuthorizationCodeFlow.ClientSecrets
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ClientSecrets
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ClientSecrets
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 139
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Gets the client secrets which includes the client identifier and its secret.
  example: []
  syntax:
    content: public ClientSecrets ClientSecrets { get; }
    parameters: []
    return:
      type: Google.Apis.Auth.OAuth2.ClientSecrets
    content.vb: Public ReadOnly Property ClientSecrets As ClientSecrets
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ClientSecrets*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DataStore
  commentId: P:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DataStore
  id: DataStore
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: DataStore
  nameWithType: AuthorizationCodeFlow.DataStore
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DataStore
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DataStore
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 142
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Gets the data store used to store the credentials.
  example: []
  syntax:
    content: public IDataStore DataStore { get; }
    parameters: []
    return:
      type: Google.Apis.Util.Store.IDataStore
    content.vb: Public ReadOnly Property DataStore As IDataStore
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DataStore*
  implements:
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DataStore
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Scopes
  commentId: P:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Scopes
  id: Scopes
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: Scopes
  nameWithType: AuthorizationCodeFlow.Scopes
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Scopes
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Scopes
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 145
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Gets the scopes which indicate the API access your application is requesting.
  example: []
  syntax:
    content: public IEnumerable<string> Scopes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property Scopes As IEnumerable(Of String)
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Scopes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.HttpClient
  commentId: P:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.HttpClient
  id: HttpClient
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: HttpClient
  nameWithType: AuthorizationCodeFlow.HttpClient
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.HttpClient
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: HttpClient
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 148
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Gets the HTTP client used to make authentication requests to the server.
  example: []
  syntax:
    content: public ConfigurableHttpClient HttpClient { get; }
    parameters: []
    return:
      type: Google.Apis.Http.ConfigurableHttpClient
    content.vb: Public ReadOnly Property HttpClient As ConfigurableHttpClient
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.HttpClient*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.#ctor(Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Initializer)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.#ctor(Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Initializer)
  id: '#ctor(Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Initializer)'
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: AuthorizationCodeFlow(AuthorizationCodeFlow.Initializer)
  nameWithType: AuthorizationCodeFlow.AuthorizationCodeFlow(AuthorizationCodeFlow.Initializer)
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AuthorizationCodeFlow(Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Initializer)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 151
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Constructs a new flow using the initializer&apos;s properties.
  example: []
  syntax:
    content: public AuthorizationCodeFlow(AuthorizationCodeFlow.Initializer initializer)
    parameters:
    - id: initializer
      type: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Initializer
    content.vb: Public Sub New(initializer As AuthorizationCodeFlow.Initializer)
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AccessMethod
  commentId: P:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AccessMethod
  id: AccessMethod
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: AccessMethod
  nameWithType: AuthorizationCodeFlow.AccessMethod
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AccessMethod
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AccessMethod
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 201
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Gets the method for presenting the access token to the resource server.
  example: []
  syntax:
    content: public IAccessMethod AccessMethod { get; }
    parameters: []
    return:
      type: Google.Apis.Auth.OAuth2.IAccessMethod
    content.vb: Public ReadOnly Property AccessMethod As IAccessMethod
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AccessMethod*
  implements:
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.AccessMethod
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Clock
  commentId: P:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Clock
  id: Clock
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: Clock
  nameWithType: AuthorizationCodeFlow.Clock
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Clock
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Clock
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 204
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Gets the clock.
  example: []
  syntax:
    content: public IClock Clock { get; }
    parameters: []
    return:
      type: Google.Apis.Util.IClock
    content.vb: Public ReadOnly Property Clock As IClock
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Clock*
  implements:
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.Clock
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.LoadTokenAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.LoadTokenAsync(System.String,System.Threading.CancellationToken)
  id: LoadTokenAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: LoadTokenAsync(String, CancellationToken)
  nameWithType: AuthorizationCodeFlow.LoadTokenAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.LoadTokenAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LoadTokenAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 207
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: "\nAsynchronously loads the user&apos;s token using the flow&apos;s\n<xref href=\"Google.Apis.Util.Store.IDataStore\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task<TokenResponse> LoadTokenAsync(string userId, CancellationToken taskCancellationToken)
    parameters:
    - id: userId
      type: System.String
      description: User identifier
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
      description: Token response
    content.vb: Public Function LoadTokenAsync(userId As String, taskCancellationToken As CancellationToken) As Task(Of TokenResponse)
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.LoadTokenAsync*
  implements:
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DeleteTokenAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DeleteTokenAsync(System.String,System.Threading.CancellationToken)
  id: DeleteTokenAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: DeleteTokenAsync(String, CancellationToken)
  nameWithType: AuthorizationCodeFlow.DeleteTokenAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DeleteTokenAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DeleteTokenAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 218
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: "\nAsynchronously deletes the user&apos;s token using the flow&apos;s\n<xref href=\"Google.Apis.Util.Store.IDataStore\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task DeleteTokenAsync(string userId, CancellationToken taskCancellationToken)
    parameters:
    - id: userId
      type: System.String
      description: User identifier.
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteTokenAsync(userId As String, taskCancellationToken As CancellationToken) As Task
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DeleteTokenAsync*
  implements:
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.CreateAuthorizationCodeRequest(System.String)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.CreateAuthorizationCodeRequest(System.String)
  id: CreateAuthorizationCodeRequest(System.String)
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: CreateAuthorizationCodeRequest(String)
  nameWithType: AuthorizationCodeFlow.CreateAuthorizationCodeRequest(String)
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.CreateAuthorizationCodeRequest(System.String)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CreateAuthorizationCodeRequest
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 228
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Creates an authorization code request with the specified redirect URI.
  example: []
  syntax:
    content: public virtual AuthorizationCodeRequestUrl CreateAuthorizationCodeRequest(string redirectUri)
    parameters:
    - id: redirectUri
      type: System.String
    return:
      type: Google.Apis.Auth.OAuth2.Requests.AuthorizationCodeRequestUrl
    content.vb: Public Overridable Function CreateAuthorizationCodeRequest(redirectUri As String) As AuthorizationCodeRequestUrl
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.CreateAuthorizationCodeRequest*
  implements:
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ExchangeCodeForTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ExchangeCodeForTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: ExchangeCodeForTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: ExchangeCodeForTokenAsync(String, String, String, CancellationToken)
  nameWithType: AuthorizationCodeFlow.ExchangeCodeForTokenAsync(String, String, String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ExchangeCodeForTokenAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExchangeCodeForTokenAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 239
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Asynchronously exchanges code with a token.
  example: []
  syntax:
    content: public Task<TokenResponse> ExchangeCodeForTokenAsync(string userId, string code, string redirectUri, CancellationToken taskCancellationToken)
    parameters:
    - id: userId
      type: System.String
      description: User identifier.
    - id: code
      type: System.String
      description: Authorization code received from the authorization server.
    - id: redirectUri
      type: System.String
      description: Redirect URI which is used in the token request.
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
      description: Token response which contains the access token.
    content.vb: Public Function ExchangeCodeForTokenAsync(userId As String, code As String, redirectUri As String, taskCancellationToken As CancellationToken) As Task(Of TokenResponse)
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ExchangeCodeForTokenAsync*
  implements:
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: RefreshTokenAsync(String, String, CancellationToken)
  nameWithType: AuthorizationCodeFlow.RefreshTokenAsync(String, String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RefreshTokenAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RefreshTokenAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 256
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Asynchronously refreshes an access token using a refresh token.
  example: []
  syntax:
    content: public Task<TokenResponse> RefreshTokenAsync(string userId, string refreshToken, CancellationToken taskCancellationToken)
    parameters:
    - id: userId
      type: System.String
      description: User identifier.
    - id: refreshToken
      type: System.String
      description: Refresh token which is used to get a new access token.
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
      description: Token response which contains the access token and the input refresh token.
    content.vb: Public Function RefreshTokenAsync(userId As String, refreshToken As String, taskCancellationToken As CancellationToken) As Task(Of TokenResponse)
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RefreshTokenAsync*
  implements:
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: RevokeTokenAsync(String, String, CancellationToken)
  nameWithType: AuthorizationCodeFlow.RevokeTokenAsync(String, String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RevokeTokenAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RevokeTokenAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 276
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: "\nAsynchronously revokes the specified token. This method disconnects the user&apos;s account from the OAuth 2.0\napplication. It should be called upon removing the user account from the site."
  remarks: "\nIf revoking the token succeeds, the user&apos;s credential is removed from the data store and the user MUST\nauthorize the application again before the application can access the user&apos;s private resources.\n"
  example: []
  syntax:
    content: public virtual Task RevokeTokenAsync(string userId, string token, CancellationToken taskCancellationToken)
    parameters:
    - id: userId
      type: System.String
      description: User identifier.
    - id: token
      type: System.String
      description: Access token to be revoked.
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task
      description: <code>true</code> if the token was revoked successfully.
    content.vb: Public Overridable Function RevokeTokenAsync(userId As String, token As String, taskCancellationToken As CancellationToken) As Task
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RevokeTokenAsync*
  implements:
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ShouldForceTokenRetrieval
  commentId: M:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ShouldForceTokenRetrieval
  id: ShouldForceTokenRetrieval
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: ShouldForceTokenRetrieval()
  nameWithType: AuthorizationCodeFlow.ShouldForceTokenRetrieval()
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ShouldForceTokenRetrieval()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ShouldForceTokenRetrieval
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 282
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: "\nIndicates if a new token needs to be retrieved and stored regardless of normal circumstances.\n"
  example: []
  syntax:
    content: public virtual bool ShouldForceTokenRetrieval()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function ShouldForceTokenRetrieval As Boolean
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ShouldForceTokenRetrieval*
  implements:
  - Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.FetchTokenAsync(System.String,Google.Apis.Auth.OAuth2.Requests.TokenRequest,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.FetchTokenAsync(System.String,Google.Apis.Auth.OAuth2.Requests.TokenRequest,System.Threading.CancellationToken)
  id: FetchTokenAsync(System.String,Google.Apis.Auth.OAuth2.Requests.TokenRequest,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: FetchTokenAsync(String, TokenRequest, CancellationToken)
  nameWithType: AuthorizationCodeFlow.FetchTokenAsync(String, TokenRequest, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.FetchTokenAsync(System.String, Google.Apis.Auth.OAuth2.Requests.TokenRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: FetchTokenAsync
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 304
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  summary: Retrieve a new token from the server using the specified request.
  example: []
  syntax:
    content: public Task<TokenResponse> FetchTokenAsync(string userId, TokenRequest request, CancellationToken taskCancellationToken)
    parameters:
    - id: userId
      type: System.String
      description: User identifier.
    - id: request
      type: Google.Apis.Auth.OAuth2.Requests.TokenRequest
      description: Token request.
    - id: taskCancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
      description: Token response with the new access token.
    content.vb: Public Function FetchTokenAsync(userId As String, request As TokenRequest, taskCancellationToken As CancellationToken) As Task(Of TokenResponse)
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.FetchTokenAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Dispose
  commentId: M:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Dispose
  id: Dispose
  parent: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AuthorizationCodeFlow.Dispose()
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Dispose()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Dispose
    path: Src/Support/Google.Apis.Auth/OAuth2/Flows/AuthorizationCodeFlow.cs
    startLine: 335
  assemblies:
  - Google.Apis.Auth
  namespace: Google.Apis.Auth.OAuth2.Flows
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Apis.Auth.OAuth2.Flows
  commentId: N:Google.Apis.Auth.OAuth2.Flows
  name: Google.Apis.Auth.OAuth2.Flows
  nameWithType: Google.Apis.Auth.OAuth2.Flows
  fullName: Google.Apis.Auth.OAuth2.Flows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  commentId: T:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  parent: Google.Apis.Auth.OAuth2.Flows
  name: IAuthorizationCodeFlow
  nameWithType: IAuthorizationCodeFlow
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.TokenServerUrl*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.TokenServerUrl
  name: TokenServerUrl
  nameWithType: AuthorizationCodeFlow.TokenServerUrl
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.TokenServerUrl
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AuthorizationServerUrl*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AuthorizationServerUrl
  name: AuthorizationServerUrl
  nameWithType: AuthorizationCodeFlow.AuthorizationServerUrl
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AuthorizationServerUrl
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ClientSecrets*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ClientSecrets
  name: ClientSecrets
  nameWithType: AuthorizationCodeFlow.ClientSecrets
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ClientSecrets
- uid: Google.Apis.Auth.OAuth2.ClientSecrets
  commentId: T:Google.Apis.Auth.OAuth2.ClientSecrets
  parent: Google.Apis.Auth.OAuth2
  name: ClientSecrets
  nameWithType: ClientSecrets
  fullName: Google.Apis.Auth.OAuth2.ClientSecrets
- uid: Google.Apis.Auth.OAuth2
  commentId: N:Google.Apis.Auth.OAuth2
  name: Google.Apis.Auth.OAuth2
  nameWithType: Google.Apis.Auth.OAuth2
  fullName: Google.Apis.Auth.OAuth2
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DataStore*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DataStore
  name: DataStore
  nameWithType: AuthorizationCodeFlow.DataStore
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DataStore
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DataStore
  commentId: P:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DataStore
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  name: DataStore
  nameWithType: IAuthorizationCodeFlow.DataStore
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DataStore
- uid: Google.Apis.Util.Store.IDataStore
  commentId: T:Google.Apis.Util.Store.IDataStore
  parent: Google.Apis.Util.Store
  name: IDataStore
  nameWithType: IDataStore
  fullName: Google.Apis.Util.Store.IDataStore
- uid: Google.Apis.Util.Store
  commentId: N:Google.Apis.Util.Store
  name: Google.Apis.Util.Store
  nameWithType: Google.Apis.Util.Store
  fullName: Google.Apis.Util.Store
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Scopes*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Scopes
  name: Scopes
  nameWithType: AuthorizationCodeFlow.Scopes
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Scopes
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.HttpClient*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.HttpClient
  name: HttpClient
  nameWithType: AuthorizationCodeFlow.HttpClient
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.HttpClient
- uid: Google.Apis.Http.ConfigurableHttpClient
  commentId: T:Google.Apis.Http.ConfigurableHttpClient
  parent: Google.Apis.Http
  name: ConfigurableHttpClient
  nameWithType: ConfigurableHttpClient
  fullName: Google.Apis.Http.ConfigurableHttpClient
- uid: Google.Apis.Http
  commentId: N:Google.Apis.Http
  name: Google.Apis.Http
  nameWithType: Google.Apis.Http
  fullName: Google.Apis.Http
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.#ctor*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.#ctor
  name: AuthorizationCodeFlow
  nameWithType: AuthorizationCodeFlow.AuthorizationCodeFlow
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AuthorizationCodeFlow
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Initializer
  commentId: T:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Initializer
  parent: Google.Apis.Auth.OAuth2.Flows
  name: AuthorizationCodeFlow.Initializer
  nameWithType: AuthorizationCodeFlow.Initializer
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Initializer
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AccessMethod*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AccessMethod
  name: AccessMethod
  nameWithType: AuthorizationCodeFlow.AccessMethod
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.AccessMethod
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.AccessMethod
  commentId: P:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.AccessMethod
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  name: AccessMethod
  nameWithType: IAuthorizationCodeFlow.AccessMethod
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.AccessMethod
- uid: Google.Apis.Auth.OAuth2.IAccessMethod
  commentId: T:Google.Apis.Auth.OAuth2.IAccessMethod
  parent: Google.Apis.Auth.OAuth2
  name: IAccessMethod
  nameWithType: IAccessMethod
  fullName: Google.Apis.Auth.OAuth2.IAccessMethod
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Clock*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Clock
  name: Clock
  nameWithType: AuthorizationCodeFlow.Clock
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Clock
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.Clock
  commentId: P:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.Clock
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  name: Clock
  nameWithType: IAuthorizationCodeFlow.Clock
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.Clock
- uid: Google.Apis.Util.IClock
  commentId: T:Google.Apis.Util.IClock
  parent: Google.Apis.Util
  name: IClock
  nameWithType: IClock
  fullName: Google.Apis.Util.IClock
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.LoadTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.LoadTokenAsync
  name: LoadTokenAsync
  nameWithType: AuthorizationCodeFlow.LoadTokenAsync
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.LoadTokenAsync
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  isExternal: true
  name: LoadTokenAsync(String, CancellationToken)
  nameWithType: IAuthorizationCodeFlow.LoadTokenAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync(System.String,System.Threading.CancellationToken)
    name: LoadTokenAsync
    nameWithType: IAuthorizationCodeFlow.LoadTokenAsync
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync(System.String,System.Threading.CancellationToken)
    name: LoadTokenAsync
    nameWithType: IAuthorizationCodeFlow.LoadTokenAsync
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.LoadTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
  commentId: T:System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.Responses.TokenResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TokenResponse>
  nameWithType: Task<TokenResponse>
  fullName: System.Threading.Tasks.Task<Google.Apis.Auth.OAuth2.Responses.TokenResponse>
  nameWithType.vb: Task(Of TokenResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Apis.Auth.OAuth2.Responses.TokenResponse)
  name.vb: Task(Of TokenResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Auth.OAuth2.Responses.TokenResponse
    name: TokenResponse
    nameWithType: TokenResponse
    fullName: Google.Apis.Auth.OAuth2.Responses.TokenResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DeleteTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DeleteTokenAsync
  name: DeleteTokenAsync
  nameWithType: AuthorizationCodeFlow.DeleteTokenAsync
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.DeleteTokenAsync
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync(System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  isExternal: true
  name: DeleteTokenAsync(String, CancellationToken)
  nameWithType: IAuthorizationCodeFlow.DeleteTokenAsync(String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync(System.String,System.Threading.CancellationToken)
    name: DeleteTokenAsync
    nameWithType: IAuthorizationCodeFlow.DeleteTokenAsync
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync(System.String,System.Threading.CancellationToken)
    name: DeleteTokenAsync
    nameWithType: IAuthorizationCodeFlow.DeleteTokenAsync
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.DeleteTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.CreateAuthorizationCodeRequest*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.CreateAuthorizationCodeRequest
  name: CreateAuthorizationCodeRequest
  nameWithType: AuthorizationCodeFlow.CreateAuthorizationCodeRequest
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.CreateAuthorizationCodeRequest
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest(System.String)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest(System.String)
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  isExternal: true
  name: CreateAuthorizationCodeRequest(String)
  nameWithType: IAuthorizationCodeFlow.CreateAuthorizationCodeRequest(String)
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest(System.String)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest(System.String)
    name: CreateAuthorizationCodeRequest
    nameWithType: IAuthorizationCodeFlow.CreateAuthorizationCodeRequest
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest(System.String)
    name: CreateAuthorizationCodeRequest
    nameWithType: IAuthorizationCodeFlow.CreateAuthorizationCodeRequest
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.CreateAuthorizationCodeRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.Requests.AuthorizationCodeRequestUrl
  commentId: T:Google.Apis.Auth.OAuth2.Requests.AuthorizationCodeRequestUrl
  parent: Google.Apis.Auth.OAuth2.Requests
  name: AuthorizationCodeRequestUrl
  nameWithType: AuthorizationCodeRequestUrl
  fullName: Google.Apis.Auth.OAuth2.Requests.AuthorizationCodeRequestUrl
- uid: Google.Apis.Auth.OAuth2.Requests
  commentId: N:Google.Apis.Auth.OAuth2.Requests
  name: Google.Apis.Auth.OAuth2.Requests
  nameWithType: Google.Apis.Auth.OAuth2.Requests
  fullName: Google.Apis.Auth.OAuth2.Requests
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ExchangeCodeForTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ExchangeCodeForTokenAsync
  name: ExchangeCodeForTokenAsync
  nameWithType: AuthorizationCodeFlow.ExchangeCodeForTokenAsync
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ExchangeCodeForTokenAsync
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  isExternal: true
  name: ExchangeCodeForTokenAsync(String, String, String, CancellationToken)
  nameWithType: IAuthorizationCodeFlow.ExchangeCodeForTokenAsync(String, String, String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync(System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: ExchangeCodeForTokenAsync
    nameWithType: IAuthorizationCodeFlow.ExchangeCodeForTokenAsync
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
    name: ExchangeCodeForTokenAsync
    nameWithType: IAuthorizationCodeFlow.ExchangeCodeForTokenAsync
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ExchangeCodeForTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RefreshTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RefreshTokenAsync
  name: RefreshTokenAsync
  nameWithType: AuthorizationCodeFlow.RefreshTokenAsync
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RefreshTokenAsync
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  isExternal: true
  name: RefreshTokenAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationCodeFlow.RefreshTokenAsync(String, String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RefreshTokenAsync
    nameWithType: IAuthorizationCodeFlow.RefreshTokenAsync
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RefreshTokenAsync
    nameWithType: IAuthorizationCodeFlow.RefreshTokenAsync
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RefreshTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RevokeTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RevokeTokenAsync
  name: RevokeTokenAsync
  nameWithType: AuthorizationCodeFlow.RevokeTokenAsync
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.RevokeTokenAsync
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  isExternal: true
  name: RevokeTokenAsync(String, String, CancellationToken)
  nameWithType: IAuthorizationCodeFlow.RevokeTokenAsync(String, String, CancellationToken)
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RevokeTokenAsync
    nameWithType: IAuthorizationCodeFlow.RevokeTokenAsync
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync(System.String,System.String,System.Threading.CancellationToken)
    name: RevokeTokenAsync
    nameWithType: IAuthorizationCodeFlow.RevokeTokenAsync
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.RevokeTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ShouldForceTokenRetrieval*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ShouldForceTokenRetrieval
  name: ShouldForceTokenRetrieval
  nameWithType: AuthorizationCodeFlow.ShouldForceTokenRetrieval
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.ShouldForceTokenRetrieval
- uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval
  commentId: M:Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval
  parent: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow
  name: ShouldForceTokenRetrieval()
  nameWithType: IAuthorizationCodeFlow.ShouldForceTokenRetrieval()
  fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval()
  spec.csharp:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval
    name: ShouldForceTokenRetrieval
    nameWithType: IAuthorizationCodeFlow.ShouldForceTokenRetrieval
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval
    name: ShouldForceTokenRetrieval
    nameWithType: IAuthorizationCodeFlow.ShouldForceTokenRetrieval
    fullName: Google.Apis.Auth.OAuth2.Flows.IAuthorizationCodeFlow.ShouldForceTokenRetrieval
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.FetchTokenAsync*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.FetchTokenAsync
  name: FetchTokenAsync
  nameWithType: AuthorizationCodeFlow.FetchTokenAsync
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.FetchTokenAsync
- uid: Google.Apis.Auth.OAuth2.Requests.TokenRequest
  commentId: T:Google.Apis.Auth.OAuth2.Requests.TokenRequest
  parent: Google.Apis.Auth.OAuth2.Requests
  name: TokenRequest
  nameWithType: TokenRequest
  fullName: Google.Apis.Auth.OAuth2.Requests.TokenRequest
- uid: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Dispose*
  commentId: Overload:Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Dispose
  name: Dispose
  nameWithType: AuthorizationCodeFlow.Dispose
  fullName: Google.Apis.Auth.OAuth2.Flows.AuthorizationCodeFlow.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
