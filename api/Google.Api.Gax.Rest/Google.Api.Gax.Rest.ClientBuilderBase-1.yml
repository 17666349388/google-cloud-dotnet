### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1
  commentId: T:Google.Api.Gax.Rest.ClientBuilderBase`1
  id: ClientBuilderBase`1
  parent: Google.Api.Gax.Rest
  children:
  - Google.Api.Gax.Rest.ClientBuilderBase`1.#ctor
  - Google.Api.Gax.Rest.ClientBuilderBase`1.ApiKey
  - Google.Api.Gax.Rest.ClientBuilderBase`1.ApplicationName
  - Google.Api.Gax.Rest.ClientBuilderBase`1.BaseUri
  - Google.Api.Gax.Rest.ClientBuilderBase`1.Build
  - Google.Api.Gax.Rest.ClientBuilderBase`1.BuildAsync(System.Threading.CancellationToken)
  - Google.Api.Gax.Rest.ClientBuilderBase`1.CreateServiceInitializer
  - Google.Api.Gax.Rest.ClientBuilderBase`1.CreateServiceInitializerAsync(System.Threading.CancellationToken)
  - Google.Api.Gax.Rest.ClientBuilderBase`1.Credential
  - Google.Api.Gax.Rest.ClientBuilderBase`1.CredentialsPath
  - Google.Api.Gax.Rest.ClientBuilderBase`1.GetDefaultApplicationName
  - Google.Api.Gax.Rest.ClientBuilderBase`1.GetHttpClientInitializer
  - Google.Api.Gax.Rest.ClientBuilderBase`1.GetHttpClientInitializerAsync(System.Threading.CancellationToken)
  - Google.Api.Gax.Rest.ClientBuilderBase`1.GetScopedCredentialProvider
  - Google.Api.Gax.Rest.ClientBuilderBase`1.JsonCredentials
  - Google.Api.Gax.Rest.ClientBuilderBase`1.Validate
  - Google.Api.Gax.Rest.ClientBuilderBase`1.ValidateAtMostOneNotNull(System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: ClientBuilderBase<TClient>
  nameWithType: ClientBuilderBase<TClient>
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>
  type: Class
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ClientBuilderBase
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 21
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nBase class for API-specific builders.\n"
  example: []
  syntax:
    content: public abstract class ClientBuilderBase<TClient>
    typeParameters:
    - id: TClient
      description: The type of client created by this builder.
    content.vb: Public MustInherit Class ClientBuilderBase(Of TClient)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ClientBuilderBase(Of TClient)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient)
  name.vb: ClientBuilderBase(Of TClient)
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.CredentialsPath
  commentId: P:Google.Api.Gax.Rest.ClientBuilderBase`1.CredentialsPath
  id: CredentialsPath
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: CredentialsPath
  nameWithType: ClientBuilderBase<TClient>.CredentialsPath
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.CredentialsPath
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CredentialsPath
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 27
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nThe path to the credentials file to use, or null if credentials are being provided in a different way.\nThe resulting credential is automatically scoped with the default scopes for the API.\n"
  example: []
  syntax:
    content: public string CredentialsPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CredentialsPath As String
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.CredentialsPath*
  nameWithType.vb: ClientBuilderBase(Of TClient).CredentialsPath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).CredentialsPath
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.JsonCredentials
  commentId: P:Google.Api.Gax.Rest.ClientBuilderBase`1.JsonCredentials
  id: JsonCredentials
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: JsonCredentials
  nameWithType: ClientBuilderBase<TClient>.JsonCredentials
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.JsonCredentials
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: JsonCredentials
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 33
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nThe credentials to use as a JSON string, or null if credentials are being provided in a different way.\nThe resulting credential is automatically scoped with the default scopes for the API.\n"
  example: []
  syntax:
    content: public string JsonCredentials { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property JsonCredentials As String
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.JsonCredentials*
  nameWithType.vb: ClientBuilderBase(Of TClient).JsonCredentials
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).JsonCredentials
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.ApplicationName
  commentId: P:Google.Api.Gax.Rest.ClientBuilderBase`1.ApplicationName
  id: ApplicationName
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: ClientBuilderBase<TClient>.ApplicationName
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.ApplicationName
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ApplicationName
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 38
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nA custom application name to use for this client, or null to use the default application name.\n"
  example: []
  syntax:
    content: public string ApplicationName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApplicationName As String
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.ApplicationName*
  nameWithType.vb: ClientBuilderBase(Of TClient).ApplicationName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).ApplicationName
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.BaseUri
  commentId: P:Google.Api.Gax.Rest.ClientBuilderBase`1.BaseUri
  id: BaseUri
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: ClientBuilderBase<TClient>.BaseUri
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.BaseUri
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: BaseUri
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 43
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nA custom base URI for the service, or null to use the default URI.\n"
  example: []
  syntax:
    content: public string BaseUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BaseUri As String
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.BaseUri*
  nameWithType.vb: ClientBuilderBase(Of TClient).BaseUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).BaseUri
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.Credential
  commentId: P:Google.Api.Gax.Rest.ClientBuilderBase`1.Credential
  id: Credential
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: Credential
  nameWithType: ClientBuilderBase<TClient>.Credential
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.Credential
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Credential
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 50
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nThe credential to use for authentication. This cannot be specified alongside other authentication properties.\nNote that scopes are not automatically applied to this credential; if a scoped credential is required, the\nscoping must be applied by the calling code.\n"
  example: []
  syntax:
    content: public ICredential Credential { get; set; }
    parameters: []
    return:
      type: Google.Apis.Auth.OAuth2.ICredential
    content.vb: Public Property Credential As ICredential
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.Credential*
  nameWithType.vb: ClientBuilderBase(Of TClient).Credential
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).Credential
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.ApiKey
  commentId: P:Google.Api.Gax.Rest.ClientBuilderBase`1.ApiKey
  id: ApiKey
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: ApiKey
  nameWithType: ClientBuilderBase<TClient>.ApiKey
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.ApiKey
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ApiKey
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 57
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nAn API key to use instead of a regular credential. If this is non-null and no other credentials are supplied,\nit will be used as the only credentials. If other credentials are supplied (such as through <xref href=\"Google.Api.Gax.Rest.ClientBuilderBase%601.CredentialsPath\" data-throw-if-not-resolved=\"false\"></xref>)\nthen the two values will both be used together.\n"
  example: []
  syntax:
    content: public string ApiKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApiKey As String
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.ApiKey*
  nameWithType.vb: ClientBuilderBase(Of TClient).ApiKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).ApiKey
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.#ctor
  commentId: M:Google.Api.Gax.Rest.ClientBuilderBase`1.#ctor
  id: '#ctor'
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: ClientBuilderBase()
  nameWithType: ClientBuilderBase<TClient>.ClientBuilderBase()
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.ClientBuilderBase()
  type: Constructor
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 62
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nCreates a new instance with no settings.\n"
  example: []
  syntax:
    content: protected ClientBuilderBase()
    content.vb: Protected Sub New
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.#ctor*
  nameWithType.vb: ClientBuilderBase(Of TClient).ClientBuilderBase()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).ClientBuilderBase()
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.Validate
  commentId: M:Google.Api.Gax.Rest.ClientBuilderBase`1.Validate
  id: Validate
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ClientBuilderBase<TClient>.Validate()
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.Validate()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Validate
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 71
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nValidates that the builder is in a consistent state for building. For example, it&apos;s invalid to call\n<xref href=\"Google.Api.Gax.Rest.ClientBuilderBase%601.Build\" data-throw-if-not-resolved=\"false\"></xref> on an instance which has both JSON credentials and a credentials path specified.\n"
  example: []
  syntax:
    content: protected virtual void Validate()
    content.vb: Protected Overridable Sub Validate
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.Validate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The builder is in an invalid state.
  nameWithType.vb: ClientBuilderBase(Of TClient).Validate()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).Validate()
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.ValidateAtMostOneNotNull(System.String,System.Object[])
  commentId: M:Google.Api.Gax.Rest.ClientBuilderBase`1.ValidateAtMostOneNotNull(System.String,System.Object[])
  id: ValidateAtMostOneNotNull(System.String,System.Object[])
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: ValidateAtMostOneNotNull(String, Object[])
  nameWithType: ClientBuilderBase<TClient>.ValidateAtMostOneNotNull(String, Object[])
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.ValidateAtMostOneNotNull(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ValidateAtMostOneNotNull
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 83
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nValidates that at most one of the given values is not null.\n"
  example: []
  syntax:
    content: protected void ValidateAtMostOneNotNull(string message, params object[] values)
    parameters:
    - id: message
      type: System.String
      description: The message if the condition is violated.
    - id: values
      type: System.Object[]
      description: The values to check for nullity.
    content.vb: Protected Sub ValidateAtMostOneNotNull(message As String, ParamArray values As Object())
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.ValidateAtMostOneNotNull*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: More than one value is null.
  nameWithType.vb: ClientBuilderBase(Of TClient).ValidateAtMostOneNotNull(String, Object())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).ValidateAtMostOneNotNull(System.String, System.Object())
  name.vb: ValidateAtMostOneNotNull(String, Object())
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.CreateServiceInitializer
  commentId: M:Google.Api.Gax.Rest.ClientBuilderBase`1.CreateServiceInitializer
  id: CreateServiceInitializer
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: CreateServiceInitializer()
  nameWithType: ClientBuilderBase<TClient>.CreateServiceInitializer()
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.CreateServiceInitializer()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CreateServiceInitializer
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 93
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nCreates an initializer for the service. This method does not perform any validation.\n"
  example: []
  syntax:
    content: protected virtual BaseClientService.Initializer CreateServiceInitializer()
    return:
      type: Google.Apis.Services.BaseClientService.Initializer
      description: An initializer for the service.
    content.vb: Protected Overridable Function CreateServiceInitializer As BaseClientService.Initializer
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.CreateServiceInitializer*
  nameWithType.vb: ClientBuilderBase(Of TClient).CreateServiceInitializer()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).CreateServiceInitializer()
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.CreateServiceInitializerAsync(System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Rest.ClientBuilderBase`1.CreateServiceInitializerAsync(System.Threading.CancellationToken)
  id: CreateServiceInitializerAsync(System.Threading.CancellationToken)
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: CreateServiceInitializerAsync(CancellationToken)
  nameWithType: ClientBuilderBase<TClient>.CreateServiceInitializerAsync(CancellationToken)
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.CreateServiceInitializerAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CreateServiceInitializerAsync
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 100
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nCreates an initializer for the service asynchronously. This method does not perform any validation.\n"
  example: []
  syntax:
    content: protected virtual Task<BaseClientService.Initializer> CreateServiceInitializerAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Services.BaseClientService.Initializer}
      description: An initializer for the service.
    content.vb: Protected Overridable Function CreateServiceInitializerAsync(cancellationToken As CancellationToken) As Task(Of BaseClientService.Initializer)
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.CreateServiceInitializerAsync*
  nameWithType.vb: ClientBuilderBase(Of TClient).CreateServiceInitializerAsync(CancellationToken)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).CreateServiceInitializerAsync(System.Threading.CancellationToken)
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.GetHttpClientInitializer
  commentId: M:Google.Api.Gax.Rest.ClientBuilderBase`1.GetHttpClientInitializer
  id: GetHttpClientInitializer
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: GetHttpClientInitializer()
  nameWithType: ClientBuilderBase<TClient>.GetHttpClientInitializer()
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.GetHttpClientInitializer()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHttpClientInitializer
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 123
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nObtains credentials synchronously. Override this method in a concrete builder type if more\ncredential mechanisms are supported.\n"
  example: []
  syntax:
    content: protected virtual IConfigurableHttpClientInitializer GetHttpClientInitializer()
    return:
      type: Google.Apis.Http.IConfigurableHttpClientInitializer
    content.vb: Protected Overridable Function GetHttpClientInitializer As IConfigurableHttpClientInitializer
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.GetHttpClientInitializer*
  nameWithType.vb: ClientBuilderBase(Of TClient).GetHttpClientInitializer()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).GetHttpClientInitializer()
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.GetHttpClientInitializerAsync(System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Rest.ClientBuilderBase`1.GetHttpClientInitializerAsync(System.Threading.CancellationToken)
  id: GetHttpClientInitializerAsync(System.Threading.CancellationToken)
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: GetHttpClientInitializerAsync(CancellationToken)
  nameWithType: ClientBuilderBase<TClient>.GetHttpClientInitializerAsync(CancellationToken)
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.GetHttpClientInitializerAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHttpClientInitializerAsync
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 146
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nObtains credentials asynchronously. Override this method in a concrete builder type if more\ncredential mechanisms are supported.\n"
  example: []
  syntax:
    content: protected virtual Task<IConfigurableHttpClientInitializer> GetHttpClientInitializerAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Http.IConfigurableHttpClientInitializer}
    content.vb: Protected Overridable Function GetHttpClientInitializerAsync(cancellationToken As CancellationToken) As Task(Of IConfigurableHttpClientInitializer)
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.GetHttpClientInitializerAsync*
  nameWithType.vb: ClientBuilderBase(Of TClient).GetHttpClientInitializerAsync(CancellationToken)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).GetHttpClientInitializerAsync(System.Threading.CancellationToken)
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.GetScopedCredentialProvider
  commentId: M:Google.Api.Gax.Rest.ClientBuilderBase`1.GetScopedCredentialProvider
  id: GetScopedCredentialProvider
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: GetScopedCredentialProvider()
  nameWithType: ClientBuilderBase<TClient>.GetScopedCredentialProvider()
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.GetScopedCredentialProvider()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetScopedCredentialProvider
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 168
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nReturns the scoped credential provider for this builder.\n"
  example: []
  syntax:
    content: protected abstract ScopedCredentialProvider GetScopedCredentialProvider()
    return:
      type: Google.Api.Gax.Rest.ScopedCredentialProvider
    content.vb: Protected MustOverride Function GetScopedCredentialProvider As ScopedCredentialProvider
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.GetScopedCredentialProvider*
  nameWithType.vb: ClientBuilderBase(Of TClient).GetScopedCredentialProvider()
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).GetScopedCredentialProvider()
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.GetDefaultApplicationName
  commentId: M:Google.Api.Gax.Rest.ClientBuilderBase`1.GetDefaultApplicationName
  id: GetDefaultApplicationName
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: GetDefaultApplicationName()
  nameWithType: ClientBuilderBase<TClient>.GetDefaultApplicationName()
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.GetDefaultApplicationName()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetDefaultApplicationName
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 173
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nReturns the default application name, used if no custom name is otherwise specified.\n"
  example: []
  syntax:
    content: protected abstract string GetDefaultApplicationName()
    return:
      type: System.String
    content.vb: Protected MustOverride Function GetDefaultApplicationName As String
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.GetDefaultApplicationName*
  nameWithType.vb: ClientBuilderBase(Of TClient).GetDefaultApplicationName()
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).GetDefaultApplicationName()
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.Build
  commentId: M:Google.Api.Gax.Rest.ClientBuilderBase`1.Build
  id: Build
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: ClientBuilderBase<TClient>.Build()
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.Build()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Build
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 181
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nBuilds the resulting client.\n"
  example: []
  syntax:
    content: public abstract TClient Build()
    return:
      type: '{TClient}'
    content.vb: Public MustOverride Function Build As TClient
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.Build*
  nameWithType.vb: ClientBuilderBase(Of TClient).Build()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).Build()
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.BuildAsync(System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Rest.ClientBuilderBase`1.BuildAsync(System.Threading.CancellationToken)
  id: BuildAsync(System.Threading.CancellationToken)
  parent: Google.Api.Gax.Rest.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: BuildAsync(CancellationToken)
  nameWithType: ClientBuilderBase<TClient>.BuildAsync(CancellationToken)
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.BuildAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Rest/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: BuildAsync
    path: Google.Api.Gax.Rest/ClientBuilderBase.cs
    startLine: 186
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nBuilds the resulting client asynchronously.\n"
  example: []
  syntax:
    content: public abstract Task<TClient> BuildAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TClient}}
    content.vb: Public MustOverride Function BuildAsync(cancellationToken As CancellationToken = Nothing) As Task(Of TClient)
  overload: Google.Api.Gax.Rest.ClientBuilderBase`1.BuildAsync*
  nameWithType.vb: ClientBuilderBase(Of TClient).BuildAsync(CancellationToken)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).BuildAsync(System.Threading.CancellationToken)
references:
- uid: Google.Api.Gax.Rest
  commentId: N:Google.Api.Gax.Rest
  name: Google.Api.Gax.Rest
  nameWithType: Google.Api.Gax.Rest
  fullName: Google.Api.Gax.Rest
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.CredentialsPath*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.CredentialsPath
  name: CredentialsPath
  nameWithType: ClientBuilderBase<TClient>.CredentialsPath
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.CredentialsPath
  nameWithType.vb: ClientBuilderBase(Of TClient).CredentialsPath
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).CredentialsPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.JsonCredentials*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.JsonCredentials
  name: JsonCredentials
  nameWithType: ClientBuilderBase<TClient>.JsonCredentials
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.JsonCredentials
  nameWithType.vb: ClientBuilderBase(Of TClient).JsonCredentials
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).JsonCredentials
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.ApplicationName*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.ApplicationName
  name: ApplicationName
  nameWithType: ClientBuilderBase<TClient>.ApplicationName
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.ApplicationName
  nameWithType.vb: ClientBuilderBase(Of TClient).ApplicationName
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).ApplicationName
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.BaseUri*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.BaseUri
  name: BaseUri
  nameWithType: ClientBuilderBase<TClient>.BaseUri
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.BaseUri
  nameWithType.vb: ClientBuilderBase(Of TClient).BaseUri
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).BaseUri
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.Credential*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.Credential
  name: Credential
  nameWithType: ClientBuilderBase<TClient>.Credential
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.Credential
  nameWithType.vb: ClientBuilderBase(Of TClient).Credential
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).Credential
- uid: Google.Apis.Auth.OAuth2.ICredential
  commentId: T:Google.Apis.Auth.OAuth2.ICredential
  parent: Google.Apis.Auth.OAuth2
  isExternal: true
  name: ICredential
  nameWithType: ICredential
  fullName: Google.Apis.Auth.OAuth2.ICredential
- uid: Google.Apis.Auth.OAuth2
  commentId: N:Google.Apis.Auth.OAuth2
  isExternal: true
  name: Google.Apis.Auth.OAuth2
  nameWithType: Google.Apis.Auth.OAuth2
  fullName: Google.Apis.Auth.OAuth2
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.CredentialsPath
  commentId: P:Google.Api.Gax.Rest.ClientBuilderBase`1.CredentialsPath
  isExternal: true
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.ApiKey*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.ApiKey
  name: ApiKey
  nameWithType: ClientBuilderBase<TClient>.ApiKey
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.ApiKey
  nameWithType.vb: ClientBuilderBase(Of TClient).ApiKey
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).ApiKey
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.#ctor*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.#ctor
  name: ClientBuilderBase
  nameWithType: ClientBuilderBase<TClient>.ClientBuilderBase
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.ClientBuilderBase
  nameWithType.vb: ClientBuilderBase(Of TClient).ClientBuilderBase
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).ClientBuilderBase
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.Build
  commentId: M:Google.Api.Gax.Rest.ClientBuilderBase`1.Build
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.Validate*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.Validate
  name: Validate
  nameWithType: ClientBuilderBase<TClient>.Validate
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.Validate
  nameWithType.vb: ClientBuilderBase(Of TClient).Validate
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).Validate
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.ValidateAtMostOneNotNull*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.ValidateAtMostOneNotNull
  name: ValidateAtMostOneNotNull
  nameWithType: ClientBuilderBase<TClient>.ValidateAtMostOneNotNull
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.ValidateAtMostOneNotNull
  nameWithType.vb: ClientBuilderBase(Of TClient).ValidateAtMostOneNotNull
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).ValidateAtMostOneNotNull
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.CreateServiceInitializer*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.CreateServiceInitializer
  name: CreateServiceInitializer
  nameWithType: ClientBuilderBase<TClient>.CreateServiceInitializer
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.CreateServiceInitializer
  nameWithType.vb: ClientBuilderBase(Of TClient).CreateServiceInitializer
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).CreateServiceInitializer
- uid: Google.Apis.Services.BaseClientService.Initializer
  commentId: T:Google.Apis.Services.BaseClientService.Initializer
  parent: Google.Apis.Services
  isExternal: true
  name: BaseClientService.Initializer
  nameWithType: BaseClientService.Initializer
  fullName: Google.Apis.Services.BaseClientService.Initializer
- uid: Google.Apis.Services
  commentId: N:Google.Apis.Services
  isExternal: true
  name: Google.Apis.Services
  nameWithType: Google.Apis.Services
  fullName: Google.Apis.Services
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.CreateServiceInitializerAsync*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.CreateServiceInitializerAsync
  name: CreateServiceInitializerAsync
  nameWithType: ClientBuilderBase<TClient>.CreateServiceInitializerAsync
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.CreateServiceInitializerAsync
  nameWithType.vb: ClientBuilderBase(Of TClient).CreateServiceInitializerAsync
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).CreateServiceInitializerAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Google.Apis.Services.BaseClientService.Initializer}
  commentId: T:System.Threading.Tasks.Task{Google.Apis.Services.BaseClientService.Initializer}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BaseClientService.Initializer>
  nameWithType: Task<BaseClientService.Initializer>
  fullName: System.Threading.Tasks.Task<Google.Apis.Services.BaseClientService.Initializer>
  nameWithType.vb: Task(Of BaseClientService.Initializer)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Apis.Services.BaseClientService.Initializer)
  name.vb: Task(Of BaseClientService.Initializer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Services.BaseClientService.Initializer
    name: BaseClientService.Initializer
    nameWithType: BaseClientService.Initializer
    fullName: Google.Apis.Services.BaseClientService.Initializer
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Services.BaseClientService.Initializer
    name: BaseClientService.Initializer
    nameWithType: BaseClientService.Initializer
    fullName: Google.Apis.Services.BaseClientService.Initializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.GetHttpClientInitializer*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.GetHttpClientInitializer
  name: GetHttpClientInitializer
  nameWithType: ClientBuilderBase<TClient>.GetHttpClientInitializer
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.GetHttpClientInitializer
  nameWithType.vb: ClientBuilderBase(Of TClient).GetHttpClientInitializer
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).GetHttpClientInitializer
- uid: Google.Apis.Http.IConfigurableHttpClientInitializer
  commentId: T:Google.Apis.Http.IConfigurableHttpClientInitializer
  parent: Google.Apis.Http
  isExternal: true
  name: IConfigurableHttpClientInitializer
  nameWithType: IConfigurableHttpClientInitializer
  fullName: Google.Apis.Http.IConfigurableHttpClientInitializer
- uid: Google.Apis.Http
  commentId: N:Google.Apis.Http
  isExternal: true
  name: Google.Apis.Http
  nameWithType: Google.Apis.Http
  fullName: Google.Apis.Http
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.GetHttpClientInitializerAsync*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.GetHttpClientInitializerAsync
  name: GetHttpClientInitializerAsync
  nameWithType: ClientBuilderBase<TClient>.GetHttpClientInitializerAsync
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.GetHttpClientInitializerAsync
  nameWithType.vb: ClientBuilderBase(Of TClient).GetHttpClientInitializerAsync
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).GetHttpClientInitializerAsync
- uid: System.Threading.Tasks.Task{Google.Apis.Http.IConfigurableHttpClientInitializer}
  commentId: T:System.Threading.Tasks.Task{Google.Apis.Http.IConfigurableHttpClientInitializer}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IConfigurableHttpClientInitializer>
  nameWithType: Task<IConfigurableHttpClientInitializer>
  fullName: System.Threading.Tasks.Task<Google.Apis.Http.IConfigurableHttpClientInitializer>
  nameWithType.vb: Task(Of IConfigurableHttpClientInitializer)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Apis.Http.IConfigurableHttpClientInitializer)
  name.vb: Task(Of IConfigurableHttpClientInitializer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Http.IConfigurableHttpClientInitializer
    name: IConfigurableHttpClientInitializer
    nameWithType: IConfigurableHttpClientInitializer
    fullName: Google.Apis.Http.IConfigurableHttpClientInitializer
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Http.IConfigurableHttpClientInitializer
    name: IConfigurableHttpClientInitializer
    nameWithType: IConfigurableHttpClientInitializer
    fullName: Google.Apis.Http.IConfigurableHttpClientInitializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.GetScopedCredentialProvider*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.GetScopedCredentialProvider
  name: GetScopedCredentialProvider
  nameWithType: ClientBuilderBase<TClient>.GetScopedCredentialProvider
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.GetScopedCredentialProvider
  nameWithType.vb: ClientBuilderBase(Of TClient).GetScopedCredentialProvider
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).GetScopedCredentialProvider
- uid: Google.Api.Gax.Rest.ScopedCredentialProvider
  commentId: T:Google.Api.Gax.Rest.ScopedCredentialProvider
  parent: Google.Api.Gax.Rest
  name: ScopedCredentialProvider
  nameWithType: ScopedCredentialProvider
  fullName: Google.Api.Gax.Rest.ScopedCredentialProvider
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.GetDefaultApplicationName*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.GetDefaultApplicationName
  name: GetDefaultApplicationName
  nameWithType: ClientBuilderBase<TClient>.GetDefaultApplicationName
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.GetDefaultApplicationName
  nameWithType.vb: ClientBuilderBase(Of TClient).GetDefaultApplicationName
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).GetDefaultApplicationName
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.Build*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.Build
  name: Build
  nameWithType: ClientBuilderBase<TClient>.Build
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.Build
  nameWithType.vb: ClientBuilderBase(Of TClient).Build
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).Build
- uid: '{TClient}'
  commentId: '!:TClient'
  definition: TClient
  name: TClient
  nameWithType: TClient
  fullName: TClient
- uid: TClient
  commentId: '!:TClient'
  name: TClient
  nameWithType: TClient
  fullName: TClient
- uid: Google.Api.Gax.Rest.ClientBuilderBase`1.BuildAsync*
  commentId: Overload:Google.Api.Gax.Rest.ClientBuilderBase`1.BuildAsync
  name: BuildAsync
  nameWithType: ClientBuilderBase<TClient>.BuildAsync
  fullName: Google.Api.Gax.Rest.ClientBuilderBase<TClient>.BuildAsync
  nameWithType.vb: ClientBuilderBase(Of TClient).BuildAsync
  fullName.vb: Google.Api.Gax.Rest.ClientBuilderBase(Of TClient).BuildAsync
- uid: System.Threading.Tasks.Task{{TClient}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TClient>
  nameWithType: Task<TClient>
  fullName: System.Threading.Tasks.Task<TClient>
  nameWithType.vb: Task(Of TClient)
  fullName.vb: System.Threading.Tasks.Task(Of TClient)
  name.vb: Task(Of TClient)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TClient
    nameWithType: TClient
    fullName: TClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TClient
    nameWithType: TClient
    fullName: TClient
  - name: )
    nameWithType: )
    fullName: )
