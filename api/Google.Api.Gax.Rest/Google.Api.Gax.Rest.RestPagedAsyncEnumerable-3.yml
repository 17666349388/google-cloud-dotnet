### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3
  commentId: T:Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3
  id: RestPagedAsyncEnumerable`3
  parent: Google.Api.Gax.Rest
  children:
  - Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.#ctor(System.Func{`0},Google.Api.Gax.Rest.IPageManager{`0,`1,`2})
  - Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.AsRawResponses
  - Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.GetEnumerator
  - Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.ReadPageAsync(System.Int32,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: RestPagedAsyncEnumerable<TRequest, TResponse, TResource>
  nameWithType: RestPagedAsyncEnumerable<TRequest, TResponse, TResource>
  fullName: Google.Api.Gax.Rest.RestPagedAsyncEnumerable<TRequest, TResponse, TResource>
  type: Class
  source:
    remote:
      path: src/Google.Api.Gax.Rest/RestPagedAsyncEnumerable.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: RestPagedAsyncEnumerable
    path: src/Google.Api.Gax.Rest/RestPagedAsyncEnumerable.cs
    startLine: 25
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nAn asynchronous sequence of resources, obtained lazily via API operations which retrieve a page at a time.\n"
  example: []
  syntax:
    content: 'public sealed class RestPagedAsyncEnumerable<TRequest, TResponse, TResource> : PagedAsyncEnumerable<TResponse, TResource> where TRequest : class, IClientServiceRequest<TResponse> where TResponse : class'
    typeParameters:
    - id: TRequest
      description: The API request type.
    - id: TResponse
      description: The API response type. Each response contains a page of resources.
    - id: TResource
      description: The resource type contained within the response.
    content.vb: >-
      Public NotInheritable Class RestPagedAsyncEnumerable(Of TRequest As {Class, IClientServiceRequest(Of TResponse)}, TResponse As Class, TResource)
          Inherits PagedAsyncEnumerable(Of TResponse, TResource)
  inheritance:
  - System.Object
  - Google.Api.Gax.PagedAsyncEnumerable{{TResponse},{TResource}}
  inheritedMembers:
  - Google.Api.Gax.PagedAsyncEnumerable{{TResponse},{TResource}}.AsRawResponses
  - Google.Api.Gax.PagedAsyncEnumerable{{TResponse},{TResource}}.ReadPageAsync(System.Int32,System.Threading.CancellationToken)
  - Google.Api.Gax.PagedAsyncEnumerable{{TResponse},{TResource}}.GetEnumerator
  nameWithType.vb: RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Google.Api.Gax.Rest.RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource)
  name.vb: RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource)
- uid: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.#ctor(System.Func{`0},Google.Api.Gax.Rest.IPageManager{`0,`1,`2})
  commentId: M:Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.#ctor(System.Func{`0},Google.Api.Gax.Rest.IPageManager{`0,`1,`2})
  id: '#ctor(System.Func{`0},Google.Api.Gax.Rest.IPageManager{`0,`1,`2})'
  parent: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3
  langs:
  - csharp
  - vb
  name: RestPagedAsyncEnumerable(Func<TRequest>, IPageManager<TRequest, TResponse, TResource>)
  nameWithType: RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.RestPagedAsyncEnumerable(Func<TRequest>, IPageManager<TRequest, TResponse, TResource>)
  fullName: Google.Api.Gax.Rest.RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.RestPagedAsyncEnumerable(System.Func<TRequest>, Google.Api.Gax.Rest.IPageManager<TRequest, TResponse, TResource>)
  type: Constructor
  source:
    remote:
      path: src/Google.Api.Gax.Rest/RestPagedAsyncEnumerable.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: src/Google.Api.Gax.Rest/RestPagedAsyncEnumerable.cs
    startLine: 37
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  summary: "\nCreates a new lazily-evaluated sequence from the given API call, initial request, and call settings.\n"
  example: []
  syntax:
    content: public RestPagedAsyncEnumerable(Func<TRequest> requestProvider, IPageManager<TRequest, TResponse, TResource> pageManager)
    parameters:
    - id: requestProvider
      type: System.Func{{TRequest}}
      description: A factory used to create an initial request each time the sequence is iterated over.
    - id: pageManager
      type: Google.Api.Gax.Rest.IPageManager{{TRequest},{TResponse},{TResource}}
      description: A manager to work with the requests and responses.
    content.vb: Public Sub New(requestProvider As Func(Of TRequest), pageManager As IPageManager(Of TRequest, TResponse, TResource))
  overload: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.#ctor*
  nameWithType.vb: RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).RestPagedAsyncEnumerable(Func(Of TRequest), IPageManager(Of TRequest, TResponse, TResource))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Rest.RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).RestPagedAsyncEnumerable(System.Func(Of TRequest), Google.Api.Gax.Rest.IPageManager(Of TRequest, TResponse, TResource))
  name.vb: RestPagedAsyncEnumerable(Func(Of TRequest), IPageManager(Of TRequest, TResponse, TResource))
- uid: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.AsRawResponses
  commentId: M:Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.AsRawResponses
  id: AsRawResponses
  parent: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3
  langs:
  - csharp
  - vb
  name: AsRawResponses()
  nameWithType: RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.AsRawResponses()
  fullName: Google.Api.Gax.Rest.RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.AsRawResponses()
  type: Method
  source:
    remote:
      path: src/Google.Api.Gax.Rest/RestPagedAsyncEnumerable.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: AsRawResponses
    path: src/Google.Api.Gax.Rest/RestPagedAsyncEnumerable.cs
    startLine: 45
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  example: []
  syntax:
    content: public override IAsyncEnumerable<TResponse> AsRawResponses()
    return:
      type: IAsyncEnumerable{{TResponse}}
    content.vb: Public Overrides Function AsRawResponses As IAsyncEnumerable(Of TResponse)
  overridden: Google.Api.Gax.PagedAsyncEnumerable{{TResponse},{TResource}}.AsRawResponses
  overload: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.AsRawResponses*
  nameWithType.vb: RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).AsRawResponses()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Google.Api.Gax.Rest.RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).AsRawResponses()
- uid: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.ReadPageAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.ReadPageAsync(System.Int32,System.Threading.CancellationToken)
  id: ReadPageAsync(System.Int32,System.Threading.CancellationToken)
  parent: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3
  langs:
  - csharp
  - vb
  name: ReadPageAsync(Int32, CancellationToken)
  nameWithType: RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.ReadPageAsync(Int32, CancellationToken)
  fullName: Google.Api.Gax.Rest.RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.ReadPageAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Google.Api.Gax.Rest/RestPagedAsyncEnumerable.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ReadPageAsync
    path: src/Google.Api.Gax.Rest/RestPagedAsyncEnumerable.cs
    startLine: 48
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  example: []
  syntax:
    content: public override Task<Page<TResource>> ReadPageAsync(int pageSize, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: pageSize
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Google.Api.Gax.Page{{TResource}}}
    content.vb: Public Overrides Function ReadPageAsync(pageSize As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Page(Of TResource))
  overridden: Google.Api.Gax.PagedAsyncEnumerable{{TResponse},{TResource}}.ReadPageAsync(System.Int32,System.Threading.CancellationToken)
  overload: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.ReadPageAsync*
  nameWithType.vb: RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).ReadPageAsync(Int32, CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Google.Api.Gax.Rest.RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).ReadPageAsync(System.Int32, System.Threading.CancellationToken)
- uid: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.GetEnumerator
  commentId: M:Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.GetEnumerator
  id: GetEnumerator
  parent: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.GetEnumerator()
  fullName: Google.Api.Gax.Rest.RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Google.Api.Gax.Rest/RestPagedAsyncEnumerable.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetEnumerator
    path: src/Google.Api.Gax.Rest/RestPagedAsyncEnumerable.cs
    startLine: 53
  assemblies:
  - Google.Api.Gax.Rest
  namespace: Google.Api.Gax.Rest
  example: []
  syntax:
    content: public override IAsyncEnumerator<TResource> GetEnumerator()
    return:
      type: IAsyncEnumerator{{TResource}}
    content.vb: Public Overrides Function GetEnumerator As IAsyncEnumerator(Of TResource)
  overridden: Google.Api.Gax.PagedAsyncEnumerable{{TResponse},{TResource}}.GetEnumerator
  overload: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.GetEnumerator*
  nameWithType.vb: RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).GetEnumerator()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Google.Api.Gax.Rest.RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).GetEnumerator()
references:
- uid: Google.Api.Gax.Rest
  commentId: N:Google.Api.Gax.Rest
  isExternal: false
  name: Google.Api.Gax.Rest
  nameWithType: Google.Api.Gax.Rest
  fullName: Google.Api.Gax.Rest
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Api.Gax.PagedAsyncEnumerable{{TResponse},{TResource}}
  commentId: T:Google.Api.Gax.PagedAsyncEnumerable{`1,`2}
  parent: Google.Api.Gax
  definition: Google.Api.Gax.PagedAsyncEnumerable`2
  name: PagedAsyncEnumerable<TResponse, TResource>
  nameWithType: PagedAsyncEnumerable<TResponse, TResource>
  fullName: Google.Api.Gax.PagedAsyncEnumerable<TResponse, TResource>
  nameWithType.vb: PagedAsyncEnumerable(Of TResponse, TResource)
  fullName.vb: Google.Api.Gax.PagedAsyncEnumerable(Of TResponse, TResource)
  name.vb: PagedAsyncEnumerable(Of TResponse, TResource)
  spec.csharp:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2
    name: PagedAsyncEnumerable
    nameWithType: PagedAsyncEnumerable
    fullName: Google.Api.Gax.PagedAsyncEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2
    name: PagedAsyncEnumerable
    nameWithType: PagedAsyncEnumerable
    fullName: Google.Api.Gax.PagedAsyncEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.PagedAsyncEnumerable{{TResponse},{TResource}}.AsRawResponses
  commentId: M:Google.Api.Gax.PagedAsyncEnumerable{`1,`2}.AsRawResponses
  parent: Google.Api.Gax.PagedAsyncEnumerable{{TResponse},{TResource}}
  definition: Google.Api.Gax.PagedAsyncEnumerable`2.AsRawResponses
  name: AsRawResponses()
  nameWithType: PagedAsyncEnumerable<TResponse, TResource>.AsRawResponses()
  fullName: Google.Api.Gax.PagedAsyncEnumerable<TResponse, TResource>.AsRawResponses()
  nameWithType.vb: PagedAsyncEnumerable(Of TResponse, TResource).AsRawResponses()
  fullName.vb: Google.Api.Gax.PagedAsyncEnumerable(Of TResponse, TResource).AsRawResponses()
  spec.csharp:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2.AsRawResponses
    name: AsRawResponses
    nameWithType: PagedAsyncEnumerable<TResponse, TResource>.AsRawResponses
    fullName: Google.Api.Gax.PagedAsyncEnumerable<TResponse, TResource>.AsRawResponses
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2.AsRawResponses
    name: AsRawResponses
    nameWithType: PagedAsyncEnumerable(Of TResponse, TResource).AsRawResponses
    fullName: Google.Api.Gax.PagedAsyncEnumerable(Of TResponse, TResource).AsRawResponses
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.PagedAsyncEnumerable{{TResponse},{TResource}}.ReadPageAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.PagedAsyncEnumerable{`1,`2}.ReadPageAsync(System.Int32,System.Threading.CancellationToken)
  parent: Google.Api.Gax.PagedAsyncEnumerable{{TResponse},{TResource}}
  definition: Google.Api.Gax.PagedAsyncEnumerable`2.ReadPageAsync(System.Int32,System.Threading.CancellationToken)
  name: ReadPageAsync(Int32, CancellationToken)
  nameWithType: PagedAsyncEnumerable<TResponse, TResource>.ReadPageAsync(Int32, CancellationToken)
  fullName: Google.Api.Gax.PagedAsyncEnumerable<TResponse, TResource>.ReadPageAsync(System.Int32, System.Threading.CancellationToken)
  nameWithType.vb: PagedAsyncEnumerable(Of TResponse, TResource).ReadPageAsync(Int32, CancellationToken)
  fullName.vb: Google.Api.Gax.PagedAsyncEnumerable(Of TResponse, TResource).ReadPageAsync(System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2.ReadPageAsync(System.Int32,System.Threading.CancellationToken)
    name: ReadPageAsync
    nameWithType: PagedAsyncEnumerable<TResponse, TResource>.ReadPageAsync
    fullName: Google.Api.Gax.PagedAsyncEnumerable<TResponse, TResource>.ReadPageAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2.ReadPageAsync(System.Int32,System.Threading.CancellationToken)
    name: ReadPageAsync
    nameWithType: PagedAsyncEnumerable(Of TResponse, TResource).ReadPageAsync
    fullName: Google.Api.Gax.PagedAsyncEnumerable(Of TResponse, TResource).ReadPageAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.PagedAsyncEnumerable{{TResponse},{TResource}}.GetEnumerator
  commentId: M:Google.Api.Gax.PagedAsyncEnumerable{`1,`2}.GetEnumerator
  parent: Google.Api.Gax.PagedAsyncEnumerable{{TResponse},{TResource}}
  definition: Google.Api.Gax.PagedAsyncEnumerable`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: PagedAsyncEnumerable<TResponse, TResource>.GetEnumerator()
  fullName: Google.Api.Gax.PagedAsyncEnumerable<TResponse, TResource>.GetEnumerator()
  nameWithType.vb: PagedAsyncEnumerable(Of TResponse, TResource).GetEnumerator()
  fullName.vb: Google.Api.Gax.PagedAsyncEnumerable(Of TResponse, TResource).GetEnumerator()
  spec.csharp:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2.GetEnumerator
    name: GetEnumerator
    nameWithType: PagedAsyncEnumerable<TResponse, TResource>.GetEnumerator
    fullName: Google.Api.Gax.PagedAsyncEnumerable<TResponse, TResource>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2.GetEnumerator
    name: GetEnumerator
    nameWithType: PagedAsyncEnumerable(Of TResponse, TResource).GetEnumerator
    fullName: Google.Api.Gax.PagedAsyncEnumerable(Of TResponse, TResource).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Api.Gax.PagedAsyncEnumerable`2
  commentId: T:Google.Api.Gax.PagedAsyncEnumerable`2
  isExternal: false
  name: PagedAsyncEnumerable<TResponse, TResource>
  nameWithType: PagedAsyncEnumerable<TResponse, TResource>
  fullName: Google.Api.Gax.PagedAsyncEnumerable<TResponse, TResource>
  nameWithType.vb: PagedAsyncEnumerable(Of TResponse, TResource)
  fullName.vb: Google.Api.Gax.PagedAsyncEnumerable(Of TResponse, TResource)
  name.vb: PagedAsyncEnumerable(Of TResponse, TResource)
  spec.csharp:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2
    name: PagedAsyncEnumerable
    nameWithType: PagedAsyncEnumerable
    fullName: Google.Api.Gax.PagedAsyncEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2
    name: PagedAsyncEnumerable
    nameWithType: PagedAsyncEnumerable
    fullName: Google.Api.Gax.PagedAsyncEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax
  commentId: N:Google.Api.Gax
  isExternal: false
  name: Google.Api.Gax
  nameWithType: Google.Api.Gax
  fullName: Google.Api.Gax
- uid: Google.Api.Gax.PagedAsyncEnumerable`2.AsRawResponses
  commentId: M:Google.Api.Gax.PagedAsyncEnumerable`2.AsRawResponses
  isExternal: false
  name: AsRawResponses()
  nameWithType: PagedAsyncEnumerable<TResponse, TResource>.AsRawResponses()
  fullName: Google.Api.Gax.PagedAsyncEnumerable<TResponse, TResource>.AsRawResponses()
  nameWithType.vb: PagedAsyncEnumerable(Of TResponse, TResource).AsRawResponses()
  fullName.vb: Google.Api.Gax.PagedAsyncEnumerable(Of TResponse, TResource).AsRawResponses()
  spec.csharp:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2.AsRawResponses
    name: AsRawResponses
    nameWithType: PagedAsyncEnumerable<TResponse, TResource>.AsRawResponses
    fullName: Google.Api.Gax.PagedAsyncEnumerable<TResponse, TResource>.AsRawResponses
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2.AsRawResponses
    name: AsRawResponses
    nameWithType: PagedAsyncEnumerable(Of TResponse, TResource).AsRawResponses
    fullName: Google.Api.Gax.PagedAsyncEnumerable(Of TResponse, TResource).AsRawResponses
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.PagedAsyncEnumerable`2.ReadPageAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.PagedAsyncEnumerable`2.ReadPageAsync(System.Int32,System.Threading.CancellationToken)
  isExternal: true
  name: ReadPageAsync(Int32, CancellationToken)
  nameWithType: PagedAsyncEnumerable<TResponse, TResource>.ReadPageAsync(Int32, CancellationToken)
  fullName: Google.Api.Gax.PagedAsyncEnumerable<TResponse, TResource>.ReadPageAsync(System.Int32, System.Threading.CancellationToken)
  nameWithType.vb: PagedAsyncEnumerable(Of TResponse, TResource).ReadPageAsync(Int32, CancellationToken)
  fullName.vb: Google.Api.Gax.PagedAsyncEnumerable(Of TResponse, TResource).ReadPageAsync(System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2.ReadPageAsync(System.Int32,System.Threading.CancellationToken)
    name: ReadPageAsync
    nameWithType: PagedAsyncEnumerable<TResponse, TResource>.ReadPageAsync
    fullName: Google.Api.Gax.PagedAsyncEnumerable<TResponse, TResource>.ReadPageAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2.ReadPageAsync(System.Int32,System.Threading.CancellationToken)
    name: ReadPageAsync
    nameWithType: PagedAsyncEnumerable(Of TResponse, TResource).ReadPageAsync
    fullName: Google.Api.Gax.PagedAsyncEnumerable(Of TResponse, TResource).ReadPageAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.PagedAsyncEnumerable`2.GetEnumerator
  commentId: M:Google.Api.Gax.PagedAsyncEnumerable`2.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  nameWithType: PagedAsyncEnumerable<TResponse, TResource>.GetEnumerator()
  fullName: Google.Api.Gax.PagedAsyncEnumerable<TResponse, TResource>.GetEnumerator()
  nameWithType.vb: PagedAsyncEnumerable(Of TResponse, TResource).GetEnumerator()
  fullName.vb: Google.Api.Gax.PagedAsyncEnumerable(Of TResponse, TResource).GetEnumerator()
  spec.csharp:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2.GetEnumerator
    name: GetEnumerator
    nameWithType: PagedAsyncEnumerable<TResponse, TResource>.GetEnumerator
    fullName: Google.Api.Gax.PagedAsyncEnumerable<TResponse, TResource>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Api.Gax.PagedAsyncEnumerable`2.GetEnumerator
    name: GetEnumerator
    nameWithType: PagedAsyncEnumerable(Of TResponse, TResource).GetEnumerator
    fullName: Google.Api.Gax.PagedAsyncEnumerable(Of TResponse, TResource).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.#ctor*
  commentId: Overload:Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.#ctor
  isExternal: false
  name: RestPagedAsyncEnumerable
  nameWithType: RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.RestPagedAsyncEnumerable
  fullName: Google.Api.Gax.Rest.RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.RestPagedAsyncEnumerable
  nameWithType.vb: RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).RestPagedAsyncEnumerable
  fullName.vb: Google.Api.Gax.Rest.RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).RestPagedAsyncEnumerable
- uid: System.Func{{TRequest}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  name: Func<TRequest>
  nameWithType: Func<TRequest>
  fullName: System.Func<TRequest>
  nameWithType.vb: Func(Of TRequest)
  fullName.vb: System.Func(Of TRequest)
  name.vb: Func(Of TRequest)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Rest.IPageManager{{TRequest},{TResponse},{TResource}}
  commentId: T:Google.Api.Gax.Rest.IPageManager{`0,`1,`2}
  parent: Google.Api.Gax.Rest
  definition: Google.Api.Gax.Rest.IPageManager`3
  name: IPageManager<TRequest, TResponse, TResource>
  nameWithType: IPageManager<TRequest, TResponse, TResource>
  fullName: Google.Api.Gax.Rest.IPageManager<TRequest, TResponse, TResource>
  nameWithType.vb: IPageManager(Of TRequest, TResponse, TResource)
  fullName.vb: Google.Api.Gax.Rest.IPageManager(Of TRequest, TResponse, TResource)
  name.vb: IPageManager(Of TRequest, TResponse, TResource)
  spec.csharp:
  - uid: Google.Api.Gax.Rest.IPageManager`3
    name: IPageManager
    nameWithType: IPageManager
    fullName: Google.Api.Gax.Rest.IPageManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Api.Gax.Rest.IPageManager`3
    name: IPageManager
    nameWithType: IPageManager
    fullName: Google.Api.Gax.Rest.IPageManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Rest.IPageManager`3
  commentId: T:Google.Api.Gax.Rest.IPageManager`3
  isExternal: false
  name: IPageManager<TRequest, TResponse, TResource>
  nameWithType: IPageManager<TRequest, TResponse, TResource>
  fullName: Google.Api.Gax.Rest.IPageManager<TRequest, TResponse, TResource>
  nameWithType.vb: IPageManager(Of TRequest, TResponse, TResource)
  fullName.vb: Google.Api.Gax.Rest.IPageManager(Of TRequest, TResponse, TResource)
  name.vb: IPageManager(Of TRequest, TResponse, TResource)
  spec.csharp:
  - uid: Google.Api.Gax.Rest.IPageManager`3
    name: IPageManager
    nameWithType: IPageManager
    fullName: Google.Api.Gax.Rest.IPageManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Api.Gax.Rest.IPageManager`3
    name: IPageManager
    nameWithType: IPageManager
    fullName: Google.Api.Gax.Rest.IPageManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.AsRawResponses*
  commentId: Overload:Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.AsRawResponses
  isExternal: false
  name: AsRawResponses
  nameWithType: RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.AsRawResponses
  fullName: Google.Api.Gax.Rest.RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.AsRawResponses
  nameWithType.vb: RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).AsRawResponses
  fullName.vb: Google.Api.Gax.Rest.RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).AsRawResponses
- uid: IAsyncEnumerable{{TResponse}}
  commentId: '!:IAsyncEnumerable{`1}'
  definition: IAsyncEnumerable`1
  name: IAsyncEnumerable<TResponse>
  nameWithType: IAsyncEnumerable<TResponse>
  fullName: IAsyncEnumerable<TResponse>
  nameWithType.vb: IAsyncEnumerable(Of TResponse)
  fullName.vb: IAsyncEnumerable(Of TResponse)
  name.vb: IAsyncEnumerable(Of TResponse)
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: IAsyncEnumerable`1
  commentId: '!:IAsyncEnumerable`1'
  isExternal: true
  name: IAsyncEnumerable<>
  nameWithType: IAsyncEnumerable<>
  fullName: IAsyncEnumerable<>
  nameWithType.vb: IAsyncEnumerable(Of )
  fullName.vb: IAsyncEnumerable(Of )
  name.vb: IAsyncEnumerable(Of )
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.ReadPageAsync*
  commentId: Overload:Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.ReadPageAsync
  isExternal: false
  name: ReadPageAsync
  nameWithType: RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.ReadPageAsync
  fullName: Google.Api.Gax.Rest.RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.ReadPageAsync
  nameWithType.vb: RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).ReadPageAsync
  fullName.vb: Google.Api.Gax.Rest.RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).ReadPageAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Google.Api.Gax.Page{{TResource}}}
  commentId: T:System.Threading.Tasks.Task{Google.Api.Gax.Page{`2}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Page<TResource>>
  nameWithType: Task<Page<TResource>>
  fullName: System.Threading.Tasks.Task<Google.Api.Gax.Page<TResource>>
  nameWithType.vb: Task(Of Page(Of TResource))
  fullName.vb: System.Threading.Tasks.Task(Of Google.Api.Gax.Page(Of TResource))
  name.vb: Task(Of Page(Of TResource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Api.Gax.Page`1
    name: Page
    nameWithType: Page
    fullName: Google.Api.Gax.Page
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Api.Gax.Page`1
    name: Page
    nameWithType: Page
    fullName: Google.Api.Gax.Page
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.GetEnumerator*
  commentId: Overload:Google.Api.Gax.Rest.RestPagedAsyncEnumerable`3.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.GetEnumerator
  fullName: Google.Api.Gax.Rest.RestPagedAsyncEnumerable<TRequest, TResponse, TResource>.GetEnumerator
  nameWithType.vb: RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).GetEnumerator
  fullName.vb: Google.Api.Gax.Rest.RestPagedAsyncEnumerable(Of TRequest, TResponse, TResource).GetEnumerator
- uid: IAsyncEnumerator{{TResource}}
  commentId: '!:IAsyncEnumerator{`2}'
  definition: IAsyncEnumerator`1
  name: IAsyncEnumerator<TResource>
  nameWithType: IAsyncEnumerator<TResource>
  fullName: IAsyncEnumerator<TResource>
  nameWithType.vb: IAsyncEnumerator(Of TResource)
  fullName.vb: IAsyncEnumerator(Of TResource)
  name.vb: IAsyncEnumerator(Of TResource)
  spec.csharp:
  - uid: IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: IAsyncEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: IAsyncEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: IAsyncEnumerator`1
  commentId: '!:IAsyncEnumerator`1'
  isExternal: true
  name: IAsyncEnumerator<>
  nameWithType: IAsyncEnumerator<>
  fullName: IAsyncEnumerator<>
  nameWithType.vb: IAsyncEnumerator(Of )
  fullName.vb: IAsyncEnumerator(Of )
  name.vb: IAsyncEnumerator(Of )
  spec.csharp:
  - uid: IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: IAsyncEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: IAsyncEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
