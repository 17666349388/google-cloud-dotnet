### YamlMime:ManagedReference
items:
- uid: Google.Type.DateTime
  commentId: T:Google.Type.DateTime
  id: DateTime
  parent: Google.Type
  children:
  - Google.Type.DateTime.#ctor
  - Google.Type.DateTime.#ctor(Google.Type.DateTime)
  - Google.Type.DateTime.CalculateSize
  - Google.Type.DateTime.ClearTimeOffset
  - Google.Type.DateTime.Clone
  - Google.Type.DateTime.Day
  - Google.Type.DateTime.DayFieldNumber
  - Google.Type.DateTime.Descriptor
  - Google.Type.DateTime.Equals(Google.Type.DateTime)
  - Google.Type.DateTime.Equals(System.Object)
  - Google.Type.DateTime.GetHashCode
  - Google.Type.DateTime.Google#Protobuf#IMessage#Descriptor
  - Google.Type.DateTime.Hours
  - Google.Type.DateTime.HoursFieldNumber
  - Google.Type.DateTime.MergeFrom(Google.Protobuf.CodedInputStream)
  - Google.Type.DateTime.MergeFrom(Google.Type.DateTime)
  - Google.Type.DateTime.Minutes
  - Google.Type.DateTime.MinutesFieldNumber
  - Google.Type.DateTime.Month
  - Google.Type.DateTime.MonthFieldNumber
  - Google.Type.DateTime.Nanos
  - Google.Type.DateTime.NanosFieldNumber
  - Google.Type.DateTime.Parser
  - Google.Type.DateTime.Seconds
  - Google.Type.DateTime.SecondsFieldNumber
  - Google.Type.DateTime.TimeOffsetCase
  - Google.Type.DateTime.TimeZone
  - Google.Type.DateTime.TimeZoneFieldNumber
  - Google.Type.DateTime.ToString
  - Google.Type.DateTime.UtcOffset
  - Google.Type.DateTime.UtcOffsetFieldNumber
  - Google.Type.DateTime.WriteTo(Google.Protobuf.CodedOutputStream)
  - Google.Type.DateTime.Year
  - Google.Type.DateTime.YearFieldNumber
  langs:
  - csharp
  - vb
  name: DateTime
  nameWithType: DateTime
  fullName: Google.Type.DateTime
  type: Class
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: DateTime
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 73
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nRepresents civil time in one of a few possible ways:\n\n* When utc_offset is set and time_zone is unset: a civil time on a calendar\nday with a particular offset from UTC.\n* When time_zone is set and utc_offset is unset: a civil time on a calendar\nday in a particular time zone.\n* When neither time_zone nor utc_offset is set: a civil time on a calendar\nday in local time.\n\nThe date is relative to the Proleptic Gregorian Calendar.\n\nIf year is 0, the DateTime is considered not to have a specific year. month\nand day must have valid, non-zero values.\n\nThis type is more flexible than some applications may want. Make sure to\ndocument and validate your application&apos;s limitations.\n"
  example: []
  syntax:
    content: 'public sealed class DateTime : IMessage<DateTime>, IMessage, IEquatable<DateTime>, IDeepCloneable<DateTime>'
    content.vb: >-
      Public NotInheritable Class DateTime
          Implements IMessage(Of DateTime), IMessage, IEquatable(Of DateTime), IDeepCloneable(Of DateTime)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Type.DateTime}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Type.DateTime}
  - Google.Protobuf.IDeepCloneable{Google.Type.DateTime}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Type.DateTime.Parser
  commentId: P:Google.Type.DateTime.Parser
  id: Parser
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: DateTime.Parser
  fullName: Google.Type.DateTime.Parser
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parser
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 76
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public static MessageParser<DateTime> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Google.Type.DateTime}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of DateTime)
  overload: Google.Type.DateTime.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Type.DateTime.Descriptor
  commentId: P:Google.Type.DateTime.Descriptor
  id: Descriptor
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: DateTime.Descriptor
  fullName: Google.Type.DateTime.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Descriptor
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 79
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Google.Type.DateTime.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Type.DateTime.Google#Protobuf#IMessage#Descriptor
  commentId: P:Google.Type.DateTime.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: DateTime.IMessage.Descriptor
  fullName: Google.Type.DateTime.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 84
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Google.Type.DateTime.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: DateTime.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Google.Type.DateTime.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Type.DateTime.#ctor
  commentId: M:Google.Type.DateTime.#ctor
  id: '#ctor'
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: DateTime()
  nameWithType: DateTime.DateTime()
  fullName: Google.Type.DateTime.DateTime()
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 89
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public DateTime()
    content.vb: Public Sub New
  overload: Google.Type.DateTime.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.#ctor(Google.Type.DateTime)
  commentId: M:Google.Type.DateTime.#ctor(Google.Type.DateTime)
  id: '#ctor(Google.Type.DateTime)'
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: DateTime(DateTime)
  nameWithType: DateTime.DateTime(DateTime)
  fullName: Google.Type.DateTime.DateTime(Google.Type.DateTime)
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 96
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public DateTime(DateTime other)
    parameters:
    - id: other
      type: Google.Type.DateTime
    content.vb: Public Sub New(other As DateTime)
  overload: Google.Type.DateTime.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.Clone
  commentId: M:Google.Type.DateTime.Clone
  id: Clone
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: DateTime.Clone()
  fullName: Google.Type.DateTime.Clone()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Clone
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 117
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public DateTime Clone()
    return:
      type: Google.Type.DateTime
    content.vb: Public Function Clone As DateTime
  overload: Google.Type.DateTime.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Google.Type.DateTime}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.YearFieldNumber
  commentId: F:Google.Type.DateTime.YearFieldNumber
  id: YearFieldNumber
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: YearFieldNumber
  nameWithType: DateTime.YearFieldNumber
  fullName: Google.Type.DateTime.YearFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: YearFieldNumber
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 123
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;year&quot; field.
  example: []
  syntax:
    content: public const int YearFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const YearFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.DateTime.Year
  commentId: P:Google.Type.DateTime.Year
  id: Year
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: Year
  nameWithType: DateTime.Year
  fullName: Google.Type.DateTime.Year
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Year
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 129
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nOptional. Year of date. Must be from 1 to 9999, or 0 if specifying a\ndatetime without a year.\n"
  example: []
  syntax:
    content: public int Year { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Year As Integer
  overload: Google.Type.DateTime.Year*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.MonthFieldNumber
  commentId: F:Google.Type.DateTime.MonthFieldNumber
  id: MonthFieldNumber
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: MonthFieldNumber
  nameWithType: DateTime.MonthFieldNumber
  fullName: Google.Type.DateTime.MonthFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MonthFieldNumber
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 138
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;month&quot; field.
  example: []
  syntax:
    content: public const int MonthFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const MonthFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.DateTime.Month
  commentId: P:Google.Type.DateTime.Month
  id: Month
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: Month
  nameWithType: DateTime.Month
  fullName: Google.Type.DateTime.Month
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Month
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 143
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nRequired. Month of year. Must be from 1 to 12.\n"
  example: []
  syntax:
    content: public int Month { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Month As Integer
  overload: Google.Type.DateTime.Month*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.DayFieldNumber
  commentId: F:Google.Type.DateTime.DayFieldNumber
  id: DayFieldNumber
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: DayFieldNumber
  nameWithType: DateTime.DayFieldNumber
  fullName: Google.Type.DateTime.DayFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: DayFieldNumber
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 152
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;day&quot; field.
  example: []
  syntax:
    content: public const int DayFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const DayFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.DateTime.Day
  commentId: P:Google.Type.DateTime.Day
  id: Day
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: Day
  nameWithType: DateTime.Day
  fullName: Google.Type.DateTime.Day
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Day
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 158
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nRequired. Day of month. Must be from 1 to 31 and valid for the year and\nmonth.\n"
  example: []
  syntax:
    content: public int Day { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Day As Integer
  overload: Google.Type.DateTime.Day*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.HoursFieldNumber
  commentId: F:Google.Type.DateTime.HoursFieldNumber
  id: HoursFieldNumber
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: HoursFieldNumber
  nameWithType: DateTime.HoursFieldNumber
  fullName: Google.Type.DateTime.HoursFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: HoursFieldNumber
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 167
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;hours&quot; field.
  example: []
  syntax:
    content: public const int HoursFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const HoursFieldNumber As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.DateTime.Hours
  commentId: P:Google.Type.DateTime.Hours
  id: Hours
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: Hours
  nameWithType: DateTime.Hours
  fullName: Google.Type.DateTime.Hours
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Hours
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 174
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nRequired. Hours of day in 24 hour format. Should be from 0 to 23. An API\nmay choose to allow the value &quot;24:00:00&quot; for scenarios like business\nclosing time.\n"
  example: []
  syntax:
    content: public int Hours { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Hours As Integer
  overload: Google.Type.DateTime.Hours*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.MinutesFieldNumber
  commentId: F:Google.Type.DateTime.MinutesFieldNumber
  id: MinutesFieldNumber
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: MinutesFieldNumber
  nameWithType: DateTime.MinutesFieldNumber
  fullName: Google.Type.DateTime.MinutesFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MinutesFieldNumber
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 183
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;minutes&quot; field.
  example: []
  syntax:
    content: public const int MinutesFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const MinutesFieldNumber As Integer = 5
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.DateTime.Minutes
  commentId: P:Google.Type.DateTime.Minutes
  id: Minutes
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: Minutes
  nameWithType: DateTime.Minutes
  fullName: Google.Type.DateTime.Minutes
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Minutes
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 188
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nRequired. Minutes of hour of day. Must be from 0 to 59.\n"
  example: []
  syntax:
    content: public int Minutes { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Minutes As Integer
  overload: Google.Type.DateTime.Minutes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.SecondsFieldNumber
  commentId: F:Google.Type.DateTime.SecondsFieldNumber
  id: SecondsFieldNumber
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: SecondsFieldNumber
  nameWithType: DateTime.SecondsFieldNumber
  fullName: Google.Type.DateTime.SecondsFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: SecondsFieldNumber
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 197
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;seconds&quot; field.
  example: []
  syntax:
    content: public const int SecondsFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const SecondsFieldNumber As Integer = 6
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.DateTime.Seconds
  commentId: P:Google.Type.DateTime.Seconds
  id: Seconds
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: Seconds
  nameWithType: DateTime.Seconds
  fullName: Google.Type.DateTime.Seconds
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Seconds
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 203
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nRequired. Seconds of minutes of the time. Must normally be from 0 to 59. An\nAPI may allow the value 60 if it allows leap-seconds.\n"
  example: []
  syntax:
    content: public int Seconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Seconds As Integer
  overload: Google.Type.DateTime.Seconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.NanosFieldNumber
  commentId: F:Google.Type.DateTime.NanosFieldNumber
  id: NanosFieldNumber
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: NanosFieldNumber
  nameWithType: DateTime.NanosFieldNumber
  fullName: Google.Type.DateTime.NanosFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: NanosFieldNumber
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 212
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;nanos&quot; field.
  example: []
  syntax:
    content: public const int NanosFieldNumber = 7
    return:
      type: System.Int32
    content.vb: Public Const NanosFieldNumber As Integer = 7
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.DateTime.Nanos
  commentId: P:Google.Type.DateTime.Nanos
  id: Nanos
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: Nanos
  nameWithType: DateTime.Nanos
  fullName: Google.Type.DateTime.Nanos
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Nanos
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 218
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nRequired. Fractions of seconds in nanoseconds. Must be from 0 to\n999,999,999.\n"
  example: []
  syntax:
    content: public int Nanos { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Nanos As Integer
  overload: Google.Type.DateTime.Nanos*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.UtcOffsetFieldNumber
  commentId: F:Google.Type.DateTime.UtcOffsetFieldNumber
  id: UtcOffsetFieldNumber
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: UtcOffsetFieldNumber
  nameWithType: DateTime.UtcOffsetFieldNumber
  fullName: Google.Type.DateTime.UtcOffsetFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: UtcOffsetFieldNumber
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 227
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;utc_offset&quot; field.
  example: []
  syntax:
    content: public const int UtcOffsetFieldNumber = 8
    return:
      type: System.Int32
    content.vb: Public Const UtcOffsetFieldNumber As Integer = 8
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.DateTime.UtcOffset
  commentId: P:Google.Type.DateTime.UtcOffset
  id: UtcOffset
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: UtcOffset
  nameWithType: DateTime.UtcOffset
  fullName: Google.Type.DateTime.UtcOffset
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: UtcOffset
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 233
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nUTC offset. Must be whole seconds, between -18 hours and +18 hours.\nFor example, a UTC offset of -4:00 would be represented as\n{ seconds: -14400 }.\n"
  example: []
  syntax:
    content: public Duration UtcOffset { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Duration
    content.vb: Public Property UtcOffset As Duration
  overload: Google.Type.DateTime.UtcOffset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.TimeZoneFieldNumber
  commentId: F:Google.Type.DateTime.TimeZoneFieldNumber
  id: TimeZoneFieldNumber
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: TimeZoneFieldNumber
  nameWithType: DateTime.TimeZoneFieldNumber
  fullName: Google.Type.DateTime.TimeZoneFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: TimeZoneFieldNumber
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 243
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;time_zone&quot; field.
  example: []
  syntax:
    content: public const int TimeZoneFieldNumber = 9
    return:
      type: System.Int32
    content.vb: Public Const TimeZoneFieldNumber As Integer = 9
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.DateTime.TimeZone
  commentId: P:Google.Type.DateTime.TimeZone
  id: TimeZone
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: TimeZone
  nameWithType: DateTime.TimeZone
  fullName: Google.Type.DateTime.TimeZone
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: TimeZone
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 247
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nTime zone.\n"
  example: []
  syntax:
    content: public TimeZone TimeZone { get; set; }
    parameters: []
    return:
      type: Google.Type.TimeZone
    content.vb: Public Property TimeZone As TimeZone
  overload: Google.Type.DateTime.TimeZone*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.TimeOffsetCase
  commentId: P:Google.Type.DateTime.TimeOffsetCase
  id: TimeOffsetCase
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: TimeOffsetCase
  nameWithType: DateTime.TimeOffsetCase
  fullName: Google.Type.DateTime.TimeOffsetCase
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: TimeOffsetCase
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 264
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public DateTime.TimeOffsetOneofCase TimeOffsetCase { get; }
    parameters: []
    return:
      type: Google.Type.DateTime.TimeOffsetOneofCase
    content.vb: Public ReadOnly Property TimeOffsetCase As DateTime.TimeOffsetOneofCase
  overload: Google.Type.DateTime.TimeOffsetCase*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Type.DateTime.ClearTimeOffset
  commentId: M:Google.Type.DateTime.ClearTimeOffset
  id: ClearTimeOffset
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: ClearTimeOffset()
  nameWithType: DateTime.ClearTimeOffset()
  fullName: Google.Type.DateTime.ClearTimeOffset()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ClearTimeOffset
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 269
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void ClearTimeOffset()
    content.vb: Public Sub ClearTimeOffset
  overload: Google.Type.DateTime.ClearTimeOffset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.Equals(System.Object)
  commentId: M:Google.Type.DateTime.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: DateTime.Equals(Object)
  fullName: Google.Type.DateTime.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 275
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Type.DateTime.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.DateTime.Equals(Google.Type.DateTime)
  commentId: M:Google.Type.DateTime.Equals(Google.Type.DateTime)
  id: Equals(Google.Type.DateTime)
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: Equals(DateTime)
  nameWithType: DateTime.Equals(DateTime)
  fullName: Google.Type.DateTime.Equals(Google.Type.DateTime)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 280
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public bool Equals(DateTime other)
    parameters:
    - id: other
      type: Google.Type.DateTime
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As DateTime) As Boolean
  overload: Google.Type.DateTime.Equals*
  implements:
  - System.IEquatable{Google.Type.DateTime}.Equals(Google.Type.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.GetHashCode
  commentId: M:Google.Type.DateTime.GetHashCode
  id: GetHashCode
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: DateTime.GetHashCode()
  fullName: Google.Type.DateTime.GetHashCode()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 301
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Type.DateTime.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.DateTime.ToString
  commentId: M:Google.Type.DateTime.ToString
  id: ToString
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DateTime.ToString()
  fullName: Google.Type.DateTime.ToString()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 320
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Type.DateTime.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.DateTime.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Type.DateTime.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: DateTime.WriteTo(CodedOutputStream)
  fullName: Google.Type.DateTime.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WriteTo
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 325
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Google.Type.DateTime.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.CalculateSize
  commentId: M:Google.Type.DateTime.CalculateSize
  id: CalculateSize
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: DateTime.CalculateSize()
  fullName: Google.Type.DateTime.CalculateSize()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CalculateSize
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 368
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Google.Type.DateTime.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.MergeFrom(Google.Type.DateTime)
  commentId: M:Google.Type.DateTime.MergeFrom(Google.Type.DateTime)
  id: MergeFrom(Google.Type.DateTime)
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: MergeFrom(DateTime)
  nameWithType: DateTime.MergeFrom(DateTime)
  fullName: Google.Type.DateTime.MergeFrom(Google.Type.DateTime)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 404
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void MergeFrom(DateTime other)
    parameters:
    - id: other
      type: Google.Type.DateTime
    content.vb: Public Sub MergeFrom(other As DateTime)
  overload: Google.Type.DateTime.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Google.Type.DateTime}.MergeFrom(Google.Type.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.DateTime.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Type.DateTime.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Type.DateTime
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: DateTime.MergeFrom(CodedInputStream)
  fullName: Google.Type.DateTime.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Datetime.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Type/Datetime.cs
    startLine: 448
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Google.Type.DateTime.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Type
  commentId: N:Google.Type
  name: Google.Type
  nameWithType: Google.Type
  fullName: Google.Type
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Type.DateTime}
  commentId: T:Google.Protobuf.IMessage{Google.Type.DateTime}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<DateTime>
  nameWithType: IMessage<DateTime>
  fullName: Google.Protobuf.IMessage<Google.Type.DateTime>
  nameWithType.vb: IMessage(Of DateTime)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Type.DateTime)
  name.vb: IMessage(Of DateTime)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: Google.Type.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: Google.Type.DateTime
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Type.DateTime}
  commentId: T:System.IEquatable{Google.Type.DateTime}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<DateTime>
  nameWithType: IEquatable<DateTime>
  fullName: System.IEquatable<Google.Type.DateTime>
  nameWithType.vb: IEquatable(Of DateTime)
  fullName.vb: System.IEquatable(Of Google.Type.DateTime)
  name.vb: IEquatable(Of DateTime)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: Google.Type.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: Google.Type.DateTime
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Type.DateTime}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Type.DateTime}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<DateTime>
  nameWithType: IDeepCloneable<DateTime>
  fullName: Google.Protobuf.IDeepCloneable<Google.Type.DateTime>
  nameWithType.vb: IDeepCloneable(Of DateTime)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Type.DateTime)
  name.vb: IDeepCloneable(Of DateTime)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: Google.Type.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: Google.Type.DateTime
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.DateTime.Parser*
  commentId: Overload:Google.Type.DateTime.Parser
  name: Parser
  nameWithType: DateTime.Parser
  fullName: Google.Type.DateTime.Parser
- uid: Google.Protobuf.MessageParser{Google.Type.DateTime}
  commentId: T:Google.Protobuf.MessageParser{Google.Type.DateTime}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<DateTime>
  nameWithType: MessageParser<DateTime>
  fullName: Google.Protobuf.MessageParser<Google.Type.DateTime>
  nameWithType.vb: MessageParser(Of DateTime)
  fullName.vb: Google.Protobuf.MessageParser(Of Google.Type.DateTime)
  name.vb: MessageParser(Of DateTime)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: Google.Type.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: Google.Type.DateTime
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.DateTime.Descriptor*
  commentId: Overload:Google.Type.DateTime.Descriptor
  name: Descriptor
  nameWithType: DateTime.Descriptor
  fullName: Google.Type.DateTime.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Google.Type.DateTime.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Google.Type.DateTime.Google#Protobuf#IMessage#Descriptor
  name: IMessage.Descriptor
  nameWithType: DateTime.IMessage.Descriptor
  fullName: Google.Type.DateTime.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: DateTime.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Google.Type.DateTime.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Google.Type.DateTime.#ctor*
  commentId: Overload:Google.Type.DateTime.#ctor
  name: DateTime
  nameWithType: DateTime.DateTime
  fullName: Google.Type.DateTime.DateTime
- uid: Google.Type.DateTime
  commentId: T:Google.Type.DateTime
  parent: Google.Type
  name: DateTime
  nameWithType: DateTime
  fullName: Google.Type.DateTime
- uid: Google.Type.DateTime.Clone*
  commentId: Overload:Google.Type.DateTime.Clone
  name: Clone
  nameWithType: DateTime.Clone
  fullName: Google.Type.DateTime.Clone
- uid: Google.Protobuf.IDeepCloneable{Google.Type.DateTime}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Google.Type.DateTime}.Clone
  parent: Google.Protobuf.IDeepCloneable{Google.Type.DateTime}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<DateTime>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Google.Type.DateTime>.Clone()
  nameWithType.vb: IDeepCloneable(Of DateTime).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Type.DateTime).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<DateTime>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Google.Type.DateTime>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of DateTime).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Google.Type.DateTime).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Type.DateTime.Year*
  commentId: Overload:Google.Type.DateTime.Year
  name: Year
  nameWithType: DateTime.Year
  fullName: Google.Type.DateTime.Year
- uid: Google.Type.DateTime.Month*
  commentId: Overload:Google.Type.DateTime.Month
  name: Month
  nameWithType: DateTime.Month
  fullName: Google.Type.DateTime.Month
- uid: Google.Type.DateTime.Day*
  commentId: Overload:Google.Type.DateTime.Day
  name: Day
  nameWithType: DateTime.Day
  fullName: Google.Type.DateTime.Day
- uid: Google.Type.DateTime.Hours*
  commentId: Overload:Google.Type.DateTime.Hours
  name: Hours
  nameWithType: DateTime.Hours
  fullName: Google.Type.DateTime.Hours
- uid: Google.Type.DateTime.Minutes*
  commentId: Overload:Google.Type.DateTime.Minutes
  name: Minutes
  nameWithType: DateTime.Minutes
  fullName: Google.Type.DateTime.Minutes
- uid: Google.Type.DateTime.Seconds*
  commentId: Overload:Google.Type.DateTime.Seconds
  name: Seconds
  nameWithType: DateTime.Seconds
  fullName: Google.Type.DateTime.Seconds
- uid: Google.Type.DateTime.Nanos*
  commentId: Overload:Google.Type.DateTime.Nanos
  name: Nanos
  nameWithType: DateTime.Nanos
  fullName: Google.Type.DateTime.Nanos
- uid: Google.Type.DateTime.UtcOffset*
  commentId: Overload:Google.Type.DateTime.UtcOffset
  name: UtcOffset
  nameWithType: DateTime.UtcOffset
  fullName: Google.Type.DateTime.UtcOffset
- uid: Google.Protobuf.WellKnownTypes.Duration
  commentId: T:Google.Protobuf.WellKnownTypes.Duration
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Duration
  nameWithType: Duration
  fullName: Google.Protobuf.WellKnownTypes.Duration
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
- uid: Google.Type.DateTime.TimeZone*
  commentId: Overload:Google.Type.DateTime.TimeZone
  name: TimeZone
  nameWithType: DateTime.TimeZone
  fullName: Google.Type.DateTime.TimeZone
- uid: Google.Type.TimeZone
  commentId: T:Google.Type.TimeZone
  parent: Google.Type
  name: TimeZone
  nameWithType: TimeZone
  fullName: Google.Type.TimeZone
- uid: Google.Type.DateTime.TimeOffsetCase*
  commentId: Overload:Google.Type.DateTime.TimeOffsetCase
  name: TimeOffsetCase
  nameWithType: DateTime.TimeOffsetCase
  fullName: Google.Type.DateTime.TimeOffsetCase
- uid: Google.Type.DateTime.TimeOffsetOneofCase
  commentId: T:Google.Type.DateTime.TimeOffsetOneofCase
  parent: Google.Type
  name: DateTime.TimeOffsetOneofCase
  nameWithType: DateTime.TimeOffsetOneofCase
  fullName: Google.Type.DateTime.TimeOffsetOneofCase
- uid: Google.Type.DateTime.ClearTimeOffset*
  commentId: Overload:Google.Type.DateTime.ClearTimeOffset
  name: ClearTimeOffset
  nameWithType: DateTime.ClearTimeOffset
  fullName: Google.Type.DateTime.ClearTimeOffset
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.DateTime.Equals*
  commentId: Overload:Google.Type.DateTime.Equals
  name: Equals
  nameWithType: DateTime.Equals
  fullName: Google.Type.DateTime.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Google.Type.DateTime}.Equals(Google.Type.DateTime)
  commentId: M:System.IEquatable{Google.Type.DateTime}.Equals(Google.Type.DateTime)
  parent: System.IEquatable{Google.Type.DateTime}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(DateTime)
  nameWithType: IEquatable<DateTime>.Equals(DateTime)
  fullName: System.IEquatable<Google.Type.DateTime>.Equals(Google.Type.DateTime)
  nameWithType.vb: IEquatable(Of DateTime).Equals(DateTime)
  fullName.vb: System.IEquatable(Of Google.Type.DateTime).Equals(Google.Type.DateTime)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<DateTime>.Equals
    fullName: System.IEquatable<Google.Type.DateTime>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: Google.Type.DateTime
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of DateTime).Equals
    fullName: System.IEquatable(Of Google.Type.DateTime).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: Google.Type.DateTime
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.DateTime.GetHashCode*
  commentId: Overload:Google.Type.DateTime.GetHashCode
  name: GetHashCode
  nameWithType: DateTime.GetHashCode
  fullName: Google.Type.DateTime.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.DateTime.ToString*
  commentId: Overload:Google.Type.DateTime.ToString
  name: ToString
  nameWithType: DateTime.ToString
  fullName: Google.Type.DateTime.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Type.DateTime.WriteTo*
  commentId: Overload:Google.Type.DateTime.WriteTo
  name: WriteTo
  nameWithType: DateTime.WriteTo
  fullName: Google.Type.DateTime.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Google.Type.DateTime.CalculateSize*
  commentId: Overload:Google.Type.DateTime.CalculateSize
  name: CalculateSize
  nameWithType: DateTime.CalculateSize
  fullName: Google.Type.DateTime.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.DateTime.MergeFrom*
  commentId: Overload:Google.Type.DateTime.MergeFrom
  name: MergeFrom
  nameWithType: DateTime.MergeFrom
  fullName: Google.Type.DateTime.MergeFrom
- uid: Google.Protobuf.IMessage{Google.Type.DateTime}.MergeFrom(Google.Type.DateTime)
  commentId: M:Google.Protobuf.IMessage{Google.Type.DateTime}.MergeFrom(Google.Type.DateTime)
  parent: Google.Protobuf.IMessage{Google.Type.DateTime}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(DateTime)
  nameWithType: IMessage<DateTime>.MergeFrom(DateTime)
  fullName: Google.Protobuf.IMessage<Google.Type.DateTime>.MergeFrom(Google.Type.DateTime)
  nameWithType.vb: IMessage(Of DateTime).MergeFrom(DateTime)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Type.DateTime).MergeFrom(Google.Type.DateTime)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<DateTime>.MergeFrom
    fullName: Google.Protobuf.IMessage<Google.Type.DateTime>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: Google.Type.DateTime
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of DateTime).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Google.Type.DateTime).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: Google.Type.DateTime
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
