### YamlMime:ManagedReference
items:
- uid: Google.Rpc.Context.AttributeContext.Types.Response
  commentId: T:Google.Rpc.Context.AttributeContext.Types.Response
  id: AttributeContext.Types.Response
  parent: Google.Rpc.Context
  children:
  - Google.Rpc.Context.AttributeContext.Types.Response.#ctor
  - Google.Rpc.Context.AttributeContext.Types.Response.#ctor(Google.Rpc.Context.AttributeContext.Types.Response)
  - Google.Rpc.Context.AttributeContext.Types.Response.CalculateSize
  - Google.Rpc.Context.AttributeContext.Types.Response.Clone
  - Google.Rpc.Context.AttributeContext.Types.Response.Code
  - Google.Rpc.Context.AttributeContext.Types.Response.CodeFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Response.Descriptor
  - Google.Rpc.Context.AttributeContext.Types.Response.Equals(Google.Rpc.Context.AttributeContext.Types.Response)
  - Google.Rpc.Context.AttributeContext.Types.Response.Equals(System.Object)
  - Google.Rpc.Context.AttributeContext.Types.Response.GetHashCode
  - Google.Rpc.Context.AttributeContext.Types.Response.Google#Protobuf#IMessage#Descriptor
  - Google.Rpc.Context.AttributeContext.Types.Response.Headers
  - Google.Rpc.Context.AttributeContext.Types.Response.HeadersFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Response.MergeFrom(Google.Protobuf.CodedInputStream)
  - Google.Rpc.Context.AttributeContext.Types.Response.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Response)
  - Google.Rpc.Context.AttributeContext.Types.Response.Parser
  - Google.Rpc.Context.AttributeContext.Types.Response.Size
  - Google.Rpc.Context.AttributeContext.Types.Response.SizeFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Response.Time
  - Google.Rpc.Context.AttributeContext.Types.Response.TimeFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Response.ToString
  - Google.Rpc.Context.AttributeContext.Types.Response.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: AttributeContext.Types.Response
  nameWithType: AttributeContext.Types.Response
  fullName: Google.Rpc.Context.AttributeContext.Types.Response
  type: Class
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Response
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1761
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThis message defines attributes for a typical network response. It\ngenerally models semantics of an HTTP response.\n"
  example: []
  syntax:
    content: 'public sealed class Response : IMessage<AttributeContext.Types.Response>, IMessage, IEquatable<AttributeContext.Types.Response>, IDeepCloneable<AttributeContext.Types.Response>'
    content.vb: >-
      Public NotInheritable Class Response
          Implements IMessage(Of AttributeContext.Types.Response), IMessage, IEquatable(Of AttributeContext.Types.Response), IDeepCloneable(Of AttributeContext.Types.Response)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Response}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Response}
  - Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Response}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Parser
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Response.Parser
  id: Parser
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: AttributeContext.Types.Response.Parser
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Parser
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parser
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1764
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public static MessageParser<AttributeContext.Types.Response> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext.Types.Response}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of AttributeContext.Types.Response)
  overload: Google.Rpc.Context.AttributeContext.Types.Response.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Descriptor
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Response.Descriptor
  id: Descriptor
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: AttributeContext.Types.Response.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Descriptor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1767
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Google.Rpc.Context.AttributeContext.Types.Response.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Google#Protobuf#IMessage#Descriptor
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Response.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: AttributeContext.Types.Response.IMessage.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1772
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Google.Rpc.Context.AttributeContext.Types.Response.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: AttributeContext.Types.Response.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Google.Rpc.Context.AttributeContext.Types.Response.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Rpc.Context.AttributeContext.Types.Response.#ctor
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Response.#ctor
  id: '#ctor'
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: Response()
  nameWithType: AttributeContext.Types.Response.Response()
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Response()
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1777
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public Response()
    content.vb: Public Sub New
  overload: Google.Rpc.Context.AttributeContext.Types.Response.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Response.#ctor(Google.Rpc.Context.AttributeContext.Types.Response)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Response.#ctor(Google.Rpc.Context.AttributeContext.Types.Response)
  id: '#ctor(Google.Rpc.Context.AttributeContext.Types.Response)'
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: Response(AttributeContext.Types.Response)
  nameWithType: AttributeContext.Types.Response.Response(AttributeContext.Types.Response)
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Response(Google.Rpc.Context.AttributeContext.Types.Response)
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1784
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public Response(AttributeContext.Types.Response other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext.Types.Response
    content.vb: Public Sub New(other As AttributeContext.Types.Response)
  overload: Google.Rpc.Context.AttributeContext.Types.Response.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Clone
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Response.Clone
  id: Clone
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: AttributeContext.Types.Response.Clone()
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Clone()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Clone
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1793
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public AttributeContext.Types.Response Clone()
    return:
      type: Google.Rpc.Context.AttributeContext.Types.Response
    content.vb: Public Function Clone As AttributeContext.Types.Response
  overload: Google.Rpc.Context.AttributeContext.Types.Response.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Response}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Response.CodeFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Response.CodeFieldNumber
  id: CodeFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: CodeFieldNumber
  nameWithType: AttributeContext.Types.Response.CodeFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.CodeFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CodeFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1799
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;code&quot; field.
  example: []
  syntax:
    content: public const int CodeFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const CodeFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Code
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Response.Code
  id: Code
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: AttributeContext.Types.Response.Code
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Code
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Code
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1804
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe HTTP response status code, such as `200` and `404`.\n"
  example: []
  syntax:
    content: public long Code { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Code As Long
  overload: Google.Rpc.Context.AttributeContext.Types.Response.Code*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Response.SizeFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Response.SizeFieldNumber
  id: SizeFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: SizeFieldNumber
  nameWithType: AttributeContext.Types.Response.SizeFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.SizeFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: SizeFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1813
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;size&quot; field.
  example: []
  syntax:
    content: public const int SizeFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const SizeFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Size
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Response.Size
  id: Size
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: AttributeContext.Types.Response.Size
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Size
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Size
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1818
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe HTTP response size in bytes. If unknown, it must be -1.\n"
  example: []
  syntax:
    content: public long Size { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Size As Long
  overload: Google.Rpc.Context.AttributeContext.Types.Response.Size*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Response.HeadersFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Response.HeadersFieldNumber
  id: HeadersFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: HeadersFieldNumber
  nameWithType: AttributeContext.Types.Response.HeadersFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.HeadersFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: HeadersFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1827
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;headers&quot; field.
  example: []
  syntax:
    content: public const int HeadersFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const HeadersFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Headers
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Response.Headers
  id: Headers
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: AttributeContext.Types.Response.Headers
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Headers
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Headers
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1836
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe HTTP response headers. If multiple headers share the same key, they\nmust be merged according to HTTP spec. All header keys must be\nlowercased, because HTTP header keys are case-insensitive.\n"
  example: []
  syntax:
    content: public MapField<string, string> Headers { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.MapField{System.String,System.String}
    content.vb: Public ReadOnly Property Headers As MapField(Of String, String)
  overload: Google.Rpc.Context.AttributeContext.Types.Response.Headers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Rpc.Context.AttributeContext.Types.Response.TimeFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Response.TimeFieldNumber
  id: TimeFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: TimeFieldNumber
  nameWithType: AttributeContext.Types.Response.TimeFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.TimeFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: TimeFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1842
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;time&quot; field.
  example: []
  syntax:
    content: public const int TimeFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const TimeFieldNumber As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Time
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Response.Time
  id: Time
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: AttributeContext.Types.Response.Time
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Time
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Time
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1848
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe timestamp when the `destination` service generates the first byte of\nthe response.\n"
  example: []
  syntax:
    content: public Timestamp Time { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Timestamp
    content.vb: Public Property Time As Timestamp
  overload: Google.Rpc.Context.AttributeContext.Types.Response.Time*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Equals(System.Object)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Response.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: AttributeContext.Types.Response.Equals(Object)
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1856
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Rpc.Context.AttributeContext.Types.Response.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Equals(Google.Rpc.Context.AttributeContext.Types.Response)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Response.Equals(Google.Rpc.Context.AttributeContext.Types.Response)
  id: Equals(Google.Rpc.Context.AttributeContext.Types.Response)
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: Equals(AttributeContext.Types.Response)
  nameWithType: AttributeContext.Types.Response.Equals(AttributeContext.Types.Response)
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Equals(Google.Rpc.Context.AttributeContext.Types.Response)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1861
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public bool Equals(AttributeContext.Types.Response other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext.Types.Response
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As AttributeContext.Types.Response) As Boolean
  overload: Google.Rpc.Context.AttributeContext.Types.Response.Equals*
  implements:
  - System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Response}.Equals(Google.Rpc.Context.AttributeContext.Types.Response)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Response.GetHashCode
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Response.GetHashCode
  id: GetHashCode
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: AttributeContext.Types.Response.GetHashCode()
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.GetHashCode()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1876
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Rpc.Context.AttributeContext.Types.Response.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.Types.Response.ToString
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Response.ToString
  id: ToString
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AttributeContext.Types.Response.ToString()
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.ToString()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1889
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Rpc.Context.AttributeContext.Types.Response.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.Types.Response.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Response.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: AttributeContext.Types.Response.WriteTo(CodedOutputStream)
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WriteTo
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1894
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Google.Rpc.Context.AttributeContext.Types.Response.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Response.CalculateSize
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Response.CalculateSize
  id: CalculateSize
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: AttributeContext.Types.Response.CalculateSize()
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.CalculateSize()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CalculateSize
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1914
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Google.Rpc.Context.AttributeContext.Types.Response.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Response.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Response)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Response.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Response)
  id: MergeFrom(Google.Rpc.Context.AttributeContext.Types.Response)
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: MergeFrom(AttributeContext.Types.Response)
  nameWithType: AttributeContext.Types.Response.MergeFrom(AttributeContext.Types.Response)
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Response)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1933
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void MergeFrom(AttributeContext.Types.Response other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext.Types.Response
    content.vb: Public Sub MergeFrom(other As AttributeContext.Types.Response)
  overload: Google.Rpc.Context.AttributeContext.Types.Response.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Response}.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Response)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Response.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Response.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Rpc.Context.AttributeContext.Types.Response
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: AttributeContext.Types.Response.MergeFrom(CodedInputStream)
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1954
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Google.Rpc.Context.AttributeContext.Types.Response.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Rpc.Context
  commentId: N:Google.Rpc.Context
  name: Google.Rpc.Context
  nameWithType: Google.Rpc.Context
  fullName: Google.Rpc.Context
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Response}
  commentId: T:Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Response}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<AttributeContext.Types.Response>
  nameWithType: IMessage<AttributeContext.Types.Response>
  fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext.Types.Response>
  nameWithType.vb: IMessage(Of AttributeContext.Types.Response)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext.Types.Response)
  name.vb: IMessage(Of AttributeContext.Types.Response)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Response
    name: AttributeContext.Types.Response
    nameWithType: AttributeContext.Types.Response
    fullName: Google.Rpc.Context.AttributeContext.Types.Response
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Response
    name: AttributeContext.Types.Response
    nameWithType: AttributeContext.Types.Response
    fullName: Google.Rpc.Context.AttributeContext.Types.Response
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Response}
  commentId: T:System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Response}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<AttributeContext.Types.Response>
  nameWithType: IEquatable<AttributeContext.Types.Response>
  fullName: System.IEquatable<Google.Rpc.Context.AttributeContext.Types.Response>
  nameWithType.vb: IEquatable(Of AttributeContext.Types.Response)
  fullName.vb: System.IEquatable(Of Google.Rpc.Context.AttributeContext.Types.Response)
  name.vb: IEquatable(Of AttributeContext.Types.Response)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Response
    name: AttributeContext.Types.Response
    nameWithType: AttributeContext.Types.Response
    fullName: Google.Rpc.Context.AttributeContext.Types.Response
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Response
    name: AttributeContext.Types.Response
    nameWithType: AttributeContext.Types.Response
    fullName: Google.Rpc.Context.AttributeContext.Types.Response
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Response}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Response}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<AttributeContext.Types.Response>
  nameWithType: IDeepCloneable<AttributeContext.Types.Response>
  fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext.Types.Response>
  nameWithType.vb: IDeepCloneable(Of AttributeContext.Types.Response)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext.Types.Response)
  name.vb: IDeepCloneable(Of AttributeContext.Types.Response)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Response
    name: AttributeContext.Types.Response
    nameWithType: AttributeContext.Types.Response
    fullName: Google.Rpc.Context.AttributeContext.Types.Response
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Response
    name: AttributeContext.Types.Response
    nameWithType: AttributeContext.Types.Response
    fullName: Google.Rpc.Context.AttributeContext.Types.Response
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Parser*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.Parser
  name: Parser
  nameWithType: AttributeContext.Types.Response.Parser
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Parser
- uid: Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext.Types.Response}
  commentId: T:Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext.Types.Response}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<AttributeContext.Types.Response>
  nameWithType: MessageParser<AttributeContext.Types.Response>
  fullName: Google.Protobuf.MessageParser<Google.Rpc.Context.AttributeContext.Types.Response>
  nameWithType.vb: MessageParser(Of AttributeContext.Types.Response)
  fullName.vb: Google.Protobuf.MessageParser(Of Google.Rpc.Context.AttributeContext.Types.Response)
  name.vb: MessageParser(Of AttributeContext.Types.Response)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Response
    name: AttributeContext.Types.Response
    nameWithType: AttributeContext.Types.Response
    fullName: Google.Rpc.Context.AttributeContext.Types.Response
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Response
    name: AttributeContext.Types.Response
    nameWithType: AttributeContext.Types.Response
    fullName: Google.Rpc.Context.AttributeContext.Types.Response
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Descriptor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.Descriptor
  name: Descriptor
  nameWithType: AttributeContext.Types.Response.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.Google#Protobuf#IMessage#Descriptor
  name: IMessage.Descriptor
  nameWithType: AttributeContext.Types.Response.IMessage.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: AttributeContext.Types.Response.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Google.Rpc.Context.AttributeContext.Types.Response.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Google.Rpc.Context.AttributeContext.Types.Response.#ctor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.#ctor
  name: Response
  nameWithType: AttributeContext.Types.Response.Response
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Response
- uid: Google.Rpc.Context.AttributeContext.Types.Response
  commentId: T:Google.Rpc.Context.AttributeContext.Types.Response
  parent: Google.Rpc.Context
  name: AttributeContext.Types.Response
  nameWithType: AttributeContext.Types.Response
  fullName: Google.Rpc.Context.AttributeContext.Types.Response
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Clone*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.Clone
  name: Clone
  nameWithType: AttributeContext.Types.Response.Clone
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Clone
- uid: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Response}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Response}.Clone
  parent: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Response}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<AttributeContext.Types.Response>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext.Types.Response>.Clone()
  nameWithType.vb: IDeepCloneable(Of AttributeContext.Types.Response).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext.Types.Response).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<AttributeContext.Types.Response>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext.Types.Response>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of AttributeContext.Types.Response).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext.Types.Response).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Code*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.Code
  name: Code
  nameWithType: AttributeContext.Types.Response.Code
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Code
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Size*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.Size
  name: Size
  nameWithType: AttributeContext.Types.Response.Size
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Size
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Headers*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.Headers
  name: Headers
  nameWithType: AttributeContext.Types.Response.Headers
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Headers
- uid: Google.Protobuf.Collections.MapField{System.String,System.String}
  commentId: T:Google.Protobuf.Collections.MapField{System.String,System.String}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.MapField`2
  name: MapField<String, String>
  nameWithType: MapField<String, String>
  fullName: Google.Protobuf.Collections.MapField<System.String, System.String>
  nameWithType.vb: MapField(Of String, String)
  fullName.vb: Google.Protobuf.Collections.MapField(Of System.String, System.String)
  name.vb: MapField(Of String, String)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.MapField`2
  commentId: T:Google.Protobuf.Collections.MapField`2
  isExternal: true
  name: MapField<TKey, TValue>
  nameWithType: MapField<TKey, TValue>
  fullName: Google.Protobuf.Collections.MapField<TKey, TValue>
  nameWithType.vb: MapField(Of TKey, TValue)
  fullName.vb: Google.Protobuf.Collections.MapField(Of TKey, TValue)
  name.vb: MapField(Of TKey, TValue)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Time*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.Time
  name: Time
  nameWithType: AttributeContext.Types.Response.Time
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Time
- uid: Google.Protobuf.WellKnownTypes.Timestamp
  commentId: T:Google.Protobuf.WellKnownTypes.Timestamp
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Timestamp
  nameWithType: Timestamp
  fullName: Google.Protobuf.WellKnownTypes.Timestamp
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Response.Equals*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.Equals
  name: Equals
  nameWithType: AttributeContext.Types.Response.Equals
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Response}.Equals(Google.Rpc.Context.AttributeContext.Types.Response)
  commentId: M:System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Response}.Equals(Google.Rpc.Context.AttributeContext.Types.Response)
  parent: System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Response}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(AttributeContext.Types.Response)
  nameWithType: IEquatable<AttributeContext.Types.Response>.Equals(AttributeContext.Types.Response)
  fullName: System.IEquatable<Google.Rpc.Context.AttributeContext.Types.Response>.Equals(Google.Rpc.Context.AttributeContext.Types.Response)
  nameWithType.vb: IEquatable(Of AttributeContext.Types.Response).Equals(AttributeContext.Types.Response)
  fullName.vb: System.IEquatable(Of Google.Rpc.Context.AttributeContext.Types.Response).Equals(Google.Rpc.Context.AttributeContext.Types.Response)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<AttributeContext.Types.Response>.Equals
    fullName: System.IEquatable<Google.Rpc.Context.AttributeContext.Types.Response>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Response
    name: AttributeContext.Types.Response
    nameWithType: AttributeContext.Types.Response
    fullName: Google.Rpc.Context.AttributeContext.Types.Response
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of AttributeContext.Types.Response).Equals
    fullName: System.IEquatable(Of Google.Rpc.Context.AttributeContext.Types.Response).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Response
    name: AttributeContext.Types.Response
    nameWithType: AttributeContext.Types.Response
    fullName: Google.Rpc.Context.AttributeContext.Types.Response
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Response.GetHashCode*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.GetHashCode
  name: GetHashCode
  nameWithType: AttributeContext.Types.Response.GetHashCode
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Response.ToString*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.ToString
  name: ToString
  nameWithType: AttributeContext.Types.Response.ToString
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Rpc.Context.AttributeContext.Types.Response.WriteTo*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.WriteTo
  name: WriteTo
  nameWithType: AttributeContext.Types.Response.WriteTo
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Google.Rpc.Context.AttributeContext.Types.Response.CalculateSize*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.CalculateSize
  name: CalculateSize
  nameWithType: AttributeContext.Types.Response.CalculateSize
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Response.MergeFrom*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Response.MergeFrom
  name: MergeFrom
  nameWithType: AttributeContext.Types.Response.MergeFrom
  fullName: Google.Rpc.Context.AttributeContext.Types.Response.MergeFrom
- uid: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Response}.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Response)
  commentId: M:Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Response}.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Response)
  parent: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Response}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(AttributeContext.Types.Response)
  nameWithType: IMessage<AttributeContext.Types.Response>.MergeFrom(AttributeContext.Types.Response)
  fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext.Types.Response>.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Response)
  nameWithType.vb: IMessage(Of AttributeContext.Types.Response).MergeFrom(AttributeContext.Types.Response)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext.Types.Response).MergeFrom(Google.Rpc.Context.AttributeContext.Types.Response)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<AttributeContext.Types.Response>.MergeFrom
    fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext.Types.Response>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Response
    name: AttributeContext.Types.Response
    nameWithType: AttributeContext.Types.Response
    fullName: Google.Rpc.Context.AttributeContext.Types.Response
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of AttributeContext.Types.Response).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext.Types.Response).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Response
    name: AttributeContext.Types.Response
    nameWithType: AttributeContext.Types.Response
    fullName: Google.Rpc.Context.AttributeContext.Types.Response
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
