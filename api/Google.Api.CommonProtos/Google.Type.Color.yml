### YamlMime:ManagedReference
items:
- uid: Google.Type.Color
  commentId: T:Google.Type.Color
  id: Color
  parent: Google.Type
  children:
  - Google.Type.Color.#ctor
  - Google.Type.Color.#ctor(Google.Type.Color)
  - Google.Type.Color.Alpha
  - Google.Type.Color.AlphaFieldNumber
  - Google.Type.Color.Blue
  - Google.Type.Color.BlueFieldNumber
  - Google.Type.Color.CalculateSize
  - Google.Type.Color.Clone
  - Google.Type.Color.Descriptor
  - Google.Type.Color.Equals(Google.Type.Color)
  - Google.Type.Color.Equals(System.Object)
  - Google.Type.Color.GetHashCode
  - Google.Type.Color.Green
  - Google.Type.Color.GreenFieldNumber
  - Google.Type.Color.MergeFrom(Google.Protobuf.CodedInputStream)
  - Google.Type.Color.MergeFrom(Google.Type.Color)
  - Google.Type.Color.Parser
  - Google.Type.Color.Red
  - Google.Type.Color.RedFieldNumber
  - Google.Type.Color.ToString
  - Google.Type.Color.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Color
  fullName: Google.Type.Color
  type: Class
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Color
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 163
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nRepresents a color in the RGBA color space. This representation is designed\nfor simplicity of conversion to/from color representations in various\nlanguages over compactness; for example, the fields of this representation\ncan be trivially provided to the constructor of &quot;java.awt.Color&quot; in Java; it\ncan also be trivially provided to UIColor&apos;s &quot;+colorWithRed:green:blue:alpha&quot;\nmethod in iOS; and, with just a little work, it can be easily formatted into\na CSS &quot;rgba()&quot; string in JavaScript, as well. Here are some examples:\n\nExample (Java):\n\nimport com.google.type.Color;\n\n// ...\npublic static java.awt.Color fromProto(Color protocolor) {\n  float alpha = protocolor.hasAlpha()\n      ? protocolor.getAlpha().getValue()\n      : 1.0;\n\n  return new java.awt.Color(\n      protocolor.getRed(),\n      protocolor.getGreen(),\n      protocolor.getBlue(),\n      alpha);\n}\n\npublic static Color toProto(java.awt.Color color) {\n  float red = (float) color.getRed();\n  float green = (float) color.getGreen();\n  float blue = (float) color.getBlue();\n  float denominator = 255.0;\n  Color.Builder resultBuilder =\n      Color\n          .newBuilder()\n          .setRed(red / denominator)\n          .setGreen(green / denominator)\n          .setBlue(blue / denominator);\n  int alpha = color.getAlpha();\n  if (alpha != 255) {\n    result.setAlpha(\n        FloatValue\n            .newBuilder()\n            .setValue(((float) alpha) / denominator)\n            .build());\n  }\n  return resultBuilder.build();\n}\n// ...\n\nExample (iOS / Obj-C):\n\n// ...\nstatic UIColor* fromProto(Color* protocolor) {\n   float red = [protocolor red];\n   float green = [protocolor green];\n   float blue = [protocolor blue];\n   FloatValue* alpha_wrapper = [protocolor alpha];\n   float alpha = 1.0;\n   if (alpha_wrapper != nil) {\n     alpha = [alpha_wrapper value];\n   }\n   return [UIColor colorWithRed:red green:green blue:blue alpha:alpha];\n}\n\nstatic Color* toProto(UIColor* color) {\n    CGFloat red, green, blue, alpha;\n    if (![color getRed:&amp;red green:&amp;green blue:&amp;blue alpha:&amp;alpha]) {\n      return nil;\n    }\n    Color* result = [Color alloc] init];\n    [result setRed:red];\n    [result setGreen:green];\n    [result setBlue:blue];\n    if (alpha &lt;= 0.9999) {\n      [result setAlpha:floatWrapperWithValue(alpha)];\n    }\n    [result autorelease];\n    return result;\n}\n// ...\n\nExample (JavaScript):\n\n// ...\n\nvar protoToCssColor = function(rgb_color) {\n  var redFrac = rgb_color.red || 0.0;\n  var greenFrac = rgb_color.green || 0.0;\n  var blueFrac = rgb_color.blue || 0.0;\n  var red = Math.floor(redFrac * 255);\n  var green = Math.floor(greenFrac * 255);\n  var blue = Math.floor(blueFrac * 255);\n\n  if (!(&apos;alpha&apos; in rgb_color)) {\n     return rgbToCssColor_(red, green, blue);\n  }\n\n  var alphaFrac = rgb_color.alpha.value || 0.0;\n  var rgbParams = [red, green, blue].join(&apos;,&apos;);\n  return [&apos;rgba(&apos;, rgbParams, &apos;,&apos;, alphaFrac, &apos;)&apos;].join(&apos;&apos;);\n};\n\nvar rgbToCssColor_ = function(red, green, blue) {\n var rgbNumber = new Number((red &lt;&lt; 16) | (green &lt;&lt; 8) | blue);\n var hexString = rgbNumber.toString(16);\n var missingZeros = 6 - hexString.length;\n var resultBuilder = [&apos;#&apos;];\n for (var i = 0; i &lt; missingZeros; i++) {\n    resultBuilder.push(&apos;0&apos;);\n }\n resultBuilder.push(hexString);\n return resultBuilder.join(&apos;&apos;);\n};\n\n// ...\n"
  example: []
  syntax:
    content: 'public sealed class Color : Protobuf.IMessage<Color>'
    content.vb: >-
      Public NotInheritable Class Color
          Inherits Protobuf.IMessage(Of Color)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Type.Color.Parser
  commentId: P:Google.Type.Color.Parser
  id: Parser
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: Color.Parser
  fullName: Google.Type.Color.Parser
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parser
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 165
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public static Protobuf.MessageParser<Color> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Google.Type.Color}
    content.vb: Public Shared ReadOnly Property Parser As Protobuf.MessageParser(Of Color)
  overload: Google.Type.Color.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Type.Color.Descriptor
  commentId: P:Google.Type.Color.Descriptor
  id: Descriptor
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: Color.Descriptor
  fullName: Google.Type.Color.Descriptor
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Descriptor
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 168
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public static Protobuf.Reflection.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As Protobuf.Reflection.MessageDescriptor
  overload: Google.Type.Color.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Type.Color.#ctor
  commentId: M:Google.Type.Color.#ctor
  id: '#ctor'
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: Color()
  nameWithType: Color.Color()
  fullName: Google.Type.Color.Color()
  type: Constructor
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 178
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Color()
    content.vb: Public Sub New
  overload: Google.Type.Color.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Color.#ctor(Google.Type.Color)
  commentId: M:Google.Type.Color.#ctor(Google.Type.Color)
  id: '#ctor(Google.Type.Color)'
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: Color(Color)
  nameWithType: Color.Color(Color)
  fullName: Google.Type.Color.Color(Google.Type.Color)
  type: Constructor
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 185
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Color(Color other)
    parameters:
    - id: other
      type: Google.Type.Color
    content.vb: Public Sub New(other As Color)
  overload: Google.Type.Color.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Color.Clone
  commentId: M:Google.Type.Color.Clone
  id: Clone
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Color.Clone()
  fullName: Google.Type.Color.Clone()
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Clone
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 193
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Color Clone()
    return:
      type: Google.Type.Color
    content.vb: Public Function Clone As Color
  overload: Google.Type.Color.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Color.RedFieldNumber
  commentId: F:Google.Type.Color.RedFieldNumber
  id: RedFieldNumber
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: RedFieldNumber
  nameWithType: Color.RedFieldNumber
  fullName: Google.Type.Color.RedFieldNumber
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: RedFieldNumber
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 199
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;red&quot; field.
  example: []
  syntax:
    content: public const int RedFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const RedFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Color.Red
  commentId: P:Google.Type.Color.Red
  id: Red
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: Red
  nameWithType: Color.Red
  fullName: Google.Type.Color.Red
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Red
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 204
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nThe amount of red in the color as a value in the interval [0, 1].\n"
  example: []
  syntax:
    content: public float Red { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Red As Single
  overload: Google.Type.Color.Red*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Color.GreenFieldNumber
  commentId: F:Google.Type.Color.GreenFieldNumber
  id: GreenFieldNumber
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: GreenFieldNumber
  nameWithType: Color.GreenFieldNumber
  fullName: Google.Type.Color.GreenFieldNumber
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GreenFieldNumber
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 213
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;green&quot; field.
  example: []
  syntax:
    content: public const int GreenFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const GreenFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Color.Green
  commentId: P:Google.Type.Color.Green
  id: Green
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: Green
  nameWithType: Color.Green
  fullName: Google.Type.Color.Green
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Green
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 218
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nThe amount of green in the color as a value in the interval [0, 1].\n"
  example: []
  syntax:
    content: public float Green { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Green As Single
  overload: Google.Type.Color.Green*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Color.BlueFieldNumber
  commentId: F:Google.Type.Color.BlueFieldNumber
  id: BlueFieldNumber
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: BlueFieldNumber
  nameWithType: Color.BlueFieldNumber
  fullName: Google.Type.Color.BlueFieldNumber
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: BlueFieldNumber
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 227
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;blue&quot; field.
  example: []
  syntax:
    content: public const int BlueFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const BlueFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Color.Blue
  commentId: P:Google.Type.Color.Blue
  id: Blue
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: Blue
  nameWithType: Color.Blue
  fullName: Google.Type.Color.Blue
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Blue
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 232
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nThe amount of blue in the color as a value in the interval [0, 1].\n"
  example: []
  syntax:
    content: public float Blue { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Blue As Single
  overload: Google.Type.Color.Blue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Color.AlphaFieldNumber
  commentId: F:Google.Type.Color.AlphaFieldNumber
  id: AlphaFieldNumber
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: AlphaFieldNumber
  nameWithType: Color.AlphaFieldNumber
  fullName: Google.Type.Color.AlphaFieldNumber
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: AlphaFieldNumber
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 241
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;alpha&quot; field.
  example: []
  syntax:
    content: public const int AlphaFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const AlphaFieldNumber As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Color.Alpha
  commentId: P:Google.Type.Color.Alpha
  id: Alpha
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: Alpha
  nameWithType: Color.Alpha
  fullName: Google.Type.Color.Alpha
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Alpha
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 257
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nThe fraction of this color that should be applied to the pixel. That is,\nthe final pixel color is defined by the equation:\n\npixel color = alpha * (this color) + (1.0 - alpha) * (background color)\n\nThis means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).\n"
  example: []
  syntax:
    content: public float ? Alpha { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Single}
    content.vb: Public Property Alpha As Single?
  overload: Google.Type.Color.Alpha*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Color.Equals(System.Object)
  commentId: M:Google.Type.Color.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Color.Equals(Object)
  fullName: Google.Type.Color.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 265
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: Google.Type.Color.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Color.Equals(Google.Type.Color)
  commentId: M:Google.Type.Color.Equals(Google.Type.Color)
  id: Equals(Google.Type.Color)
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: Equals(Color)
  nameWithType: Color.Equals(Color)
  fullName: Google.Type.Color.Equals(Google.Type.Color)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 270
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public bool Equals(Color other)
    parameters:
    - id: other
      type: Google.Type.Color
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Color) As Boolean
  overload: Google.Type.Color.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Color.GetHashCode
  commentId: M:Google.Type.Color.GetHashCode
  id: GetHashCode
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Color.GetHashCode()
  fullName: Google.Type.Color.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 285
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Google.Type.Color.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Color.ToString
  commentId: M:Google.Type.Color.ToString
  id: ToString
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Color.ToString()
  fullName: Google.Type.Color.ToString()
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 295
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Google.Type.Color.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Color.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Type.Color.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: WriteTo(Protobuf.CodedOutputStream)
  nameWithType: Color.WriteTo(Protobuf.CodedOutputStream)
  fullName: Google.Type.Color.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WriteTo
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 300
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void WriteTo(Protobuf.CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As Protobuf.CodedOutputStream)
  overload: Google.Type.Color.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Color.CalculateSize
  commentId: M:Google.Type.Color.CalculateSize
  id: CalculateSize
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: Color.CalculateSize()
  fullName: Google.Type.Color.CalculateSize()
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CalculateSize
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 319
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Google.Type.Color.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Color.MergeFrom(Google.Type.Color)
  commentId: M:Google.Type.Color.MergeFrom(Google.Type.Color)
  id: MergeFrom(Google.Type.Color)
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: MergeFrom(Color)
  nameWithType: Color.MergeFrom(Color)
  fullName: Google.Type.Color.MergeFrom(Google.Type.Color)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 337
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void MergeFrom(Color other)
    parameters:
    - id: other
      type: Google.Type.Color
    content.vb: Public Sub MergeFrom(other As Color)
  overload: Google.Type.Color.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Color.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Type.Color.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Type.Color
  langs:
  - csharp
  - vb
  name: MergeFrom(Protobuf.CodedInputStream)
  nameWithType: Color.MergeFrom(Protobuf.CodedInputStream)
  fullName: Google.Type.Color.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Color.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: src/Google.Api.CommonProtos/Type/Color.cs
    startLine: 358
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void MergeFrom(Protobuf.CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As Protobuf.CodedInputStream)
  overload: Google.Type.Color.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Type
  commentId: N:Google.Type
  isExternal: false
  name: Google.Type
  nameWithType: Google.Type
  fullName: Google.Type
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Type.Color.Parser*
  commentId: Overload:Google.Type.Color.Parser
  isExternal: false
  name: Parser
  nameWithType: Color.Parser
  fullName: Google.Type.Color.Parser
- uid: Google.Protobuf.MessageParser{Google.Type.Color}
  commentId: '!:Google.Protobuf.MessageParser{Google.Type.Color}'
  definition: Google.Protobuf.MessageParser`1
  name: Protobuf.MessageParser<Color>
  nameWithType: Protobuf.MessageParser<Color>
  fullName: Google.Protobuf.MessageParser<Google.Type.Color>
  nameWithType.vb: Protobuf.MessageParser(Of Color)
  fullName.vb: Google.Protobuf.MessageParser(Of Google.Type.Color)
  name.vb: Protobuf.MessageParser(Of Color)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: Protobuf.MessageParser
    nameWithType: Protobuf.MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.Color
    name: Color
    nameWithType: Color
    fullName: Google.Type.Color
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: Protobuf.MessageParser
    nameWithType: Protobuf.MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.Color
    name: Color
    nameWithType: Color
    fullName: Google.Type.Color
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  isExternal: true
  name: Protobuf.MessageParser<>
  nameWithType: Protobuf.MessageParser<>
  fullName: Google.Protobuf.MessageParser<>
  nameWithType.vb: Protobuf.MessageParser(Of )
  fullName.vb: Google.Protobuf.MessageParser(Of )
  name.vb: Protobuf.MessageParser(Of )
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: Protobuf.MessageParser
    nameWithType: Protobuf.MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: Protobuf.MessageParser
    nameWithType: Protobuf.MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Color.Descriptor*
  commentId: Overload:Google.Type.Color.Descriptor
  isExternal: false
  name: Descriptor
  nameWithType: Color.Descriptor
  fullName: Google.Type.Color.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  isExternal: true
  name: Protobuf.Reflection.MessageDescriptor
  nameWithType: Protobuf.Reflection.MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Type.Color.#ctor*
  commentId: Overload:Google.Type.Color.#ctor
  isExternal: false
  name: Color
  nameWithType: Color.Color
  fullName: Google.Type.Color.Color
- uid: Google.Type.Color
  commentId: T:Google.Type.Color
  parent: Google.Type
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: Google.Type.Color
- uid: Google.Type.Color.Clone*
  commentId: Overload:Google.Type.Color.Clone
  isExternal: false
  name: Clone
  nameWithType: Color.Clone
  fullName: Google.Type.Color.Clone
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Type.Color.Red*
  commentId: Overload:Google.Type.Color.Red
  isExternal: false
  name: Red
  nameWithType: Color.Red
  fullName: Google.Type.Color.Red
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Google.Type.Color.Green*
  commentId: Overload:Google.Type.Color.Green
  isExternal: false
  name: Green
  nameWithType: Color.Green
  fullName: Google.Type.Color.Green
- uid: Google.Type.Color.Blue*
  commentId: Overload:Google.Type.Color.Blue
  isExternal: false
  name: Blue
  nameWithType: Color.Blue
  fullName: Google.Type.Color.Blue
- uid: Google.Type.Color.Alpha*
  commentId: Overload:Google.Type.Color.Alpha
  isExternal: false
  name: Alpha
  nameWithType: Color.Alpha
  fullName: Google.Type.Color.Alpha
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Single>
  nameWithType: Nullable<Single>
  fullName: System.Nullable<System.Single>
  nameWithType.vb: Nullable(Of Single)
  fullName.vb: System.Nullable(Of System.Single)
  name.vb: Nullable(Of Single)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Color.Equals*
  commentId: Overload:Google.Type.Color.Equals
  isExternal: false
  name: Equals
  nameWithType: Color.Equals
  fullName: Google.Type.Color.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Type.Color.GetHashCode*
  commentId: Overload:Google.Type.Color.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: Color.GetHashCode
  fullName: Google.Type.Color.GetHashCode
- uid: Google.Type.Color.ToString*
  commentId: Overload:Google.Type.Color.ToString
  isExternal: false
  name: ToString
  nameWithType: Color.ToString
  fullName: Google.Type.Color.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Type.Color.WriteTo*
  commentId: Overload:Google.Type.Color.WriteTo
  isExternal: false
  name: WriteTo
  nameWithType: Color.WriteTo
  fullName: Google.Type.Color.WriteTo
- uid: Google.Protobuf.CodedOutputStream
  isExternal: true
  name: Protobuf.CodedOutputStream
  nameWithType: Protobuf.CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Google.Type.Color.CalculateSize*
  commentId: Overload:Google.Type.Color.CalculateSize
  isExternal: false
  name: CalculateSize
  nameWithType: Color.CalculateSize
  fullName: Google.Type.Color.CalculateSize
- uid: Google.Type.Color.MergeFrom*
  commentId: Overload:Google.Type.Color.MergeFrom
  isExternal: false
  name: MergeFrom
  nameWithType: Color.MergeFrom
  fullName: Google.Type.Color.MergeFrom
- uid: Google.Protobuf.CodedInputStream
  isExternal: true
  name: Protobuf.CodedInputStream
  nameWithType: Protobuf.CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
