### YamlMime:ManagedReference
items:
- uid: Google.Type.Expr
  commentId: T:Google.Type.Expr
  id: Expr
  parent: Google.Type
  children:
  - Google.Type.Expr.#ctor
  - Google.Type.Expr.#ctor(Google.Type.Expr)
  - Google.Type.Expr.CalculateSize
  - Google.Type.Expr.Clone
  - Google.Type.Expr.Description
  - Google.Type.Expr.DescriptionFieldNumber
  - Google.Type.Expr.Descriptor
  - Google.Type.Expr.Equals(Google.Type.Expr)
  - Google.Type.Expr.Equals(System.Object)
  - Google.Type.Expr.Expression
  - Google.Type.Expr.ExpressionFieldNumber
  - Google.Type.Expr.GetHashCode
  - Google.Type.Expr.Google#Protobuf#IMessage#Descriptor
  - Google.Type.Expr.Location
  - Google.Type.Expr.LocationFieldNumber
  - Google.Type.Expr.MergeFrom(Google.Protobuf.CodedInputStream)
  - Google.Type.Expr.MergeFrom(Google.Type.Expr)
  - Google.Type.Expr.Parser
  - Google.Type.Expr.Title
  - Google.Type.Expr.TitleFieldNumber
  - Google.Type.Expr.ToString
  - Google.Type.Expr.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: Expr
  nameWithType: Expr
  fullName: Google.Type.Expr
  type: Class
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Expr
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 55
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nRepresents an expression text. Example:\n\ntitle: &quot;User account presence&quot;\ndescription: &quot;Determines whether the request has a user account&quot;\nexpression: &quot;size(request.user) > 0&quot;\n"
  example: []
  syntax:
    content: 'public sealed class Expr : IMessage<Expr>, IMessage, IEquatable<Expr>, IDeepCloneable<Expr>'
    content.vb: >-
      Public NotInheritable Class Expr
          Implements IMessage(Of Expr), IMessage, IEquatable(Of Expr), IDeepCloneable(Of Expr)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Type.Expr}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Type.Expr}
  - Google.Protobuf.IDeepCloneable{Google.Type.Expr}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Type.Expr.Parser
  commentId: P:Google.Type.Expr.Parser
  id: Parser
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: Expr.Parser
  fullName: Google.Type.Expr.Parser
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parser
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 58
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public static MessageParser<Expr> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Google.Type.Expr}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of Expr)
  overload: Google.Type.Expr.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Type.Expr.Descriptor
  commentId: P:Google.Type.Expr.Descriptor
  id: Descriptor
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: Expr.Descriptor
  fullName: Google.Type.Expr.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Descriptor
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 61
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Google.Type.Expr.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Type.Expr.Google#Protobuf#IMessage#Descriptor
  commentId: P:Google.Type.Expr.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: Expr.IMessage.Descriptor
  fullName: Google.Type.Expr.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 66
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Google.Type.Expr.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: Expr.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Google.Type.Expr.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Type.Expr.#ctor
  commentId: M:Google.Type.Expr.#ctor
  id: '#ctor'
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: Expr()
  nameWithType: Expr.Expr()
  fullName: Google.Type.Expr.Expr()
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 71
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Expr()
    content.vb: Public Sub New
  overload: Google.Type.Expr.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Expr.#ctor(Google.Type.Expr)
  commentId: M:Google.Type.Expr.#ctor(Google.Type.Expr)
  id: '#ctor(Google.Type.Expr)'
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: Expr(Expr)
  nameWithType: Expr.Expr(Expr)
  fullName: Google.Type.Expr.Expr(Google.Type.Expr)
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 78
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Expr(Expr other)
    parameters:
    - id: other
      type: Google.Type.Expr
    content.vb: Public Sub New(other As Expr)
  overload: Google.Type.Expr.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Expr.Clone
  commentId: M:Google.Type.Expr.Clone
  id: Clone
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Expr.Clone()
  fullName: Google.Type.Expr.Clone()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Clone
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 87
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Expr Clone()
    return:
      type: Google.Type.Expr
    content.vb: Public Function Clone As Expr
  overload: Google.Type.Expr.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Google.Type.Expr}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Expr.ExpressionFieldNumber
  commentId: F:Google.Type.Expr.ExpressionFieldNumber
  id: ExpressionFieldNumber
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: ExpressionFieldNumber
  nameWithType: Expr.ExpressionFieldNumber
  fullName: Google.Type.Expr.ExpressionFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ExpressionFieldNumber
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 93
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;expression&quot; field.
  example: []
  syntax:
    content: public const int ExpressionFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const ExpressionFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Expr.Expression
  commentId: P:Google.Type.Expr.Expression
  id: Expression
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: Expr.Expression
  fullName: Google.Type.Expr.Expression
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Expression
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 102
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nTextual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.\n"
  example: []
  syntax:
    content: public string Expression { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Expression As String
  overload: Google.Type.Expr.Expression*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Expr.TitleFieldNumber
  commentId: F:Google.Type.Expr.TitleFieldNumber
  id: TitleFieldNumber
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: TitleFieldNumber
  nameWithType: Expr.TitleFieldNumber
  fullName: Google.Type.Expr.TitleFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: TitleFieldNumber
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 111
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;title&quot; field.
  example: []
  syntax:
    content: public const int TitleFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const TitleFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Expr.Title
  commentId: P:Google.Type.Expr.Title
  id: Title
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: Expr.Title
  fullName: Google.Type.Expr.Title
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Title
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 118
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nAn optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.\n"
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: Google.Type.Expr.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Expr.DescriptionFieldNumber
  commentId: F:Google.Type.Expr.DescriptionFieldNumber
  id: DescriptionFieldNumber
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: DescriptionFieldNumber
  nameWithType: Expr.DescriptionFieldNumber
  fullName: Google.Type.Expr.DescriptionFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: DescriptionFieldNumber
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 127
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;description&quot; field.
  example: []
  syntax:
    content: public const int DescriptionFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const DescriptionFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Expr.Description
  commentId: P:Google.Type.Expr.Description
  id: Description
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Expr.Description
  fullName: Google.Type.Expr.Description
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Description
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 133
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nAn optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Google.Type.Expr.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Expr.LocationFieldNumber
  commentId: F:Google.Type.Expr.LocationFieldNumber
  id: LocationFieldNumber
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: LocationFieldNumber
  nameWithType: Expr.LocationFieldNumber
  fullName: Google.Type.Expr.LocationFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: LocationFieldNumber
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 142
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;location&quot; field.
  example: []
  syntax:
    content: public const int LocationFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const LocationFieldNumber As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Expr.Location
  commentId: P:Google.Type.Expr.Location
  id: Location
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: Expr.Location
  fullName: Google.Type.Expr.Location
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Location
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 148
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nAn optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.\n"
  example: []
  syntax:
    content: public string Location { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Location As String
  overload: Google.Type.Expr.Location*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Expr.Equals(System.Object)
  commentId: M:Google.Type.Expr.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Expr.Equals(Object)
  fullName: Google.Type.Expr.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 156
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Type.Expr.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Expr.Equals(Google.Type.Expr)
  commentId: M:Google.Type.Expr.Equals(Google.Type.Expr)
  id: Equals(Google.Type.Expr)
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: Equals(Expr)
  nameWithType: Expr.Equals(Expr)
  fullName: Google.Type.Expr.Equals(Google.Type.Expr)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 161
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public bool Equals(Expr other)
    parameters:
    - id: other
      type: Google.Type.Expr
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Expr) As Boolean
  overload: Google.Type.Expr.Equals*
  implements:
  - System.IEquatable{Google.Type.Expr}.Equals(Google.Type.Expr)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Expr.GetHashCode
  commentId: M:Google.Type.Expr.GetHashCode
  id: GetHashCode
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Expr.GetHashCode()
  fullName: Google.Type.Expr.GetHashCode()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 176
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Type.Expr.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Expr.ToString
  commentId: M:Google.Type.Expr.ToString
  id: ToString
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Expr.ToString()
  fullName: Google.Type.Expr.ToString()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 189
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Type.Expr.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Expr.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Type.Expr.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: Expr.WriteTo(CodedOutputStream)
  fullName: Google.Type.Expr.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WriteTo
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 194
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Google.Type.Expr.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Expr.CalculateSize
  commentId: M:Google.Type.Expr.CalculateSize
  id: CalculateSize
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: Expr.CalculateSize()
  fullName: Google.Type.Expr.CalculateSize()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CalculateSize
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 217
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Google.Type.Expr.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Expr.MergeFrom(Google.Type.Expr)
  commentId: M:Google.Type.Expr.MergeFrom(Google.Type.Expr)
  id: MergeFrom(Google.Type.Expr)
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: MergeFrom(Expr)
  nameWithType: Expr.MergeFrom(Expr)
  fullName: Google.Type.Expr.MergeFrom(Google.Type.Expr)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 238
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void MergeFrom(Expr other)
    parameters:
    - id: other
      type: Google.Type.Expr
    content.vb: Public Sub MergeFrom(other As Expr)
  overload: Google.Type.Expr.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Google.Type.Expr}.MergeFrom(Google.Type.Expr)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Expr.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Type.Expr.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Type.Expr
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: Expr.MergeFrom(CodedInputStream)
  fullName: Google.Type.Expr.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Expr.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Type/Expr.cs
    startLine: 258
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Google.Type.Expr.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Type
  commentId: N:Google.Type
  name: Google.Type
  nameWithType: Google.Type
  fullName: Google.Type
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Type.Expr}
  commentId: T:Google.Protobuf.IMessage{Google.Type.Expr}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<Expr>
  nameWithType: IMessage<Expr>
  fullName: Google.Protobuf.IMessage<Google.Type.Expr>
  nameWithType.vb: IMessage(Of Expr)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Type.Expr)
  name.vb: IMessage(Of Expr)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.Expr
    name: Expr
    nameWithType: Expr
    fullName: Google.Type.Expr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.Expr
    name: Expr
    nameWithType: Expr
    fullName: Google.Type.Expr
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Type.Expr}
  commentId: T:System.IEquatable{Google.Type.Expr}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Expr>
  nameWithType: IEquatable<Expr>
  fullName: System.IEquatable<Google.Type.Expr>
  nameWithType.vb: IEquatable(Of Expr)
  fullName.vb: System.IEquatable(Of Google.Type.Expr)
  name.vb: IEquatable(Of Expr)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.Expr
    name: Expr
    nameWithType: Expr
    fullName: Google.Type.Expr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.Expr
    name: Expr
    nameWithType: Expr
    fullName: Google.Type.Expr
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Type.Expr}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Type.Expr}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<Expr>
  nameWithType: IDeepCloneable<Expr>
  fullName: Google.Protobuf.IDeepCloneable<Google.Type.Expr>
  nameWithType.vb: IDeepCloneable(Of Expr)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Type.Expr)
  name.vb: IDeepCloneable(Of Expr)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.Expr
    name: Expr
    nameWithType: Expr
    fullName: Google.Type.Expr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.Expr
    name: Expr
    nameWithType: Expr
    fullName: Google.Type.Expr
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Expr.Parser*
  commentId: Overload:Google.Type.Expr.Parser
  name: Parser
  nameWithType: Expr.Parser
  fullName: Google.Type.Expr.Parser
- uid: Google.Protobuf.MessageParser{Google.Type.Expr}
  commentId: T:Google.Protobuf.MessageParser{Google.Type.Expr}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<Expr>
  nameWithType: MessageParser<Expr>
  fullName: Google.Protobuf.MessageParser<Google.Type.Expr>
  nameWithType.vb: MessageParser(Of Expr)
  fullName.vb: Google.Protobuf.MessageParser(Of Google.Type.Expr)
  name.vb: MessageParser(Of Expr)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.Expr
    name: Expr
    nameWithType: Expr
    fullName: Google.Type.Expr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.Expr
    name: Expr
    nameWithType: Expr
    fullName: Google.Type.Expr
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Expr.Descriptor*
  commentId: Overload:Google.Type.Expr.Descriptor
  name: Descriptor
  nameWithType: Expr.Descriptor
  fullName: Google.Type.Expr.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Google.Type.Expr.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Google.Type.Expr.Google#Protobuf#IMessage#Descriptor
  name: IMessage.Descriptor
  nameWithType: Expr.IMessage.Descriptor
  fullName: Google.Type.Expr.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: Expr.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Google.Type.Expr.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Google.Type.Expr.#ctor*
  commentId: Overload:Google.Type.Expr.#ctor
  name: Expr
  nameWithType: Expr.Expr
  fullName: Google.Type.Expr.Expr
- uid: Google.Type.Expr
  commentId: T:Google.Type.Expr
  parent: Google.Type
  name: Expr
  nameWithType: Expr
  fullName: Google.Type.Expr
- uid: Google.Type.Expr.Clone*
  commentId: Overload:Google.Type.Expr.Clone
  name: Clone
  nameWithType: Expr.Clone
  fullName: Google.Type.Expr.Clone
- uid: Google.Protobuf.IDeepCloneable{Google.Type.Expr}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Google.Type.Expr}.Clone
  parent: Google.Protobuf.IDeepCloneable{Google.Type.Expr}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<Expr>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Google.Type.Expr>.Clone()
  nameWithType.vb: IDeepCloneable(Of Expr).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Type.Expr).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<Expr>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Google.Type.Expr>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of Expr).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Google.Type.Expr).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Type.Expr.Expression*
  commentId: Overload:Google.Type.Expr.Expression
  name: Expression
  nameWithType: Expr.Expression
  fullName: Google.Type.Expr.Expression
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Type.Expr.Title*
  commentId: Overload:Google.Type.Expr.Title
  name: Title
  nameWithType: Expr.Title
  fullName: Google.Type.Expr.Title
- uid: Google.Type.Expr.Description*
  commentId: Overload:Google.Type.Expr.Description
  name: Description
  nameWithType: Expr.Description
  fullName: Google.Type.Expr.Description
- uid: Google.Type.Expr.Location*
  commentId: Overload:Google.Type.Expr.Location
  name: Location
  nameWithType: Expr.Location
  fullName: Google.Type.Expr.Location
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Expr.Equals*
  commentId: Overload:Google.Type.Expr.Equals
  name: Equals
  nameWithType: Expr.Equals
  fullName: Google.Type.Expr.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Google.Type.Expr}.Equals(Google.Type.Expr)
  commentId: M:System.IEquatable{Google.Type.Expr}.Equals(Google.Type.Expr)
  parent: System.IEquatable{Google.Type.Expr}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Expr)
  nameWithType: IEquatable<Expr>.Equals(Expr)
  fullName: System.IEquatable<Google.Type.Expr>.Equals(Google.Type.Expr)
  nameWithType.vb: IEquatable(Of Expr).Equals(Expr)
  fullName.vb: System.IEquatable(Of Google.Type.Expr).Equals(Google.Type.Expr)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Expr>.Equals
    fullName: System.IEquatable<Google.Type.Expr>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.Expr
    name: Expr
    nameWithType: Expr
    fullName: Google.Type.Expr
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Expr).Equals
    fullName: System.IEquatable(Of Google.Type.Expr).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.Expr
    name: Expr
    nameWithType: Expr
    fullName: Google.Type.Expr
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Expr.GetHashCode*
  commentId: Overload:Google.Type.Expr.GetHashCode
  name: GetHashCode
  nameWithType: Expr.GetHashCode
  fullName: Google.Type.Expr.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Expr.ToString*
  commentId: Overload:Google.Type.Expr.ToString
  name: ToString
  nameWithType: Expr.ToString
  fullName: Google.Type.Expr.ToString
- uid: Google.Type.Expr.WriteTo*
  commentId: Overload:Google.Type.Expr.WriteTo
  name: WriteTo
  nameWithType: Expr.WriteTo
  fullName: Google.Type.Expr.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Google.Type.Expr.CalculateSize*
  commentId: Overload:Google.Type.Expr.CalculateSize
  name: CalculateSize
  nameWithType: Expr.CalculateSize
  fullName: Google.Type.Expr.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Expr.MergeFrom*
  commentId: Overload:Google.Type.Expr.MergeFrom
  name: MergeFrom
  nameWithType: Expr.MergeFrom
  fullName: Google.Type.Expr.MergeFrom
- uid: Google.Protobuf.IMessage{Google.Type.Expr}.MergeFrom(Google.Type.Expr)
  commentId: M:Google.Protobuf.IMessage{Google.Type.Expr}.MergeFrom(Google.Type.Expr)
  parent: Google.Protobuf.IMessage{Google.Type.Expr}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(Expr)
  nameWithType: IMessage<Expr>.MergeFrom(Expr)
  fullName: Google.Protobuf.IMessage<Google.Type.Expr>.MergeFrom(Google.Type.Expr)
  nameWithType.vb: IMessage(Of Expr).MergeFrom(Expr)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Type.Expr).MergeFrom(Google.Type.Expr)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<Expr>.MergeFrom
    fullName: Google.Protobuf.IMessage<Google.Type.Expr>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.Expr
    name: Expr
    nameWithType: Expr
    fullName: Google.Type.Expr
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of Expr).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Google.Type.Expr).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.Expr
    name: Expr
    nameWithType: Expr
    fullName: Google.Type.Expr
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
