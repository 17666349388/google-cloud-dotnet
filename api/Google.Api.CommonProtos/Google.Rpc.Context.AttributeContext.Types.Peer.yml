### YamlMime:ManagedReference
items:
- uid: Google.Rpc.Context.AttributeContext.Types.Peer
  commentId: T:Google.Rpc.Context.AttributeContext.Types.Peer
  id: AttributeContext.Types.Peer
  parent: Google.Rpc.Context
  children:
  - Google.Rpc.Context.AttributeContext.Types.Peer.#ctor
  - Google.Rpc.Context.AttributeContext.Types.Peer.#ctor(Google.Rpc.Context.AttributeContext.Types.Peer)
  - Google.Rpc.Context.AttributeContext.Types.Peer.CalculateSize
  - Google.Rpc.Context.AttributeContext.Types.Peer.Clone
  - Google.Rpc.Context.AttributeContext.Types.Peer.Descriptor
  - Google.Rpc.Context.AttributeContext.Types.Peer.Equals(Google.Rpc.Context.AttributeContext.Types.Peer)
  - Google.Rpc.Context.AttributeContext.Types.Peer.Equals(System.Object)
  - Google.Rpc.Context.AttributeContext.Types.Peer.GetHashCode
  - Google.Rpc.Context.AttributeContext.Types.Peer.Google#Protobuf#IMessage#Descriptor
  - Google.Rpc.Context.AttributeContext.Types.Peer.Ip
  - Google.Rpc.Context.AttributeContext.Types.Peer.IpFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Peer.Labels
  - Google.Rpc.Context.AttributeContext.Types.Peer.LabelsFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Peer.MergeFrom(Google.Protobuf.CodedInputStream)
  - Google.Rpc.Context.AttributeContext.Types.Peer.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Peer)
  - Google.Rpc.Context.AttributeContext.Types.Peer.Parser
  - Google.Rpc.Context.AttributeContext.Types.Peer.Port
  - Google.Rpc.Context.AttributeContext.Types.Peer.PortFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Peer.Principal
  - Google.Rpc.Context.AttributeContext.Types.Peer.PrincipalFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Peer.RegionCode
  - Google.Rpc.Context.AttributeContext.Types.Peer.RegionCodeFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Peer.ToString
  - Google.Rpc.Context.AttributeContext.Types.Peer.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: AttributeContext.Types.Peer
  nameWithType: AttributeContext.Types.Peer
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer
  type: Class
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Peer
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 485
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThis message defines attributes for a node that handles a network request.\nThe node can be either a service or an application that sends, forwards,\nor receives the request. Service peers should fill in\n`principal` and `labels` as appropriate.\n"
  example: []
  syntax:
    content: 'public sealed class Peer : IMessage<AttributeContext.Types.Peer>, IMessage, IEquatable<AttributeContext.Types.Peer>, IDeepCloneable<AttributeContext.Types.Peer>'
    content.vb: >-
      Public NotInheritable Class Peer
          Implements IMessage(Of AttributeContext.Types.Peer), IMessage, IEquatable(Of AttributeContext.Types.Peer), IDeepCloneable(Of AttributeContext.Types.Peer)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Peer}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Peer}
  - Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Peer}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Parser
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Peer.Parser
  id: Parser
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: AttributeContext.Types.Peer.Parser
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Parser
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parser
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 488
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public static MessageParser<AttributeContext.Types.Peer> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext.Types.Peer}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of AttributeContext.Types.Peer)
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Descriptor
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Peer.Descriptor
  id: Descriptor
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: AttributeContext.Types.Peer.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Descriptor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 491
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Google#Protobuf#IMessage#Descriptor
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Peer.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: AttributeContext.Types.Peer.IMessage.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 496
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: AttributeContext.Types.Peer.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Google.Rpc.Context.AttributeContext.Types.Peer.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.#ctor
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Peer.#ctor
  id: '#ctor'
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: Peer()
  nameWithType: AttributeContext.Types.Peer.Peer()
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Peer()
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 501
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public Peer()
    content.vb: Public Sub New
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.#ctor(Google.Rpc.Context.AttributeContext.Types.Peer)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Peer.#ctor(Google.Rpc.Context.AttributeContext.Types.Peer)
  id: '#ctor(Google.Rpc.Context.AttributeContext.Types.Peer)'
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: Peer(AttributeContext.Types.Peer)
  nameWithType: AttributeContext.Types.Peer.Peer(AttributeContext.Types.Peer)
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Peer(Google.Rpc.Context.AttributeContext.Types.Peer)
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 508
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public Peer(AttributeContext.Types.Peer other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext.Types.Peer
    content.vb: Public Sub New(other As AttributeContext.Types.Peer)
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Clone
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Peer.Clone
  id: Clone
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: AttributeContext.Types.Peer.Clone()
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Clone()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Clone
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 518
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public AttributeContext.Types.Peer Clone()
    return:
      type: Google.Rpc.Context.AttributeContext.Types.Peer
    content.vb: Public Function Clone As AttributeContext.Types.Peer
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Peer}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.IpFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Peer.IpFieldNumber
  id: IpFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: IpFieldNumber
  nameWithType: AttributeContext.Types.Peer.IpFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.IpFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: IpFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 524
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;ip&quot; field.
  example: []
  syntax:
    content: public const int IpFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const IpFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Ip
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Peer.Ip
  id: Ip
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: Ip
  nameWithType: AttributeContext.Types.Peer.Ip
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Ip
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Ip
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 529
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe IP address of the peer.\n"
  example: []
  syntax:
    content: public string Ip { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Ip As String
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.Ip*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.PortFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Peer.PortFieldNumber
  id: PortFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: PortFieldNumber
  nameWithType: AttributeContext.Types.Peer.PortFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.PortFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: PortFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 538
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;port&quot; field.
  example: []
  syntax:
    content: public const int PortFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const PortFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Port
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Peer.Port
  id: Port
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: AttributeContext.Types.Peer.Port
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Port
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Port
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 543
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe network port of the peer.\n"
  example: []
  syntax:
    content: public long Port { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Port As Long
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.Port*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.LabelsFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Peer.LabelsFieldNumber
  id: LabelsFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: LabelsFieldNumber
  nameWithType: AttributeContext.Types.Peer.LabelsFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.LabelsFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: LabelsFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 552
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;labels&quot; field.
  example: []
  syntax:
    content: public const int LabelsFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const LabelsFieldNumber As Integer = 6
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Labels
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Peer.Labels
  id: Labels
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: Labels
  nameWithType: AttributeContext.Types.Peer.Labels
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Labels
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Labels
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 559
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe labels associated with the peer.\n"
  example: []
  syntax:
    content: public MapField<string, string> Labels { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.MapField{System.String,System.String}
    content.vb: Public ReadOnly Property Labels As MapField(Of String, String)
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.Labels*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.PrincipalFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Peer.PrincipalFieldNumber
  id: PrincipalFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: PrincipalFieldNumber
  nameWithType: AttributeContext.Types.Peer.PrincipalFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.PrincipalFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: PrincipalFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 565
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;principal&quot; field.
  example: []
  syntax:
    content: public const int PrincipalFieldNumber = 7
    return:
      type: System.Int32
    content.vb: Public Const PrincipalFieldNumber As Integer = 7
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Principal
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Peer.Principal
  id: Principal
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: Principal
  nameWithType: AttributeContext.Types.Peer.Principal
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Principal
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Principal
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 572
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe identity of this peer. Similar to `Request.auth.principal`, but\nrelative to the peer instead of the request. For example, the\nidenity associated with a load balancer that forwared the request.\n"
  example: []
  syntax:
    content: public string Principal { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Principal As String
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.Principal*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.RegionCodeFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Peer.RegionCodeFieldNumber
  id: RegionCodeFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: RegionCodeFieldNumber
  nameWithType: AttributeContext.Types.Peer.RegionCodeFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.RegionCodeFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: RegionCodeFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 581
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;region_code&quot; field.
  example: []
  syntax:
    content: public const int RegionCodeFieldNumber = 8
    return:
      type: System.Int32
    content.vb: Public Const RegionCodeFieldNumber As Integer = 8
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.RegionCode
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Peer.RegionCode
  id: RegionCode
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: RegionCode
  nameWithType: AttributeContext.Types.Peer.RegionCode
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.RegionCode
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: RegionCode
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 588
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe CLDR country/region code associated with the above IP address.\nIf the IP address is private, the `region_code` should reflect the\nphysical location where this peer is running.\n"
  example: []
  syntax:
    content: public string RegionCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RegionCode As String
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.RegionCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Equals(System.Object)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Peer.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: AttributeContext.Types.Peer.Equals(Object)
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 596
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Equals(Google.Rpc.Context.AttributeContext.Types.Peer)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Peer.Equals(Google.Rpc.Context.AttributeContext.Types.Peer)
  id: Equals(Google.Rpc.Context.AttributeContext.Types.Peer)
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: Equals(AttributeContext.Types.Peer)
  nameWithType: AttributeContext.Types.Peer.Equals(AttributeContext.Types.Peer)
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Equals(Google.Rpc.Context.AttributeContext.Types.Peer)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 601
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public bool Equals(AttributeContext.Types.Peer other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext.Types.Peer
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As AttributeContext.Types.Peer) As Boolean
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.Equals*
  implements:
  - System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Peer}.Equals(Google.Rpc.Context.AttributeContext.Types.Peer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.GetHashCode
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Peer.GetHashCode
  id: GetHashCode
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: AttributeContext.Types.Peer.GetHashCode()
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.GetHashCode()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 617
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.ToString
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Peer.ToString
  id: ToString
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AttributeContext.Types.Peer.ToString()
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.ToString()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 631
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Peer.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: AttributeContext.Types.Peer.WriteTo(CodedOutputStream)
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WriteTo
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 636
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.CalculateSize
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Peer.CalculateSize
  id: CalculateSize
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: AttributeContext.Types.Peer.CalculateSize()
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.CalculateSize()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CalculateSize
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 660
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Peer)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Peer.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Peer)
  id: MergeFrom(Google.Rpc.Context.AttributeContext.Types.Peer)
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: MergeFrom(AttributeContext.Types.Peer)
  nameWithType: AttributeContext.Types.Peer.MergeFrom(AttributeContext.Types.Peer)
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Peer)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 682
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void MergeFrom(AttributeContext.Types.Peer other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext.Types.Peer
    content.vb: Public Sub MergeFrom(other As AttributeContext.Types.Peer)
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Peer}.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Peer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Peer.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Rpc.Context.AttributeContext.Types.Peer
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: AttributeContext.Types.Peer.MergeFrom(CodedInputStream)
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 703
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Google.Rpc.Context.AttributeContext.Types.Peer.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Rpc.Context
  commentId: N:Google.Rpc.Context
  name: Google.Rpc.Context
  nameWithType: Google.Rpc.Context
  fullName: Google.Rpc.Context
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Peer}
  commentId: T:Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Peer}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<AttributeContext.Types.Peer>
  nameWithType: IMessage<AttributeContext.Types.Peer>
  fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext.Types.Peer>
  nameWithType.vb: IMessage(Of AttributeContext.Types.Peer)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext.Types.Peer)
  name.vb: IMessage(Of AttributeContext.Types.Peer)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Peer
    name: AttributeContext.Types.Peer
    nameWithType: AttributeContext.Types.Peer
    fullName: Google.Rpc.Context.AttributeContext.Types.Peer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Peer
    name: AttributeContext.Types.Peer
    nameWithType: AttributeContext.Types.Peer
    fullName: Google.Rpc.Context.AttributeContext.Types.Peer
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Peer}
  commentId: T:System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Peer}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<AttributeContext.Types.Peer>
  nameWithType: IEquatable<AttributeContext.Types.Peer>
  fullName: System.IEquatable<Google.Rpc.Context.AttributeContext.Types.Peer>
  nameWithType.vb: IEquatable(Of AttributeContext.Types.Peer)
  fullName.vb: System.IEquatable(Of Google.Rpc.Context.AttributeContext.Types.Peer)
  name.vb: IEquatable(Of AttributeContext.Types.Peer)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Peer
    name: AttributeContext.Types.Peer
    nameWithType: AttributeContext.Types.Peer
    fullName: Google.Rpc.Context.AttributeContext.Types.Peer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Peer
    name: AttributeContext.Types.Peer
    nameWithType: AttributeContext.Types.Peer
    fullName: Google.Rpc.Context.AttributeContext.Types.Peer
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Peer}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Peer}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<AttributeContext.Types.Peer>
  nameWithType: IDeepCloneable<AttributeContext.Types.Peer>
  fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext.Types.Peer>
  nameWithType.vb: IDeepCloneable(Of AttributeContext.Types.Peer)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext.Types.Peer)
  name.vb: IDeepCloneable(Of AttributeContext.Types.Peer)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Peer
    name: AttributeContext.Types.Peer
    nameWithType: AttributeContext.Types.Peer
    fullName: Google.Rpc.Context.AttributeContext.Types.Peer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Peer
    name: AttributeContext.Types.Peer
    nameWithType: AttributeContext.Types.Peer
    fullName: Google.Rpc.Context.AttributeContext.Types.Peer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Parser*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.Parser
  name: Parser
  nameWithType: AttributeContext.Types.Peer.Parser
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Parser
- uid: Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext.Types.Peer}
  commentId: T:Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext.Types.Peer}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<AttributeContext.Types.Peer>
  nameWithType: MessageParser<AttributeContext.Types.Peer>
  fullName: Google.Protobuf.MessageParser<Google.Rpc.Context.AttributeContext.Types.Peer>
  nameWithType.vb: MessageParser(Of AttributeContext.Types.Peer)
  fullName.vb: Google.Protobuf.MessageParser(Of Google.Rpc.Context.AttributeContext.Types.Peer)
  name.vb: MessageParser(Of AttributeContext.Types.Peer)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Peer
    name: AttributeContext.Types.Peer
    nameWithType: AttributeContext.Types.Peer
    fullName: Google.Rpc.Context.AttributeContext.Types.Peer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Peer
    name: AttributeContext.Types.Peer
    nameWithType: AttributeContext.Types.Peer
    fullName: Google.Rpc.Context.AttributeContext.Types.Peer
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Descriptor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.Descriptor
  name: Descriptor
  nameWithType: AttributeContext.Types.Peer.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.Google#Protobuf#IMessage#Descriptor
  name: IMessage.Descriptor
  nameWithType: AttributeContext.Types.Peer.IMessage.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: AttributeContext.Types.Peer.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Google.Rpc.Context.AttributeContext.Types.Peer.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.#ctor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.#ctor
  name: Peer
  nameWithType: AttributeContext.Types.Peer.Peer
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Peer
- uid: Google.Rpc.Context.AttributeContext.Types.Peer
  commentId: T:Google.Rpc.Context.AttributeContext.Types.Peer
  parent: Google.Rpc.Context
  name: AttributeContext.Types.Peer
  nameWithType: AttributeContext.Types.Peer
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Clone*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.Clone
  name: Clone
  nameWithType: AttributeContext.Types.Peer.Clone
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Clone
- uid: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Peer}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Peer}.Clone
  parent: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Peer}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<AttributeContext.Types.Peer>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext.Types.Peer>.Clone()
  nameWithType.vb: IDeepCloneable(Of AttributeContext.Types.Peer).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext.Types.Peer).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<AttributeContext.Types.Peer>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext.Types.Peer>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of AttributeContext.Types.Peer).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext.Types.Peer).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Ip*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.Ip
  name: Ip
  nameWithType: AttributeContext.Types.Peer.Ip
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Ip
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Port*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.Port
  name: Port
  nameWithType: AttributeContext.Types.Peer.Port
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Port
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Labels*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.Labels
  name: Labels
  nameWithType: AttributeContext.Types.Peer.Labels
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Labels
- uid: Google.Protobuf.Collections.MapField{System.String,System.String}
  commentId: T:Google.Protobuf.Collections.MapField{System.String,System.String}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.MapField`2
  name: MapField<String, String>
  nameWithType: MapField<String, String>
  fullName: Google.Protobuf.Collections.MapField<System.String, System.String>
  nameWithType.vb: MapField(Of String, String)
  fullName.vb: Google.Protobuf.Collections.MapField(Of System.String, System.String)
  name.vb: MapField(Of String, String)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.MapField`2
  commentId: T:Google.Protobuf.Collections.MapField`2
  isExternal: true
  name: MapField<TKey, TValue>
  nameWithType: MapField<TKey, TValue>
  fullName: Google.Protobuf.Collections.MapField<TKey, TValue>
  nameWithType.vb: MapField(Of TKey, TValue)
  fullName.vb: Google.Protobuf.Collections.MapField(Of TKey, TValue)
  name.vb: MapField(Of TKey, TValue)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Principal*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.Principal
  name: Principal
  nameWithType: AttributeContext.Types.Peer.Principal
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Principal
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.RegionCode*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.RegionCode
  name: RegionCode
  nameWithType: AttributeContext.Types.Peer.RegionCode
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.RegionCode
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.Equals*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.Equals
  name: Equals
  nameWithType: AttributeContext.Types.Peer.Equals
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Peer}.Equals(Google.Rpc.Context.AttributeContext.Types.Peer)
  commentId: M:System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Peer}.Equals(Google.Rpc.Context.AttributeContext.Types.Peer)
  parent: System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Peer}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(AttributeContext.Types.Peer)
  nameWithType: IEquatable<AttributeContext.Types.Peer>.Equals(AttributeContext.Types.Peer)
  fullName: System.IEquatable<Google.Rpc.Context.AttributeContext.Types.Peer>.Equals(Google.Rpc.Context.AttributeContext.Types.Peer)
  nameWithType.vb: IEquatable(Of AttributeContext.Types.Peer).Equals(AttributeContext.Types.Peer)
  fullName.vb: System.IEquatable(Of Google.Rpc.Context.AttributeContext.Types.Peer).Equals(Google.Rpc.Context.AttributeContext.Types.Peer)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<AttributeContext.Types.Peer>.Equals
    fullName: System.IEquatable<Google.Rpc.Context.AttributeContext.Types.Peer>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Peer
    name: AttributeContext.Types.Peer
    nameWithType: AttributeContext.Types.Peer
    fullName: Google.Rpc.Context.AttributeContext.Types.Peer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of AttributeContext.Types.Peer).Equals
    fullName: System.IEquatable(Of Google.Rpc.Context.AttributeContext.Types.Peer).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Peer
    name: AttributeContext.Types.Peer
    nameWithType: AttributeContext.Types.Peer
    fullName: Google.Rpc.Context.AttributeContext.Types.Peer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.GetHashCode*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.GetHashCode
  name: GetHashCode
  nameWithType: AttributeContext.Types.Peer.GetHashCode
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.ToString*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.ToString
  name: ToString
  nameWithType: AttributeContext.Types.Peer.ToString
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.ToString
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.WriteTo*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.WriteTo
  name: WriteTo
  nameWithType: AttributeContext.Types.Peer.WriteTo
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.CalculateSize*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.CalculateSize
  name: CalculateSize
  nameWithType: AttributeContext.Types.Peer.CalculateSize
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Peer.MergeFrom*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Peer.MergeFrom
  name: MergeFrom
  nameWithType: AttributeContext.Types.Peer.MergeFrom
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer.MergeFrom
- uid: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Peer}.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Peer)
  commentId: M:Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Peer}.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Peer)
  parent: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Peer}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(AttributeContext.Types.Peer)
  nameWithType: IMessage<AttributeContext.Types.Peer>.MergeFrom(AttributeContext.Types.Peer)
  fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext.Types.Peer>.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Peer)
  nameWithType.vb: IMessage(Of AttributeContext.Types.Peer).MergeFrom(AttributeContext.Types.Peer)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext.Types.Peer).MergeFrom(Google.Rpc.Context.AttributeContext.Types.Peer)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<AttributeContext.Types.Peer>.MergeFrom
    fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext.Types.Peer>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Peer
    name: AttributeContext.Types.Peer
    nameWithType: AttributeContext.Types.Peer
    fullName: Google.Rpc.Context.AttributeContext.Types.Peer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of AttributeContext.Types.Peer).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext.Types.Peer).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Peer
    name: AttributeContext.Types.Peer
    nameWithType: AttributeContext.Types.Peer
    fullName: Google.Rpc.Context.AttributeContext.Types.Peer
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
