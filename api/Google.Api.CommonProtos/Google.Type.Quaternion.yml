### YamlMime:ManagedReference
items:
- uid: Google.Type.Quaternion
  commentId: T:Google.Type.Quaternion
  id: Quaternion
  parent: Google.Type
  children:
  - Google.Type.Quaternion.#ctor
  - Google.Type.Quaternion.#ctor(Google.Type.Quaternion)
  - Google.Type.Quaternion.CalculateSize
  - Google.Type.Quaternion.Clone
  - Google.Type.Quaternion.Descriptor
  - Google.Type.Quaternion.Equals(Google.Type.Quaternion)
  - Google.Type.Quaternion.Equals(System.Object)
  - Google.Type.Quaternion.GetHashCode
  - Google.Type.Quaternion.Google#Protobuf#IMessage#Descriptor
  - Google.Type.Quaternion.MergeFrom(Google.Protobuf.CodedInputStream)
  - Google.Type.Quaternion.MergeFrom(Google.Type.Quaternion)
  - Google.Type.Quaternion.Parser
  - Google.Type.Quaternion.ToString
  - Google.Type.Quaternion.W
  - Google.Type.Quaternion.WFieldNumber
  - Google.Type.Quaternion.WriteTo(Google.Protobuf.CodedOutputStream)
  - Google.Type.Quaternion.X
  - Google.Type.Quaternion.XFieldNumber
  - Google.Type.Quaternion.Y
  - Google.Type.Quaternion.YFieldNumber
  - Google.Type.Quaternion.Z
  - Google.Type.Quaternion.ZFieldNumber
  langs:
  - csharp
  - vb
  name: Quaternion
  nameWithType: Quaternion
  fullName: Google.Type.Quaternion
  type: Class
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Quaternion
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 106
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nA quaternion is defined as the quotient of two directed lines in a\nthree-dimensional space or equivalently as the quotient of two Euclidean\nvectors (https://en.wikipedia.org/wiki/Quaternion).\n\nQuaternions are often used in calculations involving three-dimensional\nrotations (https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation),\nas they provide greater mathematical robustness by avoiding the gimbal lock\nproblems that can be encountered when using Euler angles\n(https://en.wikipedia.org/wiki/Gimbal_lock).\n\nQuaternions are generally represented in this form:\n\nw + xi + yj + zk\n\nwhere x, y, z, and w are real numbers, and i, j, and k are three imaginary\nnumbers.\n\nOur naming choice (x, y, z, w) comes from the desire to avoid confusion for\nthose interested in the geometric properties of the quaternion in the 3D\nCartesian space. Other texts often use alternative names or subscripts, such\nas (a, b, c, d), (1, i, j, k), or (0, 1, 2, 3), which are perhaps better\nsuited for mathematical interpretations.\n\nTo avoid any confusion, as well as to maintain compatibility with a large\nnumber of software libraries, the quaternions represented using the protocol\nbuffer below *must* follow the Hamilton convention, which defines ij = k\n(i.e. a right-handed algebra), and therefore:\n\ni^2 = j^2 = k^2 = ijk = −1\nij = −ji = k\njk = −kj = i\nki = −ik = j\n\nPlease DO NOT use this to represent quaternions that follow the JPL\nconvention, or any of the other quaternion flavors out there.\n\nDefinitions:\n\n- Quaternion norm (or magnitude): sqrt(x^2 + y^2 + z^2 + w^2).\n- Unit (or normalized) quaternion: a quaternion whose norm is 1.\n- Pure quaternion: a quaternion whose scalar component (w) is 0.\n- Rotation quaternion: a unit quaternion used to represent rotation.\n- Orientation quaternion: a unit quaternion used to represent orientation.\n\nA quaternion can be normalized by dividing it by its norm. The resulting\nquaternion maintains the same direction, but has a norm of 1, i.e. it moves\non the unit sphere. This is generally necessary for rotation and orientation\nquaternions, to avoid rounding errors:\nhttps://en.wikipedia.org/wiki/Rotation_formalisms_in_three_dimensions\n\nNote that (x, y, z, w) and (-x, -y, -z, -w) represent the same rotation, but\nnormalization would be even more useful, e.g. for comparison purposes, if it\nwould produce a unique representation. It is thus recommended that w be kept\npositive, which can be achieved by changing all the signs when w is negative.\n\nNext available tag: 5\n"
  example: []
  syntax:
    content: 'public sealed class Quaternion : IMessage<Quaternion>, IMessage, IEquatable<Quaternion>, IDeepCloneable<Quaternion>'
    content.vb: >-
      Public NotInheritable Class Quaternion
          Implements IMessage(Of Quaternion), IMessage, IEquatable(Of Quaternion), IDeepCloneable(Of Quaternion)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Type.Quaternion}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Type.Quaternion}
  - Google.Protobuf.IDeepCloneable{Google.Type.Quaternion}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Type.Quaternion.Parser
  commentId: P:Google.Type.Quaternion.Parser
  id: Parser
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: Quaternion.Parser
  fullName: Google.Type.Quaternion.Parser
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parser
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 109
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public static MessageParser<Quaternion> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Google.Type.Quaternion}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of Quaternion)
  overload: Google.Type.Quaternion.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Type.Quaternion.Descriptor
  commentId: P:Google.Type.Quaternion.Descriptor
  id: Descriptor
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: Quaternion.Descriptor
  fullName: Google.Type.Quaternion.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Descriptor
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 112
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Google.Type.Quaternion.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Type.Quaternion.Google#Protobuf#IMessage#Descriptor
  commentId: P:Google.Type.Quaternion.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: Quaternion.IMessage.Descriptor
  fullName: Google.Type.Quaternion.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 117
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Google.Type.Quaternion.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: Quaternion.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Google.Type.Quaternion.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Type.Quaternion.#ctor
  commentId: M:Google.Type.Quaternion.#ctor
  id: '#ctor'
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: Quaternion()
  nameWithType: Quaternion.Quaternion()
  fullName: Google.Type.Quaternion.Quaternion()
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 122
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Quaternion()
    content.vb: Public Sub New
  overload: Google.Type.Quaternion.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Quaternion.#ctor(Google.Type.Quaternion)
  commentId: M:Google.Type.Quaternion.#ctor(Google.Type.Quaternion)
  id: '#ctor(Google.Type.Quaternion)'
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: Quaternion(Quaternion)
  nameWithType: Quaternion.Quaternion(Quaternion)
  fullName: Google.Type.Quaternion.Quaternion(Google.Type.Quaternion)
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 129
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Quaternion(Quaternion other)
    parameters:
    - id: other
      type: Google.Type.Quaternion
    content.vb: Public Sub New(other As Quaternion)
  overload: Google.Type.Quaternion.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Quaternion.Clone
  commentId: M:Google.Type.Quaternion.Clone
  id: Clone
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Quaternion.Clone()
  fullName: Google.Type.Quaternion.Clone()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Clone
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 138
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Quaternion Clone()
    return:
      type: Google.Type.Quaternion
    content.vb: Public Function Clone As Quaternion
  overload: Google.Type.Quaternion.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Google.Type.Quaternion}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Quaternion.XFieldNumber
  commentId: F:Google.Type.Quaternion.XFieldNumber
  id: XFieldNumber
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: XFieldNumber
  nameWithType: Quaternion.XFieldNumber
  fullName: Google.Type.Quaternion.XFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: XFieldNumber
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 144
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;x&quot; field.
  example: []
  syntax:
    content: public const int XFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const XFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Quaternion.X
  commentId: P:Google.Type.Quaternion.X
  id: X
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Quaternion.X
  fullName: Google.Type.Quaternion.X
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: X
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 149
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nThe x component.\n"
  example: []
  syntax:
    content: public double X { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property X As Double
  overload: Google.Type.Quaternion.X*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Quaternion.YFieldNumber
  commentId: F:Google.Type.Quaternion.YFieldNumber
  id: YFieldNumber
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: YFieldNumber
  nameWithType: Quaternion.YFieldNumber
  fullName: Google.Type.Quaternion.YFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: YFieldNumber
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 158
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;y&quot; field.
  example: []
  syntax:
    content: public const int YFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const YFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Quaternion.Y
  commentId: P:Google.Type.Quaternion.Y
  id: Y
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Quaternion.Y
  fullName: Google.Type.Quaternion.Y
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Y
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 163
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nThe y component.\n"
  example: []
  syntax:
    content: public double Y { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Y As Double
  overload: Google.Type.Quaternion.Y*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Quaternion.ZFieldNumber
  commentId: F:Google.Type.Quaternion.ZFieldNumber
  id: ZFieldNumber
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: ZFieldNumber
  nameWithType: Quaternion.ZFieldNumber
  fullName: Google.Type.Quaternion.ZFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ZFieldNumber
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 172
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;z&quot; field.
  example: []
  syntax:
    content: public const int ZFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const ZFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Quaternion.Z
  commentId: P:Google.Type.Quaternion.Z
  id: Z
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Quaternion.Z
  fullName: Google.Type.Quaternion.Z
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Z
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 177
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nThe z component.\n"
  example: []
  syntax:
    content: public double Z { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Z As Double
  overload: Google.Type.Quaternion.Z*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Quaternion.WFieldNumber
  commentId: F:Google.Type.Quaternion.WFieldNumber
  id: WFieldNumber
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: WFieldNumber
  nameWithType: Quaternion.WFieldNumber
  fullName: Google.Type.Quaternion.WFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WFieldNumber
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 186
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;w&quot; field.
  example: []
  syntax:
    content: public const int WFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const WFieldNumber As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Quaternion.W
  commentId: P:Google.Type.Quaternion.W
  id: W
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: W
  nameWithType: Quaternion.W
  fullName: Google.Type.Quaternion.W
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: W
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 191
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nThe scalar component.\n"
  example: []
  syntax:
    content: public double W { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property W As Double
  overload: Google.Type.Quaternion.W*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Quaternion.Equals(System.Object)
  commentId: M:Google.Type.Quaternion.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Quaternion.Equals(Object)
  fullName: Google.Type.Quaternion.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 199
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Type.Quaternion.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Quaternion.Equals(Google.Type.Quaternion)
  commentId: M:Google.Type.Quaternion.Equals(Google.Type.Quaternion)
  id: Equals(Google.Type.Quaternion)
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: Equals(Quaternion)
  nameWithType: Quaternion.Equals(Quaternion)
  fullName: Google.Type.Quaternion.Equals(Google.Type.Quaternion)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 204
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public bool Equals(Quaternion other)
    parameters:
    - id: other
      type: Google.Type.Quaternion
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Quaternion) As Boolean
  overload: Google.Type.Quaternion.Equals*
  implements:
  - System.IEquatable{Google.Type.Quaternion}.Equals(Google.Type.Quaternion)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Quaternion.GetHashCode
  commentId: M:Google.Type.Quaternion.GetHashCode
  id: GetHashCode
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Quaternion.GetHashCode()
  fullName: Google.Type.Quaternion.GetHashCode()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 219
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Type.Quaternion.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Quaternion.ToString
  commentId: M:Google.Type.Quaternion.ToString
  id: ToString
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Quaternion.ToString()
  fullName: Google.Type.Quaternion.ToString()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 232
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Type.Quaternion.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Quaternion.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Type.Quaternion.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: Quaternion.WriteTo(CodedOutputStream)
  fullName: Google.Type.Quaternion.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WriteTo
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 237
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Google.Type.Quaternion.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Quaternion.CalculateSize
  commentId: M:Google.Type.Quaternion.CalculateSize
  id: CalculateSize
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: Quaternion.CalculateSize()
  fullName: Google.Type.Quaternion.CalculateSize()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CalculateSize
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 260
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Google.Type.Quaternion.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Quaternion.MergeFrom(Google.Type.Quaternion)
  commentId: M:Google.Type.Quaternion.MergeFrom(Google.Type.Quaternion)
  id: MergeFrom(Google.Type.Quaternion)
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: MergeFrom(Quaternion)
  nameWithType: Quaternion.MergeFrom(Quaternion)
  fullName: Google.Type.Quaternion.MergeFrom(Google.Type.Quaternion)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 281
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void MergeFrom(Quaternion other)
    parameters:
    - id: other
      type: Google.Type.Quaternion
    content.vb: Public Sub MergeFrom(other As Quaternion)
  overload: Google.Type.Quaternion.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Google.Type.Quaternion}.MergeFrom(Google.Type.Quaternion)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Quaternion.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Type.Quaternion.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Type.Quaternion
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: Quaternion.MergeFrom(CodedInputStream)
  fullName: Google.Type.Quaternion.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Quaternion.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Type/Quaternion.cs
    startLine: 301
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Google.Type.Quaternion.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Type
  commentId: N:Google.Type
  name: Google.Type
  nameWithType: Google.Type
  fullName: Google.Type
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Type.Quaternion}
  commentId: T:Google.Protobuf.IMessage{Google.Type.Quaternion}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<Quaternion>
  nameWithType: IMessage<Quaternion>
  fullName: Google.Protobuf.IMessage<Google.Type.Quaternion>
  nameWithType.vb: IMessage(Of Quaternion)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Type.Quaternion)
  name.vb: IMessage(Of Quaternion)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Google.Type.Quaternion
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Google.Type.Quaternion
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Type.Quaternion}
  commentId: T:System.IEquatable{Google.Type.Quaternion}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Quaternion>
  nameWithType: IEquatable<Quaternion>
  fullName: System.IEquatable<Google.Type.Quaternion>
  nameWithType.vb: IEquatable(Of Quaternion)
  fullName.vb: System.IEquatable(Of Google.Type.Quaternion)
  name.vb: IEquatable(Of Quaternion)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Google.Type.Quaternion
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Google.Type.Quaternion
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Type.Quaternion}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Type.Quaternion}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<Quaternion>
  nameWithType: IDeepCloneable<Quaternion>
  fullName: Google.Protobuf.IDeepCloneable<Google.Type.Quaternion>
  nameWithType.vb: IDeepCloneable(Of Quaternion)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Type.Quaternion)
  name.vb: IDeepCloneable(Of Quaternion)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Google.Type.Quaternion
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Google.Type.Quaternion
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Quaternion.Parser*
  commentId: Overload:Google.Type.Quaternion.Parser
  name: Parser
  nameWithType: Quaternion.Parser
  fullName: Google.Type.Quaternion.Parser
- uid: Google.Protobuf.MessageParser{Google.Type.Quaternion}
  commentId: T:Google.Protobuf.MessageParser{Google.Type.Quaternion}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<Quaternion>
  nameWithType: MessageParser<Quaternion>
  fullName: Google.Protobuf.MessageParser<Google.Type.Quaternion>
  nameWithType.vb: MessageParser(Of Quaternion)
  fullName.vb: Google.Protobuf.MessageParser(Of Google.Type.Quaternion)
  name.vb: MessageParser(Of Quaternion)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Google.Type.Quaternion
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Google.Type.Quaternion
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Quaternion.Descriptor*
  commentId: Overload:Google.Type.Quaternion.Descriptor
  name: Descriptor
  nameWithType: Quaternion.Descriptor
  fullName: Google.Type.Quaternion.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Google.Type.Quaternion.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Google.Type.Quaternion.Google#Protobuf#IMessage#Descriptor
  name: IMessage.Descriptor
  nameWithType: Quaternion.IMessage.Descriptor
  fullName: Google.Type.Quaternion.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: Quaternion.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Google.Type.Quaternion.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Google.Type.Quaternion.#ctor*
  commentId: Overload:Google.Type.Quaternion.#ctor
  name: Quaternion
  nameWithType: Quaternion.Quaternion
  fullName: Google.Type.Quaternion.Quaternion
- uid: Google.Type.Quaternion
  commentId: T:Google.Type.Quaternion
  parent: Google.Type
  name: Quaternion
  nameWithType: Quaternion
  fullName: Google.Type.Quaternion
- uid: Google.Type.Quaternion.Clone*
  commentId: Overload:Google.Type.Quaternion.Clone
  name: Clone
  nameWithType: Quaternion.Clone
  fullName: Google.Type.Quaternion.Clone
- uid: Google.Protobuf.IDeepCloneable{Google.Type.Quaternion}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Google.Type.Quaternion}.Clone
  parent: Google.Protobuf.IDeepCloneable{Google.Type.Quaternion}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<Quaternion>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Google.Type.Quaternion>.Clone()
  nameWithType.vb: IDeepCloneable(Of Quaternion).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Type.Quaternion).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<Quaternion>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Google.Type.Quaternion>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of Quaternion).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Google.Type.Quaternion).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Type.Quaternion.X*
  commentId: Overload:Google.Type.Quaternion.X
  name: X
  nameWithType: Quaternion.X
  fullName: Google.Type.Quaternion.X
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Google.Type.Quaternion.Y*
  commentId: Overload:Google.Type.Quaternion.Y
  name: Y
  nameWithType: Quaternion.Y
  fullName: Google.Type.Quaternion.Y
- uid: Google.Type.Quaternion.Z*
  commentId: Overload:Google.Type.Quaternion.Z
  name: Z
  nameWithType: Quaternion.Z
  fullName: Google.Type.Quaternion.Z
- uid: Google.Type.Quaternion.W*
  commentId: Overload:Google.Type.Quaternion.W
  name: W
  nameWithType: Quaternion.W
  fullName: Google.Type.Quaternion.W
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Quaternion.Equals*
  commentId: Overload:Google.Type.Quaternion.Equals
  name: Equals
  nameWithType: Quaternion.Equals
  fullName: Google.Type.Quaternion.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Google.Type.Quaternion}.Equals(Google.Type.Quaternion)
  commentId: M:System.IEquatable{Google.Type.Quaternion}.Equals(Google.Type.Quaternion)
  parent: System.IEquatable{Google.Type.Quaternion}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Quaternion)
  nameWithType: IEquatable<Quaternion>.Equals(Quaternion)
  fullName: System.IEquatable<Google.Type.Quaternion>.Equals(Google.Type.Quaternion)
  nameWithType.vb: IEquatable(Of Quaternion).Equals(Quaternion)
  fullName.vb: System.IEquatable(Of Google.Type.Quaternion).Equals(Google.Type.Quaternion)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Quaternion>.Equals
    fullName: System.IEquatable<Google.Type.Quaternion>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Google.Type.Quaternion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Quaternion).Equals
    fullName: System.IEquatable(Of Google.Type.Quaternion).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Google.Type.Quaternion
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Quaternion.GetHashCode*
  commentId: Overload:Google.Type.Quaternion.GetHashCode
  name: GetHashCode
  nameWithType: Quaternion.GetHashCode
  fullName: Google.Type.Quaternion.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Quaternion.ToString*
  commentId: Overload:Google.Type.Quaternion.ToString
  name: ToString
  nameWithType: Quaternion.ToString
  fullName: Google.Type.Quaternion.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Type.Quaternion.WriteTo*
  commentId: Overload:Google.Type.Quaternion.WriteTo
  name: WriteTo
  nameWithType: Quaternion.WriteTo
  fullName: Google.Type.Quaternion.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Google.Type.Quaternion.CalculateSize*
  commentId: Overload:Google.Type.Quaternion.CalculateSize
  name: CalculateSize
  nameWithType: Quaternion.CalculateSize
  fullName: Google.Type.Quaternion.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Quaternion.MergeFrom*
  commentId: Overload:Google.Type.Quaternion.MergeFrom
  name: MergeFrom
  nameWithType: Quaternion.MergeFrom
  fullName: Google.Type.Quaternion.MergeFrom
- uid: Google.Protobuf.IMessage{Google.Type.Quaternion}.MergeFrom(Google.Type.Quaternion)
  commentId: M:Google.Protobuf.IMessage{Google.Type.Quaternion}.MergeFrom(Google.Type.Quaternion)
  parent: Google.Protobuf.IMessage{Google.Type.Quaternion}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(Quaternion)
  nameWithType: IMessage<Quaternion>.MergeFrom(Quaternion)
  fullName: Google.Protobuf.IMessage<Google.Type.Quaternion>.MergeFrom(Google.Type.Quaternion)
  nameWithType.vb: IMessage(Of Quaternion).MergeFrom(Quaternion)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Type.Quaternion).MergeFrom(Google.Type.Quaternion)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<Quaternion>.MergeFrom
    fullName: Google.Protobuf.IMessage<Google.Type.Quaternion>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Google.Type.Quaternion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of Quaternion).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Google.Type.Quaternion).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Google.Type.Quaternion
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
