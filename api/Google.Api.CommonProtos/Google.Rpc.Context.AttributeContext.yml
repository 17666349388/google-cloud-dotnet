### YamlMime:ManagedReference
items:
- uid: Google.Rpc.Context.AttributeContext
  commentId: T:Google.Rpc.Context.AttributeContext
  id: AttributeContext
  parent: Google.Rpc.Context
  children:
  - Google.Rpc.Context.AttributeContext.#ctor
  - Google.Rpc.Context.AttributeContext.#ctor(Google.Rpc.Context.AttributeContext)
  - Google.Rpc.Context.AttributeContext.Api
  - Google.Rpc.Context.AttributeContext.ApiFieldNumber
  - Google.Rpc.Context.AttributeContext.CalculateSize
  - Google.Rpc.Context.AttributeContext.Clone
  - Google.Rpc.Context.AttributeContext.Descriptor
  - Google.Rpc.Context.AttributeContext.Destination
  - Google.Rpc.Context.AttributeContext.DestinationFieldNumber
  - Google.Rpc.Context.AttributeContext.Equals(Google.Rpc.Context.AttributeContext)
  - Google.Rpc.Context.AttributeContext.Equals(System.Object)
  - Google.Rpc.Context.AttributeContext.GetHashCode
  - Google.Rpc.Context.AttributeContext.Google#Protobuf#IMessage#Descriptor
  - Google.Rpc.Context.AttributeContext.MergeFrom(Google.Protobuf.CodedInputStream)
  - Google.Rpc.Context.AttributeContext.MergeFrom(Google.Rpc.Context.AttributeContext)
  - Google.Rpc.Context.AttributeContext.Origin
  - Google.Rpc.Context.AttributeContext.OriginFieldNumber
  - Google.Rpc.Context.AttributeContext.Parser
  - Google.Rpc.Context.AttributeContext.Request
  - Google.Rpc.Context.AttributeContext.RequestFieldNumber
  - Google.Rpc.Context.AttributeContext.Resource
  - Google.Rpc.Context.AttributeContext.ResourceFieldNumber
  - Google.Rpc.Context.AttributeContext.Response
  - Google.Rpc.Context.AttributeContext.ResponseFieldNumber
  - Google.Rpc.Context.AttributeContext.Source
  - Google.Rpc.Context.AttributeContext.SourceFieldNumber
  - Google.Rpc.Context.AttributeContext.ToString
  - Google.Rpc.Context.AttributeContext.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: AttributeContext
  nameWithType: AttributeContext
  fullName: Google.Rpc.Context.AttributeContext
  type: Class
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: AttributeContext
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 109
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThis message defines the standard attribute vocabulary for Google APIs.\n\nAn attribute is a piece of metadata that describes an activity on a network\nservice. For example, the size of an HTTP request, or the status code of\nan HTTP response.\n\nEach attribute has a type and a name, which is logically defined as\na proto message field in `AttributeContext`. The field type becomes the\nattribute type, and the field path becomes the attribute name. For example,\nthe attribute `source.ip` maps to field `AttributeContext.source.ip`.\n\nThis message definition is guaranteed not to have any wire breaking change.\nSo you can use it directly for passing attributes across different systems.\n\nNOTE: Different system may generate different subset of attributes. Please\nverify the system specification before relying on an attribute generated\na system.\n"
  example: []
  syntax:
    content: 'public sealed class AttributeContext : IMessage<AttributeContext>, IMessage, IEquatable<AttributeContext>, IDeepCloneable<AttributeContext>'
    content.vb: >-
      Public NotInheritable Class AttributeContext
          Implements IMessage(Of AttributeContext), IMessage, IEquatable(Of AttributeContext), IDeepCloneable(Of AttributeContext)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Rpc.Context.AttributeContext}
  - Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Rpc.Context.AttributeContext.Parser
  commentId: P:Google.Rpc.Context.AttributeContext.Parser
  id: Parser
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: AttributeContext.Parser
  fullName: Google.Rpc.Context.AttributeContext.Parser
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parser
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 112
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public static MessageParser<AttributeContext> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of AttributeContext)
  overload: Google.Rpc.Context.AttributeContext.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Rpc.Context.AttributeContext.Descriptor
  commentId: P:Google.Rpc.Context.AttributeContext.Descriptor
  id: Descriptor
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: AttributeContext.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Descriptor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 115
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Google.Rpc.Context.AttributeContext.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Rpc.Context.AttributeContext.Google#Protobuf#IMessage#Descriptor
  commentId: P:Google.Rpc.Context.AttributeContext.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: AttributeContext.IMessage.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 120
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Google.Rpc.Context.AttributeContext.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: AttributeContext.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Google.Rpc.Context.AttributeContext.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Rpc.Context.AttributeContext.#ctor
  commentId: M:Google.Rpc.Context.AttributeContext.#ctor
  id: '#ctor'
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: AttributeContext()
  nameWithType: AttributeContext.AttributeContext()
  fullName: Google.Rpc.Context.AttributeContext.AttributeContext()
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 125
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public AttributeContext()
    content.vb: Public Sub New
  overload: Google.Rpc.Context.AttributeContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.#ctor(Google.Rpc.Context.AttributeContext)
  commentId: M:Google.Rpc.Context.AttributeContext.#ctor(Google.Rpc.Context.AttributeContext)
  id: '#ctor(Google.Rpc.Context.AttributeContext)'
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: AttributeContext(AttributeContext)
  nameWithType: AttributeContext.AttributeContext(AttributeContext)
  fullName: Google.Rpc.Context.AttributeContext.AttributeContext(Google.Rpc.Context.AttributeContext)
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 132
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public AttributeContext(AttributeContext other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext
    content.vb: Public Sub New(other As AttributeContext)
  overload: Google.Rpc.Context.AttributeContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Clone
  commentId: M:Google.Rpc.Context.AttributeContext.Clone
  id: Clone
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: AttributeContext.Clone()
  fullName: Google.Rpc.Context.AttributeContext.Clone()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Clone
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 144
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public AttributeContext Clone()
    return:
      type: Google.Rpc.Context.AttributeContext
    content.vb: Public Function Clone As AttributeContext
  overload: Google.Rpc.Context.AttributeContext.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.OriginFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.OriginFieldNumber
  id: OriginFieldNumber
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: OriginFieldNumber
  nameWithType: AttributeContext.OriginFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.OriginFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: OriginFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 150
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;origin&quot; field.
  example: []
  syntax:
    content: public const int OriginFieldNumber = 7
    return:
      type: System.Int32
    content.vb: Public Const OriginFieldNumber As Integer = 7
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Origin
  commentId: P:Google.Rpc.Context.AttributeContext.Origin
  id: Origin
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: AttributeContext.Origin
  fullName: Google.Rpc.Context.AttributeContext.Origin
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Origin
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 157
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe origin of a network activity. In a multi hop network activity,\nthe origin represents the sender of the first hop. For the first hop,\nthe `source` and the `origin` must have the same content.\n"
  example: []
  syntax:
    content: public AttributeContext.Types.Peer Origin { get; set; }
    parameters: []
    return:
      type: Google.Rpc.Context.AttributeContext.Types.Peer
    content.vb: Public Property Origin As AttributeContext.Types.Peer
  overload: Google.Rpc.Context.AttributeContext.Origin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.SourceFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.SourceFieldNumber
  id: SourceFieldNumber
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: SourceFieldNumber
  nameWithType: AttributeContext.SourceFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.SourceFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: SourceFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 166
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;source&quot; field.
  example: []
  syntax:
    content: public const int SourceFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const SourceFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Source
  commentId: P:Google.Rpc.Context.AttributeContext.Source
  id: Source
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: AttributeContext.Source
  fullName: Google.Rpc.Context.AttributeContext.Source
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Source
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 173
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe source of a network activity, such as starting a TCP connection.\nIn a multi hop network activity, the source represents the sender of the\nlast hop.\n"
  example: []
  syntax:
    content: public AttributeContext.Types.Peer Source { get; set; }
    parameters: []
    return:
      type: Google.Rpc.Context.AttributeContext.Types.Peer
    content.vb: Public Property Source As AttributeContext.Types.Peer
  overload: Google.Rpc.Context.AttributeContext.Source*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.DestinationFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.DestinationFieldNumber
  id: DestinationFieldNumber
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: DestinationFieldNumber
  nameWithType: AttributeContext.DestinationFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.DestinationFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: DestinationFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 182
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;destination&quot; field.
  example: []
  syntax:
    content: public const int DestinationFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const DestinationFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Destination
  commentId: P:Google.Rpc.Context.AttributeContext.Destination
  id: Destination
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: Destination
  nameWithType: AttributeContext.Destination
  fullName: Google.Rpc.Context.AttributeContext.Destination
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Destination
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 189
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe destination of a network activity, such as accepting a TCP connection.\nIn a multi hop network activity, the destination represents the receiver of\nthe last hop.\n"
  example: []
  syntax:
    content: public AttributeContext.Types.Peer Destination { get; set; }
    parameters: []
    return:
      type: Google.Rpc.Context.AttributeContext.Types.Peer
    content.vb: Public Property Destination As AttributeContext.Types.Peer
  overload: Google.Rpc.Context.AttributeContext.Destination*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.RequestFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.RequestFieldNumber
  id: RequestFieldNumber
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: RequestFieldNumber
  nameWithType: AttributeContext.RequestFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.RequestFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: RequestFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 198
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;request&quot; field.
  example: []
  syntax:
    content: public const int RequestFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const RequestFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Request
  commentId: P:Google.Rpc.Context.AttributeContext.Request
  id: Request
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: AttributeContext.Request
  fullName: Google.Rpc.Context.AttributeContext.Request
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Request
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 203
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nRepresents a network request, such as an HTTP request.\n"
  example: []
  syntax:
    content: public AttributeContext.Types.Request Request { get; set; }
    parameters: []
    return:
      type: Google.Rpc.Context.AttributeContext.Types.Request
    content.vb: Public Property Request As AttributeContext.Types.Request
  overload: Google.Rpc.Context.AttributeContext.Request*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.ResponseFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.ResponseFieldNumber
  id: ResponseFieldNumber
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: ResponseFieldNumber
  nameWithType: AttributeContext.ResponseFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.ResponseFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ResponseFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 212
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;response&quot; field.
  example: []
  syntax:
    content: public const int ResponseFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const ResponseFieldNumber As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Response
  commentId: P:Google.Rpc.Context.AttributeContext.Response
  id: Response
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: AttributeContext.Response
  fullName: Google.Rpc.Context.AttributeContext.Response
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Response
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 217
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nRepresents a network response, such as an HTTP response.\n"
  example: []
  syntax:
    content: public AttributeContext.Types.Response Response { get; set; }
    parameters: []
    return:
      type: Google.Rpc.Context.AttributeContext.Types.Response
    content.vb: Public Property Response As AttributeContext.Types.Response
  overload: Google.Rpc.Context.AttributeContext.Response*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.ResourceFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.ResourceFieldNumber
  id: ResourceFieldNumber
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: ResourceFieldNumber
  nameWithType: AttributeContext.ResourceFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.ResourceFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ResourceFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 226
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;resource&quot; field.
  example: []
  syntax:
    content: public const int ResourceFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const ResourceFieldNumber As Integer = 5
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Resource
  commentId: P:Google.Rpc.Context.AttributeContext.Resource
  id: Resource
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: Resource
  nameWithType: AttributeContext.Resource
  fullName: Google.Rpc.Context.AttributeContext.Resource
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Resource
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 233
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nRepresents a target resource that is involved with a network activity.\nIf multiple resources are involved with an activity, this must be the\nprimary one.\n"
  example: []
  syntax:
    content: public AttributeContext.Types.Resource Resource { get; set; }
    parameters: []
    return:
      type: Google.Rpc.Context.AttributeContext.Types.Resource
    content.vb: Public Property Resource As AttributeContext.Types.Resource
  overload: Google.Rpc.Context.AttributeContext.Resource*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.ApiFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.ApiFieldNumber
  id: ApiFieldNumber
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: ApiFieldNumber
  nameWithType: AttributeContext.ApiFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.ApiFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ApiFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 242
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;api&quot; field.
  example: []
  syntax:
    content: public const int ApiFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const ApiFieldNumber As Integer = 6
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Api
  commentId: P:Google.Rpc.Context.AttributeContext.Api
  id: Api
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: Api
  nameWithType: AttributeContext.Api
  fullName: Google.Rpc.Context.AttributeContext.Api
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Api
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 247
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nRepresents an API operation that is involved to a network activity.\n"
  example: []
  syntax:
    content: public AttributeContext.Types.Api Api { get; set; }
    parameters: []
    return:
      type: Google.Rpc.Context.AttributeContext.Types.Api
    content.vb: Public Property Api As AttributeContext.Types.Api
  overload: Google.Rpc.Context.AttributeContext.Api*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Equals(System.Object)
  commentId: M:Google.Rpc.Context.AttributeContext.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: AttributeContext.Equals(Object)
  fullName: Google.Rpc.Context.AttributeContext.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 255
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Rpc.Context.AttributeContext.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.Equals(Google.Rpc.Context.AttributeContext)
  commentId: M:Google.Rpc.Context.AttributeContext.Equals(Google.Rpc.Context.AttributeContext)
  id: Equals(Google.Rpc.Context.AttributeContext)
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: Equals(AttributeContext)
  nameWithType: AttributeContext.Equals(AttributeContext)
  fullName: Google.Rpc.Context.AttributeContext.Equals(Google.Rpc.Context.AttributeContext)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 260
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public bool Equals(AttributeContext other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As AttributeContext) As Boolean
  overload: Google.Rpc.Context.AttributeContext.Equals*
  implements:
  - System.IEquatable{Google.Rpc.Context.AttributeContext}.Equals(Google.Rpc.Context.AttributeContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.GetHashCode
  commentId: M:Google.Rpc.Context.AttributeContext.GetHashCode
  id: GetHashCode
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: AttributeContext.GetHashCode()
  fullName: Google.Rpc.Context.AttributeContext.GetHashCode()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 278
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Rpc.Context.AttributeContext.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.ToString
  commentId: M:Google.Rpc.Context.AttributeContext.ToString
  id: ToString
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AttributeContext.ToString()
  fullName: Google.Rpc.Context.AttributeContext.ToString()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 294
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Rpc.Context.AttributeContext.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Rpc.Context.AttributeContext.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: AttributeContext.WriteTo(CodedOutputStream)
  fullName: Google.Rpc.Context.AttributeContext.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WriteTo
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 299
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Google.Rpc.Context.AttributeContext.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.CalculateSize
  commentId: M:Google.Rpc.Context.AttributeContext.CalculateSize
  id: CalculateSize
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: AttributeContext.CalculateSize()
  fullName: Google.Rpc.Context.AttributeContext.CalculateSize()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CalculateSize
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 334
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Google.Rpc.Context.AttributeContext.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.MergeFrom(Google.Rpc.Context.AttributeContext)
  commentId: M:Google.Rpc.Context.AttributeContext.MergeFrom(Google.Rpc.Context.AttributeContext)
  id: MergeFrom(Google.Rpc.Context.AttributeContext)
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: MergeFrom(AttributeContext)
  nameWithType: AttributeContext.MergeFrom(AttributeContext)
  fullName: Google.Rpc.Context.AttributeContext.MergeFrom(Google.Rpc.Context.AttributeContext)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 364
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void MergeFrom(AttributeContext other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext
    content.vb: Public Sub MergeFrom(other As AttributeContext)
  overload: Google.Rpc.Context.AttributeContext.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext}.MergeFrom(Google.Rpc.Context.AttributeContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Rpc.Context.AttributeContext.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Rpc.Context.AttributeContext
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: AttributeContext.MergeFrom(CodedInputStream)
  fullName: Google.Rpc.Context.AttributeContext.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 414
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Google.Rpc.Context.AttributeContext.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Rpc.Context
  commentId: N:Google.Rpc.Context
  name: Google.Rpc.Context
  nameWithType: Google.Rpc.Context
  fullName: Google.Rpc.Context
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext}
  commentId: T:Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<AttributeContext>
  nameWithType: IMessage<AttributeContext>
  fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext>
  nameWithType.vb: IMessage(Of AttributeContext)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext)
  name.vb: IMessage(Of AttributeContext)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext
    name: AttributeContext
    nameWithType: AttributeContext
    fullName: Google.Rpc.Context.AttributeContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext
    name: AttributeContext
    nameWithType: AttributeContext
    fullName: Google.Rpc.Context.AttributeContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Rpc.Context.AttributeContext}
  commentId: T:System.IEquatable{Google.Rpc.Context.AttributeContext}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<AttributeContext>
  nameWithType: IEquatable<AttributeContext>
  fullName: System.IEquatable<Google.Rpc.Context.AttributeContext>
  nameWithType.vb: IEquatable(Of AttributeContext)
  fullName.vb: System.IEquatable(Of Google.Rpc.Context.AttributeContext)
  name.vb: IEquatable(Of AttributeContext)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext
    name: AttributeContext
    nameWithType: AttributeContext
    fullName: Google.Rpc.Context.AttributeContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext
    name: AttributeContext
    nameWithType: AttributeContext
    fullName: Google.Rpc.Context.AttributeContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<AttributeContext>
  nameWithType: IDeepCloneable<AttributeContext>
  fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext>
  nameWithType.vb: IDeepCloneable(Of AttributeContext)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext)
  name.vb: IDeepCloneable(Of AttributeContext)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext
    name: AttributeContext
    nameWithType: AttributeContext
    fullName: Google.Rpc.Context.AttributeContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext
    name: AttributeContext
    nameWithType: AttributeContext
    fullName: Google.Rpc.Context.AttributeContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Parser*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Parser
  name: Parser
  nameWithType: AttributeContext.Parser
  fullName: Google.Rpc.Context.AttributeContext.Parser
- uid: Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext}
  commentId: T:Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<AttributeContext>
  nameWithType: MessageParser<AttributeContext>
  fullName: Google.Protobuf.MessageParser<Google.Rpc.Context.AttributeContext>
  nameWithType.vb: MessageParser(Of AttributeContext)
  fullName.vb: Google.Protobuf.MessageParser(Of Google.Rpc.Context.AttributeContext)
  name.vb: MessageParser(Of AttributeContext)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext
    name: AttributeContext
    nameWithType: AttributeContext
    fullName: Google.Rpc.Context.AttributeContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext
    name: AttributeContext
    nameWithType: AttributeContext
    fullName: Google.Rpc.Context.AttributeContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Descriptor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Descriptor
  name: Descriptor
  nameWithType: AttributeContext.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Google.Rpc.Context.AttributeContext.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Google#Protobuf#IMessage#Descriptor
  name: IMessage.Descriptor
  nameWithType: AttributeContext.IMessage.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: AttributeContext.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Google.Rpc.Context.AttributeContext.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Google.Rpc.Context.AttributeContext.#ctor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.#ctor
  name: AttributeContext
  nameWithType: AttributeContext.AttributeContext
  fullName: Google.Rpc.Context.AttributeContext.AttributeContext
- uid: Google.Rpc.Context.AttributeContext
  commentId: T:Google.Rpc.Context.AttributeContext
  parent: Google.Rpc.Context
  name: AttributeContext
  nameWithType: AttributeContext
  fullName: Google.Rpc.Context.AttributeContext
- uid: Google.Rpc.Context.AttributeContext.Clone*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Clone
  name: Clone
  nameWithType: AttributeContext.Clone
  fullName: Google.Rpc.Context.AttributeContext.Clone
- uid: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext}.Clone
  parent: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<AttributeContext>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext>.Clone()
  nameWithType.vb: IDeepCloneable(Of AttributeContext).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<AttributeContext>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of AttributeContext).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Rpc.Context.AttributeContext.Origin*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Origin
  name: Origin
  nameWithType: AttributeContext.Origin
  fullName: Google.Rpc.Context.AttributeContext.Origin
- uid: Google.Rpc.Context.AttributeContext.Types.Peer
  commentId: T:Google.Rpc.Context.AttributeContext.Types.Peer
  parent: Google.Rpc.Context
  name: AttributeContext.Types.Peer
  nameWithType: AttributeContext.Types.Peer
  fullName: Google.Rpc.Context.AttributeContext.Types.Peer
- uid: Google.Rpc.Context.AttributeContext.Source*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Source
  name: Source
  nameWithType: AttributeContext.Source
  fullName: Google.Rpc.Context.AttributeContext.Source
- uid: Google.Rpc.Context.AttributeContext.Destination*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Destination
  name: Destination
  nameWithType: AttributeContext.Destination
  fullName: Google.Rpc.Context.AttributeContext.Destination
- uid: Google.Rpc.Context.AttributeContext.Request*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Request
  name: Request
  nameWithType: AttributeContext.Request
  fullName: Google.Rpc.Context.AttributeContext.Request
- uid: Google.Rpc.Context.AttributeContext.Types.Request
  commentId: T:Google.Rpc.Context.AttributeContext.Types.Request
  parent: Google.Rpc.Context
  name: AttributeContext.Types.Request
  nameWithType: AttributeContext.Types.Request
  fullName: Google.Rpc.Context.AttributeContext.Types.Request
- uid: Google.Rpc.Context.AttributeContext.Response*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Response
  name: Response
  nameWithType: AttributeContext.Response
  fullName: Google.Rpc.Context.AttributeContext.Response
- uid: Google.Rpc.Context.AttributeContext.Types.Response
  commentId: T:Google.Rpc.Context.AttributeContext.Types.Response
  parent: Google.Rpc.Context
  name: AttributeContext.Types.Response
  nameWithType: AttributeContext.Types.Response
  fullName: Google.Rpc.Context.AttributeContext.Types.Response
- uid: Google.Rpc.Context.AttributeContext.Resource*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Resource
  name: Resource
  nameWithType: AttributeContext.Resource
  fullName: Google.Rpc.Context.AttributeContext.Resource
- uid: Google.Rpc.Context.AttributeContext.Types.Resource
  commentId: T:Google.Rpc.Context.AttributeContext.Types.Resource
  parent: Google.Rpc.Context
  name: AttributeContext.Types.Resource
  nameWithType: AttributeContext.Types.Resource
  fullName: Google.Rpc.Context.AttributeContext.Types.Resource
- uid: Google.Rpc.Context.AttributeContext.Api*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Api
  name: Api
  nameWithType: AttributeContext.Api
  fullName: Google.Rpc.Context.AttributeContext.Api
- uid: Google.Rpc.Context.AttributeContext.Types.Api
  commentId: T:Google.Rpc.Context.AttributeContext.Types.Api
  parent: Google.Rpc.Context
  name: AttributeContext.Types.Api
  nameWithType: AttributeContext.Types.Api
  fullName: Google.Rpc.Context.AttributeContext.Types.Api
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Equals*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Equals
  name: Equals
  nameWithType: AttributeContext.Equals
  fullName: Google.Rpc.Context.AttributeContext.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Google.Rpc.Context.AttributeContext}.Equals(Google.Rpc.Context.AttributeContext)
  commentId: M:System.IEquatable{Google.Rpc.Context.AttributeContext}.Equals(Google.Rpc.Context.AttributeContext)
  parent: System.IEquatable{Google.Rpc.Context.AttributeContext}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(AttributeContext)
  nameWithType: IEquatable<AttributeContext>.Equals(AttributeContext)
  fullName: System.IEquatable<Google.Rpc.Context.AttributeContext>.Equals(Google.Rpc.Context.AttributeContext)
  nameWithType.vb: IEquatable(Of AttributeContext).Equals(AttributeContext)
  fullName.vb: System.IEquatable(Of Google.Rpc.Context.AttributeContext).Equals(Google.Rpc.Context.AttributeContext)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<AttributeContext>.Equals
    fullName: System.IEquatable<Google.Rpc.Context.AttributeContext>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext
    name: AttributeContext
    nameWithType: AttributeContext
    fullName: Google.Rpc.Context.AttributeContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of AttributeContext).Equals
    fullName: System.IEquatable(Of Google.Rpc.Context.AttributeContext).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext
    name: AttributeContext
    nameWithType: AttributeContext
    fullName: Google.Rpc.Context.AttributeContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.GetHashCode*
  commentId: Overload:Google.Rpc.Context.AttributeContext.GetHashCode
  name: GetHashCode
  nameWithType: AttributeContext.GetHashCode
  fullName: Google.Rpc.Context.AttributeContext.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.ToString*
  commentId: Overload:Google.Rpc.Context.AttributeContext.ToString
  name: ToString
  nameWithType: AttributeContext.ToString
  fullName: Google.Rpc.Context.AttributeContext.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Rpc.Context.AttributeContext.WriteTo*
  commentId: Overload:Google.Rpc.Context.AttributeContext.WriteTo
  name: WriteTo
  nameWithType: AttributeContext.WriteTo
  fullName: Google.Rpc.Context.AttributeContext.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Google.Rpc.Context.AttributeContext.CalculateSize*
  commentId: Overload:Google.Rpc.Context.AttributeContext.CalculateSize
  name: CalculateSize
  nameWithType: AttributeContext.CalculateSize
  fullName: Google.Rpc.Context.AttributeContext.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.MergeFrom*
  commentId: Overload:Google.Rpc.Context.AttributeContext.MergeFrom
  name: MergeFrom
  nameWithType: AttributeContext.MergeFrom
  fullName: Google.Rpc.Context.AttributeContext.MergeFrom
- uid: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext}.MergeFrom(Google.Rpc.Context.AttributeContext)
  commentId: M:Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext}.MergeFrom(Google.Rpc.Context.AttributeContext)
  parent: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(AttributeContext)
  nameWithType: IMessage<AttributeContext>.MergeFrom(AttributeContext)
  fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext>.MergeFrom(Google.Rpc.Context.AttributeContext)
  nameWithType.vb: IMessage(Of AttributeContext).MergeFrom(AttributeContext)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext).MergeFrom(Google.Rpc.Context.AttributeContext)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<AttributeContext>.MergeFrom
    fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext
    name: AttributeContext
    nameWithType: AttributeContext
    fullName: Google.Rpc.Context.AttributeContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of AttributeContext).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext
    name: AttributeContext
    nameWithType: AttributeContext
    fullName: Google.Rpc.Context.AttributeContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
