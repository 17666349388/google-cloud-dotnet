### YamlMime:ManagedReference
items:
- uid: Google.Api.Property.Types.PropertyType
  commentId: T:Google.Api.Property.Types.PropertyType
  id: Property.Types.PropertyType
  parent: Google.Api
  children:
  - Google.Api.Property.Types.PropertyType.Bool
  - Google.Api.Property.Types.PropertyType.Double
  - Google.Api.Property.Types.PropertyType.Int64
  - Google.Api.Property.Types.PropertyType.String
  - Google.Api.Property.Types.PropertyType.Unspecified
  langs:
  - csharp
  - vb
  name: Property.Types.PropertyType
  nameWithType: Property.Types.PropertyType
  fullName: Google.Api.Property.Types.PropertyType
  type: Enum
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Consumer.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: PropertyType
    path: src/Google.Api.CommonProtos/Api/Consumer.cs
    startLine: 380
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: "\nSupported data type of the property values\n"
  example: []
  syntax:
    content: public enum PropertyType
    content.vb: Public Enum PropertyType
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Google.Api.Property.Types.PropertyType.Unspecified
  commentId: F:Google.Api.Property.Types.PropertyType.Unspecified
  id: Unspecified
  parent: Google.Api.Property.Types.PropertyType
  langs:
  - csharp
  - vb
  name: Unspecified
  nameWithType: Property.Types.PropertyType.Unspecified
  fullName: Google.Api.Property.Types.PropertyType.Unspecified
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Consumer.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Unspecified
    path: src/Google.Api.CommonProtos/Api/Consumer.cs
    startLine: 384
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: "\nThe type is unspecified, and will result in an error.\n"
  example: []
  syntax:
    content: >-
      [OriginalName("UNSPECIFIED")]

      Unspecified = 0
    return:
      type: Google.Api.Property.Types.PropertyType
    content.vb: >-
      <OriginalName("UNSPECIFIED")>

      Unspecified = 0
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UNSPECIFIED
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Api.Property.Types.PropertyType.Int64
  commentId: F:Google.Api.Property.Types.PropertyType.Int64
  id: Int64
  parent: Google.Api.Property.Types.PropertyType
  langs:
  - csharp
  - vb
  name: Int64
  nameWithType: Property.Types.PropertyType.Int64
  fullName: Google.Api.Property.Types.PropertyType.Int64
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Consumer.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Int64
    path: src/Google.Api.CommonProtos/Api/Consumer.cs
    startLine: 388
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: "\nThe type is `int64`.\n"
  example: []
  syntax:
    content: >-
      [OriginalName("INT64")]

      Int64 = 1
    return:
      type: Google.Api.Property.Types.PropertyType
    content.vb: >-
      <OriginalName("INT64")>

      Int64 = 1
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: INT64
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Api.Property.Types.PropertyType.Bool
  commentId: F:Google.Api.Property.Types.PropertyType.Bool
  id: Bool
  parent: Google.Api.Property.Types.PropertyType
  langs:
  - csharp
  - vb
  name: Bool
  nameWithType: Property.Types.PropertyType.Bool
  fullName: Google.Api.Property.Types.PropertyType.Bool
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Consumer.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Bool
    path: src/Google.Api.CommonProtos/Api/Consumer.cs
    startLine: 392
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: "\nThe type is `bool`.\n"
  example: []
  syntax:
    content: >-
      [OriginalName("BOOL")]

      Bool = 2
    return:
      type: Google.Api.Property.Types.PropertyType
    content.vb: >-
      <OriginalName("BOOL")>

      Bool = 2
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BOOL
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Api.Property.Types.PropertyType.String
  commentId: F:Google.Api.Property.Types.PropertyType.String
  id: String
  parent: Google.Api.Property.Types.PropertyType
  langs:
  - csharp
  - vb
  name: String
  nameWithType: Property.Types.PropertyType.String
  fullName: Google.Api.Property.Types.PropertyType.String
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Consumer.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: String
    path: src/Google.Api.CommonProtos/Api/Consumer.cs
    startLine: 396
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: "\nThe type is `string`.\n"
  example: []
  syntax:
    content: >-
      [OriginalName("STRING")]

      String = 3
    return:
      type: Google.Api.Property.Types.PropertyType
    content.vb: >-
      <OriginalName("STRING")>

      String = 3
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: STRING
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Api.Property.Types.PropertyType.Double
  commentId: F:Google.Api.Property.Types.PropertyType.Double
  id: Double
  parent: Google.Api.Property.Types.PropertyType
  langs:
  - csharp
  - vb
  name: Double
  nameWithType: Property.Types.PropertyType.Double
  fullName: Google.Api.Property.Types.PropertyType.Double
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Consumer.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Double
    path: src/Google.Api.CommonProtos/Api/Consumer.cs
    startLine: 400
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: "\nThe type is &apos;double&apos;.\n"
  example: []
  syntax:
    content: >-
      [OriginalName("DOUBLE")]

      Double = 4
    return:
      type: Google.Api.Property.Types.PropertyType
    content.vb: >-
      <OriginalName("DOUBLE")>

      Double = 4
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DOUBLE
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Google.Api
  commentId: N:Google.Api
  isExternal: false
  name: Google.Api
  nameWithType: Google.Api
  fullName: Google.Api
- uid: Google.Api.Property.Types.PropertyType
  commentId: T:Google.Api.Property.Types.PropertyType
  parent: Google.Api
  isExternal: false
  name: Property.Types.PropertyType
  nameWithType: Property.Types.PropertyType
  fullName: Google.Api.Property.Types.PropertyType
