### YamlMime:ManagedReference
items:
- uid: Google.Api.ClientExtensions
  commentId: T:Google.Api.ClientExtensions
  id: ClientExtensions
  parent: Google.Api
  children:
  - Google.Api.ClientExtensions.DefaultHost
  - Google.Api.ClientExtensions.MethodSignature
  - Google.Api.ClientExtensions.OauthScopes
  langs:
  - csharp
  - vb
  name: ClientExtensions
  nameWithType: ClientExtensions
  fullName: Google.Api.ClientExtensions
  type: Class
  source:
    remote:
      path: Google.Api.CommonProtos/Api/Client.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ClientExtensions
    path: Google.Api.CommonProtos/Api/Client.cs
    startLine: 49
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: Holder for extension identifiers generated from the top level of google/api/client.proto
  example: []
  syntax:
    content: public static class ClientExtensions
    content.vb: Public Module ClientExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Google.Api.ClientExtensions.MethodSignature
  commentId: F:Google.Api.ClientExtensions.MethodSignature
  id: MethodSignature
  parent: Google.Api.ClientExtensions
  langs:
  - csharp
  - vb
  name: MethodSignature
  nameWithType: ClientExtensions.MethodSignature
  fullName: Google.Api.ClientExtensions.MethodSignature
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Api/Client.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MethodSignature
    path: Google.Api.CommonProtos/Api/Client.cs
    startLine: 87
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: "\nA definition of a client library method signature.\n\nIn client libraries, each proto RPC corresponds to one or more methods\nwhich the end user is able to call, and calls the underlying RPC.\nNormally, this method receives a single argument (a struct or instance\ncorresponding to the RPC request object). Defining this field will\nadd one or more overloads providing flattened or simpler method signatures\nin some languages.\n\nThe fields on the method signature are provided as a comma-separated\nstring.\n\nFor example, the proto RPC and annotation:\n\nrpc CreateSubscription(CreateSubscriptionRequest)\n returns (Subscription) {\noption (google.api.method_signature) = &quot;name,topic&quot;;\n}\n\nWould add the following Java overload (in addition to the method accepting\nthe request object):\n\npublic final Subscription createSubscription(String name, String topic)\n\nThe following backwards-compatibility guidelines apply:\n\n* Adding this annotation to an unannotated method is backwards\ncompatible.\n* Adding this annotation to a method which already has existing\nmethod signature annotations is backwards compatible if and only if\nthe new method signature annotation is last in the sequence.\n* Modifying or removing an existing method signature annotation is\na breaking change.\n* Re-ordering existing method signature annotations is a breaking\nchange.\n"
  example: []
  syntax:
    content: public static readonly RepeatedExtension<MethodOptions, string> MethodSignature
    return:
      type: Google.Protobuf.RepeatedExtension{Google.Protobuf.Reflection.MethodOptions,System.String}
    content.vb: Public Shared ReadOnly MethodSignature As RepeatedExtension(Of MethodOptions, String)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Api.ClientExtensions.DefaultHost
  commentId: F:Google.Api.ClientExtensions.DefaultHost
  id: DefaultHost
  parent: Google.Api.ClientExtensions
  langs:
  - csharp
  - vb
  name: DefaultHost
  nameWithType: ClientExtensions.DefaultHost
  fullName: Google.Api.ClientExtensions.DefaultHost
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Api/Client.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: DefaultHost
    path: Google.Api.CommonProtos/Api/Client.cs
    startLine: 100
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: "\nThe hostname for this service.\nThis should be specified with no prefix or protocol.\n\nExample:\n\nservice Foo {\noption (google.api.default_host) = &quot;foo.googleapi.com&quot;;\n...\n}\n"
  example: []
  syntax:
    content: public static readonly Extension<ServiceOptions, string> DefaultHost
    return:
      type: Google.Protobuf.Extension{Google.Protobuf.Reflection.ServiceOptions,System.String}
    content.vb: Public Shared ReadOnly DefaultHost As Extension(Of ServiceOptions, String)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Api.ClientExtensions.OauthScopes
  commentId: F:Google.Api.ClientExtensions.OauthScopes
  id: OauthScopes
  parent: Google.Api.ClientExtensions
  langs:
  - csharp
  - vb
  name: OauthScopes
  nameWithType: ClientExtensions.OauthScopes
  fullName: Google.Api.ClientExtensions.OauthScopes
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Api/Client.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: OauthScopes
    path: Google.Api.CommonProtos/Api/Client.cs
    startLine: 124
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: "\nOAuth scopes needed for the client.\n\nExample:\n\nservice Foo {\noption (google.api.oauth_scopes) = \\\n &quot;https://www.googleapis.com/auth/cloud-platform&quot;;\n...\n}\n\nIf there is more than one scope, use a comma-separated string:\n\nExample:\n\nservice Foo {\noption (google.api.oauth_scopes) = \\\n &quot;https://www.googleapis.com/auth/cloud-platform,&quot;\n &quot;https://www.googleapis.com/auth/monitoring&quot;;\n...\n}\n"
  example: []
  syntax:
    content: public static readonly Extension<ServiceOptions, string> OauthScopes
    return:
      type: Google.Protobuf.Extension{Google.Protobuf.Reflection.ServiceOptions,System.String}
    content.vb: Public Shared ReadOnly OauthScopes As Extension(Of ServiceOptions, String)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Google.Api
  commentId: N:Google.Api
  name: Google.Api
  nameWithType: Google.Api
  fullName: Google.Api
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.RepeatedExtension{Google.Protobuf.Reflection.MethodOptions,System.String}
  commentId: T:Google.Protobuf.RepeatedExtension{Google.Protobuf.Reflection.MethodOptions,System.String}
  parent: Google.Protobuf
  definition: Google.Protobuf.RepeatedExtension`2
  name: RepeatedExtension<MethodOptions, String>
  nameWithType: RepeatedExtension<MethodOptions, String>
  fullName: Google.Protobuf.RepeatedExtension<Google.Protobuf.Reflection.MethodOptions, System.String>
  nameWithType.vb: RepeatedExtension(Of MethodOptions, String)
  fullName.vb: Google.Protobuf.RepeatedExtension(Of Google.Protobuf.Reflection.MethodOptions, System.String)
  name.vb: RepeatedExtension(Of MethodOptions, String)
  spec.csharp:
  - uid: Google.Protobuf.RepeatedExtension`2
    name: RepeatedExtension
    nameWithType: RepeatedExtension
    fullName: Google.Protobuf.RepeatedExtension
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.Reflection.MethodOptions
    name: MethodOptions
    nameWithType: MethodOptions
    fullName: Google.Protobuf.Reflection.MethodOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.RepeatedExtension`2
    name: RepeatedExtension
    nameWithType: RepeatedExtension
    fullName: Google.Protobuf.RepeatedExtension
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.Reflection.MethodOptions
    name: MethodOptions
    nameWithType: MethodOptions
    fullName: Google.Protobuf.Reflection.MethodOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.RepeatedExtension`2
  commentId: T:Google.Protobuf.RepeatedExtension`2
  isExternal: true
  name: RepeatedExtension<TTarget, TValue>
  nameWithType: RepeatedExtension<TTarget, TValue>
  fullName: Google.Protobuf.RepeatedExtension<TTarget, TValue>
  nameWithType.vb: RepeatedExtension(Of TTarget, TValue)
  fullName.vb: Google.Protobuf.RepeatedExtension(Of TTarget, TValue)
  name.vb: RepeatedExtension(Of TTarget, TValue)
  spec.csharp:
  - uid: Google.Protobuf.RepeatedExtension`2
    name: RepeatedExtension
    nameWithType: RepeatedExtension
    fullName: Google.Protobuf.RepeatedExtension
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.RepeatedExtension`2
    name: RepeatedExtension
    nameWithType: RepeatedExtension
    fullName: Google.Protobuf.RepeatedExtension
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: Google.Protobuf.Extension{Google.Protobuf.Reflection.ServiceOptions,System.String}
  commentId: T:Google.Protobuf.Extension{Google.Protobuf.Reflection.ServiceOptions,System.String}
  parent: Google.Protobuf
  definition: Google.Protobuf.Extension`2
  name: Extension<ServiceOptions, String>
  nameWithType: Extension<ServiceOptions, String>
  fullName: Google.Protobuf.Extension<Google.Protobuf.Reflection.ServiceOptions, System.String>
  nameWithType.vb: Extension(Of ServiceOptions, String)
  fullName.vb: Google.Protobuf.Extension(Of Google.Protobuf.Reflection.ServiceOptions, System.String)
  name.vb: Extension(Of ServiceOptions, String)
  spec.csharp:
  - uid: Google.Protobuf.Extension`2
    name: Extension
    nameWithType: Extension
    fullName: Google.Protobuf.Extension
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.Reflection.ServiceOptions
    name: ServiceOptions
    nameWithType: ServiceOptions
    fullName: Google.Protobuf.Reflection.ServiceOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Extension`2
    name: Extension
    nameWithType: Extension
    fullName: Google.Protobuf.Extension
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.Reflection.ServiceOptions
    name: ServiceOptions
    nameWithType: ServiceOptions
    fullName: Google.Protobuf.Reflection.ServiceOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Extension`2
  commentId: T:Google.Protobuf.Extension`2
  isExternal: true
  name: Extension<TTarget, TValue>
  nameWithType: Extension<TTarget, TValue>
  fullName: Google.Protobuf.Extension<TTarget, TValue>
  nameWithType.vb: Extension(Of TTarget, TValue)
  fullName.vb: Google.Protobuf.Extension(Of TTarget, TValue)
  name.vb: Extension(Of TTarget, TValue)
  spec.csharp:
  - uid: Google.Protobuf.Extension`2
    name: Extension
    nameWithType: Extension
    fullName: Google.Protobuf.Extension
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Extension`2
    name: Extension
    nameWithType: Extension
    fullName: Google.Protobuf.Extension
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
