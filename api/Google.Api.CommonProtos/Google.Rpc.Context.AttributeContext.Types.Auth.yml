### YamlMime:ManagedReference
items:
- uid: Google.Rpc.Context.AttributeContext.Types.Auth
  commentId: T:Google.Rpc.Context.AttributeContext.Types.Auth
  id: AttributeContext.Types.Auth
  parent: Google.Rpc.Context
  children:
  - Google.Rpc.Context.AttributeContext.Types.Auth.#ctor
  - Google.Rpc.Context.AttributeContext.Types.Auth.#ctor(Google.Rpc.Context.AttributeContext.Types.Auth)
  - Google.Rpc.Context.AttributeContext.Types.Auth.AccessLevels
  - Google.Rpc.Context.AttributeContext.Types.Auth.AccessLevelsFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Auth.Audiences
  - Google.Rpc.Context.AttributeContext.Types.Auth.AudiencesFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Auth.CalculateSize
  - Google.Rpc.Context.AttributeContext.Types.Auth.Claims
  - Google.Rpc.Context.AttributeContext.Types.Auth.ClaimsFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Auth.Clone
  - Google.Rpc.Context.AttributeContext.Types.Auth.Descriptor
  - Google.Rpc.Context.AttributeContext.Types.Auth.Equals(Google.Rpc.Context.AttributeContext.Types.Auth)
  - Google.Rpc.Context.AttributeContext.Types.Auth.Equals(System.Object)
  - Google.Rpc.Context.AttributeContext.Types.Auth.GetHashCode
  - Google.Rpc.Context.AttributeContext.Types.Auth.Google#Protobuf#IMessage#Descriptor
  - Google.Rpc.Context.AttributeContext.Types.Auth.MergeFrom(Google.Protobuf.CodedInputStream)
  - Google.Rpc.Context.AttributeContext.Types.Auth.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Auth)
  - Google.Rpc.Context.AttributeContext.Types.Auth.Parser
  - Google.Rpc.Context.AttributeContext.Types.Auth.Presenter
  - Google.Rpc.Context.AttributeContext.Types.Auth.PresenterFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Auth.Principal
  - Google.Rpc.Context.AttributeContext.Types.Auth.PrincipalFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Auth.ToString
  - Google.Rpc.Context.AttributeContext.Types.Auth.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: AttributeContext.Types.Auth
  nameWithType: AttributeContext.Types.Auth
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth
  type: Class
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Auth
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 978
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThis message defines request authentication attributes. Terminology is\nbased on the JSON Web Token (JWT) standard, but the terms also\ncorrelate to concepts in other standards.\n"
  example: []
  syntax:
    content: 'public sealed class Auth : IMessage<AttributeContext.Types.Auth>, IMessage, IEquatable<AttributeContext.Types.Auth>, IDeepCloneable<AttributeContext.Types.Auth>'
    content.vb: >-
      Public NotInheritable Class Auth
          Implements IMessage(Of AttributeContext.Types.Auth), IMessage, IEquatable(Of AttributeContext.Types.Auth), IDeepCloneable(Of AttributeContext.Types.Auth)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Auth}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Auth}
  - Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Auth}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Parser
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Auth.Parser
  id: Parser
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: AttributeContext.Types.Auth.Parser
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Parser
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parser
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 981
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public static MessageParser<AttributeContext.Types.Auth> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext.Types.Auth}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of AttributeContext.Types.Auth)
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Descriptor
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Auth.Descriptor
  id: Descriptor
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: AttributeContext.Types.Auth.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Descriptor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 984
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Google#Protobuf#IMessage#Descriptor
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Auth.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: AttributeContext.Types.Auth.IMessage.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 989
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: AttributeContext.Types.Auth.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Google.Rpc.Context.AttributeContext.Types.Auth.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.#ctor
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Auth.#ctor
  id: '#ctor'
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: Auth()
  nameWithType: AttributeContext.Types.Auth.Auth()
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Auth()
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 994
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public Auth()
    content.vb: Public Sub New
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.#ctor(Google.Rpc.Context.AttributeContext.Types.Auth)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Auth.#ctor(Google.Rpc.Context.AttributeContext.Types.Auth)
  id: '#ctor(Google.Rpc.Context.AttributeContext.Types.Auth)'
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: Auth(AttributeContext.Types.Auth)
  nameWithType: AttributeContext.Types.Auth.Auth(AttributeContext.Types.Auth)
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Auth(Google.Rpc.Context.AttributeContext.Types.Auth)
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1001
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public Auth(AttributeContext.Types.Auth other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext.Types.Auth
    content.vb: Public Sub New(other As AttributeContext.Types.Auth)
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Clone
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Auth.Clone
  id: Clone
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: AttributeContext.Types.Auth.Clone()
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Clone()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Clone
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1011
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public AttributeContext.Types.Auth Clone()
    return:
      type: Google.Rpc.Context.AttributeContext.Types.Auth
    content.vb: Public Function Clone As AttributeContext.Types.Auth
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Auth}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.PrincipalFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Auth.PrincipalFieldNumber
  id: PrincipalFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: PrincipalFieldNumber
  nameWithType: AttributeContext.Types.Auth.PrincipalFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.PrincipalFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: PrincipalFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1017
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;principal&quot; field.
  example: []
  syntax:
    content: public const int PrincipalFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const PrincipalFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Principal
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Auth.Principal
  id: Principal
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: Principal
  nameWithType: AttributeContext.Types.Auth.Principal
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Principal
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Principal
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1026
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe authenticated principal. Reflects the issuer (`iss`) and subject\n(`sub`) claims within a JWT. The issuer and subject should be `/`\ndelimited, with `/` percent-encoded within the subject fragment. For\nGoogle accounts, the principal format is:\n&quot;https://accounts.google.com/{id}&quot;\n"
  example: []
  syntax:
    content: public string Principal { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Principal As String
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.Principal*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.AudiencesFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Auth.AudiencesFieldNumber
  id: AudiencesFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: AudiencesFieldNumber
  nameWithType: AttributeContext.Types.Auth.AudiencesFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.AudiencesFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: AudiencesFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1035
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;audiences&quot; field.
  example: []
  syntax:
    content: public const int AudiencesFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const AudiencesFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Audiences
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Auth.Audiences
  id: Audiences
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: Audiences
  nameWithType: AttributeContext.Types.Auth.Audiences
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Audiences
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Audiences
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1055
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe intended audience(s) for this authentication information. Reflects\nthe audience (`aud`) claim within a JWT. The audience\nvalue(s) depends on the `issuer`, but typically include one or more of\nthe following pieces of information:\n\n*  The services intended to receive the credential such as\n[&quot;pubsub.googleapis.com&quot;, &quot;storage.googleapis.com&quot;]\n*  A set of service-based scopes. For example,\n[&quot;https://www.googleapis.com/auth/cloud-platform&quot;]\n*  The client id of an app, such as the Firebase project id for JWTs\nfrom Firebase Auth.\n\nConsult the documentation for the credential issuer to determine the\ninformation provided.\n"
  example: []
  syntax:
    content: public RepeatedField<string> Audiences { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{System.String}
    content.vb: Public ReadOnly Property Audiences As RepeatedField(Of String)
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.Audiences*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.PresenterFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Auth.PresenterFieldNumber
  id: PresenterFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: PresenterFieldNumber
  nameWithType: AttributeContext.Types.Auth.PresenterFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.PresenterFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: PresenterFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1061
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;presenter&quot; field.
  example: []
  syntax:
    content: public const int PresenterFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const PresenterFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Presenter
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Auth.Presenter
  id: Presenter
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: Presenter
  nameWithType: AttributeContext.Types.Auth.Presenter
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Presenter
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Presenter
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1069
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe authorized presenter of the credential. Reflects the optional\nAuthorized Presenter (`azp`) claim within a JWT or the\nOAuth client id. For example, a Google Cloud Platform client id looks\nas follows: &quot;123456789012.apps.googleusercontent.com&quot;.\n"
  example: []
  syntax:
    content: public string Presenter { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Presenter As String
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.Presenter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.ClaimsFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Auth.ClaimsFieldNumber
  id: ClaimsFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: ClaimsFieldNumber
  nameWithType: AttributeContext.Types.Auth.ClaimsFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.ClaimsFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ClaimsFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1078
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;claims&quot; field.
  example: []
  syntax:
    content: public const int ClaimsFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const ClaimsFieldNumber As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Claims
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Auth.Claims
  id: Claims
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: Claims
  nameWithType: AttributeContext.Types.Auth.Claims
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Claims
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Claims
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1097
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nStructured claims presented with the credential. JWTs include\n`{key: value}` pairs for standard and private claims. The following\nis a subset of the standard required and optional claims that would\ntypically be presented for a Google-based JWT:\n\n{&apos;iss&apos;: &apos;accounts.google.com&apos;,\n&apos;sub&apos;: &apos;113289723416554971153&apos;,\n&apos;aud&apos;: [&apos;123456789012&apos;, &apos;pubsub.googleapis.com&apos;],\n&apos;azp&apos;: &apos;123456789012.apps.googleusercontent.com&apos;,\n&apos;email&apos;: &apos;jsmith@example.com&apos;,\n&apos;iat&apos;: 1353601026,\n&apos;exp&apos;: 1353604926}\n\nSAML assertions are similarly specified, but with an identity provider\ndependent structure.\n"
  example: []
  syntax:
    content: public Struct Claims { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Struct
    content.vb: Public Property Claims As Struct
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.Claims*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.AccessLevelsFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Auth.AccessLevelsFieldNumber
  id: AccessLevelsFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: AccessLevelsFieldNumber
  nameWithType: AttributeContext.Types.Auth.AccessLevelsFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.AccessLevelsFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: AccessLevelsFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1106
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;access_levels&quot; field.
  example: []
  syntax:
    content: public const int AccessLevelsFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const AccessLevelsFieldNumber As Integer = 5
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.AccessLevels
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Auth.AccessLevels
  id: AccessLevels
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: AccessLevels
  nameWithType: AttributeContext.Types.Auth.AccessLevels
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.AccessLevels
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: AccessLevels
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1119
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nA list of access level resource names that allow resources to be\naccessed by authenticated requester. It is part of Secure GCP processing\nfor the incoming request. An access level string has the format:\n&quot;//{api_service_name}/accessPolicies/{policy_id}/accessLevels/{short_name}&quot;\n\nExample:\n&quot;//accesscontextmanager.googleapis.com/accessPolicies/MY_POLICY_ID/accessLevels/MY_LEVEL&quot;\n"
  example: []
  syntax:
    content: public RepeatedField<string> AccessLevels { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{System.String}
    content.vb: Public ReadOnly Property AccessLevels As RepeatedField(Of String)
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.AccessLevels*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Equals(System.Object)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Auth.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: AttributeContext.Types.Auth.Equals(Object)
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1124
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Equals(Google.Rpc.Context.AttributeContext.Types.Auth)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Auth.Equals(Google.Rpc.Context.AttributeContext.Types.Auth)
  id: Equals(Google.Rpc.Context.AttributeContext.Types.Auth)
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: Equals(AttributeContext.Types.Auth)
  nameWithType: AttributeContext.Types.Auth.Equals(AttributeContext.Types.Auth)
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Equals(Google.Rpc.Context.AttributeContext.Types.Auth)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1129
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public bool Equals(AttributeContext.Types.Auth other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext.Types.Auth
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As AttributeContext.Types.Auth) As Boolean
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.Equals*
  implements:
  - System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Auth}.Equals(Google.Rpc.Context.AttributeContext.Types.Auth)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.GetHashCode
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Auth.GetHashCode
  id: GetHashCode
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: AttributeContext.Types.Auth.GetHashCode()
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.GetHashCode()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1145
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.ToString
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Auth.ToString
  id: ToString
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AttributeContext.Types.Auth.ToString()
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.ToString()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1159
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Auth.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: AttributeContext.Types.Auth.WriteTo(CodedOutputStream)
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WriteTo
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1164
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.CalculateSize
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Auth.CalculateSize
  id: CalculateSize
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: AttributeContext.Types.Auth.CalculateSize()
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.CalculateSize()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CalculateSize
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1185
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Auth)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Auth.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Auth)
  id: MergeFrom(Google.Rpc.Context.AttributeContext.Types.Auth)
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: MergeFrom(AttributeContext.Types.Auth)
  nameWithType: AttributeContext.Types.Auth.MergeFrom(AttributeContext.Types.Auth)
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Auth)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1205
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void MergeFrom(AttributeContext.Types.Auth other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext.Types.Auth
    content.vb: Public Sub MergeFrom(other As AttributeContext.Types.Auth)
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Auth}.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Auth)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Auth.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Rpc.Context.AttributeContext.Types.Auth
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: AttributeContext.Types.Auth.MergeFrom(CodedInputStream)
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 1227
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Google.Rpc.Context.AttributeContext.Types.Auth.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Rpc.Context
  commentId: N:Google.Rpc.Context
  name: Google.Rpc.Context
  nameWithType: Google.Rpc.Context
  fullName: Google.Rpc.Context
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Auth}
  commentId: T:Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Auth}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<AttributeContext.Types.Auth>
  nameWithType: IMessage<AttributeContext.Types.Auth>
  fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext.Types.Auth>
  nameWithType.vb: IMessage(Of AttributeContext.Types.Auth)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext.Types.Auth)
  name.vb: IMessage(Of AttributeContext.Types.Auth)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Auth
    name: AttributeContext.Types.Auth
    nameWithType: AttributeContext.Types.Auth
    fullName: Google.Rpc.Context.AttributeContext.Types.Auth
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Auth
    name: AttributeContext.Types.Auth
    nameWithType: AttributeContext.Types.Auth
    fullName: Google.Rpc.Context.AttributeContext.Types.Auth
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Auth}
  commentId: T:System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Auth}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<AttributeContext.Types.Auth>
  nameWithType: IEquatable<AttributeContext.Types.Auth>
  fullName: System.IEquatable<Google.Rpc.Context.AttributeContext.Types.Auth>
  nameWithType.vb: IEquatable(Of AttributeContext.Types.Auth)
  fullName.vb: System.IEquatable(Of Google.Rpc.Context.AttributeContext.Types.Auth)
  name.vb: IEquatable(Of AttributeContext.Types.Auth)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Auth
    name: AttributeContext.Types.Auth
    nameWithType: AttributeContext.Types.Auth
    fullName: Google.Rpc.Context.AttributeContext.Types.Auth
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Auth
    name: AttributeContext.Types.Auth
    nameWithType: AttributeContext.Types.Auth
    fullName: Google.Rpc.Context.AttributeContext.Types.Auth
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Auth}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Auth}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<AttributeContext.Types.Auth>
  nameWithType: IDeepCloneable<AttributeContext.Types.Auth>
  fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext.Types.Auth>
  nameWithType.vb: IDeepCloneable(Of AttributeContext.Types.Auth)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext.Types.Auth)
  name.vb: IDeepCloneable(Of AttributeContext.Types.Auth)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Auth
    name: AttributeContext.Types.Auth
    nameWithType: AttributeContext.Types.Auth
    fullName: Google.Rpc.Context.AttributeContext.Types.Auth
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Auth
    name: AttributeContext.Types.Auth
    nameWithType: AttributeContext.Types.Auth
    fullName: Google.Rpc.Context.AttributeContext.Types.Auth
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Parser*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.Parser
  name: Parser
  nameWithType: AttributeContext.Types.Auth.Parser
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Parser
- uid: Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext.Types.Auth}
  commentId: T:Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext.Types.Auth}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<AttributeContext.Types.Auth>
  nameWithType: MessageParser<AttributeContext.Types.Auth>
  fullName: Google.Protobuf.MessageParser<Google.Rpc.Context.AttributeContext.Types.Auth>
  nameWithType.vb: MessageParser(Of AttributeContext.Types.Auth)
  fullName.vb: Google.Protobuf.MessageParser(Of Google.Rpc.Context.AttributeContext.Types.Auth)
  name.vb: MessageParser(Of AttributeContext.Types.Auth)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Auth
    name: AttributeContext.Types.Auth
    nameWithType: AttributeContext.Types.Auth
    fullName: Google.Rpc.Context.AttributeContext.Types.Auth
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Auth
    name: AttributeContext.Types.Auth
    nameWithType: AttributeContext.Types.Auth
    fullName: Google.Rpc.Context.AttributeContext.Types.Auth
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Descriptor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.Descriptor
  name: Descriptor
  nameWithType: AttributeContext.Types.Auth.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.Google#Protobuf#IMessage#Descriptor
  name: IMessage.Descriptor
  nameWithType: AttributeContext.Types.Auth.IMessage.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: AttributeContext.Types.Auth.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Google.Rpc.Context.AttributeContext.Types.Auth.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.#ctor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.#ctor
  name: Auth
  nameWithType: AttributeContext.Types.Auth.Auth
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Auth
- uid: Google.Rpc.Context.AttributeContext.Types.Auth
  commentId: T:Google.Rpc.Context.AttributeContext.Types.Auth
  parent: Google.Rpc.Context
  name: AttributeContext.Types.Auth
  nameWithType: AttributeContext.Types.Auth
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Clone*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.Clone
  name: Clone
  nameWithType: AttributeContext.Types.Auth.Clone
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Clone
- uid: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Auth}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Auth}.Clone
  parent: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Auth}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<AttributeContext.Types.Auth>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext.Types.Auth>.Clone()
  nameWithType.vb: IDeepCloneable(Of AttributeContext.Types.Auth).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext.Types.Auth).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<AttributeContext.Types.Auth>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext.Types.Auth>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of AttributeContext.Types.Auth).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext.Types.Auth).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Principal*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.Principal
  name: Principal
  nameWithType: AttributeContext.Types.Auth.Principal
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Principal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Audiences*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.Audiences
  name: Audiences
  nameWithType: AttributeContext.Types.Auth.Audiences
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Audiences
- uid: Google.Protobuf.Collections.RepeatedField{System.String}
  commentId: T:Google.Protobuf.Collections.RepeatedField{System.String}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<String>
  nameWithType: RepeatedField<String>
  fullName: Google.Protobuf.Collections.RepeatedField<System.String>
  nameWithType.vb: RepeatedField(Of String)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of System.String)
  name.vb: RepeatedField(Of String)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Presenter*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.Presenter
  name: Presenter
  nameWithType: AttributeContext.Types.Auth.Presenter
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Presenter
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Claims*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.Claims
  name: Claims
  nameWithType: AttributeContext.Types.Auth.Claims
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Claims
- uid: Google.Protobuf.WellKnownTypes.Struct
  commentId: T:Google.Protobuf.WellKnownTypes.Struct
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Struct
  nameWithType: Struct
  fullName: Google.Protobuf.WellKnownTypes.Struct
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.AccessLevels*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.AccessLevels
  name: AccessLevels
  nameWithType: AttributeContext.Types.Auth.AccessLevels
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.AccessLevels
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.Equals*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.Equals
  name: Equals
  nameWithType: AttributeContext.Types.Auth.Equals
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Auth}.Equals(Google.Rpc.Context.AttributeContext.Types.Auth)
  commentId: M:System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Auth}.Equals(Google.Rpc.Context.AttributeContext.Types.Auth)
  parent: System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Auth}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(AttributeContext.Types.Auth)
  nameWithType: IEquatable<AttributeContext.Types.Auth>.Equals(AttributeContext.Types.Auth)
  fullName: System.IEquatable<Google.Rpc.Context.AttributeContext.Types.Auth>.Equals(Google.Rpc.Context.AttributeContext.Types.Auth)
  nameWithType.vb: IEquatable(Of AttributeContext.Types.Auth).Equals(AttributeContext.Types.Auth)
  fullName.vb: System.IEquatable(Of Google.Rpc.Context.AttributeContext.Types.Auth).Equals(Google.Rpc.Context.AttributeContext.Types.Auth)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<AttributeContext.Types.Auth>.Equals
    fullName: System.IEquatable<Google.Rpc.Context.AttributeContext.Types.Auth>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Auth
    name: AttributeContext.Types.Auth
    nameWithType: AttributeContext.Types.Auth
    fullName: Google.Rpc.Context.AttributeContext.Types.Auth
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of AttributeContext.Types.Auth).Equals
    fullName: System.IEquatable(Of Google.Rpc.Context.AttributeContext.Types.Auth).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Auth
    name: AttributeContext.Types.Auth
    nameWithType: AttributeContext.Types.Auth
    fullName: Google.Rpc.Context.AttributeContext.Types.Auth
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.GetHashCode*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.GetHashCode
  name: GetHashCode
  nameWithType: AttributeContext.Types.Auth.GetHashCode
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.ToString*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.ToString
  name: ToString
  nameWithType: AttributeContext.Types.Auth.ToString
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.ToString
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.WriteTo*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.WriteTo
  name: WriteTo
  nameWithType: AttributeContext.Types.Auth.WriteTo
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.CalculateSize*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.CalculateSize
  name: CalculateSize
  nameWithType: AttributeContext.Types.Auth.CalculateSize
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Auth.MergeFrom*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Auth.MergeFrom
  name: MergeFrom
  nameWithType: AttributeContext.Types.Auth.MergeFrom
  fullName: Google.Rpc.Context.AttributeContext.Types.Auth.MergeFrom
- uid: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Auth}.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Auth)
  commentId: M:Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Auth}.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Auth)
  parent: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Auth}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(AttributeContext.Types.Auth)
  nameWithType: IMessage<AttributeContext.Types.Auth>.MergeFrom(AttributeContext.Types.Auth)
  fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext.Types.Auth>.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Auth)
  nameWithType.vb: IMessage(Of AttributeContext.Types.Auth).MergeFrom(AttributeContext.Types.Auth)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext.Types.Auth).MergeFrom(Google.Rpc.Context.AttributeContext.Types.Auth)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<AttributeContext.Types.Auth>.MergeFrom
    fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext.Types.Auth>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Auth
    name: AttributeContext.Types.Auth
    nameWithType: AttributeContext.Types.Auth
    fullName: Google.Rpc.Context.AttributeContext.Types.Auth
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of AttributeContext.Types.Auth).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext.Types.Auth).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Auth
    name: AttributeContext.Types.Auth
    nameWithType: AttributeContext.Types.Auth
    fullName: Google.Rpc.Context.AttributeContext.Types.Auth
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
