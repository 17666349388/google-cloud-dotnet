### YamlMime:ManagedReference
items:
- uid: Google.Type.Date
  commentId: T:Google.Type.Date
  id: Date
  parent: Google.Type
  children:
  - Google.Type.Date.#ctor
  - Google.Type.Date.#ctor(Google.Type.Date)
  - Google.Type.Date.CalculateSize
  - Google.Type.Date.Clone
  - Google.Type.Date.Day
  - Google.Type.Date.DayFieldNumber
  - Google.Type.Date.Descriptor
  - Google.Type.Date.Equals(Google.Type.Date)
  - Google.Type.Date.Equals(System.Object)
  - Google.Type.Date.FromDateTime(System.DateTime)
  - Google.Type.Date.FromDateTimeOffset(System.DateTimeOffset)
  - Google.Type.Date.GetHashCode
  - Google.Type.Date.Google#Protobuf#IMessage#Descriptor
  - Google.Type.Date.MergeFrom(Google.Protobuf.CodedInputStream)
  - Google.Type.Date.MergeFrom(Google.Type.Date)
  - Google.Type.Date.Month
  - Google.Type.Date.MonthFieldNumber
  - Google.Type.Date.Parser
  - Google.Type.Date.ToDateTime
  - Google.Type.Date.ToDateTimeOffset
  - Google.Type.Date.ToString
  - Google.Type.Date.WriteTo(Google.Protobuf.CodedOutputStream)
  - Google.Type.Date.Year
  - Google.Type.Date.YearFieldNumber
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: Date
  fullName: Google.Type.Date
  type: Class
  source:
    remote:
      path: Google.Api.CommonProtos/Type/DatePartial.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Date
    path: Google.Api.CommonProtos/Type/DatePartial.cs
    startLine: 11
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nRepresents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are [google.type.TimeOfDay][google.type.TimeOfDay] and `google.protobuf.Timestamp`.\n"
  example: []
  syntax:
    content: 'public sealed class Date : IMessage<Date>, IMessage, IEquatable<Date>, IDeepCloneable<Date>'
    content.vb: >-
      Public NotInheritable Class Date
          Implements IMessage(Of Date), IMessage, IEquatable(Of Date), IDeepCloneable(Of Date)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Type.Date}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Type.Date}
  - Google.Protobuf.IDeepCloneable{Google.Type.Date}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Type.Date.Parser
  commentId: P:Google.Type.Date.Parser
  id: Parser
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: Date.Parser
  fullName: Google.Type.Date.Parser
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parser
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 63
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public static MessageParser<Date> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Google.Type.Date}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of Date)
  overload: Google.Type.Date.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Type.Date.Descriptor
  commentId: P:Google.Type.Date.Descriptor
  id: Descriptor
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: Date.Descriptor
  fullName: Google.Type.Date.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Descriptor
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 66
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Google.Type.Date.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Type.Date.Google#Protobuf#IMessage#Descriptor
  commentId: P:Google.Type.Date.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: Date.IMessage.Descriptor
  fullName: Google.Type.Date.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 71
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Google.Type.Date.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: Date.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Google.Type.Date.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Type.Date.#ctor
  commentId: M:Google.Type.Date.#ctor
  id: '#ctor'
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: Date()
  nameWithType: Date.Date()
  fullName: Google.Type.Date.Date()
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 76
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Date()
    content.vb: Public Sub New
  overload: Google.Type.Date.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Date.#ctor(Google.Type.Date)
  commentId: M:Google.Type.Date.#ctor(Google.Type.Date)
  id: '#ctor(Google.Type.Date)'
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: Date(Date)
  nameWithType: Date.Date(Date)
  fullName: Google.Type.Date.Date(Google.Type.Date)
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 83
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Date(Date other)
    parameters:
    - id: other
      type: Google.Type.Date
    content.vb: Public Sub New(other As Date)
  overload: Google.Type.Date.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Date.Clone
  commentId: M:Google.Type.Date.Clone
  id: Clone
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Date.Clone()
  fullName: Google.Type.Date.Clone()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Clone
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 91
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Date Clone()
    return:
      type: Google.Type.Date
    content.vb: Public Function Clone As Date
  overload: Google.Type.Date.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Google.Type.Date}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Date.YearFieldNumber
  commentId: F:Google.Type.Date.YearFieldNumber
  id: YearFieldNumber
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: YearFieldNumber
  nameWithType: Date.YearFieldNumber
  fullName: Google.Type.Date.YearFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: YearFieldNumber
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 97
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;year&quot; field.
  example: []
  syntax:
    content: public const int YearFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const YearFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Date.Year
  commentId: P:Google.Type.Date.Year
  id: Year
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: Year
  nameWithType: Date.Year
  fullName: Google.Type.Date.Year
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Year
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 103
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nYear of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.\n"
  example: []
  syntax:
    content: public int Year { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Year As Integer
  overload: Google.Type.Date.Year*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Date.MonthFieldNumber
  commentId: F:Google.Type.Date.MonthFieldNumber
  id: MonthFieldNumber
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: MonthFieldNumber
  nameWithType: Date.MonthFieldNumber
  fullName: Google.Type.Date.MonthFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MonthFieldNumber
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 112
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;month&quot; field.
  example: []
  syntax:
    content: public const int MonthFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const MonthFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Date.Month
  commentId: P:Google.Type.Date.Month
  id: Month
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: Month
  nameWithType: Date.Month
  fullName: Google.Type.Date.Month
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Month
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 118
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nMonth of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.\n"
  example: []
  syntax:
    content: public int Month { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Month As Integer
  overload: Google.Type.Date.Month*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Date.DayFieldNumber
  commentId: F:Google.Type.Date.DayFieldNumber
  id: DayFieldNumber
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: DayFieldNumber
  nameWithType: Date.DayFieldNumber
  fullName: Google.Type.Date.DayFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: DayFieldNumber
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 127
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;day&quot; field.
  example: []
  syntax:
    content: public const int DayFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const DayFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Date.Day
  commentId: P:Google.Type.Date.Day
  id: Day
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: Day
  nameWithType: Date.Day
  fullName: Google.Type.Date.Day
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Day
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 134
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nDay of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.\n"
  example: []
  syntax:
    content: public int Day { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Day As Integer
  overload: Google.Type.Date.Day*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Date.Equals(System.Object)
  commentId: M:Google.Type.Date.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Date.Equals(Object)
  fullName: Google.Type.Date.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 142
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Type.Date.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Date.Equals(Google.Type.Date)
  commentId: M:Google.Type.Date.Equals(Google.Type.Date)
  id: Equals(Google.Type.Date)
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: Equals(Date)
  nameWithType: Date.Equals(Date)
  fullName: Google.Type.Date.Equals(Google.Type.Date)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 147
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public bool Equals(Date other)
    parameters:
    - id: other
      type: Google.Type.Date
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Date) As Boolean
  overload: Google.Type.Date.Equals*
  implements:
  - System.IEquatable{Google.Type.Date}.Equals(Google.Type.Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Date.GetHashCode
  commentId: M:Google.Type.Date.GetHashCode
  id: GetHashCode
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Date.GetHashCode()
  fullName: Google.Type.Date.GetHashCode()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 161
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Type.Date.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Date.ToString
  commentId: M:Google.Type.Date.ToString
  id: ToString
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Date.ToString()
  fullName: Google.Type.Date.ToString()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 173
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Type.Date.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Date.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Type.Date.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: Date.WriteTo(CodedOutputStream)
  fullName: Google.Type.Date.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WriteTo
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 178
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Google.Type.Date.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Date.CalculateSize
  commentId: M:Google.Type.Date.CalculateSize
  id: CalculateSize
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: Date.CalculateSize()
  fullName: Google.Type.Date.CalculateSize()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CalculateSize
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 197
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Google.Type.Date.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Date.MergeFrom(Google.Type.Date)
  commentId: M:Google.Type.Date.MergeFrom(Google.Type.Date)
  id: MergeFrom(Google.Type.Date)
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: MergeFrom(Date)
  nameWithType: Date.MergeFrom(Date)
  fullName: Google.Type.Date.MergeFrom(Google.Type.Date)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 215
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void MergeFrom(Date other)
    parameters:
    - id: other
      type: Google.Type.Date
    content.vb: Public Sub MergeFrom(other As Date)
  overload: Google.Type.Date.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Google.Type.Date}.MergeFrom(Google.Type.Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Date.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Type.Date.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: Date.MergeFrom(CodedInputStream)
  fullName: Google.Type.Date.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/Date.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Type/Date.cs
    startLine: 232
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Google.Type.Date.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Date.ToDateTime
  commentId: M:Google.Type.Date.ToDateTime
  id: ToDateTime
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: ToDateTime()
  nameWithType: Date.ToDateTime()
  fullName: Google.Type.Date.ToDateTime()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/DatePartial.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToDateTime
    path: Google.Api.CommonProtos/Type/DatePartial.cs
    startLine: 18
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nConverts <xref href=\"Google.Type.Date\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public DateTime ToDateTime()
    return:
      type: System.DateTime
      description: The converted <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> with time at midnight and <xref href="System.DateTime.Kind" data-throw-if-not-resolved="false"></xref> of <xref href="System.DateTimeKind.Unspecified" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ToDateTime As Date
  overload: Google.Type.Date.ToDateTime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown when <xref href="Google.Type.Date.Year" data-throw-if-not-resolved="false"></xref>, <xref href="Google.Type.Date.Month" data-throw-if-not-resolved="false"></xref>, and/or <xref href="Google.Type.Date.Day" data-throw-if-not-resolved="false"></xref> are not within the valid range.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Date.ToDateTimeOffset
  commentId: M:Google.Type.Date.ToDateTimeOffset
  id: ToDateTimeOffset
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: ToDateTimeOffset()
  nameWithType: Date.ToDateTimeOffset()
  fullName: Google.Type.Date.ToDateTimeOffset()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/DatePartial.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToDateTimeOffset
    path: Google.Api.CommonProtos/Type/DatePartial.cs
    startLine: 35
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nConverts <xref href=\"Google.Type.Date\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public DateTimeOffset ToDateTimeOffset()
    return:
      type: System.DateTimeOffset
      description: The converted <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> with time at midnight, <xref href="System.DateTime.Kind" data-throw-if-not-resolved="false"></xref> of <xref href="System.DateTimeKind.Unspecified" data-throw-if-not-resolved="false"></xref>, and an <xref href="System.DateTimeOffset.Offset" data-throw-if-not-resolved="false"></xref> of <xref href="System.TimeSpan.Zero" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ToDateTimeOffset As DateTimeOffset
  overload: Google.Type.Date.ToDateTimeOffset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown when <xref href="Google.Type.Date.Year" data-throw-if-not-resolved="false"></xref>, <xref href="Google.Type.Date.Month" data-throw-if-not-resolved="false"></xref>, and/or <xref href="Google.Type.Date.Day" data-throw-if-not-resolved="false"></xref> are not within the valid range.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Date.FromDateTime(System.DateTime)
  commentId: M:Google.Type.Date.FromDateTime(System.DateTime)
  id: FromDateTime(System.DateTime)
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: FromDateTime(DateTime)
  nameWithType: Date.FromDateTime(DateTime)
  fullName: Google.Type.Date.FromDateTime(System.DateTime)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/DatePartial.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: FromDateTime
    path: Google.Api.CommonProtos/Type/DatePartial.cs
    startLine: 52
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nCreates a <xref href=\"Google.Type.Date\" data-throw-if-not-resolved=\"false\"></xref> instance from the <xref href=\"System.DateTime.Date\" data-throw-if-not-resolved=\"false\"></xref> part of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Date FromDateTime(DateTime dateTime)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: The <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value being converted.
    return:
      type: Google.Type.Date
      description: The created <xref href="Google.Type.Date" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function FromDateTime(dateTime As Date) As Date
  overload: Google.Type.Date.FromDateTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Type.Date.FromDateTimeOffset(System.DateTimeOffset)
  commentId: M:Google.Type.Date.FromDateTimeOffset(System.DateTimeOffset)
  id: FromDateTimeOffset(System.DateTimeOffset)
  parent: Google.Type.Date
  langs:
  - csharp
  - vb
  name: FromDateTimeOffset(DateTimeOffset)
  nameWithType: Date.FromDateTimeOffset(DateTimeOffset)
  fullName: Google.Type.Date.FromDateTimeOffset(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Type/DatePartial.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: FromDateTimeOffset
    path: Google.Api.CommonProtos/Type/DatePartial.cs
    startLine: 65
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nCreates a <xref href=\"Google.Type.Date\" data-throw-if-not-resolved=\"false\"></xref> instance from the <xref href=\"System.DateTimeOffset.Date\" data-throw-if-not-resolved=\"false\"></xref> part of <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Date FromDateTimeOffset(DateTimeOffset dateTimeOffset)
    parameters:
    - id: dateTimeOffset
      type: System.DateTimeOffset
      description: The <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> value being converted.
    return:
      type: Google.Type.Date
      description: The created <xref href="Google.Type.Date" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function FromDateTimeOffset(dateTimeOffset As DateTimeOffset) As Date
  overload: Google.Type.Date.FromDateTimeOffset*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Google.Type
  commentId: N:Google.Type
  name: Google.Type
  nameWithType: Google.Type
  fullName: Google.Type
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Type.Date}
  commentId: T:Google.Protobuf.IMessage{Google.Type.Date}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<Date>
  nameWithType: IMessage<Date>
  fullName: Google.Protobuf.IMessage<Google.Type.Date>
  nameWithType.vb: IMessage(Of Date)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Type.Date)
  name.vb: IMessage(Of Date)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.Date
    name: Date
    nameWithType: Date
    fullName: Google.Type.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.Date
    name: Date
    nameWithType: Date
    fullName: Google.Type.Date
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Type.Date}
  commentId: T:System.IEquatable{Google.Type.Date}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Date>
  nameWithType: IEquatable<Date>
  fullName: System.IEquatable<Google.Type.Date>
  nameWithType.vb: IEquatable(Of Date)
  fullName.vb: System.IEquatable(Of Google.Type.Date)
  name.vb: IEquatable(Of Date)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.Date
    name: Date
    nameWithType: Date
    fullName: Google.Type.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.Date
    name: Date
    nameWithType: Date
    fullName: Google.Type.Date
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Type.Date}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Type.Date}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<Date>
  nameWithType: IDeepCloneable<Date>
  fullName: Google.Protobuf.IDeepCloneable<Google.Type.Date>
  nameWithType.vb: IDeepCloneable(Of Date)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Type.Date)
  name.vb: IDeepCloneable(Of Date)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.Date
    name: Date
    nameWithType: Date
    fullName: Google.Type.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.Date
    name: Date
    nameWithType: Date
    fullName: Google.Type.Date
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Date.Parser*
  commentId: Overload:Google.Type.Date.Parser
  name: Parser
  nameWithType: Date.Parser
  fullName: Google.Type.Date.Parser
- uid: Google.Protobuf.MessageParser{Google.Type.Date}
  commentId: T:Google.Protobuf.MessageParser{Google.Type.Date}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<Date>
  nameWithType: MessageParser<Date>
  fullName: Google.Protobuf.MessageParser<Google.Type.Date>
  nameWithType.vb: MessageParser(Of Date)
  fullName.vb: Google.Protobuf.MessageParser(Of Google.Type.Date)
  name.vb: MessageParser(Of Date)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.Date
    name: Date
    nameWithType: Date
    fullName: Google.Type.Date
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.Date
    name: Date
    nameWithType: Date
    fullName: Google.Type.Date
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Date.Descriptor*
  commentId: Overload:Google.Type.Date.Descriptor
  name: Descriptor
  nameWithType: Date.Descriptor
  fullName: Google.Type.Date.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Google.Type.Date.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Google.Type.Date.Google#Protobuf#IMessage#Descriptor
  name: IMessage.Descriptor
  nameWithType: Date.IMessage.Descriptor
  fullName: Google.Type.Date.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: Date.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Google.Type.Date.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Google.Type.Date.#ctor*
  commentId: Overload:Google.Type.Date.#ctor
  name: Date
  nameWithType: Date.Date
  fullName: Google.Type.Date.Date
- uid: Google.Type.Date
  commentId: T:Google.Type.Date
  parent: Google.Type
  name: Date
  nameWithType: Date
  fullName: Google.Type.Date
- uid: Google.Type.Date.Clone*
  commentId: Overload:Google.Type.Date.Clone
  name: Clone
  nameWithType: Date.Clone
  fullName: Google.Type.Date.Clone
- uid: Google.Protobuf.IDeepCloneable{Google.Type.Date}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Google.Type.Date}.Clone
  parent: Google.Protobuf.IDeepCloneable{Google.Type.Date}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<Date>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Google.Type.Date>.Clone()
  nameWithType.vb: IDeepCloneable(Of Date).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Type.Date).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<Date>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Google.Type.Date>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of Date).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Google.Type.Date).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Type.Date.Year*
  commentId: Overload:Google.Type.Date.Year
  name: Year
  nameWithType: Date.Year
  fullName: Google.Type.Date.Year
- uid: Google.Type.Date.Month*
  commentId: Overload:Google.Type.Date.Month
  name: Month
  nameWithType: Date.Month
  fullName: Google.Type.Date.Month
- uid: Google.Type.Date.Day*
  commentId: Overload:Google.Type.Date.Day
  name: Day
  nameWithType: Date.Day
  fullName: Google.Type.Date.Day
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Date.Equals*
  commentId: Overload:Google.Type.Date.Equals
  name: Equals
  nameWithType: Date.Equals
  fullName: Google.Type.Date.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Google.Type.Date}.Equals(Google.Type.Date)
  commentId: M:System.IEquatable{Google.Type.Date}.Equals(Google.Type.Date)
  parent: System.IEquatable{Google.Type.Date}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Date)
  nameWithType: IEquatable<Date>.Equals(Date)
  fullName: System.IEquatable<Google.Type.Date>.Equals(Google.Type.Date)
  nameWithType.vb: IEquatable(Of Date).Equals(Date)
  fullName.vb: System.IEquatable(Of Google.Type.Date).Equals(Google.Type.Date)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Date>.Equals
    fullName: System.IEquatable<Google.Type.Date>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.Date
    name: Date
    nameWithType: Date
    fullName: Google.Type.Date
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Date).Equals
    fullName: System.IEquatable(Of Google.Type.Date).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.Date
    name: Date
    nameWithType: Date
    fullName: Google.Type.Date
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Date.GetHashCode*
  commentId: Overload:Google.Type.Date.GetHashCode
  name: GetHashCode
  nameWithType: Date.GetHashCode
  fullName: Google.Type.Date.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Date.ToString*
  commentId: Overload:Google.Type.Date.ToString
  name: ToString
  nameWithType: Date.ToString
  fullName: Google.Type.Date.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Type.Date.WriteTo*
  commentId: Overload:Google.Type.Date.WriteTo
  name: WriteTo
  nameWithType: Date.WriteTo
  fullName: Google.Type.Date.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Google.Type.Date.CalculateSize*
  commentId: Overload:Google.Type.Date.CalculateSize
  name: CalculateSize
  nameWithType: Date.CalculateSize
  fullName: Google.Type.Date.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Date.MergeFrom*
  commentId: Overload:Google.Type.Date.MergeFrom
  name: MergeFrom
  nameWithType: Date.MergeFrom
  fullName: Google.Type.Date.MergeFrom
- uid: Google.Protobuf.IMessage{Google.Type.Date}.MergeFrom(Google.Type.Date)
  commentId: M:Google.Protobuf.IMessage{Google.Type.Date}.MergeFrom(Google.Type.Date)
  parent: Google.Protobuf.IMessage{Google.Type.Date}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(Date)
  nameWithType: IMessage<Date>.MergeFrom(Date)
  fullName: Google.Protobuf.IMessage<Google.Type.Date>.MergeFrom(Google.Type.Date)
  nameWithType.vb: IMessage(Of Date).MergeFrom(Date)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Type.Date).MergeFrom(Google.Type.Date)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<Date>.MergeFrom
    fullName: Google.Protobuf.IMessage<Google.Type.Date>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.Date
    name: Date
    nameWithType: Date
    fullName: Google.Type.Date
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of Date).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Google.Type.Date).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Type.Date
    name: Date
    nameWithType: Date
    fullName: Google.Type.Date
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DateTime.Kind
  commentId: P:System.DateTime.Kind
  isExternal: true
- uid: System.DateTimeKind.Unspecified
  commentId: F:System.DateTimeKind.Unspecified
  isExternal: true
- uid: Google.Type.Date.Year
  commentId: P:Google.Type.Date.Year
  isExternal: true
- uid: Google.Type.Date.Month
  commentId: P:Google.Type.Date.Month
  isExternal: true
- uid: Google.Type.Date.Day
  commentId: P:Google.Type.Date.Day
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Google.Type.Date.ToDateTime*
  commentId: Overload:Google.Type.Date.ToDateTime
  name: ToDateTime
  nameWithType: Date.ToDateTime
  fullName: Google.Type.Date.ToDateTime
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.DateTimeOffset.Offset
  commentId: P:System.DateTimeOffset.Offset
  isExternal: true
- uid: System.TimeSpan.Zero
  commentId: F:System.TimeSpan.Zero
  isExternal: true
- uid: Google.Type.Date.ToDateTimeOffset*
  commentId: Overload:Google.Type.Date.ToDateTimeOffset
  name: ToDateTimeOffset
  nameWithType: Date.ToDateTimeOffset
  fullName: Google.Type.Date.ToDateTimeOffset
- uid: System.DateTime.Date
  commentId: P:System.DateTime.Date
  isExternal: true
- uid: Google.Type.Date.FromDateTime*
  commentId: Overload:Google.Type.Date.FromDateTime
  name: FromDateTime
  nameWithType: Date.FromDateTime
  fullName: Google.Type.Date.FromDateTime
- uid: System.DateTimeOffset.Date
  commentId: P:System.DateTimeOffset.Date
  isExternal: true
- uid: Google.Type.Date.FromDateTimeOffset*
  commentId: Overload:Google.Type.Date.FromDateTimeOffset
  name: FromDateTimeOffset
  nameWithType: Date.FromDateTimeOffset
  fullName: Google.Type.Date.FromDateTimeOffset
