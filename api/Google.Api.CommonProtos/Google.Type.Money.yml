### YamlMime:ManagedReference
items:
- uid: Google.Type.Money
  commentId: T:Google.Type.Money
  id: Money
  parent: Google.Type
  children:
  - Google.Type.Money.#ctor
  - Google.Type.Money.#ctor(Google.Type.Money)
  - Google.Type.Money.CalculateSize
  - Google.Type.Money.Clone
  - Google.Type.Money.CurrencyCode
  - Google.Type.Money.CurrencyCodeFieldNumber
  - Google.Type.Money.Descriptor
  - Google.Type.Money.Equals(Google.Type.Money)
  - Google.Type.Money.Equals(System.Object)
  - Google.Type.Money.GetHashCode
  - Google.Type.Money.MergeFrom(Google.Protobuf.CodedInputStream)
  - Google.Type.Money.MergeFrom(Google.Type.Money)
  - Google.Type.Money.Nanos
  - Google.Type.Money.NanosFieldNumber
  - Google.Type.Money.Parser
  - Google.Type.Money.ToString
  - Google.Type.Money.Units
  - Google.Type.Money.UnitsFieldNumber
  - Google.Type.Money.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: Money
  nameWithType: Money
  fullName: Google.Type.Money
  type: Class
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Money
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 49
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nRepresents an amount of money with its currency type.\n"
  example: []
  syntax:
    content: 'public sealed class Money : Protobuf.IMessage<Money>'
    content.vb: >-
      Public NotInheritable Class Money
          Inherits Protobuf.IMessage(Of Money)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Type.Money.Parser
  commentId: P:Google.Type.Money.Parser
  id: Parser
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: Money.Parser
  fullName: Google.Type.Money.Parser
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parser
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 51
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public static Protobuf.MessageParser<Money> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Google.Type.Money}
    content.vb: Public Shared ReadOnly Property Parser As Protobuf.MessageParser(Of Money)
  overload: Google.Type.Money.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Type.Money.Descriptor
  commentId: P:Google.Type.Money.Descriptor
  id: Descriptor
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: Money.Descriptor
  fullName: Google.Type.Money.Descriptor
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Descriptor
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 54
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public static Protobuf.Reflection.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As Protobuf.Reflection.MessageDescriptor
  overload: Google.Type.Money.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Type.Money.#ctor
  commentId: M:Google.Type.Money.#ctor
  id: '#ctor'
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: Money()
  nameWithType: Money.Money()
  fullName: Google.Type.Money.Money()
  type: Constructor
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 64
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Money()
    content.vb: Public Sub New
  overload: Google.Type.Money.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Money.#ctor(Google.Type.Money)
  commentId: M:Google.Type.Money.#ctor(Google.Type.Money)
  id: '#ctor(Google.Type.Money)'
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: Money(Money)
  nameWithType: Money.Money(Money)
  fullName: Google.Type.Money.Money(Google.Type.Money)
  type: Constructor
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 71
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Money(Money other)
    parameters:
    - id: other
      type: Google.Type.Money
    content.vb: Public Sub New(other As Money)
  overload: Google.Type.Money.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Money.Clone
  commentId: M:Google.Type.Money.Clone
  id: Clone
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Money.Clone()
  fullName: Google.Type.Money.Clone()
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Clone
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 78
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public Money Clone()
    return:
      type: Google.Type.Money
    content.vb: Public Function Clone As Money
  overload: Google.Type.Money.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Money.CurrencyCodeFieldNumber
  commentId: F:Google.Type.Money.CurrencyCodeFieldNumber
  id: CurrencyCodeFieldNumber
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: CurrencyCodeFieldNumber
  nameWithType: Money.CurrencyCodeFieldNumber
  fullName: Google.Type.Money.CurrencyCodeFieldNumber
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CurrencyCodeFieldNumber
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 84
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;currency_code&quot; field.
  example: []
  syntax:
    content: public const int CurrencyCodeFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const CurrencyCodeFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Money.CurrencyCode
  commentId: P:Google.Type.Money.CurrencyCode
  id: CurrencyCode
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: CurrencyCode
  nameWithType: Money.CurrencyCode
  fullName: Google.Type.Money.CurrencyCode
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CurrencyCode
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 89
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nThe 3-letter currency code defined in ISO 4217.\n"
  example: []
  syntax:
    content: public string CurrencyCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CurrencyCode As String
  overload: Google.Type.Money.CurrencyCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Money.UnitsFieldNumber
  commentId: F:Google.Type.Money.UnitsFieldNumber
  id: UnitsFieldNumber
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: UnitsFieldNumber
  nameWithType: Money.UnitsFieldNumber
  fullName: Google.Type.Money.UnitsFieldNumber
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: UnitsFieldNumber
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 98
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;units&quot; field.
  example: []
  syntax:
    content: public const int UnitsFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const UnitsFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Money.Units
  commentId: P:Google.Type.Money.Units
  id: Units
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: Units
  nameWithType: Money.Units
  fullName: Google.Type.Money.Units
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Units
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 104
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nThe whole units of the amount.\nFor example if `currencyCode` is `&quot;USD&quot;`, then 1 unit is one US dollar.\n"
  example: []
  syntax:
    content: public long Units { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Units As Long
  overload: Google.Type.Money.Units*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Money.NanosFieldNumber
  commentId: F:Google.Type.Money.NanosFieldNumber
  id: NanosFieldNumber
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: NanosFieldNumber
  nameWithType: Money.NanosFieldNumber
  fullName: Google.Type.Money.NanosFieldNumber
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: NanosFieldNumber
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 113
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: Field number for the &quot;nanos&quot; field.
  example: []
  syntax:
    content: public const int NanosFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const NanosFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Type.Money.Nanos
  commentId: P:Google.Type.Money.Nanos
  id: Nanos
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: Nanos
  nameWithType: Money.Nanos
  fullName: Google.Type.Money.Nanos
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Nanos
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 123
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  summary: "\nNumber of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.\n"
  example: []
  syntax:
    content: public int Nanos { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Nanos As Integer
  overload: Google.Type.Money.Nanos*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Type.Money.Equals(System.Object)
  commentId: M:Google.Type.Money.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Money.Equals(Object)
  fullName: Google.Type.Money.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 131
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: Google.Type.Money.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Money.Equals(Google.Type.Money)
  commentId: M:Google.Type.Money.Equals(Google.Type.Money)
  id: Equals(Google.Type.Money)
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: Equals(Money)
  nameWithType: Money.Equals(Money)
  fullName: Google.Type.Money.Equals(Google.Type.Money)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 136
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public bool Equals(Money other)
    parameters:
    - id: other
      type: Google.Type.Money
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Money) As Boolean
  overload: Google.Type.Money.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Money.GetHashCode
  commentId: M:Google.Type.Money.GetHashCode
  id: GetHashCode
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Money.GetHashCode()
  fullName: Google.Type.Money.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 150
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Google.Type.Money.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Money.ToString
  commentId: M:Google.Type.Money.ToString
  id: ToString
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Money.ToString()
  fullName: Google.Type.Money.ToString()
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 159
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Google.Type.Money.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Type.Money.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Type.Money.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: WriteTo(Protobuf.CodedOutputStream)
  nameWithType: Money.WriteTo(Protobuf.CodedOutputStream)
  fullName: Google.Type.Money.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WriteTo
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 164
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void WriteTo(Protobuf.CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As Protobuf.CodedOutputStream)
  overload: Google.Type.Money.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Money.CalculateSize
  commentId: M:Google.Type.Money.CalculateSize
  id: CalculateSize
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: Money.CalculateSize()
  fullName: Google.Type.Money.CalculateSize()
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CalculateSize
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 180
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Google.Type.Money.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Money.MergeFrom(Google.Type.Money)
  commentId: M:Google.Type.Money.MergeFrom(Google.Type.Money)
  id: MergeFrom(Google.Type.Money)
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: MergeFrom(Money)
  nameWithType: Money.MergeFrom(Money)
  fullName: Google.Type.Money.MergeFrom(Google.Type.Money)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 195
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void MergeFrom(Money other)
    parameters:
    - id: other
      type: Google.Type.Money
    content.vb: Public Sub MergeFrom(other As Money)
  overload: Google.Type.Money.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Type.Money.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Type.Money.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Type.Money
  langs:
  - csharp
  - vb
  name: MergeFrom(Protobuf.CodedInputStream)
  nameWithType: Money.MergeFrom(Protobuf.CodedInputStream)
  fullName: Google.Type.Money.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Type/Money.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: src/Google.Api.CommonProtos/Type/Money.cs
    startLine: 211
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Type
  syntax:
    content: public void MergeFrom(Protobuf.CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As Protobuf.CodedInputStream)
  overload: Google.Type.Money.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Type
  commentId: N:Google.Type
  isExternal: false
  name: Google.Type
  nameWithType: Google.Type
  fullName: Google.Type
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Type.Money.Parser*
  commentId: Overload:Google.Type.Money.Parser
  isExternal: false
  name: Parser
  nameWithType: Money.Parser
  fullName: Google.Type.Money.Parser
- uid: Google.Protobuf.MessageParser{Google.Type.Money}
  commentId: '!:Google.Protobuf.MessageParser{Google.Type.Money}'
  definition: Google.Protobuf.MessageParser`1
  name: Protobuf.MessageParser<Money>
  nameWithType: Protobuf.MessageParser<Money>
  fullName: Google.Protobuf.MessageParser<Google.Type.Money>
  nameWithType.vb: Protobuf.MessageParser(Of Money)
  fullName.vb: Google.Protobuf.MessageParser(Of Google.Type.Money)
  name.vb: Protobuf.MessageParser(Of Money)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: Protobuf.MessageParser
    nameWithType: Protobuf.MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Type.Money
    name: Money
    nameWithType: Money
    fullName: Google.Type.Money
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: Protobuf.MessageParser
    nameWithType: Protobuf.MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Type.Money
    name: Money
    nameWithType: Money
    fullName: Google.Type.Money
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  isExternal: true
  name: Protobuf.MessageParser<>
  nameWithType: Protobuf.MessageParser<>
  fullName: Google.Protobuf.MessageParser<>
  nameWithType.vb: Protobuf.MessageParser(Of )
  fullName.vb: Google.Protobuf.MessageParser(Of )
  name.vb: Protobuf.MessageParser(Of )
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: Protobuf.MessageParser
    nameWithType: Protobuf.MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: Protobuf.MessageParser
    nameWithType: Protobuf.MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Type.Money.Descriptor*
  commentId: Overload:Google.Type.Money.Descriptor
  isExternal: false
  name: Descriptor
  nameWithType: Money.Descriptor
  fullName: Google.Type.Money.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  isExternal: true
  name: Protobuf.Reflection.MessageDescriptor
  nameWithType: Protobuf.Reflection.MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Type.Money.#ctor*
  commentId: Overload:Google.Type.Money.#ctor
  isExternal: false
  name: Money
  nameWithType: Money.Money
  fullName: Google.Type.Money.Money
- uid: Google.Type.Money
  commentId: T:Google.Type.Money
  parent: Google.Type
  isExternal: false
  name: Money
  nameWithType: Money
  fullName: Google.Type.Money
- uid: Google.Type.Money.Clone*
  commentId: Overload:Google.Type.Money.Clone
  isExternal: false
  name: Clone
  nameWithType: Money.Clone
  fullName: Google.Type.Money.Clone
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Type.Money.CurrencyCode*
  commentId: Overload:Google.Type.Money.CurrencyCode
  isExternal: false
  name: CurrencyCode
  nameWithType: Money.CurrencyCode
  fullName: Google.Type.Money.CurrencyCode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Type.Money.Units*
  commentId: Overload:Google.Type.Money.Units
  isExternal: false
  name: Units
  nameWithType: Money.Units
  fullName: Google.Type.Money.Units
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Google.Type.Money.Nanos*
  commentId: Overload:Google.Type.Money.Nanos
  isExternal: false
  name: Nanos
  nameWithType: Money.Nanos
  fullName: Google.Type.Money.Nanos
- uid: Google.Type.Money.Equals*
  commentId: Overload:Google.Type.Money.Equals
  isExternal: false
  name: Equals
  nameWithType: Money.Equals
  fullName: Google.Type.Money.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Type.Money.GetHashCode*
  commentId: Overload:Google.Type.Money.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: Money.GetHashCode
  fullName: Google.Type.Money.GetHashCode
- uid: Google.Type.Money.ToString*
  commentId: Overload:Google.Type.Money.ToString
  isExternal: false
  name: ToString
  nameWithType: Money.ToString
  fullName: Google.Type.Money.ToString
- uid: Google.Type.Money.WriteTo*
  commentId: Overload:Google.Type.Money.WriteTo
  isExternal: false
  name: WriteTo
  nameWithType: Money.WriteTo
  fullName: Google.Type.Money.WriteTo
- uid: Google.Protobuf.CodedOutputStream
  isExternal: true
  name: Protobuf.CodedOutputStream
  nameWithType: Protobuf.CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Google.Type.Money.CalculateSize*
  commentId: Overload:Google.Type.Money.CalculateSize
  isExternal: false
  name: CalculateSize
  nameWithType: Money.CalculateSize
  fullName: Google.Type.Money.CalculateSize
- uid: Google.Type.Money.MergeFrom*
  commentId: Overload:Google.Type.Money.MergeFrom
  isExternal: false
  name: MergeFrom
  nameWithType: Money.MergeFrom
  fullName: Google.Type.Money.MergeFrom
- uid: Google.Protobuf.CodedInputStream
  isExternal: true
  name: Protobuf.CodedInputStream
  nameWithType: Protobuf.CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
