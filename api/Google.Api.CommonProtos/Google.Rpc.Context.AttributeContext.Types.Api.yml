### YamlMime:ManagedReference
items:
- uid: Google.Rpc.Context.AttributeContext.Types.Api
  commentId: T:Google.Rpc.Context.AttributeContext.Types.Api
  id: AttributeContext.Types.Api
  parent: Google.Rpc.Context
  children:
  - Google.Rpc.Context.AttributeContext.Types.Api.#ctor
  - Google.Rpc.Context.AttributeContext.Types.Api.#ctor(Google.Rpc.Context.AttributeContext.Types.Api)
  - Google.Rpc.Context.AttributeContext.Types.Api.CalculateSize
  - Google.Rpc.Context.AttributeContext.Types.Api.Clone
  - Google.Rpc.Context.AttributeContext.Types.Api.Descriptor
  - Google.Rpc.Context.AttributeContext.Types.Api.Equals(Google.Rpc.Context.AttributeContext.Types.Api)
  - Google.Rpc.Context.AttributeContext.Types.Api.Equals(System.Object)
  - Google.Rpc.Context.AttributeContext.Types.Api.GetHashCode
  - Google.Rpc.Context.AttributeContext.Types.Api.Google#Protobuf#IMessage#Descriptor
  - Google.Rpc.Context.AttributeContext.Types.Api.MergeFrom(Google.Protobuf.CodedInputStream)
  - Google.Rpc.Context.AttributeContext.Types.Api.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Api)
  - Google.Rpc.Context.AttributeContext.Types.Api.Operation
  - Google.Rpc.Context.AttributeContext.Types.Api.OperationFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Api.Parser
  - Google.Rpc.Context.AttributeContext.Types.Api.Protocol
  - Google.Rpc.Context.AttributeContext.Types.Api.ProtocolFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Api.Service
  - Google.Rpc.Context.AttributeContext.Types.Api.ServiceFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Api.ToString
  - Google.Rpc.Context.AttributeContext.Types.Api.Version
  - Google.Rpc.Context.AttributeContext.Types.Api.VersionFieldNumber
  - Google.Rpc.Context.AttributeContext.Types.Api.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: AttributeContext.Types.Api
  nameWithType: AttributeContext.Types.Api
  fullName: Google.Rpc.Context.AttributeContext.Types.Api
  type: Class
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Api
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 742
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThis message defines attributes associated with API operations, such as\na network API request. The terminology is based on the conventions used\nby Google APIs, Istio, and OpenAPI.\n"
  example: []
  syntax:
    content: 'public sealed class Api : IMessage<AttributeContext.Types.Api>, IMessage, IEquatable<AttributeContext.Types.Api>, IDeepCloneable<AttributeContext.Types.Api>'
    content.vb: >-
      Public NotInheritable Class Api
          Implements IMessage(Of AttributeContext.Types.Api), IMessage, IEquatable(Of AttributeContext.Types.Api), IDeepCloneable(Of AttributeContext.Types.Api)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Api}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Api}
  - Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Api}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Parser
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Api.Parser
  id: Parser
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: AttributeContext.Types.Api.Parser
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Parser
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parser
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 745
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public static MessageParser<AttributeContext.Types.Api> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext.Types.Api}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of AttributeContext.Types.Api)
  overload: Google.Rpc.Context.AttributeContext.Types.Api.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Descriptor
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Api.Descriptor
  id: Descriptor
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: AttributeContext.Types.Api.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Descriptor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 748
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Google.Rpc.Context.AttributeContext.Types.Api.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Google#Protobuf#IMessage#Descriptor
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Api.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: AttributeContext.Types.Api.IMessage.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 753
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Google.Rpc.Context.AttributeContext.Types.Api.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: AttributeContext.Types.Api.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Google.Rpc.Context.AttributeContext.Types.Api.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Rpc.Context.AttributeContext.Types.Api.#ctor
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Api.#ctor
  id: '#ctor'
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: Api()
  nameWithType: AttributeContext.Types.Api.Api()
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Api()
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 758
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public Api()
    content.vb: Public Sub New
  overload: Google.Rpc.Context.AttributeContext.Types.Api.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Api.#ctor(Google.Rpc.Context.AttributeContext.Types.Api)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Api.#ctor(Google.Rpc.Context.AttributeContext.Types.Api)
  id: '#ctor(Google.Rpc.Context.AttributeContext.Types.Api)'
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: Api(AttributeContext.Types.Api)
  nameWithType: AttributeContext.Types.Api.Api(AttributeContext.Types.Api)
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Api(Google.Rpc.Context.AttributeContext.Types.Api)
  type: Constructor
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 765
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public Api(AttributeContext.Types.Api other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext.Types.Api
    content.vb: Public Sub New(other As AttributeContext.Types.Api)
  overload: Google.Rpc.Context.AttributeContext.Types.Api.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Clone
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Api.Clone
  id: Clone
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: AttributeContext.Types.Api.Clone()
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Clone()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Clone
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 774
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public AttributeContext.Types.Api Clone()
    return:
      type: Google.Rpc.Context.AttributeContext.Types.Api
    content.vb: Public Function Clone As AttributeContext.Types.Api
  overload: Google.Rpc.Context.AttributeContext.Types.Api.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Api}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Api.ServiceFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Api.ServiceFieldNumber
  id: ServiceFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: ServiceFieldNumber
  nameWithType: AttributeContext.Types.Api.ServiceFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.ServiceFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ServiceFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 780
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;service&quot; field.
  example: []
  syntax:
    content: public const int ServiceFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const ServiceFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Service
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Api.Service
  id: Service
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: Service
  nameWithType: AttributeContext.Types.Api.Service
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Service
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Service
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 787
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe API service name. It is a logical identifier for a networked API,\nsuch as &quot;pubsub.googleapis.com&quot;. The naming syntax depends on the\nAPI management system being used for handling the request.\n"
  example: []
  syntax:
    content: public string Service { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Service As String
  overload: Google.Rpc.Context.AttributeContext.Types.Api.Service*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Api.OperationFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Api.OperationFieldNumber
  id: OperationFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: OperationFieldNumber
  nameWithType: AttributeContext.Types.Api.OperationFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.OperationFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: OperationFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 796
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;operation&quot; field.
  example: []
  syntax:
    content: public const int OperationFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const OperationFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Operation
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Api.Operation
  id: Operation
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: Operation
  nameWithType: AttributeContext.Types.Api.Operation
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Operation
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Operation
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 803
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe API operation name. For gRPC requests, it is the fully qualified API\nmethod name, such as &quot;google.pubsub.v1.Publisher.Publish&quot;. For OpenAPI\nrequests, it is the `operationId`, such as &quot;getPet&quot;.\n"
  example: []
  syntax:
    content: public string Operation { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Operation As String
  overload: Google.Rpc.Context.AttributeContext.Types.Api.Operation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Api.ProtocolFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Api.ProtocolFieldNumber
  id: ProtocolFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: ProtocolFieldNumber
  nameWithType: AttributeContext.Types.Api.ProtocolFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.ProtocolFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ProtocolFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 812
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;protocol&quot; field.
  example: []
  syntax:
    content: public const int ProtocolFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const ProtocolFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Protocol
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Api.Protocol
  id: Protocol
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: Protocol
  nameWithType: AttributeContext.Types.Api.Protocol
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Protocol
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Protocol
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 818
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe API protocol used for sending the request, such as &quot;http&quot;, &quot;https&quot;,\n&quot;grpc&quot;, or &quot;internal&quot;.\n"
  example: []
  syntax:
    content: public string Protocol { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Protocol As String
  overload: Google.Rpc.Context.AttributeContext.Types.Api.Protocol*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Api.VersionFieldNumber
  commentId: F:Google.Rpc.Context.AttributeContext.Types.Api.VersionFieldNumber
  id: VersionFieldNumber
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: VersionFieldNumber
  nameWithType: AttributeContext.Types.Api.VersionFieldNumber
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.VersionFieldNumber
  type: Field
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: VersionFieldNumber
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 827
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: Field number for the &quot;version&quot; field.
  example: []
  syntax:
    content: public const int VersionFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const VersionFieldNumber As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Version
  commentId: P:Google.Rpc.Context.AttributeContext.Types.Api.Version
  id: Version
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: AttributeContext.Types.Api.Version
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Version
  type: Property
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Version
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 833
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  summary: "\nThe API version associated with the API operation above, such as &quot;v1&quot; or\n&quot;v1alpha1&quot;.\n"
  example: []
  syntax:
    content: public string Version { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Version As String
  overload: Google.Rpc.Context.AttributeContext.Types.Api.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Equals(System.Object)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Api.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: AttributeContext.Types.Api.Equals(Object)
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 841
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Rpc.Context.AttributeContext.Types.Api.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Equals(Google.Rpc.Context.AttributeContext.Types.Api)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Api.Equals(Google.Rpc.Context.AttributeContext.Types.Api)
  id: Equals(Google.Rpc.Context.AttributeContext.Types.Api)
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: Equals(AttributeContext.Types.Api)
  nameWithType: AttributeContext.Types.Api.Equals(AttributeContext.Types.Api)
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Equals(Google.Rpc.Context.AttributeContext.Types.Api)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 846
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public bool Equals(AttributeContext.Types.Api other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext.Types.Api
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As AttributeContext.Types.Api) As Boolean
  overload: Google.Rpc.Context.AttributeContext.Types.Api.Equals*
  implements:
  - System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Api}.Equals(Google.Rpc.Context.AttributeContext.Types.Api)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Api.GetHashCode
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Api.GetHashCode
  id: GetHashCode
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: AttributeContext.Types.Api.GetHashCode()
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.GetHashCode()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 861
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Rpc.Context.AttributeContext.Types.Api.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.Types.Api.ToString
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Api.ToString
  id: ToString
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AttributeContext.Types.Api.ToString()
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.ToString()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 874
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Rpc.Context.AttributeContext.Types.Api.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Rpc.Context.AttributeContext.Types.Api.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Api.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: AttributeContext.Types.Api.WriteTo(CodedOutputStream)
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WriteTo
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 879
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Google.Rpc.Context.AttributeContext.Types.Api.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Api.CalculateSize
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Api.CalculateSize
  id: CalculateSize
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: AttributeContext.Types.Api.CalculateSize()
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.CalculateSize()
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CalculateSize
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 902
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Google.Rpc.Context.AttributeContext.Types.Api.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Api.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Api)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Api.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Api)
  id: MergeFrom(Google.Rpc.Context.AttributeContext.Types.Api)
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: MergeFrom(AttributeContext.Types.Api)
  nameWithType: AttributeContext.Types.Api.MergeFrom(AttributeContext.Types.Api)
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Api)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 923
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void MergeFrom(AttributeContext.Types.Api other)
    parameters:
    - id: other
      type: Google.Rpc.Context.AttributeContext.Types.Api
    content.vb: Public Sub MergeFrom(other As AttributeContext.Types.Api)
  overload: Google.Rpc.Context.AttributeContext.Types.Api.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Api}.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Api)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Rpc.Context.AttributeContext.Types.Api.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Rpc.Context.AttributeContext.Types.Api.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Rpc.Context.AttributeContext.Types.Api
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: AttributeContext.Types.Api.MergeFrom(CodedInputStream)
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: Google.Api.CommonProtos/Rpc/Context/AttributeContext.cs
    startLine: 943
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Rpc.Context
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Google.Rpc.Context.AttributeContext.Types.Api.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Rpc.Context
  commentId: N:Google.Rpc.Context
  name: Google.Rpc.Context
  nameWithType: Google.Rpc.Context
  fullName: Google.Rpc.Context
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Api}
  commentId: T:Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Api}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<AttributeContext.Types.Api>
  nameWithType: IMessage<AttributeContext.Types.Api>
  fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext.Types.Api>
  nameWithType.vb: IMessage(Of AttributeContext.Types.Api)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext.Types.Api)
  name.vb: IMessage(Of AttributeContext.Types.Api)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Api
    name: AttributeContext.Types.Api
    nameWithType: AttributeContext.Types.Api
    fullName: Google.Rpc.Context.AttributeContext.Types.Api
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Api
    name: AttributeContext.Types.Api
    nameWithType: AttributeContext.Types.Api
    fullName: Google.Rpc.Context.AttributeContext.Types.Api
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Api}
  commentId: T:System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Api}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<AttributeContext.Types.Api>
  nameWithType: IEquatable<AttributeContext.Types.Api>
  fullName: System.IEquatable<Google.Rpc.Context.AttributeContext.Types.Api>
  nameWithType.vb: IEquatable(Of AttributeContext.Types.Api)
  fullName.vb: System.IEquatable(Of Google.Rpc.Context.AttributeContext.Types.Api)
  name.vb: IEquatable(Of AttributeContext.Types.Api)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Api
    name: AttributeContext.Types.Api
    nameWithType: AttributeContext.Types.Api
    fullName: Google.Rpc.Context.AttributeContext.Types.Api
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Api
    name: AttributeContext.Types.Api
    nameWithType: AttributeContext.Types.Api
    fullName: Google.Rpc.Context.AttributeContext.Types.Api
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Api}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Api}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<AttributeContext.Types.Api>
  nameWithType: IDeepCloneable<AttributeContext.Types.Api>
  fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext.Types.Api>
  nameWithType.vb: IDeepCloneable(Of AttributeContext.Types.Api)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext.Types.Api)
  name.vb: IDeepCloneable(Of AttributeContext.Types.Api)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Api
    name: AttributeContext.Types.Api
    nameWithType: AttributeContext.Types.Api
    fullName: Google.Rpc.Context.AttributeContext.Types.Api
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Api
    name: AttributeContext.Types.Api
    nameWithType: AttributeContext.Types.Api
    fullName: Google.Rpc.Context.AttributeContext.Types.Api
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Parser*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.Parser
  name: Parser
  nameWithType: AttributeContext.Types.Api.Parser
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Parser
- uid: Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext.Types.Api}
  commentId: T:Google.Protobuf.MessageParser{Google.Rpc.Context.AttributeContext.Types.Api}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<AttributeContext.Types.Api>
  nameWithType: MessageParser<AttributeContext.Types.Api>
  fullName: Google.Protobuf.MessageParser<Google.Rpc.Context.AttributeContext.Types.Api>
  nameWithType.vb: MessageParser(Of AttributeContext.Types.Api)
  fullName.vb: Google.Protobuf.MessageParser(Of Google.Rpc.Context.AttributeContext.Types.Api)
  name.vb: MessageParser(Of AttributeContext.Types.Api)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Rpc.Context.AttributeContext.Types.Api
    name: AttributeContext.Types.Api
    nameWithType: AttributeContext.Types.Api
    fullName: Google.Rpc.Context.AttributeContext.Types.Api
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Rpc.Context.AttributeContext.Types.Api
    name: AttributeContext.Types.Api
    nameWithType: AttributeContext.Types.Api
    fullName: Google.Rpc.Context.AttributeContext.Types.Api
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Descriptor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.Descriptor
  name: Descriptor
  nameWithType: AttributeContext.Types.Api.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.Google#Protobuf#IMessage#Descriptor
  name: IMessage.Descriptor
  nameWithType: AttributeContext.Types.Api.IMessage.Descriptor
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: AttributeContext.Types.Api.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Google.Rpc.Context.AttributeContext.Types.Api.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Google.Rpc.Context.AttributeContext.Types.Api.#ctor*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.#ctor
  name: Api
  nameWithType: AttributeContext.Types.Api.Api
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Api
- uid: Google.Rpc.Context.AttributeContext.Types.Api
  commentId: T:Google.Rpc.Context.AttributeContext.Types.Api
  parent: Google.Rpc.Context
  name: AttributeContext.Types.Api
  nameWithType: AttributeContext.Types.Api
  fullName: Google.Rpc.Context.AttributeContext.Types.Api
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Clone*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.Clone
  name: Clone
  nameWithType: AttributeContext.Types.Api.Clone
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Clone
- uid: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Api}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Api}.Clone
  parent: Google.Protobuf.IDeepCloneable{Google.Rpc.Context.AttributeContext.Types.Api}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<AttributeContext.Types.Api>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext.Types.Api>.Clone()
  nameWithType.vb: IDeepCloneable(Of AttributeContext.Types.Api).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext.Types.Api).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<AttributeContext.Types.Api>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Google.Rpc.Context.AttributeContext.Types.Api>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of AttributeContext.Types.Api).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Google.Rpc.Context.AttributeContext.Types.Api).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Service*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.Service
  name: Service
  nameWithType: AttributeContext.Types.Api.Service
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Service
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Operation*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.Operation
  name: Operation
  nameWithType: AttributeContext.Types.Api.Operation
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Operation
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Protocol*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.Protocol
  name: Protocol
  nameWithType: AttributeContext.Types.Api.Protocol
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Protocol
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Version*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.Version
  name: Version
  nameWithType: AttributeContext.Types.Api.Version
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Version
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Api.Equals*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.Equals
  name: Equals
  nameWithType: AttributeContext.Types.Api.Equals
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Api}.Equals(Google.Rpc.Context.AttributeContext.Types.Api)
  commentId: M:System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Api}.Equals(Google.Rpc.Context.AttributeContext.Types.Api)
  parent: System.IEquatable{Google.Rpc.Context.AttributeContext.Types.Api}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(AttributeContext.Types.Api)
  nameWithType: IEquatable<AttributeContext.Types.Api>.Equals(AttributeContext.Types.Api)
  fullName: System.IEquatable<Google.Rpc.Context.AttributeContext.Types.Api>.Equals(Google.Rpc.Context.AttributeContext.Types.Api)
  nameWithType.vb: IEquatable(Of AttributeContext.Types.Api).Equals(AttributeContext.Types.Api)
  fullName.vb: System.IEquatable(Of Google.Rpc.Context.AttributeContext.Types.Api).Equals(Google.Rpc.Context.AttributeContext.Types.Api)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<AttributeContext.Types.Api>.Equals
    fullName: System.IEquatable<Google.Rpc.Context.AttributeContext.Types.Api>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Api
    name: AttributeContext.Types.Api
    nameWithType: AttributeContext.Types.Api
    fullName: Google.Rpc.Context.AttributeContext.Types.Api
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of AttributeContext.Types.Api).Equals
    fullName: System.IEquatable(Of Google.Rpc.Context.AttributeContext.Types.Api).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Api
    name: AttributeContext.Types.Api
    nameWithType: AttributeContext.Types.Api
    fullName: Google.Rpc.Context.AttributeContext.Types.Api
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Api.GetHashCode*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.GetHashCode
  name: GetHashCode
  nameWithType: AttributeContext.Types.Api.GetHashCode
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Api.ToString*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.ToString
  name: ToString
  nameWithType: AttributeContext.Types.Api.ToString
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.ToString
- uid: Google.Rpc.Context.AttributeContext.Types.Api.WriteTo*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.WriteTo
  name: WriteTo
  nameWithType: AttributeContext.Types.Api.WriteTo
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Google.Rpc.Context.AttributeContext.Types.Api.CalculateSize*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.CalculateSize
  name: CalculateSize
  nameWithType: AttributeContext.Types.Api.CalculateSize
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Rpc.Context.AttributeContext.Types.Api.MergeFrom*
  commentId: Overload:Google.Rpc.Context.AttributeContext.Types.Api.MergeFrom
  name: MergeFrom
  nameWithType: AttributeContext.Types.Api.MergeFrom
  fullName: Google.Rpc.Context.AttributeContext.Types.Api.MergeFrom
- uid: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Api}.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Api)
  commentId: M:Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Api}.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Api)
  parent: Google.Protobuf.IMessage{Google.Rpc.Context.AttributeContext.Types.Api}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(AttributeContext.Types.Api)
  nameWithType: IMessage<AttributeContext.Types.Api>.MergeFrom(AttributeContext.Types.Api)
  fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext.Types.Api>.MergeFrom(Google.Rpc.Context.AttributeContext.Types.Api)
  nameWithType.vb: IMessage(Of AttributeContext.Types.Api).MergeFrom(AttributeContext.Types.Api)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext.Types.Api).MergeFrom(Google.Rpc.Context.AttributeContext.Types.Api)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<AttributeContext.Types.Api>.MergeFrom
    fullName: Google.Protobuf.IMessage<Google.Rpc.Context.AttributeContext.Types.Api>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Api
    name: AttributeContext.Types.Api
    nameWithType: AttributeContext.Types.Api
    fullName: Google.Rpc.Context.AttributeContext.Types.Api
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of AttributeContext.Types.Api).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Google.Rpc.Context.AttributeContext.Types.Api).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Rpc.Context.AttributeContext.Types.Api
    name: AttributeContext.Types.Api
    nameWithType: AttributeContext.Types.Api
    fullName: Google.Rpc.Context.AttributeContext.Types.Api
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
