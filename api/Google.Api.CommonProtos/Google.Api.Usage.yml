### YamlMime:ManagedReference
items:
- uid: Google.Api.Usage
  commentId: T:Google.Api.Usage
  id: Usage
  parent: Google.Api
  children:
  - Google.Api.Usage.#ctor
  - Google.Api.Usage.#ctor(Google.Api.Usage)
  - Google.Api.Usage.CalculateSize
  - Google.Api.Usage.Clone
  - Google.Api.Usage.Descriptor
  - Google.Api.Usage.Equals(Google.Api.Usage)
  - Google.Api.Usage.Equals(System.Object)
  - Google.Api.Usage.GetHashCode
  - Google.Api.Usage.Google#Protobuf#IMessage#Descriptor
  - Google.Api.Usage.MergeFrom(Google.Api.Usage)
  - Google.Api.Usage.MergeFrom(Google.Protobuf.CodedInputStream)
  - Google.Api.Usage.Parser
  - Google.Api.Usage.ProducerNotificationChannel
  - Google.Api.Usage.ProducerNotificationChannelFieldNumber
  - Google.Api.Usage.Requirements
  - Google.Api.Usage.RequirementsFieldNumber
  - Google.Api.Usage.Rules
  - Google.Api.Usage.RulesFieldNumber
  - Google.Api.Usage.ToString
  - Google.Api.Usage.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: Usage
  nameWithType: Usage
  fullName: Google.Api.Usage
  type: Class
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Usage
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 53
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: "\nConfiguration controlling usage of a service.\n"
  example: []
  syntax:
    content: 'public sealed class Usage : IMessage<Usage>, IMessage, IEquatable<Usage>, IDeepCloneable<Usage>'
    content.vb: >-
      Public NotInheritable Class Usage
          Implements IMessage(Of Usage), IMessage, IEquatable(Of Usage), IDeepCloneable(Of Usage)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Api.Usage}
  - Google.Protobuf.IMessage
  - System.IEquatable{Google.Api.Usage}
  - Google.Protobuf.IDeepCloneable{Google.Api.Usage}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Api.Usage.Parser
  commentId: P:Google.Api.Usage.Parser
  id: Parser
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: Usage.Parser
  fullName: Google.Api.Usage.Parser
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parser
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 55
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  syntax:
    content: public static MessageParser<Usage> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Google.Api.Usage}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of Usage)
  overload: Google.Api.Usage.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Api.Usage.Descriptor
  commentId: P:Google.Api.Usage.Descriptor
  id: Descriptor
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: Usage.Descriptor
  fullName: Google.Api.Usage.Descriptor
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Descriptor
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 58
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Google.Api.Usage.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Api.Usage.Google#Protobuf#IMessage#Descriptor
  commentId: P:Google.Api.Usage.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: Usage.IMessage.Descriptor
  fullName: Google.Api.Usage.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 63
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Google.Api.Usage.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: Usage.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Google.Api.Usage.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Api.Usage.#ctor
  commentId: M:Google.Api.Usage.#ctor
  id: '#ctor'
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: Usage()
  nameWithType: Usage.Usage()
  fullName: Google.Api.Usage.Usage()
  type: Constructor
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 68
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  syntax:
    content: public Usage()
    content.vb: Public Sub New
  overload: Google.Api.Usage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Usage.#ctor(Google.Api.Usage)
  commentId: M:Google.Api.Usage.#ctor(Google.Api.Usage)
  id: '#ctor(Google.Api.Usage)'
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: Usage(Usage)
  nameWithType: Usage.Usage(Usage)
  fullName: Google.Api.Usage.Usage(Google.Api.Usage)
  type: Constructor
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 75
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  syntax:
    content: public Usage(Usage other)
    parameters:
    - id: other
      type: Google.Api.Usage
    content.vb: Public Sub New(other As Usage)
  overload: Google.Api.Usage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Usage.Clone
  commentId: M:Google.Api.Usage.Clone
  id: Clone
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Usage.Clone()
  fullName: Google.Api.Usage.Clone()
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Clone
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 82
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  syntax:
    content: public Usage Clone()
    return:
      type: Google.Api.Usage
    content.vb: Public Function Clone As Usage
  overload: Google.Api.Usage.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Google.Api.Usage}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Usage.RequirementsFieldNumber
  commentId: F:Google.Api.Usage.RequirementsFieldNumber
  id: RequirementsFieldNumber
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: RequirementsFieldNumber
  nameWithType: Usage.RequirementsFieldNumber
  fullName: Google.Api.Usage.RequirementsFieldNumber
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: RequirementsFieldNumber
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 88
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: Field number for the "requirements" field.
  example: []
  syntax:
    content: public const int RequirementsFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const RequirementsFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Api.Usage.Requirements
  commentId: P:Google.Api.Usage.Requirements
  id: Requirements
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: Requirements
  nameWithType: Usage.Requirements
  fullName: Google.Api.Usage.Requirements
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Requirements
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 97
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: "\nRequirements that must be satisfied before a consumer project can use the\nservice. Each requirement is of the form &lt;service.name&gt;/&lt;requirement-id&gt;;\nfor example 'serviceusage.googleapis.com/billing-enabled'.\n"
  example: []
  syntax:
    content: public RepeatedField<string> Requirements { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{System.String}
    content.vb: Public ReadOnly Property Requirements As RepeatedField(Of String)
  overload: Google.Api.Usage.Requirements*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Usage.RulesFieldNumber
  commentId: F:Google.Api.Usage.RulesFieldNumber
  id: RulesFieldNumber
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: RulesFieldNumber
  nameWithType: Usage.RulesFieldNumber
  fullName: Google.Api.Usage.RulesFieldNumber
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: RulesFieldNumber
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 103
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: Field number for the "rules" field.
  example: []
  syntax:
    content: public const int RulesFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const RulesFieldNumber As Integer = 6
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Api.Usage.Rules
  commentId: P:Google.Api.Usage.Rules
  id: Rules
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: Rules
  nameWithType: Usage.Rules
  fullName: Google.Api.Usage.Rules
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Rules
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 112
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: "\nA list of usage rules that apply to individual API methods.\n\n**NOTE:** All service configuration rules follow \"last one wins\" order.\n"
  example: []
  syntax:
    content: public RepeatedField<UsageRule> Rules { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Google.Api.UsageRule}
    content.vb: Public ReadOnly Property Rules As RepeatedField(Of UsageRule)
  overload: Google.Api.Usage.Rules*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Usage.ProducerNotificationChannelFieldNumber
  commentId: F:Google.Api.Usage.ProducerNotificationChannelFieldNumber
  id: ProducerNotificationChannelFieldNumber
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: ProducerNotificationChannelFieldNumber
  nameWithType: Usage.ProducerNotificationChannelFieldNumber
  fullName: Google.Api.Usage.ProducerNotificationChannelFieldNumber
  type: Field
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ProducerNotificationChannelFieldNumber
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 118
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: Field number for the "producer_notification_channel" field.
  example: []
  syntax:
    content: public const int ProducerNotificationChannelFieldNumber = 7
    return:
      type: System.Int32
    content.vb: Public Const ProducerNotificationChannelFieldNumber As Integer = 7
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Api.Usage.ProducerNotificationChannel
  commentId: P:Google.Api.Usage.ProducerNotificationChannel
  id: ProducerNotificationChannel
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: ProducerNotificationChannel
  nameWithType: Usage.ProducerNotificationChannel
  fullName: Google.Api.Usage.ProducerNotificationChannel
  type: Property
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ProducerNotificationChannel
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 130
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  summary: "\nThe full resource name of a channel used for sending notifications to the\nservice producer.\n\nGoogle Service Management currently only supports\n[Google Cloud Pub/Sub](https://cloud.google.com/pubsub) as a notification\nchannel. To use Google Cloud Pub/Sub as the channel, this must be the name\nof a Cloud Pub/Sub topic that uses the Cloud Pub/Sub topic name format\ndocumented in https://cloud.google.com/pubsub/docs/overview.\n"
  example: []
  syntax:
    content: public string ProducerNotificationChannel { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProducerNotificationChannel As String
  overload: Google.Api.Usage.ProducerNotificationChannel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Api.Usage.Equals(System.Object)
  commentId: M:Google.Api.Usage.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Usage.Equals(Object)
  fullName: Google.Api.Usage.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 138
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Api.Usage.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Api.Usage.Equals(Google.Api.Usage)
  commentId: M:Google.Api.Usage.Equals(Google.Api.Usage)
  id: Equals(Google.Api.Usage)
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: Equals(Usage)
  nameWithType: Usage.Equals(Usage)
  fullName: Google.Api.Usage.Equals(Google.Api.Usage)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 143
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  syntax:
    content: public bool Equals(Usage other)
    parameters:
    - id: other
      type: Google.Api.Usage
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Usage) As Boolean
  overload: Google.Api.Usage.Equals*
  implements:
  - System.IEquatable{Google.Api.Usage}.Equals(Google.Api.Usage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Usage.GetHashCode
  commentId: M:Google.Api.Usage.GetHashCode
  id: GetHashCode
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Usage.GetHashCode()
  fullName: Google.Api.Usage.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 157
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Api.Usage.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Api.Usage.ToString
  commentId: M:Google.Api.Usage.ToString
  id: ToString
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Usage.ToString()
  fullName: Google.Api.Usage.ToString()
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 166
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Api.Usage.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Api.Usage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Api.Usage.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: Usage.WriteTo(CodedOutputStream)
  fullName: Google.Api.Usage.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WriteTo
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 171
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Google.Api.Usage.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Usage.CalculateSize
  commentId: M:Google.Api.Usage.CalculateSize
  id: CalculateSize
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: Usage.CalculateSize()
  fullName: Google.Api.Usage.CalculateSize()
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CalculateSize
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 181
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Google.Api.Usage.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Usage.MergeFrom(Google.Api.Usage)
  commentId: M:Google.Api.Usage.MergeFrom(Google.Api.Usage)
  id: MergeFrom(Google.Api.Usage)
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: MergeFrom(Usage)
  nameWithType: Usage.MergeFrom(Usage)
  fullName: Google.Api.Usage.MergeFrom(Google.Api.Usage)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 192
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  syntax:
    content: public void MergeFrom(Usage other)
    parameters:
    - id: other
      type: Google.Api.Usage
    content.vb: Public Sub MergeFrom(other As Usage)
  overload: Google.Api.Usage.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Google.Api.Usage}.MergeFrom(Google.Api.Usage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Usage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Api.Usage.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Api.Usage
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: Usage.MergeFrom(CodedInputStream)
  fullName: Google.Api.Usage.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: src/Google.Api.CommonProtos/Api/Usage.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MergeFrom
    path: src/Google.Api.CommonProtos/Api/Usage.cs
    startLine: 204
  assemblies:
  - Google.Api.CommonProtos
  namespace: Google.Api
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Google.Api.Usage.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Api
  commentId: N:Google.Api
  isExternal: false
  name: Google.Api
  nameWithType: Google.Api
  fullName: Google.Api
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Api.Usage}
  commentId: T:Google.Protobuf.IMessage{Google.Api.Usage}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<Usage>
  nameWithType: IMessage<Usage>
  fullName: Google.Protobuf.IMessage<Google.Api.Usage>
  nameWithType.vb: IMessage(Of Usage)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Api.Usage)
  name.vb: IMessage(Of Usage)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Api.Usage
    name: Usage
    nameWithType: Usage
    fullName: Google.Api.Usage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Api.Usage
    name: Usage
    nameWithType: Usage
    fullName: Google.Api.Usage
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Google.Api.Usage}
  commentId: T:System.IEquatable{Google.Api.Usage}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Usage>
  nameWithType: IEquatable<Usage>
  fullName: System.IEquatable<Google.Api.Usage>
  nameWithType.vb: IEquatable(Of Usage)
  fullName.vb: System.IEquatable(Of Google.Api.Usage)
  name.vb: IEquatable(Of Usage)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Api.Usage
    name: Usage
    nameWithType: Usage
    fullName: Google.Api.Usage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Api.Usage
    name: Usage
    nameWithType: Usage
    fullName: Google.Api.Usage
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Api.Usage}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Api.Usage}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<Usage>
  nameWithType: IDeepCloneable<Usage>
  fullName: Google.Protobuf.IDeepCloneable<Google.Api.Usage>
  nameWithType.vb: IDeepCloneable(Of Usage)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Api.Usage)
  name.vb: IDeepCloneable(Of Usage)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Api.Usage
    name: Usage
    nameWithType: Usage
    fullName: Google.Api.Usage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Api.Usage
    name: Usage
    nameWithType: Usage
    fullName: Google.Api.Usage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: false
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Usage.Parser*
  commentId: Overload:Google.Api.Usage.Parser
  isExternal: false
  name: Parser
  nameWithType: Usage.Parser
  fullName: Google.Api.Usage.Parser
- uid: Google.Protobuf.MessageParser{Google.Api.Usage}
  commentId: T:Google.Protobuf.MessageParser{Google.Api.Usage}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<Usage>
  nameWithType: MessageParser<Usage>
  fullName: Google.Protobuf.MessageParser<Google.Api.Usage>
  nameWithType.vb: MessageParser(Of Usage)
  fullName.vb: Google.Protobuf.MessageParser(Of Google.Api.Usage)
  name.vb: MessageParser(Of Usage)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Api.Usage
    name: Usage
    nameWithType: Usage
    fullName: Google.Api.Usage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Api.Usage
    name: Usage
    nameWithType: Usage
    fullName: Google.Api.Usage
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Usage.Descriptor*
  commentId: Overload:Google.Api.Usage.Descriptor
  isExternal: false
  name: Descriptor
  nameWithType: Usage.Descriptor
  fullName: Google.Api.Usage.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: false
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Google.Api.Usage.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Google.Api.Usage.Google#Protobuf#IMessage#Descriptor
  isExternal: false
  name: IMessage.Descriptor
  nameWithType: Usage.IMessage.Descriptor
  fullName: Google.Api.Usage.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: Usage.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Google.Api.Usage.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Google.Api.Usage.#ctor*
  commentId: Overload:Google.Api.Usage.#ctor
  isExternal: false
  name: Usage
  nameWithType: Usage.Usage
  fullName: Google.Api.Usage.Usage
- uid: Google.Api.Usage
  commentId: T:Google.Api.Usage
  parent: Google.Api
  isExternal: false
  name: Usage
  nameWithType: Usage
  fullName: Google.Api.Usage
- uid: Google.Api.Usage.Clone*
  commentId: Overload:Google.Api.Usage.Clone
  isExternal: false
  name: Clone
  nameWithType: Usage.Clone
  fullName: Google.Api.Usage.Clone
- uid: Google.Protobuf.IDeepCloneable{Google.Api.Usage}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Google.Api.Usage}.Clone
  parent: Google.Protobuf.IDeepCloneable{Google.Api.Usage}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<Usage>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Google.Api.Usage>.Clone()
  nameWithType.vb: IDeepCloneable(Of Usage).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Api.Usage).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<Usage>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Google.Api.Usage>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of Usage).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Google.Api.Usage).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Api.Usage.Requirements*
  commentId: Overload:Google.Api.Usage.Requirements
  isExternal: false
  name: Requirements
  nameWithType: Usage.Requirements
  fullName: Google.Api.Usage.Requirements
- uid: Google.Protobuf.Collections.RepeatedField{System.String}
  commentId: T:Google.Protobuf.Collections.RepeatedField{System.String}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<String>
  nameWithType: RepeatedField<String>
  fullName: Google.Protobuf.Collections.RepeatedField<System.String>
  nameWithType.vb: RepeatedField(Of String)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of System.String)
  name.vb: RepeatedField(Of String)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: false
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Api.Usage.Rules*
  commentId: Overload:Google.Api.Usage.Rules
  isExternal: false
  name: Rules
  nameWithType: Usage.Rules
  fullName: Google.Api.Usage.Rules
- uid: Google.Protobuf.Collections.RepeatedField{Google.Api.UsageRule}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Google.Api.UsageRule}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<UsageRule>
  nameWithType: RepeatedField<UsageRule>
  fullName: Google.Protobuf.Collections.RepeatedField<Google.Api.UsageRule>
  nameWithType.vb: RepeatedField(Of UsageRule)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Google.Api.UsageRule)
  name.vb: RepeatedField(Of UsageRule)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Api.UsageRule
    name: UsageRule
    nameWithType: UsageRule
    fullName: Google.Api.UsageRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Api.UsageRule
    name: UsageRule
    nameWithType: UsageRule
    fullName: Google.Api.UsageRule
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Usage.ProducerNotificationChannel*
  commentId: Overload:Google.Api.Usage.ProducerNotificationChannel
  isExternal: false
  name: ProducerNotificationChannel
  nameWithType: Usage.ProducerNotificationChannel
  fullName: Google.Api.Usage.ProducerNotificationChannel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Usage.Equals*
  commentId: Overload:Google.Api.Usage.Equals
  isExternal: false
  name: Equals
  nameWithType: Usage.Equals
  fullName: Google.Api.Usage.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Google.Api.Usage}.Equals(Google.Api.Usage)
  commentId: M:System.IEquatable{Google.Api.Usage}.Equals(Google.Api.Usage)
  parent: System.IEquatable{Google.Api.Usage}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Usage)
  nameWithType: IEquatable<Usage>.Equals(Usage)
  fullName: System.IEquatable<Google.Api.Usage>.Equals(Google.Api.Usage)
  nameWithType.vb: IEquatable(Of Usage).Equals(Usage)
  fullName.vb: System.IEquatable(Of Google.Api.Usage).Equals(Google.Api.Usage)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Usage>.Equals
    fullName: System.IEquatable<Google.Api.Usage>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Api.Usage
    name: Usage
    nameWithType: Usage
    fullName: Google.Api.Usage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Usage).Equals
    fullName: System.IEquatable(Of Google.Api.Usage).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Api.Usage
    name: Usage
    nameWithType: Usage
    fullName: Google.Api.Usage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Usage.GetHashCode*
  commentId: Overload:Google.Api.Usage.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: Usage.GetHashCode
  fullName: Google.Api.Usage.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Usage.ToString*
  commentId: Overload:Google.Api.Usage.ToString
  isExternal: false
  name: ToString
  nameWithType: Usage.ToString
  fullName: Google.Api.Usage.ToString
- uid: Google.Api.Usage.WriteTo*
  commentId: Overload:Google.Api.Usage.WriteTo
  isExternal: false
  name: WriteTo
  nameWithType: Usage.WriteTo
  fullName: Google.Api.Usage.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Google.Api.Usage.CalculateSize*
  commentId: Overload:Google.Api.Usage.CalculateSize
  isExternal: false
  name: CalculateSize
  nameWithType: Usage.CalculateSize
  fullName: Google.Api.Usage.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Usage.MergeFrom*
  commentId: Overload:Google.Api.Usage.MergeFrom
  isExternal: false
  name: MergeFrom
  nameWithType: Usage.MergeFrom
  fullName: Google.Api.Usage.MergeFrom
- uid: Google.Protobuf.IMessage{Google.Api.Usage}.MergeFrom(Google.Api.Usage)
  commentId: M:Google.Protobuf.IMessage{Google.Api.Usage}.MergeFrom(Google.Api.Usage)
  parent: Google.Protobuf.IMessage{Google.Api.Usage}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(Usage)
  nameWithType: IMessage<Usage>.MergeFrom(Usage)
  fullName: Google.Protobuf.IMessage<Google.Api.Usage>.MergeFrom(Google.Api.Usage)
  nameWithType.vb: IMessage(Of Usage).MergeFrom(Usage)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Api.Usage).MergeFrom(Google.Api.Usage)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<Usage>.MergeFrom
    fullName: Google.Protobuf.IMessage<Google.Api.Usage>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Api.Usage
    name: Usage
    nameWithType: Usage
    fullName: Google.Api.Usage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of Usage).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Google.Api.Usage).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Api.Usage
    name: Usage
    nameWithType: Usage
    fullName: Google.Api.Usage
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
