### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  commentId: T:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  id: ExternalDataConfiguration
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Autodetect
  - Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.BigtableOptions
  - Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Compression
  - Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.CsvOptions
  - Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.ETag
  - Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.GoogleSheetsOptions
  - Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.IgnoreUnknownValues
  - Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.MaxBadRecords
  - Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Schema
  - Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceFormat
  - Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceUris
  langs:
  - csharp
  - vb
  name: ExternalDataConfiguration
  nameWithType: ExternalDataConfiguration
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExternalDataConfiguration
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3136
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: 'public class ExternalDataConfiguration : IDirectResponseSchema'
    content.vb: >-
      Public Class ExternalDataConfiguration
          Implements IDirectResponseSchema
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Requests.IDirectResponseSchema
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Autodetect
  commentId: P:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Autodetect
  id: Autodetect
  parent: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  langs:
  - csharp
  - vb
  name: Autodetect
  nameWithType: ExternalDataConfiguration.Autodetect
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Autodetect
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Autodetect
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3140
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Try to detect schema and format options automatically. Any option specified explicitly will be

    honored.
  example: []
  syntax:
    content: >-
      [JsonProperty("autodetect")]

      public virtual bool? Autodetect { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("autodetect")>

      Public Overridable Property Autodetect As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Autodetect*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: autodetect
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.BigtableOptions
  commentId: P:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.BigtableOptions
  id: BigtableOptions
  parent: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  langs:
  - csharp
  - vb
  name: BigtableOptions
  nameWithType: ExternalDataConfiguration.BigtableOptions
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.BigtableOptions
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BigtableOptions
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3144
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Optional] Additional options if sourceFormat is set to BIGTABLE.'
  example: []
  syntax:
    content: >-
      [JsonProperty("bigtableOptions")]

      public virtual BigtableOptions BigtableOptions { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.BigtableOptions
    content.vb: >-
      <JsonProperty("bigtableOptions")>

      Public Overridable Property BigtableOptions As BigtableOptions
  overload: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.BigtableOptions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: bigtableOptions
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Compression
  commentId: P:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Compression
  id: Compression
  parent: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  langs:
  - csharp
  - vb
  name: Compression
  nameWithType: ExternalDataConfiguration.Compression
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Compression
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Compression
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3150
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] The compression type of the data source. Possible values include GZIP and NONE. The

    default value is NONE. This setting is ignored for Google Cloud Bigtable, Google Cloud Datastore backups and

    Avro formats.
  example: []
  syntax:
    content: >-
      [JsonProperty("compression")]

      public virtual string Compression { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("compression")>

      Public Overridable Property Compression As String
  overload: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Compression*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: compression
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.CsvOptions
  commentId: P:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.CsvOptions
  id: CsvOptions
  parent: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  langs:
  - csharp
  - vb
  name: CsvOptions
  nameWithType: ExternalDataConfiguration.CsvOptions
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.CsvOptions
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CsvOptions
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3154
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Additional properties to set if sourceFormat is set to CSV.
  example: []
  syntax:
    content: >-
      [JsonProperty("csvOptions")]

      public virtual CsvOptions CsvOptions { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.CsvOptions
    content.vb: >-
      <JsonProperty("csvOptions")>

      Public Overridable Property CsvOptions As CsvOptions
  overload: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.CsvOptions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: csvOptions
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.GoogleSheetsOptions
  commentId: P:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.GoogleSheetsOptions
  id: GoogleSheetsOptions
  parent: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  langs:
  - csharp
  - vb
  name: GoogleSheetsOptions
  nameWithType: ExternalDataConfiguration.GoogleSheetsOptions
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.GoogleSheetsOptions
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GoogleSheetsOptions
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3158
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Optional] Additional options if sourceFormat is set to GOOGLE_SHEETS.'
  example: []
  syntax:
    content: >-
      [JsonProperty("googleSheetsOptions")]

      public virtual GoogleSheetsOptions GoogleSheetsOptions { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.GoogleSheetsOptions
    content.vb: >-
      <JsonProperty("googleSheetsOptions")>

      Public Overridable Property GoogleSheetsOptions As GoogleSheetsOptions
  overload: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.GoogleSheetsOptions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: googleSheetsOptions
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.IgnoreUnknownValues
  commentId: P:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.IgnoreUnknownValues
  id: IgnoreUnknownValues
  parent: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  langs:
  - csharp
  - vb
  name: IgnoreUnknownValues
  nameWithType: ExternalDataConfiguration.IgnoreUnknownValues
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.IgnoreUnknownValues
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IgnoreUnknownValues
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3167
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] Indicates if BigQuery should allow extra values that are not represented in the table

    schema. If true, the extra values are ignored. If false, records with extra columns are treated as bad

    records, and if there are too many bad records, an invalid error is returned in the job result. The default

    value is false. The sourceFormat property determines what BigQuery treats as an extra value: CSV: Trailing

    columns JSON: Named values that don&apos;t match any column names Google Cloud Bigtable: This setting is ignored.

    Google Cloud Datastore backups: This setting is ignored. Avro: This setting is ignored.
  example: []
  syntax:
    content: >-
      [JsonProperty("ignoreUnknownValues")]

      public virtual bool? IgnoreUnknownValues { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("ignoreUnknownValues")>

      Public Overridable Property IgnoreUnknownValues As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.IgnoreUnknownValues*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ignoreUnknownValues
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.MaxBadRecords
  commentId: P:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.MaxBadRecords
  id: MaxBadRecords
  parent: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  langs:
  - csharp
  - vb
  name: MaxBadRecords
  nameWithType: ExternalDataConfiguration.MaxBadRecords
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.MaxBadRecords
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MaxBadRecords
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3174
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] The maximum number of bad records that BigQuery can ignore when reading data. If the

    number of bad records exceeds this value, an invalid error is returned in the job result. The default value

    is 0, which requires that all records are valid. This setting is ignored for Google Cloud Bigtable, Google

    Cloud Datastore backups and Avro formats.
  example: []
  syntax:
    content: >-
      [JsonProperty("maxBadRecords")]

      public virtual int? MaxBadRecords { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("maxBadRecords")>

      Public Overridable Property MaxBadRecords As Integer?
  overload: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.MaxBadRecords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxBadRecords
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Schema
  commentId: P:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Schema
  id: Schema
  parent: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  langs:
  - csharp
  - vb
  name: Schema
  nameWithType: ExternalDataConfiguration.Schema
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Schema
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Schema
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3179
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] The schema for the data. Schema is required for CSV and JSON formats. Schema is

    disallowed for Google Cloud Bigtable, Cloud Datastore backups, and Avro formats.
  example: []
  syntax:
    content: >-
      [JsonProperty("schema")]

      public virtual TableSchema Schema { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.TableSchema
    content.vb: >-
      <JsonProperty("schema")>

      Public Overridable Property Schema As TableSchema
  overload: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Schema*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: schema
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceFormat
  commentId: P:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceFormat
  id: SourceFormat
  parent: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  langs:
  - csharp
  - vb
  name: SourceFormat
  nameWithType: ExternalDataConfiguration.SourceFormat
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceFormat
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: SourceFormat
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3186
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Required] The data format. For CSV files, specify &quot;CSV&quot;. For Google sheets, specify

    &quot;GOOGLE_SHEETS&quot;. For newline-delimited JSON, specify &quot;NEWLINE_DELIMITED_JSON&quot;. For Avro files, specify

    &quot;AVRO&quot;. For Google Cloud Datastore backups, specify &quot;DATASTORE_BACKUP&quot;. [Beta] For Google Cloud Bigtable,

    specify &quot;BIGTABLE&quot;.
  example: []
  syntax:
    content: >-
      [JsonProperty("sourceFormat")]

      public virtual string SourceFormat { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("sourceFormat")>

      Public Overridable Property SourceFormat As String
  overload: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceFormat*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sourceFormat
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceUris
  commentId: P:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceUris
  id: SourceUris
  parent: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  langs:
  - csharp
  - vb
  name: SourceUris
  nameWithType: ExternalDataConfiguration.SourceUris
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceUris
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: SourceUris
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3195
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Required] The fully-qualified URIs that point to your data in Google Cloud. For Google Cloud

    Storage URIs: Each URI can contain one &apos;*&apos; wildcard character and it must come after the &apos;bucket&apos; name. Size

    limits related to load jobs apply to external data sources. For Google Cloud Bigtable URIs: Exactly one URI

    can be specified and it has be a fully specified and valid HTTPS URL for a Google Cloud Bigtable table. For

    Google Cloud Datastore backups, exactly one URI can be specified. Also, the &apos;*&apos; wildcard character is not

    allowed.
  example: []
  syntax:
    content: >-
      [JsonProperty("sourceUris")]

      public virtual IList<string> SourceUris { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: >-
      <JsonProperty("sourceUris")>

      Public Overridable Property SourceUris As IList(Of String)
  overload: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceUris*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sourceUris
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: ExternalDataConfiguration.ETag
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3199
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The ETag of the item.
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.ETag*
  implements:
  - Google.Apis.Requests.IDirectResponseSchema.ETag
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Requests.IDirectResponseSchema
  commentId: T:Google.Apis.Requests.IDirectResponseSchema
  parent: Google.Apis.Requests
  isExternal: true
  name: IDirectResponseSchema
  nameWithType: IDirectResponseSchema
  fullName: Google.Apis.Requests.IDirectResponseSchema
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: false
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Autodetect*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Autodetect
  isExternal: false
  name: Autodetect
  nameWithType: ExternalDataConfiguration.Autodetect
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Autodetect
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.BigtableOptions*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.BigtableOptions
  isExternal: false
  name: BigtableOptions
  nameWithType: ExternalDataConfiguration.BigtableOptions
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.BigtableOptions
- uid: Google.Apis.Bigquery.v2.Data.BigtableOptions
  commentId: T:Google.Apis.Bigquery.v2.Data.BigtableOptions
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: BigtableOptions
  nameWithType: BigtableOptions
  fullName: Google.Apis.Bigquery.v2.Data.BigtableOptions
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Compression*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Compression
  isExternal: false
  name: Compression
  nameWithType: ExternalDataConfiguration.Compression
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Compression
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.CsvOptions*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.CsvOptions
  isExternal: false
  name: CsvOptions
  nameWithType: ExternalDataConfiguration.CsvOptions
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.CsvOptions
- uid: Google.Apis.Bigquery.v2.Data.CsvOptions
  commentId: T:Google.Apis.Bigquery.v2.Data.CsvOptions
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: CsvOptions
  nameWithType: CsvOptions
  fullName: Google.Apis.Bigquery.v2.Data.CsvOptions
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.GoogleSheetsOptions*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.GoogleSheetsOptions
  isExternal: false
  name: GoogleSheetsOptions
  nameWithType: ExternalDataConfiguration.GoogleSheetsOptions
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.GoogleSheetsOptions
- uid: Google.Apis.Bigquery.v2.Data.GoogleSheetsOptions
  commentId: T:Google.Apis.Bigquery.v2.Data.GoogleSheetsOptions
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: GoogleSheetsOptions
  nameWithType: GoogleSheetsOptions
  fullName: Google.Apis.Bigquery.v2.Data.GoogleSheetsOptions
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.IgnoreUnknownValues*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.IgnoreUnknownValues
  isExternal: false
  name: IgnoreUnknownValues
  nameWithType: ExternalDataConfiguration.IgnoreUnknownValues
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.IgnoreUnknownValues
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.MaxBadRecords*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.MaxBadRecords
  isExternal: false
  name: MaxBadRecords
  nameWithType: ExternalDataConfiguration.MaxBadRecords
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.MaxBadRecords
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Schema*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Schema
  isExternal: false
  name: Schema
  nameWithType: ExternalDataConfiguration.Schema
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.Schema
- uid: Google.Apis.Bigquery.v2.Data.TableSchema
  commentId: T:Google.Apis.Bigquery.v2.Data.TableSchema
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: TableSchema
  nameWithType: TableSchema
  fullName: Google.Apis.Bigquery.v2.Data.TableSchema
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceFormat*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceFormat
  isExternal: false
  name: SourceFormat
  nameWithType: ExternalDataConfiguration.SourceFormat
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceFormat
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceUris*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceUris
  isExternal: false
  name: SourceUris
  nameWithType: ExternalDataConfiguration.SourceUris
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.SourceUris
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.ETag
  isExternal: false
  name: ETag
  nameWithType: ExternalDataConfiguration.ETag
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration.ETag
- uid: Google.Apis.Requests.IDirectResponseSchema.ETag
  commentId: P:Google.Apis.Requests.IDirectResponseSchema.ETag
  parent: Google.Apis.Requests.IDirectResponseSchema
  isExternal: true
  name: ETag
  nameWithType: IDirectResponseSchema.ETag
  fullName: Google.Apis.Requests.IDirectResponseSchema.ETag
