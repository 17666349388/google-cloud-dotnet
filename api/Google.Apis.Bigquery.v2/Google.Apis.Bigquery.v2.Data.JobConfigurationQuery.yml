### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  commentId: T:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  id: JobConfigurationQuery
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.AllowLargeResults
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Clustering
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.CreateDisposition
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DefaultDataset
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationEncryptionConfiguration
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationTable
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ETag
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.FlattenResults
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBillingTier
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBytesBilled
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ParameterMode
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.PreserveNulls
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Priority
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Query
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.QueryParameters
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.RangePartitioning
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.SchemaUpdateOptions
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TableDefinitions
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TimePartitioning
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseLegacySql
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseQueryCache
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UserDefinedFunctionResources
  - Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.WriteDisposition
  langs:
  - csharp
  - vb
  name: JobConfigurationQuery
  nameWithType: JobConfigurationQuery
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: JobConfigurationQuery
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5215
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: 'public class JobConfigurationQuery : IDirectResponseSchema'
    content.vb: >-
      Public Class JobConfigurationQuery
          Implements IDirectResponseSchema
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Requests.IDirectResponseSchema
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.AllowLargeResults
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.AllowLargeResults
  id: AllowLargeResults
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: AllowLargeResults
  nameWithType: JobConfigurationQuery.AllowLargeResults
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.AllowLargeResults
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AllowLargeResults
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5221
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] If true and query uses legacy SQL dialect, allows the query to produce arbitrarily large

    result tables at a slight cost in performance. Requires destinationTable to be set. For standard SQL

    queries, this flag is ignored and large results are always allowed. However, you must still set

    destinationTable when result size exceeds the allowed maximum response size.
  example: []
  syntax:
    content: >-
      [JsonProperty("allowLargeResults")]

      public virtual bool? AllowLargeResults { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("allowLargeResults")>

      Public Overridable Property AllowLargeResults As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.AllowLargeResults*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: allowLargeResults
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Clustering
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Clustering
  id: Clustering
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: Clustering
  nameWithType: JobConfigurationQuery.Clustering
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Clustering
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Clustering
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5226
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Beta] Clustering specification for the destination table. Must be specified with time-based

    partitioning, data in the table will be first partitioned and subsequently clustered.
  example: []
  syntax:
    content: >-
      [JsonProperty("clustering")]

      public virtual Clustering Clustering { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.Clustering
    content.vb: >-
      <JsonProperty("clustering")>

      Public Overridable Property Clustering As Clustering
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Clustering*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: clustering
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.CreateDisposition
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.CreateDisposition
  id: CreateDisposition
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: CreateDisposition
  nameWithType: JobConfigurationQuery.CreateDisposition
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.CreateDisposition
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CreateDisposition
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5234
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] Specifies whether the job is allowed to create new tables. The following values are

    supported: CREATE_IF_NEEDED: If the table does not exist, BigQuery creates the table. CREATE_NEVER: The

    table must already exist. If it does not, a &apos;notFound&apos; error is returned in the job result. The default

    value is CREATE_IF_NEEDED. Creation, truncation and append actions occur as one atomic update upon job

    completion.
  example: []
  syntax:
    content: >-
      [JsonProperty("createDisposition")]

      public virtual string CreateDisposition { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("createDisposition")>

      Public Overridable Property CreateDisposition As String
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.CreateDisposition*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: createDisposition
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DefaultDataset
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DefaultDataset
  id: DefaultDataset
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: DefaultDataset
  nameWithType: JobConfigurationQuery.DefaultDataset
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DefaultDataset
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DefaultDataset
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5239
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] Specifies the default dataset to use for unqualified table names in the query. Note that

    this does not alter behavior of unqualified dataset names.
  example: []
  syntax:
    content: >-
      [JsonProperty("defaultDataset")]

      public virtual DatasetReference DefaultDataset { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.DatasetReference
    content.vb: >-
      <JsonProperty("defaultDataset")>

      Public Overridable Property DefaultDataset As DatasetReference
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DefaultDataset*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: defaultDataset
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationEncryptionConfiguration
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationEncryptionConfiguration
  id: DestinationEncryptionConfiguration
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: DestinationEncryptionConfiguration
  nameWithType: JobConfigurationQuery.DestinationEncryptionConfiguration
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationEncryptionConfiguration
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DestinationEncryptionConfiguration
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5243
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Custom encryption configuration (e.g., Cloud KMS keys).
  example: []
  syntax:
    content: >-
      [JsonProperty("destinationEncryptionConfiguration")]

      public virtual EncryptionConfiguration DestinationEncryptionConfiguration { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.EncryptionConfiguration
    content.vb: >-
      <JsonProperty("destinationEncryptionConfiguration")>

      Public Overridable Property DestinationEncryptionConfiguration As EncryptionConfiguration
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationEncryptionConfiguration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: destinationEncryptionConfiguration
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationTable
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationTable
  id: DestinationTable
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: DestinationTable
  nameWithType: JobConfigurationQuery.DestinationTable
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationTable
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DestinationTable
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5249
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] Describes the table where the query results should be stored. If not present, a new

    table will be created to store the results. This property must be set for large results that exceed the

    maximum response size.
  example: []
  syntax:
    content: >-
      [JsonProperty("destinationTable")]

      public virtual TableReference DestinationTable { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.TableReference
    content.vb: >-
      <JsonProperty("destinationTable")>

      Public Overridable Property DestinationTable As TableReference
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationTable*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: destinationTable
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.FlattenResults
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.FlattenResults
  id: FlattenResults
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: FlattenResults
  nameWithType: JobConfigurationQuery.FlattenResults
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.FlattenResults
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: FlattenResults
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5255
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] If true and query uses legacy SQL dialect, flattens all nested and repeated fields in

    the query results. allowLargeResults must be true if this is set to false. For standard SQL queries, this

    flag is ignored and results are never flattened.
  example: []
  syntax:
    content: >-
      [JsonProperty("flattenResults")]

      public virtual bool? FlattenResults { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("flattenResults")>

      Public Overridable Property FlattenResults As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.FlattenResults*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: flattenResults
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBillingTier
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBillingTier
  id: MaximumBillingTier
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: MaximumBillingTier
  nameWithType: JobConfigurationQuery.MaximumBillingTier
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBillingTier
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MaximumBillingTier
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5260
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] Limits the billing tier for this job. Queries that have resource usage beyond this tier

    will fail (without incurring a charge). If unspecified, this will be set to your project default.
  example: []
  syntax:
    content: >-
      [JsonProperty("maximumBillingTier")]

      public virtual int? MaximumBillingTier { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("maximumBillingTier")>

      Public Overridable Property MaximumBillingTier As Integer?
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBillingTier*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maximumBillingTier
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBytesBilled
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBytesBilled
  id: MaximumBytesBilled
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: MaximumBytesBilled
  nameWithType: JobConfigurationQuery.MaximumBytesBilled
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBytesBilled
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MaximumBytesBilled
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5266
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] Limits the bytes billed for this job. Queries that will have bytes billed beyond this

    limit will fail (without incurring a charge). If unspecified, this will be set to your project

    default.
  example: []
  syntax:
    content: >-
      [JsonProperty("maximumBytesBilled")]

      public virtual long? MaximumBytesBilled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("maximumBytesBilled")>

      Public Overridable Property MaximumBytesBilled As Long?
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBytesBilled*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maximumBytesBilled
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ParameterMode
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ParameterMode
  id: ParameterMode
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: ParameterMode
  nameWithType: JobConfigurationQuery.ParameterMode
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ParameterMode
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ParameterMode
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5271
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Standard SQL only. Set to POSITIONAL to use positional (?) query parameters or to NAMED to use

    named (@myparam) query parameters in this query.
  example: []
  syntax:
    content: >-
      [JsonProperty("parameterMode")]

      public virtual string ParameterMode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("parameterMode")>

      Public Overridable Property ParameterMode As String
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ParameterMode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: parameterMode
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.PreserveNulls
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.PreserveNulls
  id: PreserveNulls
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: PreserveNulls
  nameWithType: JobConfigurationQuery.PreserveNulls
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.PreserveNulls
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: PreserveNulls
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5275
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Deprecated] This property is deprecated.'
  example: []
  syntax:
    content: >-
      [JsonProperty("preserveNulls")]

      public virtual bool? PreserveNulls { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("preserveNulls")>

      Public Overridable Property PreserveNulls As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.PreserveNulls*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: preserveNulls
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Priority
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Priority
  id: Priority
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: JobConfigurationQuery.Priority
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Priority
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Priority
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5280
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] Specifies a priority for the query. Possible values include INTERACTIVE and BATCH. The

    default value is INTERACTIVE.
  example: []
  syntax:
    content: >-
      [JsonProperty("priority")]

      public virtual string Priority { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("priority")>

      Public Overridable Property Priority As String
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Priority*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: priority
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Query
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Query
  id: Query
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: JobConfigurationQuery.Query
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Query
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Query
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5285
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Required] SQL query text to execute. The useLegacySql field can be used to indicate whether the

    query uses legacy SQL or standard SQL.
  example: []
  syntax:
    content: >-
      [JsonProperty("query")]

      public virtual string Query { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("query")>

      Public Overridable Property Query As String
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Query*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: query
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.QueryParameters
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.QueryParameters
  id: QueryParameters
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: QueryParameters
  nameWithType: JobConfigurationQuery.QueryParameters
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.QueryParameters
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: QueryParameters
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5289
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Query parameters for standard SQL queries.
  example: []
  syntax:
    content: >-
      [JsonProperty("queryParameters")]

      public virtual IList<QueryParameter> QueryParameters { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.QueryParameter}
    content.vb: >-
      <JsonProperty("queryParameters")>

      Public Overridable Property QueryParameters As IList(Of QueryParameter)
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.QueryParameters*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: queryParameters
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.RangePartitioning
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.RangePartitioning
  id: RangePartitioning
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: RangePartitioning
  nameWithType: JobConfigurationQuery.RangePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.RangePartitioning
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RangePartitioning
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5294
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [TrustedTester] Range partitioning specification for this table. Only one of timePartitioning and

    rangePartitioning should be specified.
  example: []
  syntax:
    content: >-
      [JsonProperty("rangePartitioning")]

      public virtual RangePartitioning RangePartitioning { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.RangePartitioning
    content.vb: >-
      <JsonProperty("rangePartitioning")>

      Public Overridable Property RangePartitioning As RangePartitioning
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.RangePartitioning*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: rangePartitioning
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.SchemaUpdateOptions
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.SchemaUpdateOptions
  id: SchemaUpdateOptions
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: SchemaUpdateOptions
  nameWithType: JobConfigurationQuery.SchemaUpdateOptions
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.SchemaUpdateOptions
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: SchemaUpdateOptions
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5303
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Allows the schema of the destination table to be updated as a side effect of the query job. Schema

    update options are supported in two cases: when writeDisposition is WRITE_APPEND; when writeDisposition is

    WRITE_TRUNCATE and the destination table is a partition of a table, specified by partition decorators. For

    normal tables, WRITE_TRUNCATE will always overwrite the schema. One or more of the following values are

    specified: ALLOW_FIELD_ADDITION: allow adding a nullable field to the schema. ALLOW_FIELD_RELAXATION: allow

    relaxing a required field in the original schema to nullable.
  example: []
  syntax:
    content: >-
      [JsonProperty("schemaUpdateOptions")]

      public virtual IList<string> SchemaUpdateOptions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: >-
      <JsonProperty("schemaUpdateOptions")>

      Public Overridable Property SchemaUpdateOptions As IList(Of String)
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.SchemaUpdateOptions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: schemaUpdateOptions
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TableDefinitions
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TableDefinitions
  id: TableDefinitions
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: TableDefinitions
  nameWithType: JobConfigurationQuery.TableDefinitions
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TableDefinitions
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TableDefinitions
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5309
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] If querying an external data source outside of BigQuery, describes the data format,

    location and other properties of the data source. By defining these properties, the data source can then be

    queried as if it were a standard BigQuery table.
  example: []
  syntax:
    content: >-
      [JsonProperty("tableDefinitions")]

      public virtual IDictionary<string, ExternalDataConfiguration> TableDefinitions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration}
    content.vb: >-
      <JsonProperty("tableDefinitions")>

      Public Overridable Property TableDefinitions As IDictionary(Of String, ExternalDataConfiguration)
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TableDefinitions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tableDefinitions
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TimePartitioning
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TimePartitioning
  id: TimePartitioning
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: TimePartitioning
  nameWithType: JobConfigurationQuery.TimePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TimePartitioning
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TimePartitioning
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5314
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Time-based partitioning specification for the destination table. Only one of timePartitioning and

    rangePartitioning should be specified.
  example: []
  syntax:
    content: >-
      [JsonProperty("timePartitioning")]

      public virtual TimePartitioning TimePartitioning { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.TimePartitioning
    content.vb: >-
      <JsonProperty("timePartitioning")>

      Public Overridable Property TimePartitioning As TimePartitioning
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TimePartitioning*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: timePartitioning
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseLegacySql
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseLegacySql
  id: UseLegacySql
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: UseLegacySql
  nameWithType: JobConfigurationQuery.UseLegacySql
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseLegacySql
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UseLegacySql
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5321
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Specifies whether to use BigQuery&apos;s legacy SQL dialect for this query. The default value is true.

    If set to false, the query will use BigQuery&apos;s standard SQL: https://cloud.google.com/bigquery/sql-

    reference/ When useLegacySql is set to false, the value of flattenResults is ignored; query will be run as

    if flattenResults is false.
  example: []
  syntax:
    content: >-
      [JsonProperty("useLegacySql")]

      public virtual bool? UseLegacySql { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("useLegacySql")>

      Public Overridable Property UseLegacySql As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseLegacySql*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: useLegacySql
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseQueryCache
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseQueryCache
  id: UseQueryCache
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: UseQueryCache
  nameWithType: JobConfigurationQuery.UseQueryCache
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseQueryCache
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UseQueryCache
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5327
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] Whether to look for the result in the query cache. The query cache is a best-effort

    cache that will be flushed whenever tables in the query are modified. Moreover, the query cache is only

    available when a query does not have a destination table specified. The default value is true.
  example: []
  syntax:
    content: >-
      [JsonProperty("useQueryCache")]

      public virtual bool? UseQueryCache { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("useQueryCache")>

      Public Overridable Property UseQueryCache As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseQueryCache*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: useQueryCache
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UserDefinedFunctionResources
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UserDefinedFunctionResources
  id: UserDefinedFunctionResources
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: UserDefinedFunctionResources
  nameWithType: JobConfigurationQuery.UserDefinedFunctionResources
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UserDefinedFunctionResources
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UserDefinedFunctionResources
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5331
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Describes user-defined function resources used in the query.
  example: []
  syntax:
    content: >-
      [JsonProperty("userDefinedFunctionResources")]

      public virtual IList<UserDefinedFunctionResource> UserDefinedFunctionResources { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.UserDefinedFunctionResource}
    content.vb: >-
      <JsonProperty("userDefinedFunctionResources")>

      Public Overridable Property UserDefinedFunctionResources As IList(Of UserDefinedFunctionResource)
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UserDefinedFunctionResources*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: userDefinedFunctionResources
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.WriteDisposition
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.WriteDisposition
  id: WriteDisposition
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: WriteDisposition
  nameWithType: JobConfigurationQuery.WriteDisposition
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.WriteDisposition
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: WriteDisposition
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5341
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] Specifies the action that occurs if the destination table already exists. The following

    values are supported: WRITE_TRUNCATE: If the table already exists, BigQuery overwrites the table data and

    uses the schema from the query result. WRITE_APPEND: If the table already exists, BigQuery appends the data

    to the table. WRITE_EMPTY: If the table already exists and contains data, a &apos;duplicate&apos; error is returned in

    the job result. The default value is WRITE_EMPTY. Each action is atomic and only occurs if BigQuery is able

    to complete the job successfully. Creation, truncation and append actions occur as one atomic update upon

    job completion.
  example: []
  syntax:
    content: >-
      [JsonProperty("writeDisposition")]

      public virtual string WriteDisposition { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("writeDisposition")>

      Public Overridable Property WriteDisposition As String
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.WriteDisposition*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: writeDisposition
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: JobConfigurationQuery.ETag
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5345
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The ETag of the item.
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ETag*
  implements:
  - Google.Apis.Requests.IDirectResponseSchema.ETag
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Requests.IDirectResponseSchema
  commentId: T:Google.Apis.Requests.IDirectResponseSchema
  parent: Google.Apis.Requests
  isExternal: true
  name: IDirectResponseSchema
  nameWithType: IDirectResponseSchema
  fullName: Google.Apis.Requests.IDirectResponseSchema
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: true
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.AllowLargeResults*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.AllowLargeResults
  name: AllowLargeResults
  nameWithType: JobConfigurationQuery.AllowLargeResults
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.AllowLargeResults
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Clustering*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Clustering
  name: Clustering
  nameWithType: JobConfigurationQuery.Clustering
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Clustering
- uid: Google.Apis.Bigquery.v2.Data.Clustering
  commentId: T:Google.Apis.Bigquery.v2.Data.Clustering
  parent: Google.Apis.Bigquery.v2.Data
  name: Clustering
  nameWithType: Clustering
  fullName: Google.Apis.Bigquery.v2.Data.Clustering
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.CreateDisposition*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.CreateDisposition
  name: CreateDisposition
  nameWithType: JobConfigurationQuery.CreateDisposition
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.CreateDisposition
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DefaultDataset*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DefaultDataset
  name: DefaultDataset
  nameWithType: JobConfigurationQuery.DefaultDataset
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DefaultDataset
- uid: Google.Apis.Bigquery.v2.Data.DatasetReference
  commentId: T:Google.Apis.Bigquery.v2.Data.DatasetReference
  parent: Google.Apis.Bigquery.v2.Data
  name: DatasetReference
  nameWithType: DatasetReference
  fullName: Google.Apis.Bigquery.v2.Data.DatasetReference
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationEncryptionConfiguration*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationEncryptionConfiguration
  name: DestinationEncryptionConfiguration
  nameWithType: JobConfigurationQuery.DestinationEncryptionConfiguration
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationEncryptionConfiguration
- uid: Google.Apis.Bigquery.v2.Data.EncryptionConfiguration
  commentId: T:Google.Apis.Bigquery.v2.Data.EncryptionConfiguration
  parent: Google.Apis.Bigquery.v2.Data
  name: EncryptionConfiguration
  nameWithType: EncryptionConfiguration
  fullName: Google.Apis.Bigquery.v2.Data.EncryptionConfiguration
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationTable*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationTable
  name: DestinationTable
  nameWithType: JobConfigurationQuery.DestinationTable
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.DestinationTable
- uid: Google.Apis.Bigquery.v2.Data.TableReference
  commentId: T:Google.Apis.Bigquery.v2.Data.TableReference
  parent: Google.Apis.Bigquery.v2.Data
  name: TableReference
  nameWithType: TableReference
  fullName: Google.Apis.Bigquery.v2.Data.TableReference
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.FlattenResults*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.FlattenResults
  name: FlattenResults
  nameWithType: JobConfigurationQuery.FlattenResults
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.FlattenResults
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBillingTier*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBillingTier
  name: MaximumBillingTier
  nameWithType: JobConfigurationQuery.MaximumBillingTier
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBillingTier
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBytesBilled*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBytesBilled
  name: MaximumBytesBilled
  nameWithType: JobConfigurationQuery.MaximumBytesBilled
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.MaximumBytesBilled
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ParameterMode*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ParameterMode
  name: ParameterMode
  nameWithType: JobConfigurationQuery.ParameterMode
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ParameterMode
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.PreserveNulls*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.PreserveNulls
  name: PreserveNulls
  nameWithType: JobConfigurationQuery.PreserveNulls
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.PreserveNulls
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Priority*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Priority
  name: Priority
  nameWithType: JobConfigurationQuery.Priority
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Priority
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Query*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Query
  name: Query
  nameWithType: JobConfigurationQuery.Query
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.Query
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.QueryParameters*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.QueryParameters
  name: QueryParameters
  nameWithType: JobConfigurationQuery.QueryParameters
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.QueryParameters
- uid: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.QueryParameter}
  commentId: T:System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.QueryParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<QueryParameter>
  nameWithType: IList<QueryParameter>
  fullName: System.Collections.Generic.IList<Google.Apis.Bigquery.v2.Data.QueryParameter>
  nameWithType.vb: IList(Of QueryParameter)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Bigquery.v2.Data.QueryParameter)
  name.vb: IList(Of QueryParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Bigquery.v2.Data.QueryParameter
    name: QueryParameter
    nameWithType: QueryParameter
    fullName: Google.Apis.Bigquery.v2.Data.QueryParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Bigquery.v2.Data.QueryParameter
    name: QueryParameter
    nameWithType: QueryParameter
    fullName: Google.Apis.Bigquery.v2.Data.QueryParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.RangePartitioning*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.RangePartitioning
  name: RangePartitioning
  nameWithType: JobConfigurationQuery.RangePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.RangePartitioning
- uid: Google.Apis.Bigquery.v2.Data.RangePartitioning
  commentId: T:Google.Apis.Bigquery.v2.Data.RangePartitioning
  parent: Google.Apis.Bigquery.v2.Data
  name: RangePartitioning
  nameWithType: RangePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.RangePartitioning
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.SchemaUpdateOptions*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.SchemaUpdateOptions
  name: SchemaUpdateOptions
  nameWithType: JobConfigurationQuery.SchemaUpdateOptions
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.SchemaUpdateOptions
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TableDefinitions*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TableDefinitions
  name: TableDefinitions
  nameWithType: JobConfigurationQuery.TableDefinitions
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TableDefinitions
- uid: System.Collections.Generic.IDictionary{System.String,Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, ExternalDataConfiguration>
  nameWithType: IDictionary<String, ExternalDataConfiguration>
  fullName: System.Collections.Generic.IDictionary<System.String, Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration>
  nameWithType.vb: IDictionary(Of String, ExternalDataConfiguration)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration)
  name.vb: IDictionary(Of String, ExternalDataConfiguration)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
    name: ExternalDataConfiguration
    nameWithType: ExternalDataConfiguration
    fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
    name: ExternalDataConfiguration
    nameWithType: ExternalDataConfiguration
    fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TimePartitioning*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TimePartitioning
  name: TimePartitioning
  nameWithType: JobConfigurationQuery.TimePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.TimePartitioning
- uid: Google.Apis.Bigquery.v2.Data.TimePartitioning
  commentId: T:Google.Apis.Bigquery.v2.Data.TimePartitioning
  parent: Google.Apis.Bigquery.v2.Data
  name: TimePartitioning
  nameWithType: TimePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.TimePartitioning
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseLegacySql*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseLegacySql
  name: UseLegacySql
  nameWithType: JobConfigurationQuery.UseLegacySql
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseLegacySql
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseQueryCache*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseQueryCache
  name: UseQueryCache
  nameWithType: JobConfigurationQuery.UseQueryCache
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UseQueryCache
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UserDefinedFunctionResources*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UserDefinedFunctionResources
  name: UserDefinedFunctionResources
  nameWithType: JobConfigurationQuery.UserDefinedFunctionResources
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.UserDefinedFunctionResources
- uid: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.UserDefinedFunctionResource}
  commentId: T:System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.UserDefinedFunctionResource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<UserDefinedFunctionResource>
  nameWithType: IList<UserDefinedFunctionResource>
  fullName: System.Collections.Generic.IList<Google.Apis.Bigquery.v2.Data.UserDefinedFunctionResource>
  nameWithType.vb: IList(Of UserDefinedFunctionResource)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Bigquery.v2.Data.UserDefinedFunctionResource)
  name.vb: IList(Of UserDefinedFunctionResource)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Bigquery.v2.Data.UserDefinedFunctionResource
    name: UserDefinedFunctionResource
    nameWithType: UserDefinedFunctionResource
    fullName: Google.Apis.Bigquery.v2.Data.UserDefinedFunctionResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Bigquery.v2.Data.UserDefinedFunctionResource
    name: UserDefinedFunctionResource
    nameWithType: UserDefinedFunctionResource
    fullName: Google.Apis.Bigquery.v2.Data.UserDefinedFunctionResource
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.WriteDisposition*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.WriteDisposition
  name: WriteDisposition
  nameWithType: JobConfigurationQuery.WriteDisposition
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.WriteDisposition
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ETag
  name: ETag
  nameWithType: JobConfigurationQuery.ETag
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery.ETag
- uid: Google.Apis.Requests.IDirectResponseSchema.ETag
  commentId: P:Google.Apis.Requests.IDirectResponseSchema.ETag
  parent: Google.Apis.Requests.IDirectResponseSchema
  isExternal: true
  name: ETag
  nameWithType: IDirectResponseSchema.ETag
  fullName: Google.Apis.Requests.IDirectResponseSchema.ETag
