### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix
  commentId: T:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix
  id: BinaryConfusionMatrix
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Accuracy
  - Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.ETag
  - Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.F1Score
  - Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalseNegatives
  - Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalsePositives
  - Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.PositiveClassThreshold
  - Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Precision
  - Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Recall
  - Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TrueNegatives
  - Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TruePositives
  langs:
  - csharp
  - vb
  name: BinaryConfusionMatrix
  nameWithType: BinaryConfusionMatrix
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BinaryConfusionMatrix
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3886
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Confusion matrix for binary classification models.
  example: []
  syntax:
    content: 'public class BinaryConfusionMatrix : IDirectResponseSchema'
    content.vb: >-
      Public Class BinaryConfusionMatrix
          Implements IDirectResponseSchema
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Requests.IDirectResponseSchema
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Accuracy
  commentId: P:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Accuracy
  id: Accuracy
  parent: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix
  langs:
  - csharp
  - vb
  name: Accuracy
  nameWithType: BinaryConfusionMatrix.Accuracy
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Accuracy
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Accuracy
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3889
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The fraction of predictions given the correct label.
  example: []
  syntax:
    content: >-
      [JsonProperty("accuracy")]

      public virtual double? Accuracy { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("accuracy")>

      Public Overridable Property Accuracy As Double?
  overload: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Accuracy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: accuracy
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.F1Score
  commentId: P:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.F1Score
  id: F1Score
  parent: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix
  langs:
  - csharp
  - vb
  name: F1Score
  nameWithType: BinaryConfusionMatrix.F1Score
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.F1Score
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: F1Score
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3893
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The equally weighted average of recall and precision.
  example: []
  syntax:
    content: >-
      [JsonProperty("f1Score")]

      public virtual double? F1Score { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("f1Score")>

      Public Overridable Property F1Score As Double?
  overload: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.F1Score*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: f1Score
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalseNegatives
  commentId: P:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalseNegatives
  id: FalseNegatives
  parent: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix
  langs:
  - csharp
  - vb
  name: FalseNegatives
  nameWithType: BinaryConfusionMatrix.FalseNegatives
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalseNegatives
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: FalseNegatives
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3897
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Number of false samples predicted as false.
  example: []
  syntax:
    content: >-
      [JsonProperty("falseNegatives")]

      public virtual long? FalseNegatives { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("falseNegatives")>

      Public Overridable Property FalseNegatives As Long?
  overload: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalseNegatives*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: falseNegatives
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalsePositives
  commentId: P:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalsePositives
  id: FalsePositives
  parent: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix
  langs:
  - csharp
  - vb
  name: FalsePositives
  nameWithType: BinaryConfusionMatrix.FalsePositives
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalsePositives
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: FalsePositives
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3901
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Number of false samples predicted as true.
  example: []
  syntax:
    content: >-
      [JsonProperty("falsePositives")]

      public virtual long? FalsePositives { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("falsePositives")>

      Public Overridable Property FalsePositives As Long?
  overload: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalsePositives*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: falsePositives
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.PositiveClassThreshold
  commentId: P:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.PositiveClassThreshold
  id: PositiveClassThreshold
  parent: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix
  langs:
  - csharp
  - vb
  name: PositiveClassThreshold
  nameWithType: BinaryConfusionMatrix.PositiveClassThreshold
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.PositiveClassThreshold
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: PositiveClassThreshold
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3905
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Threshold value used when computing each of the following metric.
  example: []
  syntax:
    content: >-
      [JsonProperty("positiveClassThreshold")]

      public virtual double? PositiveClassThreshold { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("positiveClassThreshold")>

      Public Overridable Property PositiveClassThreshold As Double?
  overload: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.PositiveClassThreshold*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: positiveClassThreshold
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Precision
  commentId: P:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Precision
  id: Precision
  parent: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix
  langs:
  - csharp
  - vb
  name: Precision
  nameWithType: BinaryConfusionMatrix.Precision
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Precision
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Precision
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3909
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The fraction of actual positive predictions that had positive actual labels.
  example: []
  syntax:
    content: >-
      [JsonProperty("precision")]

      public virtual double? Precision { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("precision")>

      Public Overridable Property Precision As Double?
  overload: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Precision*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: precision
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Recall
  commentId: P:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Recall
  id: Recall
  parent: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix
  langs:
  - csharp
  - vb
  name: Recall
  nameWithType: BinaryConfusionMatrix.Recall
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Recall
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Recall
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3913
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The fraction of actual positive labels that were given a positive prediction.
  example: []
  syntax:
    content: >-
      [JsonProperty("recall")]

      public virtual double? Recall { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("recall")>

      Public Overridable Property Recall As Double?
  overload: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Recall*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: recall
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TrueNegatives
  commentId: P:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TrueNegatives
  id: TrueNegatives
  parent: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix
  langs:
  - csharp
  - vb
  name: TrueNegatives
  nameWithType: BinaryConfusionMatrix.TrueNegatives
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TrueNegatives
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TrueNegatives
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3917
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Number of true samples predicted as false.
  example: []
  syntax:
    content: >-
      [JsonProperty("trueNegatives")]

      public virtual long? TrueNegatives { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("trueNegatives")>

      Public Overridable Property TrueNegatives As Long?
  overload: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TrueNegatives*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: trueNegatives
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TruePositives
  commentId: P:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TruePositives
  id: TruePositives
  parent: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix
  langs:
  - csharp
  - vb
  name: TruePositives
  nameWithType: BinaryConfusionMatrix.TruePositives
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TruePositives
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TruePositives
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3921
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Number of true samples predicted as true.
  example: []
  syntax:
    content: >-
      [JsonProperty("truePositives")]

      public virtual long? TruePositives { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("truePositives")>

      Public Overridable Property TruePositives As Long?
  overload: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TruePositives*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: truePositives
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: BinaryConfusionMatrix.ETag
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3925
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The ETag of the item.
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.ETag*
  implements:
  - Google.Apis.Requests.IDirectResponseSchema.ETag
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Requests.IDirectResponseSchema
  commentId: T:Google.Apis.Requests.IDirectResponseSchema
  parent: Google.Apis.Requests
  isExternal: true
  name: IDirectResponseSchema
  nameWithType: IDirectResponseSchema
  fullName: Google.Apis.Requests.IDirectResponseSchema
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: true
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Accuracy*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Accuracy
  name: Accuracy
  nameWithType: BinaryConfusionMatrix.Accuracy
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Accuracy
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.F1Score*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.F1Score
  name: F1Score
  nameWithType: BinaryConfusionMatrix.F1Score
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.F1Score
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalseNegatives*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalseNegatives
  name: FalseNegatives
  nameWithType: BinaryConfusionMatrix.FalseNegatives
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalseNegatives
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalsePositives*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalsePositives
  name: FalsePositives
  nameWithType: BinaryConfusionMatrix.FalsePositives
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.FalsePositives
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.PositiveClassThreshold*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.PositiveClassThreshold
  name: PositiveClassThreshold
  nameWithType: BinaryConfusionMatrix.PositiveClassThreshold
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.PositiveClassThreshold
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Precision*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Precision
  name: Precision
  nameWithType: BinaryConfusionMatrix.Precision
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Precision
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Recall*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Recall
  name: Recall
  nameWithType: BinaryConfusionMatrix.Recall
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.Recall
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TrueNegatives*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TrueNegatives
  name: TrueNegatives
  nameWithType: BinaryConfusionMatrix.TrueNegatives
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TrueNegatives
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TruePositives*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TruePositives
  name: TruePositives
  nameWithType: BinaryConfusionMatrix.TruePositives
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.TruePositives
- uid: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.ETag
  name: ETag
  nameWithType: BinaryConfusionMatrix.ETag
  fullName: Google.Apis.Bigquery.v2.Data.BinaryConfusionMatrix.ETag
- uid: Google.Apis.Requests.IDirectResponseSchema.ETag
  commentId: P:Google.Apis.Requests.IDirectResponseSchema.ETag
  parent: Google.Apis.Requests.IDirectResponseSchema
  isExternal: true
  name: ETag
  nameWithType: IDirectResponseSchema.ETag
  fullName: Google.Apis.Requests.IDirectResponseSchema.ETag
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
