### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration
  commentId: T:Google.Apis.Bigquery.v2.Data.JobConfiguration
  id: JobConfiguration
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.JobConfiguration.Copy
  - Google.Apis.Bigquery.v2.Data.JobConfiguration.DryRun
  - Google.Apis.Bigquery.v2.Data.JobConfiguration.ETag
  - Google.Apis.Bigquery.v2.Data.JobConfiguration.Extract
  - Google.Apis.Bigquery.v2.Data.JobConfiguration.JobTimeoutMs
  - Google.Apis.Bigquery.v2.Data.JobConfiguration.Labels
  - Google.Apis.Bigquery.v2.Data.JobConfiguration.Load
  - Google.Apis.Bigquery.v2.Data.JobConfiguration.Query
  langs:
  - csharp
  - vb
  name: JobConfiguration
  nameWithType: JobConfiguration
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: JobConfiguration
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3356
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: 'public class JobConfiguration : IDirectResponseSchema'
    content.vb: >-
      Public Class JobConfiguration
          Implements IDirectResponseSchema
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Requests.IDirectResponseSchema
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.Copy
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfiguration.Copy
  id: Copy
  parent: Google.Apis.Bigquery.v2.Data.JobConfiguration
  langs:
  - csharp
  - vb
  name: Copy
  nameWithType: JobConfiguration.Copy
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.Copy
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Copy
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3359
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Pick one] Copies a table.'
  example: []
  syntax:
    content: >-
      [JsonProperty("copy")]

      public virtual JobConfigurationTableCopy Copy { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.JobConfigurationTableCopy
    content.vb: >-
      <JsonProperty("copy")>

      Public Overridable Property Copy As JobConfigurationTableCopy
  overload: Google.Apis.Bigquery.v2.Data.JobConfiguration.Copy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: copy
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.DryRun
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfiguration.DryRun
  id: DryRun
  parent: Google.Apis.Bigquery.v2.Data.JobConfiguration
  langs:
  - csharp
  - vb
  name: DryRun
  nameWithType: JobConfiguration.DryRun
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.DryRun
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DryRun
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3365
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] If set, don&apos;t actually run this job. A valid query will return a mostly empty response

    with some processing statistics, while an invalid query will return the same error it would if it wasn&apos;t a

    dry run. Behavior of non-query jobs is undefined.
  example: []
  syntax:
    content: >-
      [JsonProperty("dryRun")]

      public virtual bool? DryRun { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("dryRun")>

      Public Overridable Property DryRun As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.JobConfiguration.DryRun*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dryRun
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.Extract
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfiguration.Extract
  id: Extract
  parent: Google.Apis.Bigquery.v2.Data.JobConfiguration
  langs:
  - csharp
  - vb
  name: Extract
  nameWithType: JobConfiguration.Extract
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.Extract
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Extract
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3369
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Pick one] Configures an extract job.'
  example: []
  syntax:
    content: >-
      [JsonProperty("extract")]

      public virtual JobConfigurationExtract Extract { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
    content.vb: >-
      <JsonProperty("extract")>

      Public Overridable Property Extract As JobConfigurationExtract
  overload: Google.Apis.Bigquery.v2.Data.JobConfiguration.Extract*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: extract
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.JobTimeoutMs
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfiguration.JobTimeoutMs
  id: JobTimeoutMs
  parent: Google.Apis.Bigquery.v2.Data.JobConfiguration
  langs:
  - csharp
  - vb
  name: JobTimeoutMs
  nameWithType: JobConfiguration.JobTimeoutMs
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.JobTimeoutMs
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: JobTimeoutMs
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3374
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] Job timeout in milliseconds. If this time limit is exceeded, BigQuery may attempt to

    terminate the job.
  example: []
  syntax:
    content: >-
      [JsonProperty("jobTimeoutMs")]

      public virtual long? JobTimeoutMs { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("jobTimeoutMs")>

      Public Overridable Property JobTimeoutMs As Long?
  overload: Google.Apis.Bigquery.v2.Data.JobConfiguration.JobTimeoutMs*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: jobTimeoutMs
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.Labels
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfiguration.Labels
  id: Labels
  parent: Google.Apis.Bigquery.v2.Data.JobConfiguration
  langs:
  - csharp
  - vb
  name: Labels
  nameWithType: JobConfiguration.Labels
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.Labels
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Labels
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3381
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    The labels associated with this job. You can use these to organize and group your jobs. Label keys

    and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters,

    underscores and dashes. International characters are allowed. Label values are optional. Label keys must

    start with a letter and each label in the list must have a different key.
  example: []
  syntax:
    content: >-
      [JsonProperty("labels")]

      public virtual IDictionary<string, string> Labels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: >-
      <JsonProperty("labels")>

      Public Overridable Property Labels As IDictionary(Of String, String)
  overload: Google.Apis.Bigquery.v2.Data.JobConfiguration.Labels*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: labels
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.Load
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfiguration.Load
  id: Load
  parent: Google.Apis.Bigquery.v2.Data.JobConfiguration
  langs:
  - csharp
  - vb
  name: Load
  nameWithType: JobConfiguration.Load
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.Load
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Load
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3385
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Pick one] Configures a load job.'
  example: []
  syntax:
    content: >-
      [JsonProperty("load")]

      public virtual JobConfigurationLoad Load { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.JobConfigurationLoad
    content.vb: >-
      <JsonProperty("load")>

      Public Overridable Property Load As JobConfigurationLoad
  overload: Google.Apis.Bigquery.v2.Data.JobConfiguration.Load*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: load
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.Query
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfiguration.Query
  id: Query
  parent: Google.Apis.Bigquery.v2.Data.JobConfiguration
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: JobConfiguration.Query
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.Query
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Query
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3389
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Pick one] Configures a query job.'
  example: []
  syntax:
    content: >-
      [JsonProperty("query")]

      public virtual JobConfigurationQuery Query { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
    content.vb: >-
      <JsonProperty("query")>

      Public Overridable Property Query As JobConfigurationQuery
  overload: Google.Apis.Bigquery.v2.Data.JobConfiguration.Query*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: query
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfiguration.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.JobConfiguration
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: JobConfiguration.ETag
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3393
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The ETag of the item.
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.JobConfiguration.ETag*
  implements:
  - Google.Apis.Requests.IDirectResponseSchema.ETag
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Requests.IDirectResponseSchema
  commentId: T:Google.Apis.Requests.IDirectResponseSchema
  parent: Google.Apis.Requests
  isExternal: true
  name: IDirectResponseSchema
  nameWithType: IDirectResponseSchema
  fullName: Google.Apis.Requests.IDirectResponseSchema
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: false
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.Copy*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfiguration.Copy
  isExternal: false
  name: Copy
  nameWithType: JobConfiguration.Copy
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.Copy
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationTableCopy
  commentId: T:Google.Apis.Bigquery.v2.Data.JobConfigurationTableCopy
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: JobConfigurationTableCopy
  nameWithType: JobConfigurationTableCopy
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationTableCopy
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.DryRun*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfiguration.DryRun
  isExternal: false
  name: DryRun
  nameWithType: JobConfiguration.DryRun
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.DryRun
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.Extract*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfiguration.Extract
  isExternal: false
  name: Extract
  nameWithType: JobConfiguration.Extract
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.Extract
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
  commentId: T:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: JobConfigurationExtract
  nameWithType: JobConfigurationExtract
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.JobTimeoutMs*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfiguration.JobTimeoutMs
  isExternal: false
  name: JobTimeoutMs
  nameWithType: JobConfiguration.JobTimeoutMs
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.JobTimeoutMs
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.Labels*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfiguration.Labels
  isExternal: false
  name: Labels
  nameWithType: JobConfiguration.Labels
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.Labels
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.Load*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfiguration.Load
  isExternal: false
  name: Load
  nameWithType: JobConfiguration.Load
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.Load
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationLoad
  commentId: T:Google.Apis.Bigquery.v2.Data.JobConfigurationLoad
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: JobConfigurationLoad
  nameWithType: JobConfigurationLoad
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationLoad
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.Query*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfiguration.Query
  isExternal: false
  name: Query
  nameWithType: JobConfiguration.Query
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.Query
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  commentId: T:Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: JobConfigurationQuery
  nameWithType: JobConfigurationQuery
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationQuery
- uid: Google.Apis.Bigquery.v2.Data.JobConfiguration.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfiguration.ETag
  isExternal: false
  name: ETag
  nameWithType: JobConfiguration.ETag
  fullName: Google.Apis.Bigquery.v2.Data.JobConfiguration.ETag
- uid: Google.Apis.Requests.IDirectResponseSchema.ETag
  commentId: P:Google.Apis.Requests.IDirectResponseSchema.ETag
  parent: Google.Apis.Requests.IDirectResponseSchema
  isExternal: true
  name: ETag
  nameWithType: IDirectResponseSchema.ETag
  fullName: Google.Apis.Requests.IDirectResponseSchema.ETag
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
