### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest
  commentId: T:Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest
  id: TableDataInsertAllRequest
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.ETag
  - Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.IgnoreUnknownValues
  - Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Kind
  - Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Rows
  - Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.SkipInvalidRows
  - Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.TemplateSuffix
  langs:
  - csharp
  - vb
  name: TableDataInsertAllRequest
  nameWithType: TableDataInsertAllRequest
  fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TableDataInsertAllRequest
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4239
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: 'public class TableDataInsertAllRequest : Requests.IDirectResponseSchema'
    content.vb: >-
      Public Class TableDataInsertAllRequest
          Inherits Requests.IDirectResponseSchema
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.IgnoreUnknownValues
  commentId: P:Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.IgnoreUnknownValues
  id: IgnoreUnknownValues
  parent: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest
  langs:
  - csharp
  - vb
  name: IgnoreUnknownValues
  nameWithType: TableDataInsertAllRequest.IgnoreUnknownValues
  fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.IgnoreUnknownValues
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IgnoreUnknownValues
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4243
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] Accept rows that contain values that do not match the schema. The unknown values are

    ignored. Default is false, which treats unknown values as errors.
  example: []
  syntax:
    content: public virtual bool ? IgnoreUnknownValues { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Overridable Property IgnoreUnknownValues As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.IgnoreUnknownValues*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Kind
  commentId: P:Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Kind
  id: Kind
  parent: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: TableDataInsertAllRequest.Kind
  fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Kind
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Kind
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4247
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The resource type of the response.
  example: []
  syntax:
    content: public virtual string Kind { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Kind As String
  overload: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Kind*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Rows
  commentId: P:Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Rows
  id: Rows
  parent: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest
  langs:
  - csharp
  - vb
  name: Rows
  nameWithType: TableDataInsertAllRequest.Rows
  fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Rows
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Rows
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4251
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The rows to insert.
  example: []
  syntax:
    content: public virtual IList<TableDataInsertAllRequest.RowsData> Rows { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.RowsData}
    content.vb: Public Overridable Property Rows As IList(Of TableDataInsertAllRequest.RowsData)
  overload: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Rows*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.SkipInvalidRows
  commentId: P:Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.SkipInvalidRows
  id: SkipInvalidRows
  parent: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest
  langs:
  - csharp
  - vb
  name: SkipInvalidRows
  nameWithType: TableDataInsertAllRequest.SkipInvalidRows
  fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.SkipInvalidRows
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: SkipInvalidRows
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4256
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] Insert all valid rows of a request, even if invalid rows exist. The default value is

    false, which causes the entire request to fail if any invalid rows exist.
  example: []
  syntax:
    content: public virtual bool ? SkipInvalidRows { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Overridable Property SkipInvalidRows As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.SkipInvalidRows*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.TemplateSuffix
  commentId: P:Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.TemplateSuffix
  id: TemplateSuffix
  parent: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest
  langs:
  - csharp
  - vb
  name: TemplateSuffix
  nameWithType: TableDataInsertAllRequest.TemplateSuffix
  fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.TemplateSuffix
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TemplateSuffix
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4263
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Experimental] If specified, treats the destination table as a base template, and inserts the rows

    into an instance table named &quot;{destination}{templateSuffix}&quot;. BigQuery will manage creation of the instance

    table, using the schema of the base template table. See https://cloud.google.com/bigquery/streaming-data-

    into-bigquery#template-tables for considerations when working with templates tables.
  example: []
  syntax:
    content: public virtual string TemplateSuffix { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property TemplateSuffix As String
  overload: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.TemplateSuffix*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: TableDataInsertAllRequest.ETag
  fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4267
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The ETag of the item.
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.ETag*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.IgnoreUnknownValues*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.IgnoreUnknownValues
  isExternal: false
  name: IgnoreUnknownValues
  nameWithType: TableDataInsertAllRequest.IgnoreUnknownValues
  fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.IgnoreUnknownValues
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Kind*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Kind
  isExternal: false
  name: Kind
  nameWithType: TableDataInsertAllRequest.Kind
  fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Kind
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Rows*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Rows
  isExternal: false
  name: Rows
  nameWithType: TableDataInsertAllRequest.Rows
  fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.Rows
- uid: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.RowsData}
  commentId: T:System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.RowsData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TableDataInsertAllRequest.RowsData>
  nameWithType: IList<TableDataInsertAllRequest.RowsData>
  fullName: System.Collections.Generic.IList<Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.RowsData>
  nameWithType.vb: IList(Of TableDataInsertAllRequest.RowsData)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.RowsData)
  name.vb: IList(Of TableDataInsertAllRequest.RowsData)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.RowsData
    name: TableDataInsertAllRequest.RowsData
    nameWithType: TableDataInsertAllRequest.RowsData
    fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.RowsData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.RowsData
    name: TableDataInsertAllRequest.RowsData
    nameWithType: TableDataInsertAllRequest.RowsData
    fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.RowsData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.SkipInvalidRows*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.SkipInvalidRows
  isExternal: false
  name: SkipInvalidRows
  nameWithType: TableDataInsertAllRequest.SkipInvalidRows
  fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.SkipInvalidRows
- uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.TemplateSuffix*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.TemplateSuffix
  isExternal: false
  name: TemplateSuffix
  nameWithType: TableDataInsertAllRequest.TemplateSuffix
  fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.TemplateSuffix
- uid: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.ETag
  isExternal: false
  name: ETag
  nameWithType: TableDataInsertAllRequest.ETag
  fullName: Google.Apis.Bigquery.v2.Data.TableDataInsertAllRequest.ETag
