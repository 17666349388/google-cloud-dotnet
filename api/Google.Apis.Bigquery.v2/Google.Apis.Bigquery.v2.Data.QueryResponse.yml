### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse
  commentId: T:Google.Apis.Bigquery.v2.Data.QueryResponse
  id: QueryResponse
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.QueryResponse.CacheHit
  - Google.Apis.Bigquery.v2.Data.QueryResponse.Errors
  - Google.Apis.Bigquery.v2.Data.QueryResponse.ETag
  - Google.Apis.Bigquery.v2.Data.QueryResponse.JobComplete
  - Google.Apis.Bigquery.v2.Data.QueryResponse.JobReference
  - Google.Apis.Bigquery.v2.Data.QueryResponse.Kind
  - Google.Apis.Bigquery.v2.Data.QueryResponse.NumDmlAffectedRows
  - Google.Apis.Bigquery.v2.Data.QueryResponse.PageToken
  - Google.Apis.Bigquery.v2.Data.QueryResponse.Rows
  - Google.Apis.Bigquery.v2.Data.QueryResponse.Schema
  - Google.Apis.Bigquery.v2.Data.QueryResponse.TotalBytesProcessed
  - Google.Apis.Bigquery.v2.Data.QueryResponse.TotalRows
  langs:
  - csharp
  - vb
  name: QueryResponse
  nameWithType: QueryResponse
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: QueryResponse
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4253
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: 'public class QueryResponse : IDirectResponseSchema'
    content.vb: >-
      Public Class QueryResponse
          Implements IDirectResponseSchema
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Requests.IDirectResponseSchema
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.CacheHit
  commentId: P:Google.Apis.Bigquery.v2.Data.QueryResponse.CacheHit
  id: CacheHit
  parent: Google.Apis.Bigquery.v2.Data.QueryResponse
  langs:
  - csharp
  - vb
  name: CacheHit
  nameWithType: QueryResponse.CacheHit
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.CacheHit
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CacheHit
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4256
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Whether the query result was fetched from the query cache.
  example: []
  syntax:
    content: >-
      [JsonProperty("cacheHit")]

      public virtual bool? CacheHit { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("cacheHit")>

      Public Overridable Property CacheHit As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.QueryResponse.CacheHit*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: cacheHit
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.Errors
  commentId: P:Google.Apis.Bigquery.v2.Data.QueryResponse.Errors
  id: Errors
  parent: Google.Apis.Bigquery.v2.Data.QueryResponse
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: QueryResponse.Errors
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.Errors
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Errors
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4262
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Output-only] The first errors or warnings encountered during the running of the job. The final

    message includes the number of errors that caused the process to stop. Errors here do not necessarily mean

    that the job has completed or was unsuccessful.
  example: []
  syntax:
    content: >-
      [JsonProperty("errors")]

      public virtual IList<ErrorProto> Errors { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.ErrorProto}
    content.vb: >-
      <JsonProperty("errors")>

      Public Overridable Property Errors As IList(Of ErrorProto)
  overload: Google.Apis.Bigquery.v2.Data.QueryResponse.Errors*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: errors
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.JobComplete
  commentId: P:Google.Apis.Bigquery.v2.Data.QueryResponse.JobComplete
  id: JobComplete
  parent: Google.Apis.Bigquery.v2.Data.QueryResponse
  langs:
  - csharp
  - vb
  name: JobComplete
  nameWithType: QueryResponse.JobComplete
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.JobComplete
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: JobComplete
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4267
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Whether the query has completed or not. If rows or totalRows are present, this will always be true.

    If this is false, totalRows will not be available.
  example: []
  syntax:
    content: >-
      [JsonProperty("jobComplete")]

      public virtual bool? JobComplete { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("jobComplete")>

      Public Overridable Property JobComplete As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.QueryResponse.JobComplete*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: jobComplete
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.JobReference
  commentId: P:Google.Apis.Bigquery.v2.Data.QueryResponse.JobReference
  id: JobReference
  parent: Google.Apis.Bigquery.v2.Data.QueryResponse
  langs:
  - csharp
  - vb
  name: JobReference
  nameWithType: QueryResponse.JobReference
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.JobReference
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: JobReference
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4274
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Reference to the Job that was created to run the query. This field will be present even if the

    original request timed out, in which case GetQueryResults can be used to read the results once the query has

    completed. Since this API only returns the first page of results, subsequent pages can be fetched via the

    same mechanism (GetQueryResults).
  example: []
  syntax:
    content: >-
      [JsonProperty("jobReference")]

      public virtual JobReference JobReference { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.JobReference
    content.vb: >-
      <JsonProperty("jobReference")>

      Public Overridable Property JobReference As JobReference
  overload: Google.Apis.Bigquery.v2.Data.QueryResponse.JobReference*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: jobReference
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.Kind
  commentId: P:Google.Apis.Bigquery.v2.Data.QueryResponse.Kind
  id: Kind
  parent: Google.Apis.Bigquery.v2.Data.QueryResponse
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: QueryResponse.Kind
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.Kind
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Kind
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4278
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The resource type.
  example: []
  syntax:
    content: >-
      [JsonProperty("kind")]

      public virtual string Kind { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("kind")>

      Public Overridable Property Kind As String
  overload: Google.Apis.Bigquery.v2.Data.QueryResponse.Kind*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: kind
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.NumDmlAffectedRows
  commentId: P:Google.Apis.Bigquery.v2.Data.QueryResponse.NumDmlAffectedRows
  id: NumDmlAffectedRows
  parent: Google.Apis.Bigquery.v2.Data.QueryResponse
  langs:
  - csharp
  - vb
  name: NumDmlAffectedRows
  nameWithType: QueryResponse.NumDmlAffectedRows
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.NumDmlAffectedRows
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NumDmlAffectedRows
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4283
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Output-only] The number of rows affected by a DML statement. Present only for DML statements

    INSERT, UPDATE or DELETE.
  example: []
  syntax:
    content: >-
      [JsonProperty("numDmlAffectedRows")]

      public virtual long? NumDmlAffectedRows { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("numDmlAffectedRows")>

      Public Overridable Property NumDmlAffectedRows As Long?
  overload: Google.Apis.Bigquery.v2.Data.QueryResponse.NumDmlAffectedRows*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: numDmlAffectedRows
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.PageToken
  commentId: P:Google.Apis.Bigquery.v2.Data.QueryResponse.PageToken
  id: PageToken
  parent: Google.Apis.Bigquery.v2.Data.QueryResponse
  langs:
  - csharp
  - vb
  name: PageToken
  nameWithType: QueryResponse.PageToken
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.PageToken
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: PageToken
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4287
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: A token used for paging results.
  example: []
  syntax:
    content: >-
      [JsonProperty("pageToken")]

      public virtual string PageToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("pageToken")>

      Public Overridable Property PageToken As String
  overload: Google.Apis.Bigquery.v2.Data.QueryResponse.PageToken*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: pageToken
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.Rows
  commentId: P:Google.Apis.Bigquery.v2.Data.QueryResponse.Rows
  id: Rows
  parent: Google.Apis.Bigquery.v2.Data.QueryResponse
  langs:
  - csharp
  - vb
  name: Rows
  nameWithType: QueryResponse.Rows
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.Rows
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Rows
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4292
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    An object with as many results as can be contained within the maximum permitted reply size. To get

    any additional rows, you can call GetQueryResults and specify the jobReference returned above.
  example: []
  syntax:
    content: >-
      [JsonProperty("rows")]

      public virtual IList<TableRow> Rows { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.TableRow}
    content.vb: >-
      <JsonProperty("rows")>

      Public Overridable Property Rows As IList(Of TableRow)
  overload: Google.Apis.Bigquery.v2.Data.QueryResponse.Rows*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: rows
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.Schema
  commentId: P:Google.Apis.Bigquery.v2.Data.QueryResponse.Schema
  id: Schema
  parent: Google.Apis.Bigquery.v2.Data.QueryResponse
  langs:
  - csharp
  - vb
  name: Schema
  nameWithType: QueryResponse.Schema
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.Schema
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Schema
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4296
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The schema of the results. Present only when the query completes successfully.
  example: []
  syntax:
    content: >-
      [JsonProperty("schema")]

      public virtual TableSchema Schema { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.TableSchema
    content.vb: >-
      <JsonProperty("schema")>

      Public Overridable Property Schema As TableSchema
  overload: Google.Apis.Bigquery.v2.Data.QueryResponse.Schema*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: schema
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.TotalBytesProcessed
  commentId: P:Google.Apis.Bigquery.v2.Data.QueryResponse.TotalBytesProcessed
  id: TotalBytesProcessed
  parent: Google.Apis.Bigquery.v2.Data.QueryResponse
  langs:
  - csharp
  - vb
  name: TotalBytesProcessed
  nameWithType: QueryResponse.TotalBytesProcessed
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.TotalBytesProcessed
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TotalBytesProcessed
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4301
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    The total number of bytes processed for this query. If this query was a dry run, this is the number

    of bytes that would be processed if the query were run.
  example: []
  syntax:
    content: >-
      [JsonProperty("totalBytesProcessed")]

      public virtual long? TotalBytesProcessed { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("totalBytesProcessed")>

      Public Overridable Property TotalBytesProcessed As Long?
  overload: Google.Apis.Bigquery.v2.Data.QueryResponse.TotalBytesProcessed*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: totalBytesProcessed
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.TotalRows
  commentId: P:Google.Apis.Bigquery.v2.Data.QueryResponse.TotalRows
  id: TotalRows
  parent: Google.Apis.Bigquery.v2.Data.QueryResponse
  langs:
  - csharp
  - vb
  name: TotalRows
  nameWithType: QueryResponse.TotalRows
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.TotalRows
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TotalRows
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4306
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    The total number of rows in the complete query result set, which can be more than the number of

    rows in this single page of results.
  example: []
  syntax:
    content: >-
      [JsonProperty("totalRows")]

      public virtual ulong? TotalRows { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.UInt64}
    content.vb: >-
      <JsonProperty("totalRows")>

      Public Overridable Property TotalRows As ULong?
  overload: Google.Apis.Bigquery.v2.Data.QueryResponse.TotalRows*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: totalRows
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.QueryResponse.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.QueryResponse
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: QueryResponse.ETag
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4310
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The ETag of the item.
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.QueryResponse.ETag*
  implements:
  - Google.Apis.Requests.IDirectResponseSchema.ETag
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Requests.IDirectResponseSchema
  commentId: T:Google.Apis.Requests.IDirectResponseSchema
  parent: Google.Apis.Requests
  isExternal: true
  name: IDirectResponseSchema
  nameWithType: IDirectResponseSchema
  fullName: Google.Apis.Requests.IDirectResponseSchema
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: false
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.CacheHit*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.QueryResponse.CacheHit
  isExternal: false
  name: CacheHit
  nameWithType: QueryResponse.CacheHit
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.CacheHit
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.Errors*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.QueryResponse.Errors
  isExternal: false
  name: Errors
  nameWithType: QueryResponse.Errors
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.Errors
- uid: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.ErrorProto}
  commentId: T:System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.ErrorProto}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ErrorProto>
  nameWithType: IList<ErrorProto>
  fullName: System.Collections.Generic.IList<Google.Apis.Bigquery.v2.Data.ErrorProto>
  nameWithType.vb: IList(Of ErrorProto)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Bigquery.v2.Data.ErrorProto)
  name.vb: IList(Of ErrorProto)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Bigquery.v2.Data.ErrorProto
    name: ErrorProto
    nameWithType: ErrorProto
    fullName: Google.Apis.Bigquery.v2.Data.ErrorProto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Bigquery.v2.Data.ErrorProto
    name: ErrorProto
    nameWithType: ErrorProto
    fullName: Google.Apis.Bigquery.v2.Data.ErrorProto
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.JobComplete*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.QueryResponse.JobComplete
  isExternal: false
  name: JobComplete
  nameWithType: QueryResponse.JobComplete
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.JobComplete
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.JobReference*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.QueryResponse.JobReference
  isExternal: false
  name: JobReference
  nameWithType: QueryResponse.JobReference
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.JobReference
- uid: Google.Apis.Bigquery.v2.Data.JobReference
  commentId: T:Google.Apis.Bigquery.v2.Data.JobReference
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: JobReference
  nameWithType: JobReference
  fullName: Google.Apis.Bigquery.v2.Data.JobReference
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.Kind*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.QueryResponse.Kind
  isExternal: false
  name: Kind
  nameWithType: QueryResponse.Kind
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.Kind
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.NumDmlAffectedRows*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.QueryResponse.NumDmlAffectedRows
  isExternal: false
  name: NumDmlAffectedRows
  nameWithType: QueryResponse.NumDmlAffectedRows
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.NumDmlAffectedRows
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.PageToken*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.QueryResponse.PageToken
  isExternal: false
  name: PageToken
  nameWithType: QueryResponse.PageToken
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.PageToken
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.Rows*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.QueryResponse.Rows
  isExternal: false
  name: Rows
  nameWithType: QueryResponse.Rows
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.Rows
- uid: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.TableRow}
  commentId: T:System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.TableRow}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TableRow>
  nameWithType: IList<TableRow>
  fullName: System.Collections.Generic.IList<Google.Apis.Bigquery.v2.Data.TableRow>
  nameWithType.vb: IList(Of TableRow)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Bigquery.v2.Data.TableRow)
  name.vb: IList(Of TableRow)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Bigquery.v2.Data.TableRow
    name: TableRow
    nameWithType: TableRow
    fullName: Google.Apis.Bigquery.v2.Data.TableRow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Bigquery.v2.Data.TableRow
    name: TableRow
    nameWithType: TableRow
    fullName: Google.Apis.Bigquery.v2.Data.TableRow
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.Schema*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.QueryResponse.Schema
  isExternal: false
  name: Schema
  nameWithType: QueryResponse.Schema
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.Schema
- uid: Google.Apis.Bigquery.v2.Data.TableSchema
  commentId: T:Google.Apis.Bigquery.v2.Data.TableSchema
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: TableSchema
  nameWithType: TableSchema
  fullName: Google.Apis.Bigquery.v2.Data.TableSchema
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.TotalBytesProcessed*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.QueryResponse.TotalBytesProcessed
  isExternal: false
  name: TotalBytesProcessed
  nameWithType: QueryResponse.TotalBytesProcessed
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.TotalBytesProcessed
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.TotalRows*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.QueryResponse.TotalRows
  isExternal: false
  name: TotalRows
  nameWithType: QueryResponse.TotalRows
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.TotalRows
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UInt64>
  nameWithType: Nullable<UInt64>
  fullName: System.Nullable<System.UInt64>
  nameWithType.vb: Nullable(Of UInt64)
  fullName.vb: System.Nullable(Of System.UInt64)
  name.vb: Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.QueryResponse.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.QueryResponse.ETag
  isExternal: false
  name: ETag
  nameWithType: QueryResponse.ETag
  fullName: Google.Apis.Bigquery.v2.Data.QueryResponse.ETag
- uid: Google.Apis.Requests.IDirectResponseSchema.ETag
  commentId: P:Google.Apis.Requests.IDirectResponseSchema.ETag
  parent: Google.Apis.Requests.IDirectResponseSchema
  isExternal: true
  name: ETag
  nameWithType: IDirectResponseSchema.ETag
  fullName: Google.Apis.Requests.IDirectResponseSchema.ETag
