### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics
  commentId: T:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics
  id: AggregateClassificationMetrics
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Accuracy
  - Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.ETag
  - Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.F1Score
  - Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.LogLoss
  - Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Precision
  - Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Recall
  - Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.RocAuc
  - Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Threshold
  langs:
  - csharp
  - vb
  name: AggregateClassificationMetrics
  nameWithType: AggregateClassificationMetrics
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AggregateClassificationMetrics
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3582
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Aggregate metrics for classification/classifier models. For multi-class models, the metrics are either

    macro-averaged or micro-averaged. When macro-averaged, the metrics are calculated for each label and then an

    unweighted average is taken of those values. When micro-averaged, the metric is calculated globally by counting

    the total number of correctly predicted rows.
  example: []
  syntax:
    content: 'public class AggregateClassificationMetrics : IDirectResponseSchema'
    content.vb: >-
      Public Class AggregateClassificationMetrics
          Implements IDirectResponseSchema
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Requests.IDirectResponseSchema
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Accuracy
  commentId: P:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Accuracy
  id: Accuracy
  parent: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics
  langs:
  - csharp
  - vb
  name: Accuracy
  nameWithType: AggregateClassificationMetrics.Accuracy
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Accuracy
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Accuracy
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3586
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Accuracy is the fraction of predictions given the correct label. For multiclass this is a micro-

    averaged metric.
  example: []
  syntax:
    content: >-
      [JsonProperty("accuracy")]

      public virtual double? Accuracy { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("accuracy")>

      Public Overridable Property Accuracy As Double?
  overload: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Accuracy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: accuracy
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.F1Score
  commentId: P:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.F1Score
  id: F1Score
  parent: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics
  langs:
  - csharp
  - vb
  name: F1Score
  nameWithType: AggregateClassificationMetrics.F1Score
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.F1Score
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: F1Score
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3591
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    The F1 score is an average of recall and precision. For multiclass this is a macro-averaged

    metric.
  example: []
  syntax:
    content: >-
      [JsonProperty("f1Score")]

      public virtual double? F1Score { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("f1Score")>

      Public Overridable Property F1Score As Double?
  overload: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.F1Score*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: f1Score
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.LogLoss
  commentId: P:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.LogLoss
  id: LogLoss
  parent: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics
  langs:
  - csharp
  - vb
  name: LogLoss
  nameWithType: AggregateClassificationMetrics.LogLoss
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.LogLoss
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LogLoss
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3595
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Logarithmic Loss. For multiclass this is a macro-averaged metric.
  example: []
  syntax:
    content: >-
      [JsonProperty("logLoss")]

      public virtual double? LogLoss { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("logLoss")>

      Public Overridable Property LogLoss As Double?
  overload: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.LogLoss*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: logLoss
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Precision
  commentId: P:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Precision
  id: Precision
  parent: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics
  langs:
  - csharp
  - vb
  name: Precision
  nameWithType: AggregateClassificationMetrics.Precision
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Precision
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Precision
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3600
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Precision is the fraction of actual positive predictions that had positive actual labels. For

    multiclass this is a macro-averaged metric treating each class as a binary classifier.
  example: []
  syntax:
    content: >-
      [JsonProperty("precision")]

      public virtual double? Precision { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("precision")>

      Public Overridable Property Precision As Double?
  overload: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Precision*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: precision
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Recall
  commentId: P:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Recall
  id: Recall
  parent: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics
  langs:
  - csharp
  - vb
  name: Recall
  nameWithType: AggregateClassificationMetrics.Recall
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Recall
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Recall
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3605
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Recall is the fraction of actual positive labels that were given a positive prediction. For

    multiclass this is a macro-averaged metric.
  example: []
  syntax:
    content: >-
      [JsonProperty("recall")]

      public virtual double? Recall { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("recall")>

      Public Overridable Property Recall As Double?
  overload: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Recall*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: recall
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.RocAuc
  commentId: P:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.RocAuc
  id: RocAuc
  parent: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics
  langs:
  - csharp
  - vb
  name: RocAuc
  nameWithType: AggregateClassificationMetrics.RocAuc
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.RocAuc
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RocAuc
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3609
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Area Under a ROC Curve. For multiclass this is a macro-averaged metric.
  example: []
  syntax:
    content: >-
      [JsonProperty("rocAuc")]

      public virtual double? RocAuc { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("rocAuc")>

      Public Overridable Property RocAuc As Double?
  overload: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.RocAuc*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: rocAuc
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Threshold
  commentId: P:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Threshold
  id: Threshold
  parent: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics
  langs:
  - csharp
  - vb
  name: Threshold
  nameWithType: AggregateClassificationMetrics.Threshold
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Threshold
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Threshold
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3614
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Threshold at which the metrics are computed. For binary classification models this is the positive

    class threshold. For multi-class classfication models this is the confidence threshold.
  example: []
  syntax:
    content: >-
      [JsonProperty("threshold")]

      public virtual double? Threshold { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("threshold")>

      Public Overridable Property Threshold As Double?
  overload: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Threshold*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: threshold
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: AggregateClassificationMetrics.ETag
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3618
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The ETag of the item.
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.ETag*
  implements:
  - Google.Apis.Requests.IDirectResponseSchema.ETag
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Requests.IDirectResponseSchema
  commentId: T:Google.Apis.Requests.IDirectResponseSchema
  parent: Google.Apis.Requests
  isExternal: true
  name: IDirectResponseSchema
  nameWithType: IDirectResponseSchema
  fullName: Google.Apis.Requests.IDirectResponseSchema
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: true
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Accuracy*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Accuracy
  name: Accuracy
  nameWithType: AggregateClassificationMetrics.Accuracy
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Accuracy
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.F1Score*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.F1Score
  name: F1Score
  nameWithType: AggregateClassificationMetrics.F1Score
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.F1Score
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.LogLoss*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.LogLoss
  name: LogLoss
  nameWithType: AggregateClassificationMetrics.LogLoss
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.LogLoss
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Precision*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Precision
  name: Precision
  nameWithType: AggregateClassificationMetrics.Precision
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Precision
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Recall*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Recall
  name: Recall
  nameWithType: AggregateClassificationMetrics.Recall
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Recall
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.RocAuc*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.RocAuc
  name: RocAuc
  nameWithType: AggregateClassificationMetrics.RocAuc
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.RocAuc
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Threshold*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Threshold
  name: Threshold
  nameWithType: AggregateClassificationMetrics.Threshold
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.Threshold
- uid: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.ETag
  name: ETag
  nameWithType: AggregateClassificationMetrics.ETag
  fullName: Google.Apis.Bigquery.v2.Data.AggregateClassificationMetrics.ETag
- uid: Google.Apis.Requests.IDirectResponseSchema.ETag
  commentId: P:Google.Apis.Requests.IDirectResponseSchema.ETag
  parent: Google.Apis.Requests.IDirectResponseSchema
  isExternal: true
  name: ETag
  nameWithType: IDirectResponseSchema.ETag
  fullName: Google.Apis.Requests.IDirectResponseSchema.ETag
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
