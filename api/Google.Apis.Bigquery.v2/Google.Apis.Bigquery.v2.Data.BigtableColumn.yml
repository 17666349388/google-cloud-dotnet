### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn
  commentId: T:Google.Apis.Bigquery.v2.Data.BigtableColumn
  id: BigtableColumn
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.BigtableColumn.Encoding
  - Google.Apis.Bigquery.v2.Data.BigtableColumn.ETag
  - Google.Apis.Bigquery.v2.Data.BigtableColumn.FieldName
  - Google.Apis.Bigquery.v2.Data.BigtableColumn.OnlyReadLatest
  - Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierEncoded
  - Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierString
  - Google.Apis.Bigquery.v2.Data.BigtableColumn.Type
  langs:
  - csharp
  - vb
  name: BigtableColumn
  nameWithType: BigtableColumn
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BigtableColumn
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2473
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: 'public class BigtableColumn : Requests.IDirectResponseSchema'
    content.vb: >-
      Public Class BigtableColumn
          Inherits Requests.IDirectResponseSchema
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn.Encoding
  commentId: P:Google.Apis.Bigquery.v2.Data.BigtableColumn.Encoding
  id: Encoding
  parent: Google.Apis.Bigquery.v2.Data.BigtableColumn
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: BigtableColumn.Encoding
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn.Encoding
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Encoding
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2479
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] The encoding of the values when the type is not STRING. Acceptable encoding values are:

    TEXT - indicates values are alphanumeric text strings. BINARY - indicates values are encoded using HBase

    Bytes.toBytes family of functions. 'encoding' can also be set at the column family level. However, the

    setting at this level takes precedence if 'encoding' is set at both levels.
  example: []
  syntax:
    content: public virtual string Encoding { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Encoding As String
  overload: Google.Apis.Bigquery.v2.Data.BigtableColumn.Encoding*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn.FieldName
  commentId: P:Google.Apis.Bigquery.v2.Data.BigtableColumn.FieldName
  id: FieldName
  parent: Google.Apis.Bigquery.v2.Data.BigtableColumn
  langs:
  - csharp
  - vb
  name: FieldName
  nameWithType: BigtableColumn.FieldName
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn.FieldName
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: FieldName
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2485
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] If the qualifier is not a valid BigQuery field identifier i.e. does not match

    [a-zA-Z][a-zA-Z0-9_]*, a valid identifier must be provided as the column field name and is used as field

    name in queries.
  example: []
  syntax:
    content: public virtual string FieldName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property FieldName As String
  overload: Google.Apis.Bigquery.v2.Data.BigtableColumn.FieldName*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn.OnlyReadLatest
  commentId: P:Google.Apis.Bigquery.v2.Data.BigtableColumn.OnlyReadLatest
  id: OnlyReadLatest
  parent: Google.Apis.Bigquery.v2.Data.BigtableColumn
  langs:
  - csharp
  - vb
  name: OnlyReadLatest
  nameWithType: BigtableColumn.OnlyReadLatest
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn.OnlyReadLatest
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: OnlyReadLatest
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2491
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] If this is set, only the latest version of value in this column are exposed.

    'onlyReadLatest' can also be set at the column family level. However, the setting at this level takes

    precedence if 'onlyReadLatest' is set at both levels.
  example: []
  syntax:
    content: public virtual System.Nullable<bool> OnlyReadLatest { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Overridable Property OnlyReadLatest As System.Nullable(Of Boolean)
  overload: Google.Apis.Bigquery.v2.Data.BigtableColumn.OnlyReadLatest*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierEncoded
  commentId: P:Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierEncoded
  id: QualifierEncoded
  parent: Google.Apis.Bigquery.v2.Data.BigtableColumn
  langs:
  - csharp
  - vb
  name: QualifierEncoded
  nameWithType: BigtableColumn.QualifierEncoded
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierEncoded
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: QualifierEncoded
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2500
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Required] Qualifier of the column. Columns in the parent column family that has this exact

    qualifier are exposed as . field. If the qualifier is valid UTF-8 string, it can be specified in the

    qualifier_string field. Otherwise, a base-64 encoded value must be set to qualifier_encoded. The column

    field name is the same as the column qualifier. However, if the qualifier is not a valid BigQuery field

    identifier i.e. does not match [a-zA-Z][a-zA-Z0-9_]*, a valid identifier must be provided as

    field_name.
  example: []
  syntax:
    content: public virtual string QualifierEncoded { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property QualifierEncoded As String
  overload: Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierEncoded*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierString
  commentId: P:Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierString
  id: QualifierString
  parent: Google.Apis.Bigquery.v2.Data.BigtableColumn
  langs:
  - csharp
  - vb
  name: QualifierString
  nameWithType: BigtableColumn.QualifierString
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierString
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: QualifierString
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2503
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: public virtual string QualifierString { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property QualifierString As String
  overload: Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierString*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn.Type
  commentId: P:Google.Apis.Bigquery.v2.Data.BigtableColumn.Type
  id: Type
  parent: Google.Apis.Bigquery.v2.Data.BigtableColumn
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: BigtableColumn.Type
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn.Type
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Type
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2511
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] The type to convert the value in cells of this column. The values are expected to be

    encoded using HBase Bytes.toBytes function when using the BINARY encoding value. Following BigQuery types

    are allowed (case-sensitive) - BYTES STRING INTEGER FLOAT BOOLEAN Default type is BYTES. 'type' can also be

    set at the column family level. However, the setting at this level takes precedence if 'type' is set at both

    levels.
  example: []
  syntax:
    content: public virtual string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Type As String
  overload: Google.Apis.Bigquery.v2.Data.BigtableColumn.Type*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.BigtableColumn.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.BigtableColumn
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: BigtableColumn.ETag
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2515
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The ETag of the item.
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.BigtableColumn.ETag*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn.Encoding*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BigtableColumn.Encoding
  isExternal: false
  name: Encoding
  nameWithType: BigtableColumn.Encoding
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn.Encoding
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn.FieldName*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BigtableColumn.FieldName
  isExternal: false
  name: FieldName
  nameWithType: BigtableColumn.FieldName
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn.FieldName
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn.OnlyReadLatest*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BigtableColumn.OnlyReadLatest
  isExternal: false
  name: OnlyReadLatest
  nameWithType: BigtableColumn.OnlyReadLatest
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn.OnlyReadLatest
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: System.Nullable<Boolean>
  nameWithType: System.Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: System.Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: System.Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: System.Nullable<>
  nameWithType: System.Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: System.Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: System.Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierEncoded*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierEncoded
  isExternal: false
  name: QualifierEncoded
  nameWithType: BigtableColumn.QualifierEncoded
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierEncoded
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierString*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierString
  isExternal: false
  name: QualifierString
  nameWithType: BigtableColumn.QualifierString
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn.QualifierString
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn.Type*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BigtableColumn.Type
  isExternal: false
  name: Type
  nameWithType: BigtableColumn.Type
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn.Type
- uid: Google.Apis.Bigquery.v2.Data.BigtableColumn.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.BigtableColumn.ETag
  isExternal: false
  name: ETag
  nameWithType: BigtableColumn.ETag
  fullName: Google.Apis.Bigquery.v2.Data.BigtableColumn.ETag
