### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema
  commentId: T:Google.Apis.Bigquery.v2.Data.TableFieldSchema
  id: TableFieldSchema
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.TableFieldSchema.Description
  - Google.Apis.Bigquery.v2.Data.TableFieldSchema.ETag
  - Google.Apis.Bigquery.v2.Data.TableFieldSchema.Fields
  - Google.Apis.Bigquery.v2.Data.TableFieldSchema.Mode
  - Google.Apis.Bigquery.v2.Data.TableFieldSchema.Name
  - Google.Apis.Bigquery.v2.Data.TableFieldSchema.Type
  langs:
  - csharp
  - vb
  name: TableFieldSchema
  nameWithType: TableFieldSchema
  fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TableFieldSchema
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4581
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: 'public class TableFieldSchema : IDirectResponseSchema'
    content.vb: >-
      Public Class TableFieldSchema
          Implements IDirectResponseSchema
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Requests.IDirectResponseSchema
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Description
  commentId: P:Google.Apis.Bigquery.v2.Data.TableFieldSchema.Description
  id: Description
  parent: Google.Apis.Bigquery.v2.Data.TableFieldSchema
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: TableFieldSchema.Description
  fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Description
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Description
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4584
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Optional] The field description. The maximum length is 1,024 characters.'
  example: []
  syntax:
    content: >-
      [JsonProperty("description")]

      public virtual string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("description")>

      Public Overridable Property Description As String
  overload: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Description*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: description
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Fields
  commentId: P:Google.Apis.Bigquery.v2.Data.TableFieldSchema.Fields
  id: Fields
  parent: Google.Apis.Bigquery.v2.Data.TableFieldSchema
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: TableFieldSchema.Fields
  fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Fields
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Fields
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4588
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Optional] Describes the nested schema fields if the type property is set to RECORD.'
  example: []
  syntax:
    content: >-
      [JsonProperty("fields")]

      public virtual IList<TableFieldSchema> Fields { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.TableFieldSchema}
    content.vb: >-
      <JsonProperty("fields")>

      Public Overridable Property Fields As IList(Of TableFieldSchema)
  overload: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Fields*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fields
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Mode
  commentId: P:Google.Apis.Bigquery.v2.Data.TableFieldSchema.Mode
  id: Mode
  parent: Google.Apis.Bigquery.v2.Data.TableFieldSchema
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: TableFieldSchema.Mode
  fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Mode
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Mode
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4593
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] The field mode. Possible values include NULLABLE, REQUIRED and REPEATED. The default

    value is NULLABLE.
  example: []
  syntax:
    content: >-
      [JsonProperty("mode")]

      public virtual string Mode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("mode")>

      Public Overridable Property Mode As String
  overload: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Mode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: mode
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Name
  commentId: P:Google.Apis.Bigquery.v2.Data.TableFieldSchema.Name
  id: Name
  parent: Google.Apis.Bigquery.v2.Data.TableFieldSchema
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TableFieldSchema.Name
  fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Name
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Name
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4598
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Required] The field name. The name must contain only letters (a-z, A-Z), numbers (0-9), or

    underscores (_), and must start with a letter or underscore. The maximum length is 128 characters.
  example: []
  syntax:
    content: >-
      [JsonProperty("name")]

      public virtual string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("name")>

      Public Overridable Property Name As String
  overload: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Type
  commentId: P:Google.Apis.Bigquery.v2.Data.TableFieldSchema.Type
  id: Type
  parent: Google.Apis.Bigquery.v2.Data.TableFieldSchema
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: TableFieldSchema.Type
  fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Type
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Type
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4605
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Required] The field data type. Possible values include STRING, BYTES, INTEGER, INT64 (same as

    INTEGER), FLOAT, FLOAT64 (same as FLOAT), BOOLEAN, BOOL (same as BOOLEAN), TIMESTAMP, DATE, TIME, DATETIME,

    RECORD (where RECORD indicates that the field contains a nested schema) or STRUCT (same as

    RECORD).
  example: []
  syntax:
    content: >-
      [JsonProperty("type")]

      public virtual string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("type")>

      Public Overridable Property Type As String
  overload: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.TableFieldSchema.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.TableFieldSchema
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: TableFieldSchema.ETag
  fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4609
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The ETag of the item.
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.TableFieldSchema.ETag*
  implements:
  - Google.Apis.Requests.IDirectResponseSchema.ETag
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Requests.IDirectResponseSchema
  commentId: T:Google.Apis.Requests.IDirectResponseSchema
  parent: Google.Apis.Requests
  isExternal: true
  name: IDirectResponseSchema
  nameWithType: IDirectResponseSchema
  fullName: Google.Apis.Requests.IDirectResponseSchema
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: false
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Description*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableFieldSchema.Description
  isExternal: false
  name: Description
  nameWithType: TableFieldSchema.Description
  fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Fields*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableFieldSchema.Fields
  isExternal: false
  name: Fields
  nameWithType: TableFieldSchema.Fields
  fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Fields
- uid: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.TableFieldSchema}
  commentId: T:System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.TableFieldSchema}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TableFieldSchema>
  nameWithType: IList<TableFieldSchema>
  fullName: System.Collections.Generic.IList<Google.Apis.Bigquery.v2.Data.TableFieldSchema>
  nameWithType.vb: IList(Of TableFieldSchema)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Bigquery.v2.Data.TableFieldSchema)
  name.vb: IList(Of TableFieldSchema)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema
    name: TableFieldSchema
    nameWithType: TableFieldSchema
    fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema
    name: TableFieldSchema
    nameWithType: TableFieldSchema
    fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Mode*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableFieldSchema.Mode
  isExternal: false
  name: Mode
  nameWithType: TableFieldSchema.Mode
  fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Mode
- uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Name*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableFieldSchema.Name
  isExternal: false
  name: Name
  nameWithType: TableFieldSchema.Name
  fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Name
- uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Type*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableFieldSchema.Type
  isExternal: false
  name: Type
  nameWithType: TableFieldSchema.Type
  fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema.Type
- uid: Google.Apis.Bigquery.v2.Data.TableFieldSchema.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableFieldSchema.ETag
  isExternal: false
  name: ETag
  nameWithType: TableFieldSchema.ETag
  fullName: Google.Apis.Bigquery.v2.Data.TableFieldSchema.ETag
- uid: Google.Apis.Requests.IDirectResponseSchema.ETag
  commentId: P:Google.Apis.Requests.IDirectResponseSchema.ETag
  parent: Google.Apis.Requests.IDirectResponseSchema
  isExternal: true
  name: ETag
  nameWithType: IDirectResponseSchema.ETag
  fullName: Google.Apis.Requests.IDirectResponseSchema.ETag
