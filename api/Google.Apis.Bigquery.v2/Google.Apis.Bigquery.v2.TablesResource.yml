### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.TablesResource
  commentId: T:Google.Apis.Bigquery.v2.TablesResource
  id: TablesResource
  parent: Google.Apis.Bigquery.v2
  children:
  - Google.Apis.Bigquery.v2.TablesResource.#ctor(Google.Apis.Services.IClientService)
  - Google.Apis.Bigquery.v2.TablesResource.Delete(System.String,System.String,System.String)
  - Google.Apis.Bigquery.v2.TablesResource.Get(System.String,System.String,System.String)
  - Google.Apis.Bigquery.v2.TablesResource.Insert(Google.Apis.Bigquery.v2.Data.Table,System.String,System.String)
  - Google.Apis.Bigquery.v2.TablesResource.List(System.String,System.String)
  - Google.Apis.Bigquery.v2.TablesResource.Patch(Google.Apis.Bigquery.v2.Data.Table,System.String,System.String,System.String)
  - Google.Apis.Bigquery.v2.TablesResource.Update(Google.Apis.Bigquery.v2.Data.Table,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: TablesResource
  nameWithType: TablesResource
  fullName: Google.Apis.Bigquery.v2.TablesResource
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TablesResource
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2969
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: The &quot;tables&quot; collection of methods.
  example: []
  syntax:
    content: public class TablesResource
    content.vb: Public Class TablesResource
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.TablesResource.#ctor(Google.Apis.Services.IClientService)
  commentId: M:Google.Apis.Bigquery.v2.TablesResource.#ctor(Google.Apis.Services.IClientService)
  id: '#ctor(Google.Apis.Services.IClientService)'
  parent: Google.Apis.Bigquery.v2.TablesResource
  langs:
  - csharp
  - vb
  name: TablesResource(IClientService)
  nameWithType: TablesResource.TablesResource(IClientService)
  fullName: Google.Apis.Bigquery.v2.TablesResource.TablesResource(Google.Apis.Services.IClientService)
  type: Constructor
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2977
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Constructs a new resource.
  example: []
  syntax:
    content: public TablesResource(IClientService service)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
    content.vb: Public Sub New(service As IClientService)
  overload: Google.Apis.Bigquery.v2.TablesResource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Bigquery.v2.TablesResource.Delete(System.String,System.String,System.String)
  commentId: M:Google.Apis.Bigquery.v2.TablesResource.Delete(System.String,System.String,System.String)
  id: Delete(System.String,System.String,System.String)
  parent: Google.Apis.Bigquery.v2.TablesResource
  langs:
  - csharp
  - vb
  name: Delete(String, String, String)
  nameWithType: TablesResource.Delete(String, String, String)
  fullName: Google.Apis.Bigquery.v2.TablesResource.Delete(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Delete
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2990
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: >-
    Deletes the table specified by tableId from the dataset. If the table contains data, all the data

    will be deleted.
  example: []
  syntax:
    content: public virtual TablesResource.DeleteRequest Delete(string projectId, string datasetId, string tableId)
    parameters:
    - id: projectId
      type: System.String
      description: Project ID of the table to delete
    - id: datasetId
      type: System.String
      description: >-
        Dataset ID of the

        table to delete
    - id: tableId
      type: System.String
      description: Table ID of the table to delete
    return:
      type: Google.Apis.Bigquery.v2.TablesResource.DeleteRequest
    content.vb: Public Overridable Function Delete(projectId As String, datasetId As String, tableId As String) As TablesResource.DeleteRequest
  overload: Google.Apis.Bigquery.v2.TablesResource.Delete*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.TablesResource.Get(System.String,System.String,System.String)
  commentId: M:Google.Apis.Bigquery.v2.TablesResource.Get(System.String,System.String,System.String)
  id: Get(System.String,System.String,System.String)
  parent: Google.Apis.Bigquery.v2.TablesResource
  langs:
  - csharp
  - vb
  name: Get(String, String, String)
  nameWithType: TablesResource.Get(String, String, String)
  fullName: Google.Apis.Bigquery.v2.TablesResource.Get(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Get
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3083
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: >-
    Gets the specified table resource by table ID. This method does not return the data in the table,

    it only returns the table resource, which describes the structure of this table.
  example: []
  syntax:
    content: public virtual TablesResource.GetRequest Get(string projectId, string datasetId, string tableId)
    parameters:
    - id: projectId
      type: System.String
      description: Project ID of the requested table
    - id: datasetId
      type: System.String
      description: >-
        Dataset ID of the

        requested table
    - id: tableId
      type: System.String
      description: Table ID of the requested table
    return:
      type: Google.Apis.Bigquery.v2.TablesResource.GetRequest
    content.vb: Public Overridable Function Get(projectId As String, datasetId As String, tableId As String) As TablesResource.GetRequest
  overload: Google.Apis.Bigquery.v2.TablesResource.Get*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.TablesResource.Insert(Google.Apis.Bigquery.v2.Data.Table,System.String,System.String)
  commentId: M:Google.Apis.Bigquery.v2.TablesResource.Insert(Google.Apis.Bigquery.v2.Data.Table,System.String,System.String)
  id: Insert(Google.Apis.Bigquery.v2.Data.Table,System.String,System.String)
  parent: Google.Apis.Bigquery.v2.TablesResource
  langs:
  - csharp
  - vb
  name: Insert(Table, String, String)
  nameWithType: TablesResource.Insert(Table, String, String)
  fullName: Google.Apis.Bigquery.v2.TablesResource.Insert(Google.Apis.Bigquery.v2.Data.Table, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Insert
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3188
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Creates a new, empty table in the dataset.
  example: []
  syntax:
    content: public virtual TablesResource.InsertRequest Insert(Table body, string projectId, string datasetId)
    parameters:
    - id: body
      type: Google.Apis.Bigquery.v2.Data.Table
      description: The body of the request.
    - id: projectId
      type: System.String
      description: Project ID of the new table
    - id: datasetId
      type: System.String
      description: >-
        Dataset ID of the new

        table
    return:
      type: Google.Apis.Bigquery.v2.TablesResource.InsertRequest
    content.vb: Public Overridable Function Insert(body As Table, projectId As String, datasetId As String) As TablesResource.InsertRequest
  overload: Google.Apis.Bigquery.v2.TablesResource.Insert*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.TablesResource.List(System.String,System.String)
  commentId: M:Google.Apis.Bigquery.v2.TablesResource.List(System.String,System.String)
  id: List(System.String,System.String)
  parent: Google.Apis.Bigquery.v2.TablesResource
  langs:
  - csharp
  - vb
  name: List(String, String)
  nameWithType: TablesResource.List(String, String)
  fullName: Google.Apis.Bigquery.v2.TablesResource.List(System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: List
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3271
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Lists all tables in the specified dataset. Requires the READER dataset role.
  example: []
  syntax:
    content: public virtual TablesResource.ListRequest List(string projectId, string datasetId)
    parameters:
    - id: projectId
      type: System.String
      description: Project ID of the tables to list
    - id: datasetId
      type: System.String
      description: >-
        Dataset ID of the

        tables to list
    return:
      type: Google.Apis.Bigquery.v2.TablesResource.ListRequest
    content.vb: Public Overridable Function List(projectId As String, datasetId As String) As TablesResource.ListRequest
  overload: Google.Apis.Bigquery.v2.TablesResource.List*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.TablesResource.Patch(Google.Apis.Bigquery.v2.Data.Table,System.String,System.String,System.String)
  commentId: M:Google.Apis.Bigquery.v2.TablesResource.Patch(Google.Apis.Bigquery.v2.Data.Table,System.String,System.String,System.String)
  id: Patch(Google.Apis.Bigquery.v2.Data.Table,System.String,System.String,System.String)
  parent: Google.Apis.Bigquery.v2.TablesResource
  langs:
  - csharp
  - vb
  name: Patch(Table, String, String, String)
  nameWithType: TablesResource.Patch(Table, String, String, String)
  fullName: Google.Apis.Bigquery.v2.TablesResource.Patch(Google.Apis.Bigquery.v2.Data.Table, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Patch
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3377
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: >-
    Updates information in an existing table. The update method replaces the entire table resource,

    whereas the patch method only replaces fields that are provided in the submitted table resource. This method

    supports patch semantics.
  example: []
  syntax:
    content: public virtual TablesResource.PatchRequest Patch(Table body, string projectId, string datasetId, string tableId)
    parameters:
    - id: body
      type: Google.Apis.Bigquery.v2.Data.Table
      description: The body of the request.
    - id: projectId
      type: System.String
      description: Project ID of the table to update
    - id: datasetId
      type: System.String
      description: >-
        Dataset ID of the

        table to update
    - id: tableId
      type: System.String
      description: Table ID of the table to update
    return:
      type: Google.Apis.Bigquery.v2.TablesResource.PatchRequest
    content.vb: Public Overridable Function Patch(body As Table, projectId As String, datasetId As String, tableId As String) As TablesResource.PatchRequest
  overload: Google.Apis.Bigquery.v2.TablesResource.Patch*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.TablesResource.Update(Google.Apis.Bigquery.v2.Data.Table,System.String,System.String,System.String)
  commentId: M:Google.Apis.Bigquery.v2.TablesResource.Update(Google.Apis.Bigquery.v2.Data.Table,System.String,System.String,System.String)
  id: Update(Google.Apis.Bigquery.v2.Data.Table,System.String,System.String,System.String)
  parent: Google.Apis.Bigquery.v2.TablesResource
  langs:
  - csharp
  - vb
  name: Update(Table, String, String, String)
  nameWithType: TablesResource.Update(Table, String, String, String)
  fullName: Google.Apis.Bigquery.v2.TablesResource.Update(Google.Apis.Bigquery.v2.Data.Table, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Update
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3479
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: >-
    Updates information in an existing table. The update method replaces the entire table resource,

    whereas the patch method only replaces fields that are provided in the submitted table resource.
  example: []
  syntax:
    content: public virtual TablesResource.UpdateRequest Update(Table body, string projectId, string datasetId, string tableId)
    parameters:
    - id: body
      type: Google.Apis.Bigquery.v2.Data.Table
      description: The body of the request.
    - id: projectId
      type: System.String
      description: Project ID of the table to update
    - id: datasetId
      type: System.String
      description: >-
        Dataset ID of the

        table to update
    - id: tableId
      type: System.String
      description: Table ID of the table to update
    return:
      type: Google.Apis.Bigquery.v2.TablesResource.UpdateRequest
    content.vb: Public Overridable Function Update(body As Table, projectId As String, datasetId As String, tableId As String) As TablesResource.UpdateRequest
  overload: Google.Apis.Bigquery.v2.TablesResource.Update*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2
  commentId: N:Google.Apis.Bigquery.v2
  name: Google.Apis.Bigquery.v2
  nameWithType: Google.Apis.Bigquery.v2
  fullName: Google.Apis.Bigquery.v2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Bigquery.v2.TablesResource.#ctor*
  commentId: Overload:Google.Apis.Bigquery.v2.TablesResource.#ctor
  name: TablesResource
  nameWithType: TablesResource.TablesResource
  fullName: Google.Apis.Bigquery.v2.TablesResource.TablesResource
- uid: Google.Apis.Services.IClientService
  commentId: T:Google.Apis.Services.IClientService
  parent: Google.Apis.Services
  isExternal: true
  name: IClientService
  nameWithType: IClientService
  fullName: Google.Apis.Services.IClientService
- uid: Google.Apis.Services
  commentId: N:Google.Apis.Services
  isExternal: true
  name: Google.Apis.Services
  nameWithType: Google.Apis.Services
  fullName: Google.Apis.Services
- uid: Google.Apis.Bigquery.v2.TablesResource.Delete*
  commentId: Overload:Google.Apis.Bigquery.v2.TablesResource.Delete
  name: Delete
  nameWithType: TablesResource.Delete
  fullName: Google.Apis.Bigquery.v2.TablesResource.Delete
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.TablesResource.DeleteRequest
  commentId: T:Google.Apis.Bigquery.v2.TablesResource.DeleteRequest
  parent: Google.Apis.Bigquery.v2
  name: TablesResource.DeleteRequest
  nameWithType: TablesResource.DeleteRequest
  fullName: Google.Apis.Bigquery.v2.TablesResource.DeleteRequest
- uid: Google.Apis.Bigquery.v2.TablesResource.Get*
  commentId: Overload:Google.Apis.Bigquery.v2.TablesResource.Get
  name: Get
  nameWithType: TablesResource.Get
  fullName: Google.Apis.Bigquery.v2.TablesResource.Get
- uid: Google.Apis.Bigquery.v2.TablesResource.GetRequest
  commentId: T:Google.Apis.Bigquery.v2.TablesResource.GetRequest
  parent: Google.Apis.Bigquery.v2
  name: TablesResource.GetRequest
  nameWithType: TablesResource.GetRequest
  fullName: Google.Apis.Bigquery.v2.TablesResource.GetRequest
- uid: Google.Apis.Bigquery.v2.TablesResource.Insert*
  commentId: Overload:Google.Apis.Bigquery.v2.TablesResource.Insert
  name: Insert
  nameWithType: TablesResource.Insert
  fullName: Google.Apis.Bigquery.v2.TablesResource.Insert
- uid: Google.Apis.Bigquery.v2.Data.Table
  commentId: T:Google.Apis.Bigquery.v2.Data.Table
  parent: Google.Apis.Bigquery.v2.Data
  name: Table
  nameWithType: Table
  fullName: Google.Apis.Bigquery.v2.Data.Table
- uid: Google.Apis.Bigquery.v2.TablesResource.InsertRequest
  commentId: T:Google.Apis.Bigquery.v2.TablesResource.InsertRequest
  parent: Google.Apis.Bigquery.v2
  name: TablesResource.InsertRequest
  nameWithType: TablesResource.InsertRequest
  fullName: Google.Apis.Bigquery.v2.TablesResource.InsertRequest
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: Google.Apis.Bigquery.v2.TablesResource.List*
  commentId: Overload:Google.Apis.Bigquery.v2.TablesResource.List
  name: List
  nameWithType: TablesResource.List
  fullName: Google.Apis.Bigquery.v2.TablesResource.List
- uid: Google.Apis.Bigquery.v2.TablesResource.ListRequest
  commentId: T:Google.Apis.Bigquery.v2.TablesResource.ListRequest
  parent: Google.Apis.Bigquery.v2
  name: TablesResource.ListRequest
  nameWithType: TablesResource.ListRequest
  fullName: Google.Apis.Bigquery.v2.TablesResource.ListRequest
- uid: Google.Apis.Bigquery.v2.TablesResource.Patch*
  commentId: Overload:Google.Apis.Bigquery.v2.TablesResource.Patch
  name: Patch
  nameWithType: TablesResource.Patch
  fullName: Google.Apis.Bigquery.v2.TablesResource.Patch
- uid: Google.Apis.Bigquery.v2.TablesResource.PatchRequest
  commentId: T:Google.Apis.Bigquery.v2.TablesResource.PatchRequest
  parent: Google.Apis.Bigquery.v2
  name: TablesResource.PatchRequest
  nameWithType: TablesResource.PatchRequest
  fullName: Google.Apis.Bigquery.v2.TablesResource.PatchRequest
- uid: Google.Apis.Bigquery.v2.TablesResource.Update*
  commentId: Overload:Google.Apis.Bigquery.v2.TablesResource.Update
  name: Update
  nameWithType: TablesResource.Update
  fullName: Google.Apis.Bigquery.v2.TablesResource.Update
- uid: Google.Apis.Bigquery.v2.TablesResource.UpdateRequest
  commentId: T:Google.Apis.Bigquery.v2.TablesResource.UpdateRequest
  parent: Google.Apis.Bigquery.v2
  name: TablesResource.UpdateRequest
  nameWithType: TablesResource.UpdateRequest
  fullName: Google.Apis.Bigquery.v2.TablesResource.UpdateRequest
