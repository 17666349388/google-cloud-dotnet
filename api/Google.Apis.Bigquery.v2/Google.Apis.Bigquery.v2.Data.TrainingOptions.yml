### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions
  commentId: T:Google.Apis.Bigquery.v2.Data.TrainingOptions
  id: TrainingOptions
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitColumn
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitEvalFraction
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitMethod
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.DistanceType
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.EarlyStop
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.ETag
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.InitialLearnRate
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.InputLabelColumns
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationColumn
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationMethod
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.L1Regularization
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.L2Regularization
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.LabelClassWeights
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRate
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRateStrategy
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.LossType
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.MaxIterations
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.MinRelativeProgress
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.ModelUri
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.NumClusters
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.OptimizationStrategy
  - Google.Apis.Bigquery.v2.Data.TrainingOptions.WarmStart
  langs:
  - csharp
  - vb
  name: TrainingOptions
  nameWithType: TrainingOptions
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TrainingOptions
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6991
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: 'public class TrainingOptions : IDirectResponseSchema'
    content.vb: >-
      Public Class TrainingOptions
          Implements IDirectResponseSchema
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Requests.IDirectResponseSchema
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitColumn
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitColumn
  id: DataSplitColumn
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: DataSplitColumn
  nameWithType: TrainingOptions.DataSplitColumn
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitColumn
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DataSplitColumn
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6999
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    The column to split data with. This column won&apos;t be used as a feature. 1. When data_split_method is

    CUSTOM, the corresponding column should be boolean. The rows with true value tag are eval data, and the

    false are training data. 2. When data_split_method is SEQ, the first DATA_SPLIT_EVAL_FRACTION rows (from

    smallest to largest) in the corresponding column are used as training data, and the rest are eval data. It

    respects the order in Orderable data types: https://cloud.google.com/bigquery/docs/reference/standard-sql

    /data-types#data-type-properties
  example: []
  syntax:
    content: >-
      [JsonProperty("dataSplitColumn")]

      public virtual string DataSplitColumn { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("dataSplitColumn")>

      Public Overridable Property DataSplitColumn As String
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitColumn*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dataSplitColumn
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitEvalFraction
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitEvalFraction
  id: DataSplitEvalFraction
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: DataSplitEvalFraction
  nameWithType: TrainingOptions.DataSplitEvalFraction
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitEvalFraction
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DataSplitEvalFraction
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7004
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    The fraction of evaluation data over the whole input data. The rest of data will be used as

    training data. The format should be double. Accurate to two decimal places. Default value is 0.2.
  example: []
  syntax:
    content: >-
      [JsonProperty("dataSplitEvalFraction")]

      public virtual double? DataSplitEvalFraction { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("dataSplitEvalFraction")>

      Public Overridable Property DataSplitEvalFraction As Double?
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitEvalFraction*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dataSplitEvalFraction
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitMethod
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitMethod
  id: DataSplitMethod
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: DataSplitMethod
  nameWithType: TrainingOptions.DataSplitMethod
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitMethod
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DataSplitMethod
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7008
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The data split type for training and evaluation, e.g. RANDOM.
  example: []
  syntax:
    content: >-
      [JsonProperty("dataSplitMethod")]

      public virtual string DataSplitMethod { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("dataSplitMethod")>

      Public Overridable Property DataSplitMethod As String
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitMethod*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dataSplitMethod
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.DistanceType
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.DistanceType
  id: DistanceType
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: DistanceType
  nameWithType: TrainingOptions.DistanceType
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.DistanceType
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DistanceType
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7012
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Distance type for clustering models.
  example: []
  syntax:
    content: >-
      [JsonProperty("distanceType")]

      public virtual string DistanceType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("distanceType")>

      Public Overridable Property DistanceType As String
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.DistanceType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: distanceType
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.EarlyStop
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.EarlyStop
  id: EarlyStop
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: EarlyStop
  nameWithType: TrainingOptions.EarlyStop
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.EarlyStop
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: EarlyStop
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7017
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Whether to stop early when the loss doesn&apos;t improve significantly any more (compared to

    min_relative_progress). Used only for iterative training algorithms.
  example: []
  syntax:
    content: >-
      [JsonProperty("earlyStop")]

      public virtual bool? EarlyStop { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("earlyStop")>

      Public Overridable Property EarlyStop As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.EarlyStop*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: earlyStop
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.InitialLearnRate
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.InitialLearnRate
  id: InitialLearnRate
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: InitialLearnRate
  nameWithType: TrainingOptions.InitialLearnRate
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.InitialLearnRate
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: InitialLearnRate
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7021
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Specifies the initial learning rate for the line search learn rate strategy.
  example: []
  syntax:
    content: >-
      [JsonProperty("initialLearnRate")]

      public virtual double? InitialLearnRate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("initialLearnRate")>

      Public Overridable Property InitialLearnRate As Double?
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.InitialLearnRate*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: initialLearnRate
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.InputLabelColumns
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.InputLabelColumns
  id: InputLabelColumns
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: InputLabelColumns
  nameWithType: TrainingOptions.InputLabelColumns
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.InputLabelColumns
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: InputLabelColumns
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7025
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Name of input label columns in training data.
  example: []
  syntax:
    content: >-
      [JsonProperty("inputLabelColumns")]

      public virtual IList<string> InputLabelColumns { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: >-
      <JsonProperty("inputLabelColumns")>

      Public Overridable Property InputLabelColumns As IList(Of String)
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.InputLabelColumns*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: inputLabelColumns
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationColumn
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationColumn
  id: KmeansInitializationColumn
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: KmeansInitializationColumn
  nameWithType: TrainingOptions.KmeansInitializationColumn
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationColumn
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: KmeansInitializationColumn
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7030
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    The column used to provide the initial centroids for kmeans algorithm when

    kmeans_initialization_method is CUSTOM.
  example: []
  syntax:
    content: >-
      [JsonProperty("kmeansInitializationColumn")]

      public virtual string KmeansInitializationColumn { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("kmeansInitializationColumn")>

      Public Overridable Property KmeansInitializationColumn As String
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationColumn*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: kmeansInitializationColumn
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationMethod
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationMethod
  id: KmeansInitializationMethod
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: KmeansInitializationMethod
  nameWithType: TrainingOptions.KmeansInitializationMethod
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationMethod
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: KmeansInitializationMethod
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7034
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The method used to initialize the centroids for kmeans algorithm.
  example: []
  syntax:
    content: >-
      [JsonProperty("kmeansInitializationMethod")]

      public virtual string KmeansInitializationMethod { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("kmeansInitializationMethod")>

      Public Overridable Property KmeansInitializationMethod As String
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationMethod*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: kmeansInitializationMethod
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.L1Regularization
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.L1Regularization
  id: L1Regularization
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: L1Regularization
  nameWithType: TrainingOptions.L1Regularization
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.L1Regularization
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: L1Regularization
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7038
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: L1 regularization coefficient.
  example: []
  syntax:
    content: >-
      [JsonProperty("l1Regularization")]

      public virtual double? L1Regularization { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("l1Regularization")>

      Public Overridable Property L1Regularization As Double?
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.L1Regularization*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: l1Regularization
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.L2Regularization
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.L2Regularization
  id: L2Regularization
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: L2Regularization
  nameWithType: TrainingOptions.L2Regularization
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.L2Regularization
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: L2Regularization
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7042
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: L2 regularization coefficient.
  example: []
  syntax:
    content: >-
      [JsonProperty("l2Regularization")]

      public virtual double? L2Regularization { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("l2Regularization")>

      Public Overridable Property L2Regularization As Double?
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.L2Regularization*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: l2Regularization
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.LabelClassWeights
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.LabelClassWeights
  id: LabelClassWeights
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: LabelClassWeights
  nameWithType: TrainingOptions.LabelClassWeights
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.LabelClassWeights
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LabelClassWeights
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7047
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Weights associated with each label class, for rebalancing the training data. Only applicable for

    classification models.
  example: []
  syntax:
    content: >-
      [JsonProperty("labelClassWeights")]

      public virtual IDictionary<string, double? > LabelClassWeights { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}}
    content.vb: >-
      <JsonProperty("labelClassWeights")>

      Public Overridable Property LabelClassWeights As IDictionary(Of String, Double?)
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.LabelClassWeights*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: labelClassWeights
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRate
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRate
  id: LearnRate
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: LearnRate
  nameWithType: TrainingOptions.LearnRate
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRate
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LearnRate
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7051
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Learning rate in training. Used only for iterative training algorithms.
  example: []
  syntax:
    content: >-
      [JsonProperty("learnRate")]

      public virtual double? LearnRate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("learnRate")>

      Public Overridable Property LearnRate As Double?
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRate*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: learnRate
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRateStrategy
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRateStrategy
  id: LearnRateStrategy
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: LearnRateStrategy
  nameWithType: TrainingOptions.LearnRateStrategy
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRateStrategy
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LearnRateStrategy
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7055
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The strategy to determine learn rate for the current iteration.
  example: []
  syntax:
    content: >-
      [JsonProperty("learnRateStrategy")]

      public virtual string LearnRateStrategy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("learnRateStrategy")>

      Public Overridable Property LearnRateStrategy As String
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRateStrategy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: learnRateStrategy
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.LossType
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.LossType
  id: LossType
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: LossType
  nameWithType: TrainingOptions.LossType
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.LossType
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LossType
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7059
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Type of loss function used during training run.
  example: []
  syntax:
    content: >-
      [JsonProperty("lossType")]

      public virtual string LossType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("lossType")>

      Public Overridable Property LossType As String
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.LossType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lossType
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.MaxIterations
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.MaxIterations
  id: MaxIterations
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: MaxIterations
  nameWithType: TrainingOptions.MaxIterations
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.MaxIterations
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MaxIterations
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7064
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    The maximum number of iterations in training. Used only for iterative training

    algorithms.
  example: []
  syntax:
    content: >-
      [JsonProperty("maxIterations")]

      public virtual long? MaxIterations { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("maxIterations")>

      Public Overridable Property MaxIterations As Long?
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.MaxIterations*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxIterations
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.MinRelativeProgress
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.MinRelativeProgress
  id: MinRelativeProgress
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: MinRelativeProgress
  nameWithType: TrainingOptions.MinRelativeProgress
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.MinRelativeProgress
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MinRelativeProgress
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7069
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    When early_stop is true, stops training when accuracy improvement is less than

    &apos;min_relative_progress&apos;. Used only for iterative training algorithms.
  example: []
  syntax:
    content: >-
      [JsonProperty("minRelativeProgress")]

      public virtual double? MinRelativeProgress { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("minRelativeProgress")>

      Public Overridable Property MinRelativeProgress As Double?
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.MinRelativeProgress*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: minRelativeProgress
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.ModelUri
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.ModelUri
  id: ModelUri
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: ModelUri
  nameWithType: TrainingOptions.ModelUri
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.ModelUri
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ModelUri
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7074
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Beta] Google Cloud Storage URI from which the model was imported. Only applicable for imported

    models.
  example: []
  syntax:
    content: >-
      [JsonProperty("modelUri")]

      public virtual string ModelUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("modelUri")>

      Public Overridable Property ModelUri As String
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.ModelUri*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: modelUri
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.NumClusters
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.NumClusters
  id: NumClusters
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: NumClusters
  nameWithType: TrainingOptions.NumClusters
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.NumClusters
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NumClusters
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7078
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Number of clusters for clustering models.
  example: []
  syntax:
    content: >-
      [JsonProperty("numClusters")]

      public virtual long? NumClusters { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("numClusters")>

      Public Overridable Property NumClusters As Long?
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.NumClusters*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: numClusters
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.OptimizationStrategy
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.OptimizationStrategy
  id: OptimizationStrategy
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: OptimizationStrategy
  nameWithType: TrainingOptions.OptimizationStrategy
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.OptimizationStrategy
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: OptimizationStrategy
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7082
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Optimization strategy for training linear regression models.
  example: []
  syntax:
    content: >-
      [JsonProperty("optimizationStrategy")]

      public virtual string OptimizationStrategy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("optimizationStrategy")>

      Public Overridable Property OptimizationStrategy As String
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.OptimizationStrategy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: optimizationStrategy
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.WarmStart
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.WarmStart
  id: WarmStart
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: WarmStart
  nameWithType: TrainingOptions.WarmStart
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.WarmStart
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: WarmStart
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7086
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Whether to train a model from the last checkpoint.
  example: []
  syntax:
    content: >-
      [JsonProperty("warmStart")]

      public virtual bool? WarmStart { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("warmStart")>

      Public Overridable Property WarmStart As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.WarmStart*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: warmStart
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.TrainingOptions.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.TrainingOptions
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: TrainingOptions.ETag
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 7090
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The ETag of the item.
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.TrainingOptions.ETag*
  implements:
  - Google.Apis.Requests.IDirectResponseSchema.ETag
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Requests.IDirectResponseSchema
  commentId: T:Google.Apis.Requests.IDirectResponseSchema
  parent: Google.Apis.Requests
  isExternal: true
  name: IDirectResponseSchema
  nameWithType: IDirectResponseSchema
  fullName: Google.Apis.Requests.IDirectResponseSchema
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: true
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitColumn*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitColumn
  name: DataSplitColumn
  nameWithType: TrainingOptions.DataSplitColumn
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitColumn
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitEvalFraction*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitEvalFraction
  name: DataSplitEvalFraction
  nameWithType: TrainingOptions.DataSplitEvalFraction
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitEvalFraction
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitMethod*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitMethod
  name: DataSplitMethod
  nameWithType: TrainingOptions.DataSplitMethod
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.DataSplitMethod
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.DistanceType*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.DistanceType
  name: DistanceType
  nameWithType: TrainingOptions.DistanceType
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.DistanceType
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.EarlyStop*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.EarlyStop
  name: EarlyStop
  nameWithType: TrainingOptions.EarlyStop
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.EarlyStop
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.InitialLearnRate*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.InitialLearnRate
  name: InitialLearnRate
  nameWithType: TrainingOptions.InitialLearnRate
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.InitialLearnRate
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.InputLabelColumns*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.InputLabelColumns
  name: InputLabelColumns
  nameWithType: TrainingOptions.InputLabelColumns
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.InputLabelColumns
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationColumn*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationColumn
  name: KmeansInitializationColumn
  nameWithType: TrainingOptions.KmeansInitializationColumn
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationColumn
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationMethod*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationMethod
  name: KmeansInitializationMethod
  nameWithType: TrainingOptions.KmeansInitializationMethod
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.KmeansInitializationMethod
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.L1Regularization*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.L1Regularization
  name: L1Regularization
  nameWithType: TrainingOptions.L1Regularization
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.L1Regularization
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.L2Regularization*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.L2Regularization
  name: L2Regularization
  nameWithType: TrainingOptions.L2Regularization
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.L2Regularization
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.LabelClassWeights*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.LabelClassWeights
  name: LabelClassWeights
  nameWithType: TrainingOptions.LabelClassWeights
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.LabelClassWeights
- uid: System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Nullable<Double>>
  nameWithType: IDictionary<String, Nullable<Double>>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Nullable<System.Double>>
  nameWithType.vb: IDictionary(Of String, Nullable(Of Double))
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Nullable(Of System.Double))
  name.vb: IDictionary(Of String, Nullable(Of Double))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRate*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRate
  name: LearnRate
  nameWithType: TrainingOptions.LearnRate
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRate
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRateStrategy*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRateStrategy
  name: LearnRateStrategy
  nameWithType: TrainingOptions.LearnRateStrategy
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.LearnRateStrategy
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.LossType*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.LossType
  name: LossType
  nameWithType: TrainingOptions.LossType
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.LossType
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.MaxIterations*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.MaxIterations
  name: MaxIterations
  nameWithType: TrainingOptions.MaxIterations
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.MaxIterations
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.MinRelativeProgress*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.MinRelativeProgress
  name: MinRelativeProgress
  nameWithType: TrainingOptions.MinRelativeProgress
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.MinRelativeProgress
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.ModelUri*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.ModelUri
  name: ModelUri
  nameWithType: TrainingOptions.ModelUri
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.ModelUri
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.NumClusters*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.NumClusters
  name: NumClusters
  nameWithType: TrainingOptions.NumClusters
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.NumClusters
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.OptimizationStrategy*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.OptimizationStrategy
  name: OptimizationStrategy
  nameWithType: TrainingOptions.OptimizationStrategy
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.OptimizationStrategy
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.WarmStart*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.WarmStart
  name: WarmStart
  nameWithType: TrainingOptions.WarmStart
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.WarmStart
- uid: Google.Apis.Bigquery.v2.Data.TrainingOptions.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TrainingOptions.ETag
  name: ETag
  nameWithType: TrainingOptions.ETag
  fullName: Google.Apis.Bigquery.v2.Data.TrainingOptions.ETag
- uid: Google.Apis.Requests.IDirectResponseSchema.ETag
  commentId: P:Google.Apis.Requests.IDirectResponseSchema.ETag
  parent: Google.Apis.Requests.IDirectResponseSchema
  isExternal: true
  name: ETag
  nameWithType: IDirectResponseSchema.ETag
  fullName: Google.Apis.Requests.IDirectResponseSchema.ETag
