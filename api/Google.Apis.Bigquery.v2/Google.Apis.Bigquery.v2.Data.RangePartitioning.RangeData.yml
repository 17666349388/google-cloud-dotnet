### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData
  commentId: T:Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData
  id: RangePartitioning.RangeData
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.End
  - Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Interval
  - Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Start
  langs:
  - csharp
  - vb
  name: RangePartitioning.RangeData
  nameWithType: RangePartitioning.RangeData
  fullName: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RangeData
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6261
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[TrustedTester] [Required] Defines the ranges for range partitioning.'
  example: []
  syntax:
    content: public class RangeData
    content.vb: Public Class RangeData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.End
  commentId: P:Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.End
  id: End
  parent: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData
  langs:
  - csharp
  - vb
  name: End
  nameWithType: RangePartitioning.RangeData.End
  fullName: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.End
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: End
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6264
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[TrustedTester] [Required] The end of range partitioning, exclusive.'
  example: []
  syntax:
    content: >-
      [JsonProperty("end")]

      public virtual long? End { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("end")>

      Public Overridable Property End As Long?
  overload: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.End*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: end
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Interval
  commentId: P:Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Interval
  id: Interval
  parent: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData
  langs:
  - csharp
  - vb
  name: Interval
  nameWithType: RangePartitioning.RangeData.Interval
  fullName: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Interval
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Interval
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6268
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[TrustedTester] [Required] The width of each interval.'
  example: []
  syntax:
    content: >-
      [JsonProperty("interval")]

      public virtual long? Interval { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("interval")>

      Public Overridable Property Interval As Long?
  overload: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Interval*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: interval
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Start
  commentId: P:Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Start
  id: Start
  parent: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: RangePartitioning.RangeData.Start
  fullName: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Start
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Start
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6272
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[TrustedTester] [Required] The start of range partitioning, inclusive.'
  example: []
  syntax:
    content: >-
      [JsonProperty("start")]

      public virtual long? Start { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("start")>

      Public Overridable Property Start As Long?
  overload: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Start*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: start
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.End*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.End
  name: End
  nameWithType: RangePartitioning.RangeData.End
  fullName: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.End
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Interval*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Interval
  name: Interval
  nameWithType: RangePartitioning.RangeData.Interval
  fullName: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Interval
- uid: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Start*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Start
  name: Start
  nameWithType: RangePartitioning.RangeData.Start
  fullName: Google.Apis.Bigquery.v2.Data.RangePartitioning.RangeData.Start
