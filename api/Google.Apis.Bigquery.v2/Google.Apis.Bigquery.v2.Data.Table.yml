### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.Table
  commentId: T:Google.Apis.Bigquery.v2.Data.Table
  id: Table
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.Table.Clustering
  - Google.Apis.Bigquery.v2.Data.Table.CreationTime
  - Google.Apis.Bigquery.v2.Data.Table.Description
  - Google.Apis.Bigquery.v2.Data.Table.EncryptionConfiguration
  - Google.Apis.Bigquery.v2.Data.Table.ETag
  - Google.Apis.Bigquery.v2.Data.Table.ExpirationTime
  - Google.Apis.Bigquery.v2.Data.Table.ExternalDataConfiguration
  - Google.Apis.Bigquery.v2.Data.Table.FriendlyName
  - Google.Apis.Bigquery.v2.Data.Table.Id
  - Google.Apis.Bigquery.v2.Data.Table.Kind
  - Google.Apis.Bigquery.v2.Data.Table.Labels
  - Google.Apis.Bigquery.v2.Data.Table.LastModifiedTime
  - Google.Apis.Bigquery.v2.Data.Table.Location
  - Google.Apis.Bigquery.v2.Data.Table.MaterializedView
  - Google.Apis.Bigquery.v2.Data.Table.Model
  - Google.Apis.Bigquery.v2.Data.Table.NumBytes
  - Google.Apis.Bigquery.v2.Data.Table.NumLongTermBytes
  - Google.Apis.Bigquery.v2.Data.Table.NumPhysicalBytes
  - Google.Apis.Bigquery.v2.Data.Table.NumRows
  - Google.Apis.Bigquery.v2.Data.Table.RangePartitioning
  - Google.Apis.Bigquery.v2.Data.Table.RequirePartitionFilter
  - Google.Apis.Bigquery.v2.Data.Table.Schema
  - Google.Apis.Bigquery.v2.Data.Table.SelfLink
  - Google.Apis.Bigquery.v2.Data.Table.StreamingBuffer
  - Google.Apis.Bigquery.v2.Data.Table.TableReference
  - Google.Apis.Bigquery.v2.Data.Table.TimePartitioning
  - Google.Apis.Bigquery.v2.Data.Table.Type
  - Google.Apis.Bigquery.v2.Data.Table.View
  langs:
  - csharp
  - vb
  name: Table
  nameWithType: Table
  fullName: Google.Apis.Bigquery.v2.Data.Table
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Table
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6543
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: 'public class Table : IDirectResponseSchema'
    content.vb: >-
      Public Class Table
          Implements IDirectResponseSchema
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Requests.IDirectResponseSchema
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.Table.Clustering
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.Clustering
  id: Clustering
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: Clustering
  nameWithType: Table.Clustering
  fullName: Google.Apis.Bigquery.v2.Data.Table.Clustering
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Clustering
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6547
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Beta] Clustering specification for the table. Must be specified with partitioning, data in the

    table will be first partitioned and subsequently clustered.
  example: []
  syntax:
    content: >-
      [JsonProperty("clustering")]

      public virtual Clustering Clustering { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.Clustering
    content.vb: >-
      <JsonProperty("clustering")>

      Public Overridable Property Clustering As Clustering
  overload: Google.Apis.Bigquery.v2.Data.Table.Clustering*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: clustering
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.CreationTime
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.CreationTime
  id: CreationTime
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: CreationTime
  nameWithType: Table.CreationTime
  fullName: Google.Apis.Bigquery.v2.Data.Table.CreationTime
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CreationTime
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6551
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Output-only] The time when this table was created, in milliseconds since the epoch.'
  example: []
  syntax:
    content: >-
      [JsonProperty("creationTime")]

      public virtual long? CreationTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("creationTime")>

      Public Overridable Property CreationTime As Long?
  overload: Google.Apis.Bigquery.v2.Data.Table.CreationTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: creationTime
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.Description
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.Description
  id: Description
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Table.Description
  fullName: Google.Apis.Bigquery.v2.Data.Table.Description
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Description
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6555
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Optional] A user-friendly description of this table.'
  example: []
  syntax:
    content: >-
      [JsonProperty("description")]

      public virtual string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("description")>

      Public Overridable Property Description As String
  overload: Google.Apis.Bigquery.v2.Data.Table.Description*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: description
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.EncryptionConfiguration
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.EncryptionConfiguration
  id: EncryptionConfiguration
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: EncryptionConfiguration
  nameWithType: Table.EncryptionConfiguration
  fullName: Google.Apis.Bigquery.v2.Data.Table.EncryptionConfiguration
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: EncryptionConfiguration
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6559
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Custom encryption configuration (e.g., Cloud KMS keys).
  example: []
  syntax:
    content: >-
      [JsonProperty("encryptionConfiguration")]

      public virtual EncryptionConfiguration EncryptionConfiguration { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.EncryptionConfiguration
    content.vb: >-
      <JsonProperty("encryptionConfiguration")>

      Public Overridable Property EncryptionConfiguration As EncryptionConfiguration
  overload: Google.Apis.Bigquery.v2.Data.Table.EncryptionConfiguration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: encryptionConfiguration
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: Table.ETag
  fullName: Google.Apis.Bigquery.v2.Data.Table.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6565
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Output-only] A hash of the table metadata. Used to ensure there were no concurrent modifications

    to the resource when attempting an update. Not guaranteed to change when the table contents or the fields

    numRows, numBytes, numLongTermBytes or lastModifiedTime change.
  example: []
  syntax:
    content: >-
      [JsonProperty("etag")]

      public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("etag")>

      Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.Table.ETag*
  implements:
  - Google.Apis.Requests.IDirectResponseSchema.ETag
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: etag
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.ExpirationTime
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.ExpirationTime
  id: ExpirationTime
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: ExpirationTime
  nameWithType: Table.ExpirationTime
  fullName: Google.Apis.Bigquery.v2.Data.Table.ExpirationTime
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExpirationTime
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6572
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] The time when this table expires, in milliseconds since the epoch. If not present, the

    table will persist indefinitely. Expired tables will be deleted and their storage reclaimed. The

    defaultTableExpirationMs property of the encapsulating dataset can be used to set a default expirationTime

    on newly created tables.
  example: []
  syntax:
    content: >-
      [JsonProperty("expirationTime")]

      public virtual long? ExpirationTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("expirationTime")>

      Public Overridable Property ExpirationTime As Long?
  overload: Google.Apis.Bigquery.v2.Data.Table.ExpirationTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: expirationTime
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.ExternalDataConfiguration
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.ExternalDataConfiguration
  id: ExternalDataConfiguration
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: ExternalDataConfiguration
  nameWithType: Table.ExternalDataConfiguration
  fullName: Google.Apis.Bigquery.v2.Data.Table.ExternalDataConfiguration
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExternalDataConfiguration
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6578
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] Describes the data format, location, and other properties of a table stored outside of

    BigQuery. By defining these properties, the data source can then be queried as if it were a standard

    BigQuery table.
  example: []
  syntax:
    content: >-
      [JsonProperty("externalDataConfiguration")]

      public virtual ExternalDataConfiguration ExternalDataConfiguration { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
    content.vb: >-
      <JsonProperty("externalDataConfiguration")>

      Public Overridable Property ExternalDataConfiguration As ExternalDataConfiguration
  overload: Google.Apis.Bigquery.v2.Data.Table.ExternalDataConfiguration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: externalDataConfiguration
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.FriendlyName
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.FriendlyName
  id: FriendlyName
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: FriendlyName
  nameWithType: Table.FriendlyName
  fullName: Google.Apis.Bigquery.v2.Data.Table.FriendlyName
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: FriendlyName
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6582
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Optional] A descriptive name for this table.'
  example: []
  syntax:
    content: >-
      [JsonProperty("friendlyName")]

      public virtual string FriendlyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("friendlyName")>

      Public Overridable Property FriendlyName As String
  overload: Google.Apis.Bigquery.v2.Data.Table.FriendlyName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: friendlyName
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.Id
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.Id
  id: Id
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Table.Id
  fullName: Google.Apis.Bigquery.v2.Data.Table.Id
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Id
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6586
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Output-only] An opaque ID uniquely identifying the table.'
  example: []
  syntax:
    content: >-
      [JsonProperty("id")]

      public virtual string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id")>

      Public Overridable Property Id As String
  overload: Google.Apis.Bigquery.v2.Data.Table.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.Kind
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.Kind
  id: Kind
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: Table.Kind
  fullName: Google.Apis.Bigquery.v2.Data.Table.Kind
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Kind
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6590
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Output-only] The type of the resource.'
  example: []
  syntax:
    content: >-
      [JsonProperty("kind")]

      public virtual string Kind { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("kind")>

      Public Overridable Property Kind As String
  overload: Google.Apis.Bigquery.v2.Data.Table.Kind*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: kind
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.Labels
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.Labels
  id: Labels
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: Labels
  nameWithType: Table.Labels
  fullName: Google.Apis.Bigquery.v2.Data.Table.Labels
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Labels
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6597
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    The labels associated with this table. You can use these to organize and group your tables. Label

    keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters,

    underscores and dashes. International characters are allowed. Label values are optional. Label keys must

    start with a letter and each label in the list must have a different key.
  example: []
  syntax:
    content: >-
      [JsonProperty("labels")]

      public virtual IDictionary<string, string> Labels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: >-
      <JsonProperty("labels")>

      Public Overridable Property Labels As IDictionary(Of String, String)
  overload: Google.Apis.Bigquery.v2.Data.Table.Labels*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: labels
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.LastModifiedTime
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.LastModifiedTime
  id: LastModifiedTime
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: LastModifiedTime
  nameWithType: Table.LastModifiedTime
  fullName: Google.Apis.Bigquery.v2.Data.Table.LastModifiedTime
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LastModifiedTime
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6602
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Output-only] The time when this table was last modified, in milliseconds since the

    epoch.
  example: []
  syntax:
    content: >-
      [JsonProperty("lastModifiedTime")]

      public virtual ulong? LastModifiedTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.UInt64}
    content.vb: >-
      <JsonProperty("lastModifiedTime")>

      Public Overridable Property LastModifiedTime As ULong?
  overload: Google.Apis.Bigquery.v2.Data.Table.LastModifiedTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lastModifiedTime
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.Location
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.Location
  id: Location
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: Table.Location
  fullName: Google.Apis.Bigquery.v2.Data.Table.Location
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Location
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6607
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Output-only] The geographic location where the table resides. This value is inherited from the

    dataset.
  example: []
  syntax:
    content: >-
      [JsonProperty("location")]

      public virtual string Location { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("location")>

      Public Overridable Property Location As String
  overload: Google.Apis.Bigquery.v2.Data.Table.Location*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: location
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.MaterializedView
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.MaterializedView
  id: MaterializedView
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: MaterializedView
  nameWithType: Table.MaterializedView
  fullName: Google.Apis.Bigquery.v2.Data.Table.MaterializedView
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MaterializedView
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6611
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Optional] Materialized view definition.'
  example: []
  syntax:
    content: >-
      [JsonProperty("materializedView")]

      public virtual MaterializedViewDefinition MaterializedView { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.MaterializedViewDefinition
    content.vb: >-
      <JsonProperty("materializedView")>

      Public Overridable Property MaterializedView As MaterializedViewDefinition
  overload: Google.Apis.Bigquery.v2.Data.Table.MaterializedView*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: materializedView
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.Model
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.Model
  id: Model
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: Table.Model
  fullName: Google.Apis.Bigquery.v2.Data.Table.Model
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Model
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6616
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Output-only, Beta] Present iff this table represents a ML model. Describes the training

    information for the model, and it is required to run &apos;PREDICT&apos; queries.
  example: []
  syntax:
    content: >-
      [JsonProperty("model")]

      public virtual ModelDefinition Model { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.ModelDefinition
    content.vb: >-
      <JsonProperty("model")>

      Public Overridable Property Model As ModelDefinition
  overload: Google.Apis.Bigquery.v2.Data.Table.Model*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: model
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.NumBytes
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.NumBytes
  id: NumBytes
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: NumBytes
  nameWithType: Table.NumBytes
  fullName: Google.Apis.Bigquery.v2.Data.Table.NumBytes
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NumBytes
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6621
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Output-only] The size of this table in bytes, excluding any data in the streaming

    buffer.
  example: []
  syntax:
    content: >-
      [JsonProperty("numBytes")]

      public virtual long? NumBytes { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("numBytes")>

      Public Overridable Property NumBytes As Long?
  overload: Google.Apis.Bigquery.v2.Data.Table.NumBytes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: numBytes
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.NumLongTermBytes
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.NumLongTermBytes
  id: NumLongTermBytes
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: NumLongTermBytes
  nameWithType: Table.NumLongTermBytes
  fullName: Google.Apis.Bigquery.v2.Data.Table.NumLongTermBytes
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NumLongTermBytes
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6625
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Output-only] The number of bytes in the table that are considered &quot;long-term storage&quot;.'
  example: []
  syntax:
    content: >-
      [JsonProperty("numLongTermBytes")]

      public virtual long? NumLongTermBytes { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("numLongTermBytes")>

      Public Overridable Property NumLongTermBytes As Long?
  overload: Google.Apis.Bigquery.v2.Data.Table.NumLongTermBytes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: numLongTermBytes
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.NumPhysicalBytes
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.NumPhysicalBytes
  id: NumPhysicalBytes
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: NumPhysicalBytes
  nameWithType: Table.NumPhysicalBytes
  fullName: Google.Apis.Bigquery.v2.Data.Table.NumPhysicalBytes
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NumPhysicalBytes
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6630
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Output-only] [TrustedTester] The physical size of this table in bytes, excluding any data in the

    streaming buffer. This includes compression and storage used for time travel.
  example: []
  syntax:
    content: >-
      [JsonProperty("numPhysicalBytes")]

      public virtual long? NumPhysicalBytes { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("numPhysicalBytes")>

      Public Overridable Property NumPhysicalBytes As Long?
  overload: Google.Apis.Bigquery.v2.Data.Table.NumPhysicalBytes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: numPhysicalBytes
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.NumRows
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.NumRows
  id: NumRows
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: NumRows
  nameWithType: Table.NumRows
  fullName: Google.Apis.Bigquery.v2.Data.Table.NumRows
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NumRows
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6635
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Output-only] The number of rows of data in this table, excluding any data in the streaming

    buffer.
  example: []
  syntax:
    content: >-
      [JsonProperty("numRows")]

      public virtual ulong? NumRows { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.UInt64}
    content.vb: >-
      <JsonProperty("numRows")>

      Public Overridable Property NumRows As ULong?
  overload: Google.Apis.Bigquery.v2.Data.Table.NumRows*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: numRows
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.RangePartitioning
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.RangePartitioning
  id: RangePartitioning
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: RangePartitioning
  nameWithType: Table.RangePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.Table.RangePartitioning
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RangePartitioning
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6640
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [TrustedTester] Range partitioning specification for this table. Only one of timePartitioning and

    rangePartitioning should be specified.
  example: []
  syntax:
    content: >-
      [JsonProperty("rangePartitioning")]

      public virtual RangePartitioning RangePartitioning { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.RangePartitioning
    content.vb: >-
      <JsonProperty("rangePartitioning")>

      Public Overridable Property RangePartitioning As RangePartitioning
  overload: Google.Apis.Bigquery.v2.Data.Table.RangePartitioning*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: rangePartitioning
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.RequirePartitionFilter
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.RequirePartitionFilter
  id: RequirePartitionFilter
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: RequirePartitionFilter
  nameWithType: Table.RequirePartitionFilter
  fullName: Google.Apis.Bigquery.v2.Data.Table.RequirePartitionFilter
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RequirePartitionFilter
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6645
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Beta] [Optional] If set to true, queries over this table require a partition filter that can be

    used for partition elimination to be specified.
  example: []
  syntax:
    content: >-
      [JsonProperty("requirePartitionFilter")]

      public virtual bool? RequirePartitionFilter { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("requirePartitionFilter")>

      Public Overridable Property RequirePartitionFilter As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.Table.RequirePartitionFilter*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: requirePartitionFilter
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.Schema
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.Schema
  id: Schema
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: Schema
  nameWithType: Table.Schema
  fullName: Google.Apis.Bigquery.v2.Data.Table.Schema
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Schema
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6649
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Optional] Describes the schema of this table.'
  example: []
  syntax:
    content: >-
      [JsonProperty("schema")]

      public virtual TableSchema Schema { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.TableSchema
    content.vb: >-
      <JsonProperty("schema")>

      Public Overridable Property Schema As TableSchema
  overload: Google.Apis.Bigquery.v2.Data.Table.Schema*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: schema
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.SelfLink
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.SelfLink
  id: SelfLink
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: SelfLink
  nameWithType: Table.SelfLink
  fullName: Google.Apis.Bigquery.v2.Data.Table.SelfLink
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: SelfLink
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6653
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Output-only] A URL that can be used to access this resource again.'
  example: []
  syntax:
    content: >-
      [JsonProperty("selfLink")]

      public virtual string SelfLink { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("selfLink")>

      Public Overridable Property SelfLink As String
  overload: Google.Apis.Bigquery.v2.Data.Table.SelfLink*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: selfLink
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.StreamingBuffer
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.StreamingBuffer
  id: StreamingBuffer
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: StreamingBuffer
  nameWithType: Table.StreamingBuffer
  fullName: Google.Apis.Bigquery.v2.Data.Table.StreamingBuffer
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: StreamingBuffer
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6659
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Output-only] Contains information regarding this table&apos;s streaming buffer, if one is present. This

    field will be absent if the table is not being streamed to or if there is no data in the streaming

    buffer.
  example: []
  syntax:
    content: >-
      [JsonProperty("streamingBuffer")]

      public virtual Streamingbuffer StreamingBuffer { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.Streamingbuffer
    content.vb: >-
      <JsonProperty("streamingBuffer")>

      Public Overridable Property StreamingBuffer As Streamingbuffer
  overload: Google.Apis.Bigquery.v2.Data.Table.StreamingBuffer*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: streamingBuffer
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.TableReference
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.TableReference
  id: TableReference
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: TableReference
  nameWithType: Table.TableReference
  fullName: Google.Apis.Bigquery.v2.Data.Table.TableReference
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TableReference
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6663
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Required] Reference describing the ID of this table.'
  example: []
  syntax:
    content: >-
      [JsonProperty("tableReference")]

      public virtual TableReference TableReference { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.TableReference
    content.vb: >-
      <JsonProperty("tableReference")>

      Public Overridable Property TableReference As TableReference
  overload: Google.Apis.Bigquery.v2.Data.Table.TableReference*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tableReference
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.TimePartitioning
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.TimePartitioning
  id: TimePartitioning
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: TimePartitioning
  nameWithType: Table.TimePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.Table.TimePartitioning
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TimePartitioning
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6668
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Time-based partitioning specification for this table. Only one of timePartitioning and

    rangePartitioning should be specified.
  example: []
  syntax:
    content: >-
      [JsonProperty("timePartitioning")]

      public virtual TimePartitioning TimePartitioning { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.TimePartitioning
    content.vb: >-
      <JsonProperty("timePartitioning")>

      Public Overridable Property TimePartitioning As TimePartitioning
  overload: Google.Apis.Bigquery.v2.Data.Table.TimePartitioning*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: timePartitioning
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.Type
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.Type
  id: Type
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Table.Type
  fullName: Google.Apis.Bigquery.v2.Data.Table.Type
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Type
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6675
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Output-only] Describes the table type. The following values are supported: TABLE: A normal

    BigQuery table. VIEW: A virtual table defined by a SQL query. [TrustedTester] MATERIALIZED_VIEW: SQL query

    whose result is persisted. EXTERNAL: A table that references data stored in an external storage system, such

    as Google Cloud Storage. The default value is TABLE.
  example: []
  syntax:
    content: >-
      [JsonProperty("type")]

      public virtual string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("type")>

      Public Overridable Property Type As String
  overload: Google.Apis.Bigquery.v2.Data.Table.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Table.View
  commentId: P:Google.Apis.Bigquery.v2.Data.Table.View
  id: View
  parent: Google.Apis.Bigquery.v2.Data.Table
  langs:
  - csharp
  - vb
  name: View
  nameWithType: Table.View
  fullName: Google.Apis.Bigquery.v2.Data.Table.View
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: View
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6679
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Optional] The view definition.'
  example: []
  syntax:
    content: >-
      [JsonProperty("view")]

      public virtual ViewDefinition View { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.ViewDefinition
    content.vb: >-
      <JsonProperty("view")>

      Public Overridable Property View As ViewDefinition
  overload: Google.Apis.Bigquery.v2.Data.Table.View*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: view
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Requests.IDirectResponseSchema
  commentId: T:Google.Apis.Requests.IDirectResponseSchema
  parent: Google.Apis.Requests
  isExternal: true
  name: IDirectResponseSchema
  nameWithType: IDirectResponseSchema
  fullName: Google.Apis.Requests.IDirectResponseSchema
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: true
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Bigquery.v2.Data.Table.Clustering*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.Clustering
  name: Clustering
  nameWithType: Table.Clustering
  fullName: Google.Apis.Bigquery.v2.Data.Table.Clustering
- uid: Google.Apis.Bigquery.v2.Data.Clustering
  commentId: T:Google.Apis.Bigquery.v2.Data.Clustering
  parent: Google.Apis.Bigquery.v2.Data
  name: Clustering
  nameWithType: Clustering
  fullName: Google.Apis.Bigquery.v2.Data.Clustering
- uid: Google.Apis.Bigquery.v2.Data.Table.CreationTime*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.CreationTime
  name: CreationTime
  nameWithType: Table.CreationTime
  fullName: Google.Apis.Bigquery.v2.Data.Table.CreationTime
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.Table.Description*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.Description
  name: Description
  nameWithType: Table.Description
  fullName: Google.Apis.Bigquery.v2.Data.Table.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.Table.EncryptionConfiguration*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.EncryptionConfiguration
  name: EncryptionConfiguration
  nameWithType: Table.EncryptionConfiguration
  fullName: Google.Apis.Bigquery.v2.Data.Table.EncryptionConfiguration
- uid: Google.Apis.Bigquery.v2.Data.EncryptionConfiguration
  commentId: T:Google.Apis.Bigquery.v2.Data.EncryptionConfiguration
  parent: Google.Apis.Bigquery.v2.Data
  name: EncryptionConfiguration
  nameWithType: EncryptionConfiguration
  fullName: Google.Apis.Bigquery.v2.Data.EncryptionConfiguration
- uid: Google.Apis.Bigquery.v2.Data.Table.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.ETag
  name: ETag
  nameWithType: Table.ETag
  fullName: Google.Apis.Bigquery.v2.Data.Table.ETag
- uid: Google.Apis.Requests.IDirectResponseSchema.ETag
  commentId: P:Google.Apis.Requests.IDirectResponseSchema.ETag
  parent: Google.Apis.Requests.IDirectResponseSchema
  isExternal: true
  name: ETag
  nameWithType: IDirectResponseSchema.ETag
  fullName: Google.Apis.Requests.IDirectResponseSchema.ETag
- uid: Google.Apis.Bigquery.v2.Data.Table.ExpirationTime*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.ExpirationTime
  name: ExpirationTime
  nameWithType: Table.ExpirationTime
  fullName: Google.Apis.Bigquery.v2.Data.Table.ExpirationTime
- uid: Google.Apis.Bigquery.v2.Data.Table.ExternalDataConfiguration*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.ExternalDataConfiguration
  name: ExternalDataConfiguration
  nameWithType: Table.ExternalDataConfiguration
  fullName: Google.Apis.Bigquery.v2.Data.Table.ExternalDataConfiguration
- uid: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  commentId: T:Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
  parent: Google.Apis.Bigquery.v2.Data
  name: ExternalDataConfiguration
  nameWithType: ExternalDataConfiguration
  fullName: Google.Apis.Bigquery.v2.Data.ExternalDataConfiguration
- uid: Google.Apis.Bigquery.v2.Data.Table.FriendlyName*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.FriendlyName
  name: FriendlyName
  nameWithType: Table.FriendlyName
  fullName: Google.Apis.Bigquery.v2.Data.Table.FriendlyName
- uid: Google.Apis.Bigquery.v2.Data.Table.Id*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.Id
  name: Id
  nameWithType: Table.Id
  fullName: Google.Apis.Bigquery.v2.Data.Table.Id
- uid: Google.Apis.Bigquery.v2.Data.Table.Kind*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.Kind
  name: Kind
  nameWithType: Table.Kind
  fullName: Google.Apis.Bigquery.v2.Data.Table.Kind
- uid: Google.Apis.Bigquery.v2.Data.Table.Labels*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.Labels
  name: Labels
  nameWithType: Table.Labels
  fullName: Google.Apis.Bigquery.v2.Data.Table.Labels
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Bigquery.v2.Data.Table.LastModifiedTime*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.LastModifiedTime
  name: LastModifiedTime
  nameWithType: Table.LastModifiedTime
  fullName: Google.Apis.Bigquery.v2.Data.Table.LastModifiedTime
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UInt64>
  nameWithType: Nullable<UInt64>
  fullName: System.Nullable<System.UInt64>
  nameWithType.vb: Nullable(Of UInt64)
  fullName.vb: System.Nullable(Of System.UInt64)
  name.vb: Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.Table.Location*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.Location
  name: Location
  nameWithType: Table.Location
  fullName: Google.Apis.Bigquery.v2.Data.Table.Location
- uid: Google.Apis.Bigquery.v2.Data.Table.MaterializedView*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.MaterializedView
  name: MaterializedView
  nameWithType: Table.MaterializedView
  fullName: Google.Apis.Bigquery.v2.Data.Table.MaterializedView
- uid: Google.Apis.Bigquery.v2.Data.MaterializedViewDefinition
  commentId: T:Google.Apis.Bigquery.v2.Data.MaterializedViewDefinition
  parent: Google.Apis.Bigquery.v2.Data
  name: MaterializedViewDefinition
  nameWithType: MaterializedViewDefinition
  fullName: Google.Apis.Bigquery.v2.Data.MaterializedViewDefinition
- uid: Google.Apis.Bigquery.v2.Data.Table.Model*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.Model
  name: Model
  nameWithType: Table.Model
  fullName: Google.Apis.Bigquery.v2.Data.Table.Model
- uid: Google.Apis.Bigquery.v2.Data.ModelDefinition
  commentId: T:Google.Apis.Bigquery.v2.Data.ModelDefinition
  parent: Google.Apis.Bigquery.v2.Data
  name: ModelDefinition
  nameWithType: ModelDefinition
  fullName: Google.Apis.Bigquery.v2.Data.ModelDefinition
- uid: Google.Apis.Bigquery.v2.Data.Table.NumBytes*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.NumBytes
  name: NumBytes
  nameWithType: Table.NumBytes
  fullName: Google.Apis.Bigquery.v2.Data.Table.NumBytes
- uid: Google.Apis.Bigquery.v2.Data.Table.NumLongTermBytes*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.NumLongTermBytes
  name: NumLongTermBytes
  nameWithType: Table.NumLongTermBytes
  fullName: Google.Apis.Bigquery.v2.Data.Table.NumLongTermBytes
- uid: Google.Apis.Bigquery.v2.Data.Table.NumPhysicalBytes*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.NumPhysicalBytes
  name: NumPhysicalBytes
  nameWithType: Table.NumPhysicalBytes
  fullName: Google.Apis.Bigquery.v2.Data.Table.NumPhysicalBytes
- uid: Google.Apis.Bigquery.v2.Data.Table.NumRows*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.NumRows
  name: NumRows
  nameWithType: Table.NumRows
  fullName: Google.Apis.Bigquery.v2.Data.Table.NumRows
- uid: Google.Apis.Bigquery.v2.Data.Table.RangePartitioning*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.RangePartitioning
  name: RangePartitioning
  nameWithType: Table.RangePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.Table.RangePartitioning
- uid: Google.Apis.Bigquery.v2.Data.RangePartitioning
  commentId: T:Google.Apis.Bigquery.v2.Data.RangePartitioning
  parent: Google.Apis.Bigquery.v2.Data
  name: RangePartitioning
  nameWithType: RangePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.RangePartitioning
- uid: Google.Apis.Bigquery.v2.Data.Table.RequirePartitionFilter*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.RequirePartitionFilter
  name: RequirePartitionFilter
  nameWithType: Table.RequirePartitionFilter
  fullName: Google.Apis.Bigquery.v2.Data.Table.RequirePartitionFilter
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.Table.Schema*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.Schema
  name: Schema
  nameWithType: Table.Schema
  fullName: Google.Apis.Bigquery.v2.Data.Table.Schema
- uid: Google.Apis.Bigquery.v2.Data.TableSchema
  commentId: T:Google.Apis.Bigquery.v2.Data.TableSchema
  parent: Google.Apis.Bigquery.v2.Data
  name: TableSchema
  nameWithType: TableSchema
  fullName: Google.Apis.Bigquery.v2.Data.TableSchema
- uid: Google.Apis.Bigquery.v2.Data.Table.SelfLink*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.SelfLink
  name: SelfLink
  nameWithType: Table.SelfLink
  fullName: Google.Apis.Bigquery.v2.Data.Table.SelfLink
- uid: Google.Apis.Bigquery.v2.Data.Table.StreamingBuffer*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.StreamingBuffer
  name: StreamingBuffer
  nameWithType: Table.StreamingBuffer
  fullName: Google.Apis.Bigquery.v2.Data.Table.StreamingBuffer
- uid: Google.Apis.Bigquery.v2.Data.Streamingbuffer
  commentId: T:Google.Apis.Bigquery.v2.Data.Streamingbuffer
  parent: Google.Apis.Bigquery.v2.Data
  name: Streamingbuffer
  nameWithType: Streamingbuffer
  fullName: Google.Apis.Bigquery.v2.Data.Streamingbuffer
- uid: Google.Apis.Bigquery.v2.Data.Table.TableReference*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.TableReference
  name: TableReference
  nameWithType: Table.TableReference
  fullName: Google.Apis.Bigquery.v2.Data.Table.TableReference
- uid: Google.Apis.Bigquery.v2.Data.TableReference
  commentId: T:Google.Apis.Bigquery.v2.Data.TableReference
  parent: Google.Apis.Bigquery.v2.Data
  name: TableReference
  nameWithType: TableReference
  fullName: Google.Apis.Bigquery.v2.Data.TableReference
- uid: Google.Apis.Bigquery.v2.Data.Table.TimePartitioning*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.TimePartitioning
  name: TimePartitioning
  nameWithType: Table.TimePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.Table.TimePartitioning
- uid: Google.Apis.Bigquery.v2.Data.TimePartitioning
  commentId: T:Google.Apis.Bigquery.v2.Data.TimePartitioning
  parent: Google.Apis.Bigquery.v2.Data
  name: TimePartitioning
  nameWithType: TimePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.TimePartitioning
- uid: Google.Apis.Bigquery.v2.Data.Table.Type*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.Type
  name: Type
  nameWithType: Table.Type
  fullName: Google.Apis.Bigquery.v2.Data.Table.Type
- uid: Google.Apis.Bigquery.v2.Data.Table.View*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Table.View
  name: View
  nameWithType: Table.View
  fullName: Google.Apis.Bigquery.v2.Data.Table.View
- uid: Google.Apis.Bigquery.v2.Data.ViewDefinition
  commentId: T:Google.Apis.Bigquery.v2.Data.ViewDefinition
  parent: Google.Apis.Bigquery.v2.Data
  name: ViewDefinition
  nameWithType: ViewDefinition
  fullName: Google.Apis.Bigquery.v2.Data.ViewDefinition
