### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload
  commentId: T:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload
  id: JobsResource.InsertMediaUpload
  parent: Google.Apis.Bigquery.v2
  children:
  - Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.#ctor(Google.Apis.Services.IClientService,Google.Apis.Bigquery.v2.Data.Job,System.String,System.IO.Stream,System.String)
  - Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Alt
  - Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Fields
  - Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Key
  - Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.OauthToken
  - Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.PrettyPrint
  - Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.ProjectId
  - Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.QuotaUser
  - Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.UserIp
  langs:
  - csharp
  - vb
  name: JobsResource.InsertMediaUpload
  nameWithType: JobsResource.InsertMediaUpload
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: InsertMediaUpload
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 1271
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Insert media upload which supports resumable upload.
  example: []
  syntax:
    content: 'public class InsertMediaUpload : ResumableUpload<Job, Job>'
    content.vb: >-
      Public Class InsertMediaUpload
          Inherits ResumableUpload(Of Job, Job)
  inheritance:
  - System.Object
  - Google.Apis.Upload.ResumableUpload
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}
  inheritedMembers:
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}.ProcessResponse(System.Net.Http.HttpResponseMessage)
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}.ResponseBody
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}.ResponseReceived
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.InitiateSessionAsync(System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.Service
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.Path
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.HttpMethod
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.ContentType
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.Body
  - Google.Apis.Upload.ResumableUpload.MinimumChunkSize
  - Google.Apis.Upload.ResumableUpload.DefaultChunkSize
  - Google.Apis.Upload.ResumableUpload.chunkSize
  - Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
  - Google.Apis.Upload.ResumableUpload.GetProgress
  - Google.Apis.Upload.ResumableUpload.Upload
  - Google.Apis.Upload.ResumableUpload.UploadAsync
  - Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.Resume
  - Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  - Google.Apis.Upload.ResumableUpload.ResumeAsync
  - Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  - Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
  - Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
  - Google.Apis.Upload.ResumableUpload.Options
  - Google.Apis.Upload.ResumableUpload.ContentStream
  - Google.Apis.Upload.ResumableUpload.ChunkSize
  - Google.Apis.Upload.ResumableUpload.UploadStreamInterceptor
  - Google.Apis.Upload.ResumableUpload.ProgressChanged
  - Google.Apis.Upload.ResumableUpload.UploadSessionData
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Alt
  commentId: P:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Alt
  id: Alt
  parent: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Alt
  nameWithType: JobsResource.InsertMediaUpload.Alt
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Alt
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Alt
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 1276
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Data format for the response.
  example: []
  syntax:
    content: >-
      [RequestParameter("alt", RequestParameterType.Query)]

      public virtual JobsResource.InsertMediaUpload.AltEnum? Alt { get; set; }
    parameters: []
    return:
      type: System.Nullable{Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.AltEnum}
    content.vb: >-
      <RequestParameter("alt", RequestParameterType.Query)>

      Public Overridable Property Alt As JobsResource.InsertMediaUpload.AltEnum?
  overload: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Alt*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: alt
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Fields
  commentId: P:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Fields
  id: Fields
  parent: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: JobsResource.InsertMediaUpload.Fields
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Fields
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Fields
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 1288
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Selector specifying which fields to include in a partial response.
  example: []
  syntax:
    content: >-
      [RequestParameter("fields", RequestParameterType.Query)]

      public virtual string Fields { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("fields", RequestParameterType.Query)>

      Public Overridable Property Fields As String
  overload: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Fields*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: fields
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Key
  commentId: P:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Key
  id: Key
  parent: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: JobsResource.InsertMediaUpload.Key
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Key
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Key
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 1293
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: >-
    API key. Your API key identifies your project and provides you with API access, quota, and

    reports. Required unless you provide an OAuth 2.0 token.
  example: []
  syntax:
    content: >-
      [RequestParameter("key", RequestParameterType.Query)]

      public virtual string Key { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("key", RequestParameterType.Query)>

      Public Overridable Property Key As String
  overload: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Key*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: key
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.OauthToken
  commentId: P:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.OauthToken
  id: OauthToken
  parent: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: OauthToken
  nameWithType: JobsResource.InsertMediaUpload.OauthToken
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.OauthToken
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: OauthToken
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 1297
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: OAuth 2.0 token for the current user.
  example: []
  syntax:
    content: >-
      [RequestParameter("oauth_token", RequestParameterType.Query)]

      public virtual string OauthToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("oauth_token", RequestParameterType.Query)>

      Public Overridable Property OauthToken As String
  overload: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.OauthToken*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: oauth_token
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.PrettyPrint
  commentId: P:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.PrettyPrint
  id: PrettyPrint
  parent: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: PrettyPrint
  nameWithType: JobsResource.InsertMediaUpload.PrettyPrint
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.PrettyPrint
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: PrettyPrint
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 1302
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Returns response with indentations and line breaks.
  example: []
  syntax:
    content: >-
      [RequestParameter("prettyPrint", RequestParameterType.Query)]

      public virtual bool? PrettyPrint { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <RequestParameter("prettyPrint", RequestParameterType.Query)>

      Public Overridable Property PrettyPrint As Boolean?
  overload: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.PrettyPrint*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: prettyPrint
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.QuotaUser
  commentId: P:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.QuotaUser
  id: QuotaUser
  parent: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: QuotaUser
  nameWithType: JobsResource.InsertMediaUpload.QuotaUser
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.QuotaUser
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: QuotaUser
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 1307
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: >-
    An opaque string that represents a user for quota purposes. Must not exceed 40

    characters.
  example: []
  syntax:
    content: >-
      [RequestParameter("quotaUser", RequestParameterType.Query)]

      public virtual string QuotaUser { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("quotaUser", RequestParameterType.Query)>

      Public Overridable Property QuotaUser As String
  overload: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.QuotaUser*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: quotaUser
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.UserIp
  commentId: P:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.UserIp
  id: UserIp
  parent: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: UserIp
  nameWithType: JobsResource.InsertMediaUpload.UserIp
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.UserIp
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UserIp
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 1311
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Deprecated. Please use quotaUser instead.
  example: []
  syntax:
    content: >-
      [RequestParameter("userIp", RequestParameterType.Query)]

      public virtual string UserIp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("userIp", RequestParameterType.Query)>

      Public Overridable Property UserIp As String
  overload: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.UserIp*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: userIp
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.ProjectId
  commentId: P:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.ProjectId
  id: ProjectId
  parent: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: JobsResource.InsertMediaUpload.ProjectId
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.ProjectId
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ProjectId
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 1316
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Project ID of the project that will be billed for the job
  example: []
  syntax:
    content: >-
      [RequestParameter("projectId", RequestParameterType.Path)]

      public virtual string ProjectId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("projectId", RequestParameterType.Path)>

      Public Overridable ReadOnly Property ProjectId As String
  overload: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.ProjectId*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: projectId
    - type: Google.Apis.Util.RequestParameterType
      value: 0
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.#ctor(Google.Apis.Services.IClientService,Google.Apis.Bigquery.v2.Data.Job,System.String,System.IO.Stream,System.String)
  commentId: M:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.#ctor(Google.Apis.Services.IClientService,Google.Apis.Bigquery.v2.Data.Job,System.String,System.IO.Stream,System.String)
  id: '#ctor(Google.Apis.Services.IClientService,Google.Apis.Bigquery.v2.Data.Job,System.String,System.IO.Stream,System.String)'
  parent: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: InsertMediaUpload(IClientService, Job, String, Stream, String)
  nameWithType: JobsResource.InsertMediaUpload.InsertMediaUpload(IClientService, Job, String, Stream, String)
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.InsertMediaUpload(Google.Apis.Services.IClientService, Google.Apis.Bigquery.v2.Data.Job, System.String, System.IO.Stream, System.String)
  type: Constructor
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 1320
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Constructs a new Insert media upload instance.
  example: []
  syntax:
    content: public InsertMediaUpload(IClientService service, Job body, string projectId, Stream stream, string contentType)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
    - id: body
      type: Google.Apis.Bigquery.v2.Data.Job
    - id: projectId
      type: System.String
    - id: stream
      type: System.IO.Stream
    - id: contentType
      type: System.String
    content.vb: Public Sub New(service As IClientService, body As Job, projectId As String, stream As Stream, contentType As String)
  overload: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Apis.Bigquery.v2
  commentId: N:Google.Apis.Bigquery.v2
  isExternal: false
  name: Google.Apis.Bigquery.v2
  nameWithType: Google.Apis.Bigquery.v2
  fullName: Google.Apis.Bigquery.v2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Upload.ResumableUpload
  commentId: T:Google.Apis.Upload.ResumableUpload
  parent: Google.Apis.Upload
  isExternal: true
  name: ResumableUpload
  nameWithType: ResumableUpload
  fullName: Google.Apis.Upload.ResumableUpload
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}
  commentId: T:Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}
  parent: Google.Apis.Upload
  definition: Google.Apis.Upload.ResumableUpload`1
  name: ResumableUpload<Job>
  nameWithType: ResumableUpload<Job>
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Bigquery.v2.Data.Job>
  nameWithType.vb: ResumableUpload(Of Job)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Bigquery.v2.Data.Job)
  name.vb: ResumableUpload(Of Job)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`1
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Bigquery.v2.Data.Job
    name: Job
    nameWithType: Job
    fullName: Google.Apis.Bigquery.v2.Data.Job
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`1
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Bigquery.v2.Data.Job
    name: Job
    nameWithType: Job
    fullName: Google.Apis.Bigquery.v2.Data.Job
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}
  commentId: T:Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}
  parent: Google.Apis.Upload
  definition: Google.Apis.Upload.ResumableUpload`2
  name: ResumableUpload<Job, Job>
  nameWithType: ResumableUpload<Job, Job>
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Bigquery.v2.Data.Job, Google.Apis.Bigquery.v2.Data.Job>
  nameWithType.vb: ResumableUpload(Of Job, Job)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Bigquery.v2.Data.Job, Google.Apis.Bigquery.v2.Data.Job)
  name.vb: ResumableUpload(Of Job, Job)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`2
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Bigquery.v2.Data.Job
    name: Job
    nameWithType: Job
    fullName: Google.Apis.Bigquery.v2.Data.Job
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Bigquery.v2.Data.Job
    name: Job
    nameWithType: Job
    fullName: Google.Apis.Bigquery.v2.Data.Job
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`2
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Bigquery.v2.Data.Job
    name: Job
    nameWithType: Job
    fullName: Google.Apis.Bigquery.v2.Data.Job
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Bigquery.v2.Data.Job
    name: Job
    nameWithType: Job
    fullName: Google.Apis.Bigquery.v2.Data.Job
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}.ProcessResponse(System.Net.Http.HttpResponseMessage)
  commentId: M:Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}.ProcessResponse(System.Net.Http.HttpResponseMessage)
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}
  definition: Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
  name: ProcessResponse(HttpResponseMessage)
  nameWithType: ResumableUpload<Job, Job>.ProcessResponse(HttpResponseMessage)
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Bigquery.v2.Data.Job, Google.Apis.Bigquery.v2.Data.Job>.ProcessResponse(System.Net.Http.HttpResponseMessage)
  nameWithType.vb: ResumableUpload(Of Job, Job).ProcessResponse(HttpResponseMessage)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Bigquery.v2.Data.Job, Google.Apis.Bigquery.v2.Data.Job).ProcessResponse(System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload<Job, Job>.ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Bigquery.v2.Data.Job, Google.Apis.Bigquery.v2.Data.Job>.ProcessResponse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload(Of Job, Job).ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Bigquery.v2.Data.Job, Google.Apis.Bigquery.v2.Data.Job).ProcessResponse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}.ResponseBody
  commentId: P:Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}.ResponseBody
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}
  definition: Google.Apis.Upload.ResumableUpload`2.ResponseBody
  name: ResponseBody
  nameWithType: ResumableUpload<Job, Job>.ResponseBody
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Bigquery.v2.Data.Job, Google.Apis.Bigquery.v2.Data.Job>.ResponseBody
  nameWithType.vb: ResumableUpload(Of Job, Job).ResponseBody
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Bigquery.v2.Data.Job, Google.Apis.Bigquery.v2.Data.Job).ResponseBody
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}.ResponseReceived
  commentId: E:Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}.ResponseReceived
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job,Google.Apis.Bigquery.v2.Data.Job}
  definition: Google.Apis.Upload.ResumableUpload`2.ResponseReceived
  name: ResponseReceived
  nameWithType: ResumableUpload<Job, Job>.ResponseReceived
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Bigquery.v2.Data.Job, Google.Apis.Bigquery.v2.Data.Job>.ResponseReceived
  nameWithType.vb: ResumableUpload(Of Job, Job).ResponseReceived
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Bigquery.v2.Data.Job, Google.Apis.Bigquery.v2.Data.Job).ResponseReceived
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.InitiateSessionAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.InitiateSessionAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}
  definition: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
  name: InitiateSessionAsync(CancellationToken)
  nameWithType: ResumableUpload<Job>.InitiateSessionAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Bigquery.v2.Data.Job>.InitiateSessionAsync(System.Threading.CancellationToken)
  nameWithType.vb: ResumableUpload(Of Job).InitiateSessionAsync(CancellationToken)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Bigquery.v2.Data.Job).InitiateSessionAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
    name: InitiateSessionAsync
    nameWithType: ResumableUpload<Job>.InitiateSessionAsync
    fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Bigquery.v2.Data.Job>.InitiateSessionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
    name: InitiateSessionAsync
    nameWithType: ResumableUpload(Of Job).InitiateSessionAsync
    fullName: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Bigquery.v2.Data.Job).InitiateSessionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.Service
  commentId: P:Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.Service
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}
  definition: Google.Apis.Upload.ResumableUpload`1.Service
  name: Service
  nameWithType: ResumableUpload<Job>.Service
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Bigquery.v2.Data.Job>.Service
  nameWithType.vb: ResumableUpload(Of Job).Service
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Bigquery.v2.Data.Job).Service
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.Path
  commentId: P:Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.Path
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}
  definition: Google.Apis.Upload.ResumableUpload`1.Path
  name: Path
  nameWithType: ResumableUpload<Job>.Path
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Bigquery.v2.Data.Job>.Path
  nameWithType.vb: ResumableUpload(Of Job).Path
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Bigquery.v2.Data.Job).Path
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.HttpMethod
  commentId: P:Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.HttpMethod
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}
  definition: Google.Apis.Upload.ResumableUpload`1.HttpMethod
  name: HttpMethod
  nameWithType: ResumableUpload<Job>.HttpMethod
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Bigquery.v2.Data.Job>.HttpMethod
  nameWithType.vb: ResumableUpload(Of Job).HttpMethod
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Bigquery.v2.Data.Job).HttpMethod
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.ContentType
  commentId: P:Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.ContentType
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}
  definition: Google.Apis.Upload.ResumableUpload`1.ContentType
  name: ContentType
  nameWithType: ResumableUpload<Job>.ContentType
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Bigquery.v2.Data.Job>.ContentType
  nameWithType.vb: ResumableUpload(Of Job).ContentType
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Bigquery.v2.Data.Job).ContentType
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.Body
  commentId: P:Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}.Body
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Bigquery.v2.Data.Job}
  definition: Google.Apis.Upload.ResumableUpload`1.Body
  name: Body
  nameWithType: ResumableUpload<Job>.Body
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Bigquery.v2.Data.Job>.Body
  nameWithType.vb: ResumableUpload(Of Job).Body
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Bigquery.v2.Data.Job).Body
- uid: Google.Apis.Upload.ResumableUpload.MinimumChunkSize
  commentId: F:Google.Apis.Upload.ResumableUpload.MinimumChunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: MinimumChunkSize
  nameWithType: ResumableUpload.MinimumChunkSize
  fullName: Google.Apis.Upload.ResumableUpload.MinimumChunkSize
- uid: Google.Apis.Upload.ResumableUpload.DefaultChunkSize
  commentId: F:Google.Apis.Upload.ResumableUpload.DefaultChunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: DefaultChunkSize
  nameWithType: ResumableUpload.DefaultChunkSize
  fullName: Google.Apis.Upload.ResumableUpload.DefaultChunkSize
- uid: Google.Apis.Upload.ResumableUpload.chunkSize
  commentId: F:Google.Apis.Upload.ResumableUpload.chunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: chunkSize
  nameWithType: ResumableUpload.chunkSize
  fullName: Google.Apis.Upload.ResumableUpload.chunkSize
- uid: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
  commentId: M:Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: CreateFromUploadUri(Uri, Stream, ResumableUploadOptions)
  nameWithType: ResumableUpload.CreateFromUploadUri(Uri, Stream, ResumableUploadOptions)
  fullName: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri, System.IO.Stream, Google.Apis.Upload.ResumableUploadOptions)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
    name: CreateFromUploadUri
    nameWithType: ResumableUpload.CreateFromUploadUri
    fullName: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Upload.ResumableUploadOptions
    name: ResumableUploadOptions
    nameWithType: ResumableUploadOptions
    fullName: Google.Apis.Upload.ResumableUploadOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
    name: CreateFromUploadUri
    nameWithType: ResumableUpload.CreateFromUploadUri
    fullName: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Upload.ResumableUploadOptions
    name: ResumableUploadOptions
    nameWithType: ResumableUploadOptions
    fullName: Google.Apis.Upload.ResumableUploadOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.GetProgress
  commentId: M:Google.Apis.Upload.ResumableUpload.GetProgress
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: GetProgress()
  nameWithType: ResumableUpload.GetProgress()
  fullName: Google.Apis.Upload.ResumableUpload.GetProgress()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.GetProgress
    name: GetProgress
    nameWithType: ResumableUpload.GetProgress
    fullName: Google.Apis.Upload.ResumableUpload.GetProgress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.GetProgress
    name: GetProgress
    nameWithType: ResumableUpload.GetProgress
    fullName: Google.Apis.Upload.ResumableUpload.GetProgress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.Upload
  commentId: M:Google.Apis.Upload.ResumableUpload.Upload
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: Upload()
  nameWithType: ResumableUpload.Upload()
  fullName: Google.Apis.Upload.ResumableUpload.Upload()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.Upload
    name: Upload
    nameWithType: ResumableUpload.Upload
    fullName: Google.Apis.Upload.ResumableUpload.Upload
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.Upload
    name: Upload
    nameWithType: ResumableUpload.Upload
    fullName: Google.Apis.Upload.ResumableUpload.Upload
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.UploadAsync
  commentId: M:Google.Apis.Upload.ResumableUpload.UploadAsync
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: UploadAsync()
  nameWithType: ResumableUpload.UploadAsync()
  fullName: Google.Apis.Upload.ResumableUpload.UploadAsync()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: UploadAsync(CancellationToken)
  nameWithType: ResumableUpload.UploadAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.Resume
  commentId: M:Google.Apis.Upload.ResumableUpload.Resume
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: Resume()
  nameWithType: ResumableUpload.Resume()
  fullName: Google.Apis.Upload.ResumableUpload.Resume()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.Resume
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.Resume
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  commentId: M:Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: Resume(Uri)
  nameWithType: ResumableUpload.Resume(Uri)
  fullName: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ResumeAsync()
  nameWithType: ResumableUpload.ResumeAsync()
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ResumeAsync(CancellationToken)
  nameWithType: ResumableUpload.ResumeAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ResumeAsync(Uri)
  nameWithType: ResumableUpload.ResumeAsync(Uri)
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ResumeAsync(Uri, CancellationToken)
  nameWithType: ResumableUpload.ResumeAsync(Uri, CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
  commentId: M:Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ProcessResponse(HttpResponseMessage)
  nameWithType: ResumableUpload.ProcessResponse(HttpResponseMessage)
  fullName: Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload.ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload.ProcessResponse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload.ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload.ProcessResponse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: SendNextChunkAsync(Stream, CancellationToken)
  nameWithType: ResumableUpload.SendNextChunkAsync(Stream, CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: SendNextChunkAsync
    nameWithType: ResumableUpload.SendNextChunkAsync
    fullName: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: SendNextChunkAsync
    nameWithType: ResumableUpload.SendNextChunkAsync
    fullName: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
  commentId: M:Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ExceptionForResponseAsync(HttpResponseMessage)
  nameWithType: ResumableUpload.ExceptionForResponseAsync(HttpResponseMessage)
  fullName: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
    name: ExceptionForResponseAsync
    nameWithType: ResumableUpload.ExceptionForResponseAsync
    fullName: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
    name: ExceptionForResponseAsync
    nameWithType: ResumableUpload.ExceptionForResponseAsync
    fullName: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.Options
  commentId: P:Google.Apis.Upload.ResumableUpload.Options
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: Options
  nameWithType: ResumableUpload.Options
  fullName: Google.Apis.Upload.ResumableUpload.Options
- uid: Google.Apis.Upload.ResumableUpload.ContentStream
  commentId: P:Google.Apis.Upload.ResumableUpload.ContentStream
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ContentStream
  nameWithType: ResumableUpload.ContentStream
  fullName: Google.Apis.Upload.ResumableUpload.ContentStream
- uid: Google.Apis.Upload.ResumableUpload.ChunkSize
  commentId: P:Google.Apis.Upload.ResumableUpload.ChunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ChunkSize
  nameWithType: ResumableUpload.ChunkSize
  fullName: Google.Apis.Upload.ResumableUpload.ChunkSize
- uid: Google.Apis.Upload.ResumableUpload.UploadStreamInterceptor
  commentId: P:Google.Apis.Upload.ResumableUpload.UploadStreamInterceptor
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: UploadStreamInterceptor
  nameWithType: ResumableUpload.UploadStreamInterceptor
  fullName: Google.Apis.Upload.ResumableUpload.UploadStreamInterceptor
- uid: Google.Apis.Upload.ResumableUpload.ProgressChanged
  commentId: E:Google.Apis.Upload.ResumableUpload.ProgressChanged
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ProgressChanged
  nameWithType: ResumableUpload.ProgressChanged
  fullName: Google.Apis.Upload.ResumableUpload.ProgressChanged
- uid: Google.Apis.Upload.ResumableUpload.UploadSessionData
  commentId: E:Google.Apis.Upload.ResumableUpload.UploadSessionData
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: UploadSessionData
  nameWithType: ResumableUpload.UploadSessionData
  fullName: Google.Apis.Upload.ResumableUpload.UploadSessionData
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Upload
  commentId: N:Google.Apis.Upload
  isExternal: false
  name: Google.Apis.Upload
  nameWithType: Google.Apis.Upload
  fullName: Google.Apis.Upload
- uid: Google.Apis.Upload.ResumableUpload`1
  commentId: T:Google.Apis.Upload.ResumableUpload`1
  isExternal: true
  name: ResumableUpload<TRequest>
  nameWithType: ResumableUpload<TRequest>
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>
  nameWithType.vb: ResumableUpload(Of TRequest)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest)
  name.vb: ResumableUpload(Of TRequest)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`1
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`1
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload`2
  commentId: T:Google.Apis.Upload.ResumableUpload`2
  isExternal: true
  name: ResumableUpload<TRequest, TResponse>
  nameWithType: ResumableUpload<TRequest, TResponse>
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse)
  name.vb: ResumableUpload(Of TRequest, TResponse)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`2
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`2
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
  commentId: M:Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
  isExternal: true
  name: ProcessResponse(HttpResponseMessage)
  nameWithType: ResumableUpload<TRequest, TResponse>.ProcessResponse(HttpResponseMessage)
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ProcessResponse(System.Net.Http.HttpResponseMessage)
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse).ProcessResponse(HttpResponseMessage)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ProcessResponse(System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload<TRequest, TResponse>.ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ProcessResponse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload(Of TRequest, TResponse).ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ProcessResponse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload`2.ResponseBody
  commentId: P:Google.Apis.Upload.ResumableUpload`2.ResponseBody
  isExternal: true
  name: ResponseBody
  nameWithType: ResumableUpload<TRequest, TResponse>.ResponseBody
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ResponseBody
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse).ResponseBody
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ResponseBody
- uid: Google.Apis.Upload.ResumableUpload`2.ResponseReceived
  commentId: E:Google.Apis.Upload.ResumableUpload`2.ResponseReceived
  isExternal: true
  name: ResponseReceived
  nameWithType: ResumableUpload<TRequest, TResponse>.ResponseReceived
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ResponseReceived
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse).ResponseReceived
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ResponseReceived
- uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
  isExternal: true
  name: InitiateSessionAsync(CancellationToken)
  nameWithType: ResumableUpload<TRequest>.InitiateSessionAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.InitiateSessionAsync(System.Threading.CancellationToken)
  nameWithType.vb: ResumableUpload(Of TRequest).InitiateSessionAsync(CancellationToken)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).InitiateSessionAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
    name: InitiateSessionAsync
    nameWithType: ResumableUpload<TRequest>.InitiateSessionAsync
    fullName: Google.Apis.Upload.ResumableUpload<TRequest>.InitiateSessionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
    name: InitiateSessionAsync
    nameWithType: ResumableUpload(Of TRequest).InitiateSessionAsync
    fullName: Google.Apis.Upload.ResumableUpload(Of TRequest).InitiateSessionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload`1.Service
  commentId: P:Google.Apis.Upload.ResumableUpload`1.Service
  isExternal: true
  name: Service
  nameWithType: ResumableUpload<TRequest>.Service
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Service
  nameWithType.vb: ResumableUpload(Of TRequest).Service
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Service
- uid: Google.Apis.Upload.ResumableUpload`1.Path
  commentId: P:Google.Apis.Upload.ResumableUpload`1.Path
  isExternal: true
  name: Path
  nameWithType: ResumableUpload<TRequest>.Path
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Path
  nameWithType.vb: ResumableUpload(Of TRequest).Path
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Path
- uid: Google.Apis.Upload.ResumableUpload`1.HttpMethod
  commentId: P:Google.Apis.Upload.ResumableUpload`1.HttpMethod
  isExternal: true
  name: HttpMethod
  nameWithType: ResumableUpload<TRequest>.HttpMethod
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.HttpMethod
  nameWithType.vb: ResumableUpload(Of TRequest).HttpMethod
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).HttpMethod
- uid: Google.Apis.Upload.ResumableUpload`1.ContentType
  commentId: P:Google.Apis.Upload.ResumableUpload`1.ContentType
  isExternal: true
  name: ContentType
  nameWithType: ResumableUpload<TRequest>.ContentType
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.ContentType
  nameWithType.vb: ResumableUpload(Of TRequest).ContentType
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).ContentType
- uid: Google.Apis.Upload.ResumableUpload`1.Body
  commentId: P:Google.Apis.Upload.ResumableUpload`1.Body
  isExternal: true
  name: Body
  nameWithType: ResumableUpload<TRequest>.Body
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Body
  nameWithType.vb: ResumableUpload(Of TRequest).Body
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Body
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Alt*
  commentId: Overload:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Alt
  isExternal: false
  name: Alt
  nameWithType: JobsResource.InsertMediaUpload.Alt
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Alt
- uid: System.Nullable{Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.AltEnum}
  commentId: T:System.Nullable{Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.AltEnum}
  parent: System
  definition: System.Nullable`1
  name: Nullable<JobsResource.InsertMediaUpload.AltEnum>
  nameWithType: Nullable<JobsResource.InsertMediaUpload.AltEnum>
  fullName: System.Nullable<Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.AltEnum>
  nameWithType.vb: Nullable(Of JobsResource.InsertMediaUpload.AltEnum)
  fullName.vb: System.Nullable(Of Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.AltEnum)
  name.vb: Nullable(Of JobsResource.InsertMediaUpload.AltEnum)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.AltEnum
    name: JobsResource.InsertMediaUpload.AltEnum
    nameWithType: JobsResource.InsertMediaUpload.AltEnum
    fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.AltEnum
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.AltEnum
    name: JobsResource.InsertMediaUpload.AltEnum
    nameWithType: JobsResource.InsertMediaUpload.AltEnum
    fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.AltEnum
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Fields*
  commentId: Overload:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Fields
  isExternal: false
  name: Fields
  nameWithType: JobsResource.InsertMediaUpload.Fields
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Fields
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Key*
  commentId: Overload:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Key
  isExternal: false
  name: Key
  nameWithType: JobsResource.InsertMediaUpload.Key
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.Key
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.OauthToken*
  commentId: Overload:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.OauthToken
  isExternal: false
  name: OauthToken
  nameWithType: JobsResource.InsertMediaUpload.OauthToken
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.OauthToken
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.PrettyPrint*
  commentId: Overload:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.PrettyPrint
  isExternal: false
  name: PrettyPrint
  nameWithType: JobsResource.InsertMediaUpload.PrettyPrint
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.PrettyPrint
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.QuotaUser*
  commentId: Overload:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.QuotaUser
  isExternal: false
  name: QuotaUser
  nameWithType: JobsResource.InsertMediaUpload.QuotaUser
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.QuotaUser
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.UserIp*
  commentId: Overload:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.UserIp
  isExternal: false
  name: UserIp
  nameWithType: JobsResource.InsertMediaUpload.UserIp
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.UserIp
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.ProjectId*
  commentId: Overload:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.ProjectId
  isExternal: false
  name: ProjectId
  nameWithType: JobsResource.InsertMediaUpload.ProjectId
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.ProjectId
- uid: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.#ctor*
  commentId: Overload:Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.#ctor
  isExternal: false
  name: InsertMediaUpload
  nameWithType: JobsResource.InsertMediaUpload.InsertMediaUpload
  fullName: Google.Apis.Bigquery.v2.JobsResource.InsertMediaUpload.InsertMediaUpload
- uid: Google.Apis.Services.IClientService
  commentId: T:Google.Apis.Services.IClientService
  parent: Google.Apis.Services
  isExternal: true
  name: IClientService
  nameWithType: IClientService
  fullName: Google.Apis.Services.IClientService
- uid: Google.Apis.Bigquery.v2.Data.Job
  commentId: T:Google.Apis.Bigquery.v2.Data.Job
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Job
  nameWithType: Job
  fullName: Google.Apis.Bigquery.v2.Data.Job
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Google.Apis.Services
  commentId: N:Google.Apis.Services
  isExternal: false
  name: Google.Apis.Services
  nameWithType: Google.Apis.Services
  fullName: Google.Apis.Services
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
