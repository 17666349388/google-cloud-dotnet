### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData
  commentId: T:Google.Apis.Bigquery.v2.Data.TableList.TablesData
  id: TableList.TablesData
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.TableList.TablesData.Clustering
  - Google.Apis.Bigquery.v2.Data.TableList.TablesData.CreationTime
  - Google.Apis.Bigquery.v2.Data.TableList.TablesData.ExpirationTime
  - Google.Apis.Bigquery.v2.Data.TableList.TablesData.FriendlyName
  - Google.Apis.Bigquery.v2.Data.TableList.TablesData.Id
  - Google.Apis.Bigquery.v2.Data.TableList.TablesData.Kind
  - Google.Apis.Bigquery.v2.Data.TableList.TablesData.Labels
  - Google.Apis.Bigquery.v2.Data.TableList.TablesData.TableReference
  - Google.Apis.Bigquery.v2.Data.TableList.TablesData.TimePartitioning
  - Google.Apis.Bigquery.v2.Data.TableList.TablesData.Type
  - Google.Apis.Bigquery.v2.Data.TableList.TablesData.View
  langs:
  - csharp
  - vb
  name: TableList.TablesData
  nameWithType: TableList.TablesData
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TablesData
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4636
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: public class TablesData
    content.vb: Public Class TablesData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Clustering
  commentId: P:Google.Apis.Bigquery.v2.Data.TableList.TablesData.Clustering
  id: Clustering
  parent: Google.Apis.Bigquery.v2.Data.TableList.TablesData
  langs:
  - csharp
  - vb
  name: Clustering
  nameWithType: TableList.TablesData.Clustering
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Clustering
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Clustering
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4639
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Experimental] Clustering specification for this table, if configured.'
  example: []
  syntax:
    content: >-
      [JsonProperty("clustering")]

      public virtual Clustering Clustering { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.Clustering
    content.vb: >-
      <JsonProperty("clustering")>

      Public Overridable Property Clustering As Clustering
  overload: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Clustering*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: clustering
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.CreationTime
  commentId: P:Google.Apis.Bigquery.v2.Data.TableList.TablesData.CreationTime
  id: CreationTime
  parent: Google.Apis.Bigquery.v2.Data.TableList.TablesData
  langs:
  - csharp
  - vb
  name: CreationTime
  nameWithType: TableList.TablesData.CreationTime
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.CreationTime
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CreationTime
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4643
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The time when this table was created, in milliseconds since the epoch.
  example: []
  syntax:
    content: >-
      [JsonProperty("creationTime")]

      public virtual long? CreationTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("creationTime")>

      Public Overridable Property CreationTime As Long?
  overload: Google.Apis.Bigquery.v2.Data.TableList.TablesData.CreationTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: creationTime
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ExpirationTime
  commentId: P:Google.Apis.Bigquery.v2.Data.TableList.TablesData.ExpirationTime
  id: ExpirationTime
  parent: Google.Apis.Bigquery.v2.Data.TableList.TablesData
  langs:
  - csharp
  - vb
  name: ExpirationTime
  nameWithType: TableList.TablesData.ExpirationTime
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ExpirationTime
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExpirationTime
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4649
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] The time when this table expires, in milliseconds since the epoch. If not present,

    the table will persist indefinitely. Expired tables will be deleted and their storage

    reclaimed.
  example: []
  syntax:
    content: >-
      [JsonProperty("expirationTime")]

      public virtual long? ExpirationTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("expirationTime")>

      Public Overridable Property ExpirationTime As Long?
  overload: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ExpirationTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: expirationTime
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.FriendlyName
  commentId: P:Google.Apis.Bigquery.v2.Data.TableList.TablesData.FriendlyName
  id: FriendlyName
  parent: Google.Apis.Bigquery.v2.Data.TableList.TablesData
  langs:
  - csharp
  - vb
  name: FriendlyName
  nameWithType: TableList.TablesData.FriendlyName
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.FriendlyName
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: FriendlyName
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4653
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The user-friendly name for this table.
  example: []
  syntax:
    content: >-
      [JsonProperty("friendlyName")]

      public virtual string FriendlyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("friendlyName")>

      Public Overridable Property FriendlyName As String
  overload: Google.Apis.Bigquery.v2.Data.TableList.TablesData.FriendlyName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: friendlyName
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Id
  commentId: P:Google.Apis.Bigquery.v2.Data.TableList.TablesData.Id
  id: Id
  parent: Google.Apis.Bigquery.v2.Data.TableList.TablesData
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TableList.TablesData.Id
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Id
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Id
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4657
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: An opaque ID of the table
  example: []
  syntax:
    content: >-
      [JsonProperty("id")]

      public virtual string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id")>

      Public Overridable Property Id As String
  overload: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Kind
  commentId: P:Google.Apis.Bigquery.v2.Data.TableList.TablesData.Kind
  id: Kind
  parent: Google.Apis.Bigquery.v2.Data.TableList.TablesData
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: TableList.TablesData.Kind
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Kind
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Kind
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4661
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The resource type.
  example: []
  syntax:
    content: >-
      [JsonProperty("kind")]

      public virtual string Kind { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("kind")>

      Public Overridable Property Kind As String
  overload: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Kind*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: kind
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Labels
  commentId: P:Google.Apis.Bigquery.v2.Data.TableList.TablesData.Labels
  id: Labels
  parent: Google.Apis.Bigquery.v2.Data.TableList.TablesData
  langs:
  - csharp
  - vb
  name: Labels
  nameWithType: TableList.TablesData.Labels
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Labels
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Labels
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4666
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    The labels associated with this table. You can use these to organize and group your

    tables.
  example: []
  syntax:
    content: >-
      [JsonProperty("labels")]

      public virtual IDictionary<string, string> Labels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: >-
      <JsonProperty("labels")>

      Public Overridable Property Labels As IDictionary(Of String, String)
  overload: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Labels*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: labels
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.TableReference
  commentId: P:Google.Apis.Bigquery.v2.Data.TableList.TablesData.TableReference
  id: TableReference
  parent: Google.Apis.Bigquery.v2.Data.TableList.TablesData
  langs:
  - csharp
  - vb
  name: TableReference
  nameWithType: TableList.TablesData.TableReference
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.TableReference
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TableReference
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4670
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: A reference uniquely identifying the table.
  example: []
  syntax:
    content: >-
      [JsonProperty("tableReference")]

      public virtual TableReference TableReference { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.TableReference
    content.vb: >-
      <JsonProperty("tableReference")>

      Public Overridable Property TableReference As TableReference
  overload: Google.Apis.Bigquery.v2.Data.TableList.TablesData.TableReference*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tableReference
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.TimePartitioning
  commentId: P:Google.Apis.Bigquery.v2.Data.TableList.TablesData.TimePartitioning
  id: TimePartitioning
  parent: Google.Apis.Bigquery.v2.Data.TableList.TablesData
  langs:
  - csharp
  - vb
  name: TimePartitioning
  nameWithType: TableList.TablesData.TimePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.TimePartitioning
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TimePartitioning
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4674
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The time-based partitioning specification for this table, if configured.
  example: []
  syntax:
    content: >-
      [JsonProperty("timePartitioning")]

      public virtual TimePartitioning TimePartitioning { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.TimePartitioning
    content.vb: >-
      <JsonProperty("timePartitioning")>

      Public Overridable Property TimePartitioning As TimePartitioning
  overload: Google.Apis.Bigquery.v2.Data.TableList.TablesData.TimePartitioning*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: timePartitioning
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Type
  commentId: P:Google.Apis.Bigquery.v2.Data.TableList.TablesData.Type
  id: Type
  parent: Google.Apis.Bigquery.v2.Data.TableList.TablesData
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: TableList.TablesData.Type
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Type
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Type
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4678
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: 'The type of table. Possible values are: TABLE, VIEW.'
  example: []
  syntax:
    content: >-
      [JsonProperty("type")]

      public virtual string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("type")>

      Public Overridable Property Type As String
  overload: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.View
  commentId: P:Google.Apis.Bigquery.v2.Data.TableList.TablesData.View
  id: View
  parent: Google.Apis.Bigquery.v2.Data.TableList.TablesData
  langs:
  - csharp
  - vb
  name: View
  nameWithType: TableList.TablesData.View
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.View
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: View
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4682
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Additional details for a view.
  example: []
  syntax:
    content: >-
      [JsonProperty("view")]

      public virtual TableList.TablesData.ViewData View { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData
    content.vb: >-
      <JsonProperty("view")>

      Public Overridable Property View As TableList.TablesData.ViewData
  overload: Google.Apis.Bigquery.v2.Data.TableList.TablesData.View*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: view
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Clustering*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableList.TablesData.Clustering
  isExternal: false
  name: Clustering
  nameWithType: TableList.TablesData.Clustering
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Clustering
- uid: Google.Apis.Bigquery.v2.Data.Clustering
  commentId: T:Google.Apis.Bigquery.v2.Data.Clustering
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Clustering
  nameWithType: Clustering
  fullName: Google.Apis.Bigquery.v2.Data.Clustering
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.CreationTime*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableList.TablesData.CreationTime
  isExternal: false
  name: CreationTime
  nameWithType: TableList.TablesData.CreationTime
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.CreationTime
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ExpirationTime*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableList.TablesData.ExpirationTime
  isExternal: false
  name: ExpirationTime
  nameWithType: TableList.TablesData.ExpirationTime
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ExpirationTime
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.FriendlyName*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableList.TablesData.FriendlyName
  isExternal: false
  name: FriendlyName
  nameWithType: TableList.TablesData.FriendlyName
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.FriendlyName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Id*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableList.TablesData.Id
  isExternal: false
  name: Id
  nameWithType: TableList.TablesData.Id
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Id
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Kind*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableList.TablesData.Kind
  isExternal: false
  name: Kind
  nameWithType: TableList.TablesData.Kind
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Kind
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Labels*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableList.TablesData.Labels
  isExternal: false
  name: Labels
  nameWithType: TableList.TablesData.Labels
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Labels
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.TableReference*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableList.TablesData.TableReference
  isExternal: false
  name: TableReference
  nameWithType: TableList.TablesData.TableReference
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.TableReference
- uid: Google.Apis.Bigquery.v2.Data.TableReference
  commentId: T:Google.Apis.Bigquery.v2.Data.TableReference
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: TableReference
  nameWithType: TableReference
  fullName: Google.Apis.Bigquery.v2.Data.TableReference
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.TimePartitioning*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableList.TablesData.TimePartitioning
  isExternal: false
  name: TimePartitioning
  nameWithType: TableList.TablesData.TimePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.TimePartitioning
- uid: Google.Apis.Bigquery.v2.Data.TimePartitioning
  commentId: T:Google.Apis.Bigquery.v2.Data.TimePartitioning
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: TimePartitioning
  nameWithType: TimePartitioning
  fullName: Google.Apis.Bigquery.v2.Data.TimePartitioning
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Type*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableList.TablesData.Type
  isExternal: false
  name: Type
  nameWithType: TableList.TablesData.Type
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.Type
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.View*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableList.TablesData.View
  isExternal: false
  name: View
  nameWithType: TableList.TablesData.View
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.View
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData
  commentId: T:Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: TableList.TablesData.ViewData
  nameWithType: TableList.TablesData.ViewData
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData
