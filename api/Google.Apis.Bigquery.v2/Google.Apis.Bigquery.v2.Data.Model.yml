### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.Model
  commentId: T:Google.Apis.Bigquery.v2.Data.Model
  id: Model
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.Model.CreationTime
  - Google.Apis.Bigquery.v2.Data.Model.Description
  - Google.Apis.Bigquery.v2.Data.Model.EncryptionConfiguration
  - Google.Apis.Bigquery.v2.Data.Model.ETag
  - Google.Apis.Bigquery.v2.Data.Model.ExpirationTime
  - Google.Apis.Bigquery.v2.Data.Model.FeatureColumns
  - Google.Apis.Bigquery.v2.Data.Model.FriendlyName
  - Google.Apis.Bigquery.v2.Data.Model.LabelColumns
  - Google.Apis.Bigquery.v2.Data.Model.Labels
  - Google.Apis.Bigquery.v2.Data.Model.LastModifiedTime
  - Google.Apis.Bigquery.v2.Data.Model.Location
  - Google.Apis.Bigquery.v2.Data.Model.ModelReference
  - Google.Apis.Bigquery.v2.Data.Model.ModelType
  - Google.Apis.Bigquery.v2.Data.Model.TrainingRuns
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: Model
  fullName: Google.Apis.Bigquery.v2.Data.Model
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Model
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5816
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: 'public class Model : IDirectResponseSchema'
    content.vb: >-
      Public Class Model
          Implements IDirectResponseSchema
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Requests.IDirectResponseSchema
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.Model.CreationTime
  commentId: P:Google.Apis.Bigquery.v2.Data.Model.CreationTime
  id: CreationTime
  parent: Google.Apis.Bigquery.v2.Data.Model
  langs:
  - csharp
  - vb
  name: CreationTime
  nameWithType: Model.CreationTime
  fullName: Google.Apis.Bigquery.v2.Data.Model.CreationTime
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CreationTime
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5819
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Output only. The time when this model was created, in millisecs since the epoch.
  example: []
  syntax:
    content: >-
      [JsonProperty("creationTime")]

      public virtual long? CreationTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("creationTime")>

      Public Overridable Property CreationTime As Long?
  overload: Google.Apis.Bigquery.v2.Data.Model.CreationTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: creationTime
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Model.Description
  commentId: P:Google.Apis.Bigquery.v2.Data.Model.Description
  id: Description
  parent: Google.Apis.Bigquery.v2.Data.Model
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Model.Description
  fullName: Google.Apis.Bigquery.v2.Data.Model.Description
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Description
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5823
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Optional. A user-friendly description of this model.
  example: []
  syntax:
    content: >-
      [JsonProperty("description")]

      public virtual string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("description")>

      Public Overridable Property Description As String
  overload: Google.Apis.Bigquery.v2.Data.Model.Description*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: description
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Model.EncryptionConfiguration
  commentId: P:Google.Apis.Bigquery.v2.Data.Model.EncryptionConfiguration
  id: EncryptionConfiguration
  parent: Google.Apis.Bigquery.v2.Data.Model
  langs:
  - csharp
  - vb
  name: EncryptionConfiguration
  nameWithType: Model.EncryptionConfiguration
  fullName: Google.Apis.Bigquery.v2.Data.Model.EncryptionConfiguration
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: EncryptionConfiguration
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5828
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Custom encryption configuration (e.g., Cloud KMS keys). This shows the encryption configuration of

    the model data while stored in BigQuery storage.
  example: []
  syntax:
    content: >-
      [JsonProperty("encryptionConfiguration")]

      public virtual EncryptionConfiguration EncryptionConfiguration { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.EncryptionConfiguration
    content.vb: >-
      <JsonProperty("encryptionConfiguration")>

      Public Overridable Property EncryptionConfiguration As EncryptionConfiguration
  overload: Google.Apis.Bigquery.v2.Data.Model.EncryptionConfiguration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: encryptionConfiguration
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Model.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.Model.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.Model
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: Model.ETag
  fullName: Google.Apis.Bigquery.v2.Data.Model.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5832
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Output only. A hash of this resource.
  example: []
  syntax:
    content: >-
      [JsonProperty("etag")]

      public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("etag")>

      Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.Model.ETag*
  implements:
  - Google.Apis.Requests.IDirectResponseSchema.ETag
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: etag
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Model.ExpirationTime
  commentId: P:Google.Apis.Bigquery.v2.Data.Model.ExpirationTime
  id: ExpirationTime
  parent: Google.Apis.Bigquery.v2.Data.Model
  langs:
  - csharp
  - vb
  name: ExpirationTime
  nameWithType: Model.ExpirationTime
  fullName: Google.Apis.Bigquery.v2.Data.Model.ExpirationTime
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExpirationTime
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5839
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Optional. The time when this model expires, in milliseconds since the epoch. If not present, the

    model will persist indefinitely. Expired models will be deleted and their storage reclaimed.  The

    defaultTableExpirationMs property of the encapsulating dataset can be used to set a default expirationTime

    on newly created models.
  example: []
  syntax:
    content: >-
      [JsonProperty("expirationTime")]

      public virtual long? ExpirationTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("expirationTime")>

      Public Overridable Property ExpirationTime As Long?
  overload: Google.Apis.Bigquery.v2.Data.Model.ExpirationTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: expirationTime
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Model.FeatureColumns
  commentId: P:Google.Apis.Bigquery.v2.Data.Model.FeatureColumns
  id: FeatureColumns
  parent: Google.Apis.Bigquery.v2.Data.Model
  langs:
  - csharp
  - vb
  name: FeatureColumns
  nameWithType: Model.FeatureColumns
  fullName: Google.Apis.Bigquery.v2.Data.Model.FeatureColumns
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: FeatureColumns
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5843
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Output only. Input feature columns that were used to train this model.
  example: []
  syntax:
    content: >-
      [JsonProperty("featureColumns")]

      public virtual IList<StandardSqlField> FeatureColumns { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.StandardSqlField}
    content.vb: >-
      <JsonProperty("featureColumns")>

      Public Overridable Property FeatureColumns As IList(Of StandardSqlField)
  overload: Google.Apis.Bigquery.v2.Data.Model.FeatureColumns*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: featureColumns
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Model.FriendlyName
  commentId: P:Google.Apis.Bigquery.v2.Data.Model.FriendlyName
  id: FriendlyName
  parent: Google.Apis.Bigquery.v2.Data.Model
  langs:
  - csharp
  - vb
  name: FriendlyName
  nameWithType: Model.FriendlyName
  fullName: Google.Apis.Bigquery.v2.Data.Model.FriendlyName
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: FriendlyName
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5847
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Optional. A descriptive name for this model.
  example: []
  syntax:
    content: >-
      [JsonProperty("friendlyName")]

      public virtual string FriendlyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("friendlyName")>

      Public Overridable Property FriendlyName As String
  overload: Google.Apis.Bigquery.v2.Data.Model.FriendlyName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: friendlyName
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Model.LabelColumns
  commentId: P:Google.Apis.Bigquery.v2.Data.Model.LabelColumns
  id: LabelColumns
  parent: Google.Apis.Bigquery.v2.Data.Model
  langs:
  - csharp
  - vb
  name: LabelColumns
  nameWithType: Model.LabelColumns
  fullName: Google.Apis.Bigquery.v2.Data.Model.LabelColumns
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LabelColumns
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5852
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Output only. Label columns that were used to train this model. The output of the model will have a

    &quot;predicted_&quot; prefix to these columns.
  example: []
  syntax:
    content: >-
      [JsonProperty("labelColumns")]

      public virtual IList<StandardSqlField> LabelColumns { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.StandardSqlField}
    content.vb: >-
      <JsonProperty("labelColumns")>

      Public Overridable Property LabelColumns As IList(Of StandardSqlField)
  overload: Google.Apis.Bigquery.v2.Data.Model.LabelColumns*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: labelColumns
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Model.Labels
  commentId: P:Google.Apis.Bigquery.v2.Data.Model.Labels
  id: Labels
  parent: Google.Apis.Bigquery.v2.Data.Model
  langs:
  - csharp
  - vb
  name: Labels
  nameWithType: Model.Labels
  fullName: Google.Apis.Bigquery.v2.Data.Model.Labels
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Labels
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5859
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    The labels associated with this model. You can use these to organize and group your models. Label

    keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters,

    underscores and dashes. International characters are allowed. Label values are optional. Label keys must

    start with a letter and each label in the list must have a different key.
  example: []
  syntax:
    content: >-
      [JsonProperty("labels")]

      public virtual IDictionary<string, string> Labels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: >-
      <JsonProperty("labels")>

      Public Overridable Property Labels As IDictionary(Of String, String)
  overload: Google.Apis.Bigquery.v2.Data.Model.Labels*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: labels
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Model.LastModifiedTime
  commentId: P:Google.Apis.Bigquery.v2.Data.Model.LastModifiedTime
  id: LastModifiedTime
  parent: Google.Apis.Bigquery.v2.Data.Model
  langs:
  - csharp
  - vb
  name: LastModifiedTime
  nameWithType: Model.LastModifiedTime
  fullName: Google.Apis.Bigquery.v2.Data.Model.LastModifiedTime
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LastModifiedTime
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5863
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Output only. The time when this model was last modified, in millisecs since the epoch.
  example: []
  syntax:
    content: >-
      [JsonProperty("lastModifiedTime")]

      public virtual long? LastModifiedTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("lastModifiedTime")>

      Public Overridable Property LastModifiedTime As Long?
  overload: Google.Apis.Bigquery.v2.Data.Model.LastModifiedTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lastModifiedTime
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Model.Location
  commentId: P:Google.Apis.Bigquery.v2.Data.Model.Location
  id: Location
  parent: Google.Apis.Bigquery.v2.Data.Model
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: Model.Location
  fullName: Google.Apis.Bigquery.v2.Data.Model.Location
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Location
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5868
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Output only. The geographic location where the model resides. This value is inherited from the

    dataset.
  example: []
  syntax:
    content: >-
      [JsonProperty("location")]

      public virtual string Location { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("location")>

      Public Overridable Property Location As String
  overload: Google.Apis.Bigquery.v2.Data.Model.Location*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: location
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Model.ModelReference
  commentId: P:Google.Apis.Bigquery.v2.Data.Model.ModelReference
  id: ModelReference
  parent: Google.Apis.Bigquery.v2.Data.Model
  langs:
  - csharp
  - vb
  name: ModelReference
  nameWithType: Model.ModelReference
  fullName: Google.Apis.Bigquery.v2.Data.Model.ModelReference
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ModelReference
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5872
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Required. Unique identifier for this model.
  example: []
  syntax:
    content: >-
      [JsonProperty("modelReference")]

      public virtual ModelReference ModelReference { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.ModelReference
    content.vb: >-
      <JsonProperty("modelReference")>

      Public Overridable Property ModelReference As ModelReference
  overload: Google.Apis.Bigquery.v2.Data.Model.ModelReference*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: modelReference
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Model.ModelType
  commentId: P:Google.Apis.Bigquery.v2.Data.Model.ModelType
  id: ModelType
  parent: Google.Apis.Bigquery.v2.Data.Model
  langs:
  - csharp
  - vb
  name: ModelType
  nameWithType: Model.ModelType
  fullName: Google.Apis.Bigquery.v2.Data.Model.ModelType
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ModelType
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5876
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Output only. Type of the model resource.
  example: []
  syntax:
    content: >-
      [JsonProperty("modelType")]

      public virtual string ModelType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("modelType")>

      Public Overridable Property ModelType As String
  overload: Google.Apis.Bigquery.v2.Data.Model.ModelType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: modelType
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Model.TrainingRuns
  commentId: P:Google.Apis.Bigquery.v2.Data.Model.TrainingRuns
  id: TrainingRuns
  parent: Google.Apis.Bigquery.v2.Data.Model
  langs:
  - csharp
  - vb
  name: TrainingRuns
  nameWithType: Model.TrainingRuns
  fullName: Google.Apis.Bigquery.v2.Data.Model.TrainingRuns
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TrainingRuns
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 5880
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Output only. Information for all training runs in increasing order of start_time.
  example: []
  syntax:
    content: >-
      [JsonProperty("trainingRuns")]

      public virtual IList<TrainingRun> TrainingRuns { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.TrainingRun}
    content.vb: >-
      <JsonProperty("trainingRuns")>

      Public Overridable Property TrainingRuns As IList(Of TrainingRun)
  overload: Google.Apis.Bigquery.v2.Data.Model.TrainingRuns*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: trainingRuns
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Requests.IDirectResponseSchema
  commentId: T:Google.Apis.Requests.IDirectResponseSchema
  parent: Google.Apis.Requests
  isExternal: true
  name: IDirectResponseSchema
  nameWithType: IDirectResponseSchema
  fullName: Google.Apis.Requests.IDirectResponseSchema
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: true
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Bigquery.v2.Data.Model.CreationTime*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Model.CreationTime
  name: CreationTime
  nameWithType: Model.CreationTime
  fullName: Google.Apis.Bigquery.v2.Data.Model.CreationTime
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.Model.Description*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Model.Description
  name: Description
  nameWithType: Model.Description
  fullName: Google.Apis.Bigquery.v2.Data.Model.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.Model.EncryptionConfiguration*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Model.EncryptionConfiguration
  name: EncryptionConfiguration
  nameWithType: Model.EncryptionConfiguration
  fullName: Google.Apis.Bigquery.v2.Data.Model.EncryptionConfiguration
- uid: Google.Apis.Bigquery.v2.Data.EncryptionConfiguration
  commentId: T:Google.Apis.Bigquery.v2.Data.EncryptionConfiguration
  parent: Google.Apis.Bigquery.v2.Data
  name: EncryptionConfiguration
  nameWithType: EncryptionConfiguration
  fullName: Google.Apis.Bigquery.v2.Data.EncryptionConfiguration
- uid: Google.Apis.Bigquery.v2.Data.Model.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Model.ETag
  name: ETag
  nameWithType: Model.ETag
  fullName: Google.Apis.Bigquery.v2.Data.Model.ETag
- uid: Google.Apis.Requests.IDirectResponseSchema.ETag
  commentId: P:Google.Apis.Requests.IDirectResponseSchema.ETag
  parent: Google.Apis.Requests.IDirectResponseSchema
  isExternal: true
  name: ETag
  nameWithType: IDirectResponseSchema.ETag
  fullName: Google.Apis.Requests.IDirectResponseSchema.ETag
- uid: Google.Apis.Bigquery.v2.Data.Model.ExpirationTime*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Model.ExpirationTime
  name: ExpirationTime
  nameWithType: Model.ExpirationTime
  fullName: Google.Apis.Bigquery.v2.Data.Model.ExpirationTime
- uid: Google.Apis.Bigquery.v2.Data.Model.FeatureColumns*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Model.FeatureColumns
  name: FeatureColumns
  nameWithType: Model.FeatureColumns
  fullName: Google.Apis.Bigquery.v2.Data.Model.FeatureColumns
- uid: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.StandardSqlField}
  commentId: T:System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.StandardSqlField}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<StandardSqlField>
  nameWithType: IList<StandardSqlField>
  fullName: System.Collections.Generic.IList<Google.Apis.Bigquery.v2.Data.StandardSqlField>
  nameWithType.vb: IList(Of StandardSqlField)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Bigquery.v2.Data.StandardSqlField)
  name.vb: IList(Of StandardSqlField)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Bigquery.v2.Data.StandardSqlField
    name: StandardSqlField
    nameWithType: StandardSqlField
    fullName: Google.Apis.Bigquery.v2.Data.StandardSqlField
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Bigquery.v2.Data.StandardSqlField
    name: StandardSqlField
    nameWithType: StandardSqlField
    fullName: Google.Apis.Bigquery.v2.Data.StandardSqlField
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Bigquery.v2.Data.Model.FriendlyName*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Model.FriendlyName
  name: FriendlyName
  nameWithType: Model.FriendlyName
  fullName: Google.Apis.Bigquery.v2.Data.Model.FriendlyName
- uid: Google.Apis.Bigquery.v2.Data.Model.LabelColumns*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Model.LabelColumns
  name: LabelColumns
  nameWithType: Model.LabelColumns
  fullName: Google.Apis.Bigquery.v2.Data.Model.LabelColumns
- uid: Google.Apis.Bigquery.v2.Data.Model.Labels*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Model.Labels
  name: Labels
  nameWithType: Model.Labels
  fullName: Google.Apis.Bigquery.v2.Data.Model.Labels
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.Model.LastModifiedTime*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Model.LastModifiedTime
  name: LastModifiedTime
  nameWithType: Model.LastModifiedTime
  fullName: Google.Apis.Bigquery.v2.Data.Model.LastModifiedTime
- uid: Google.Apis.Bigquery.v2.Data.Model.Location*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Model.Location
  name: Location
  nameWithType: Model.Location
  fullName: Google.Apis.Bigquery.v2.Data.Model.Location
- uid: Google.Apis.Bigquery.v2.Data.Model.ModelReference*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Model.ModelReference
  name: ModelReference
  nameWithType: Model.ModelReference
  fullName: Google.Apis.Bigquery.v2.Data.Model.ModelReference
- uid: Google.Apis.Bigquery.v2.Data.ModelReference
  commentId: T:Google.Apis.Bigquery.v2.Data.ModelReference
  parent: Google.Apis.Bigquery.v2.Data
  name: ModelReference
  nameWithType: ModelReference
  fullName: Google.Apis.Bigquery.v2.Data.ModelReference
- uid: Google.Apis.Bigquery.v2.Data.Model.ModelType*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Model.ModelType
  name: ModelType
  nameWithType: Model.ModelType
  fullName: Google.Apis.Bigquery.v2.Data.Model.ModelType
- uid: Google.Apis.Bigquery.v2.Data.Model.TrainingRuns*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Model.TrainingRuns
  name: TrainingRuns
  nameWithType: Model.TrainingRuns
  fullName: Google.Apis.Bigquery.v2.Data.Model.TrainingRuns
- uid: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.TrainingRun}
  commentId: T:System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.TrainingRun}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TrainingRun>
  nameWithType: IList<TrainingRun>
  fullName: System.Collections.Generic.IList<Google.Apis.Bigquery.v2.Data.TrainingRun>
  nameWithType.vb: IList(Of TrainingRun)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Bigquery.v2.Data.TrainingRun)
  name.vb: IList(Of TrainingRun)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Bigquery.v2.Data.TrainingRun
    name: TrainingRun
    nameWithType: TrainingRun
    fullName: Google.Apis.Bigquery.v2.Data.TrainingRun
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Bigquery.v2.Data.TrainingRun
    name: TrainingRun
    nameWithType: TrainingRun
    fullName: Google.Apis.Bigquery.v2.Data.TrainingRun
  - name: )
    nameWithType: )
    fullName: )
