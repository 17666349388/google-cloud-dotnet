### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
  commentId: T:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
  id: JobConfigurationExtract
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.Compression
  - Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationFormat
  - Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUri
  - Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUris
  - Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.ETag
  - Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.FieldDelimiter
  - Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.PrintHeader
  - Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.SourceTable
  langs:
  - csharp
  - vb
  name: JobConfigurationExtract
  nameWithType: JobConfigurationExtract
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: JobConfigurationExtract
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3396
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: 'public class JobConfigurationExtract : IDirectResponseSchema'
    content.vb: >-
      Public Class JobConfigurationExtract
          Implements IDirectResponseSchema
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Requests.IDirectResponseSchema
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.Compression
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.Compression
  id: Compression
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
  langs:
  - csharp
  - vb
  name: Compression
  nameWithType: JobConfigurationExtract.Compression
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.Compression
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Compression
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3400
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] The compression type to use for exported files. Possible values include GZIP, DEFLATE,

    SNAPPY, and NONE. The default value is NONE. DEFLATE and SNAPPY are only supported for Avro.
  example: []
  syntax:
    content: >-
      [JsonProperty("compression")]

      public virtual string Compression { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("compression")>

      Public Overridable Property Compression As String
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.Compression*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: compression
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationFormat
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationFormat
  id: DestinationFormat
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
  langs:
  - csharp
  - vb
  name: DestinationFormat
  nameWithType: JobConfigurationExtract.DestinationFormat
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationFormat
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DestinationFormat
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3405
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Optional] The exported file format. Possible values include CSV, NEWLINE_DELIMITED_JSON and AVRO.

    The default value is CSV. Tables with nested or repeated fields cannot be exported as CSV.
  example: []
  syntax:
    content: >-
      [JsonProperty("destinationFormat")]

      public virtual string DestinationFormat { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("destinationFormat")>

      Public Overridable Property DestinationFormat As String
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationFormat*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: destinationFormat
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUri
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUri
  id: DestinationUri
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
  langs:
  - csharp
  - vb
  name: DestinationUri
  nameWithType: JobConfigurationExtract.DestinationUri
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUri
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DestinationUri
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3410
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Pick one] DEPRECATED: Use destinationUris instead, passing only one URI as necessary. The fully-

    qualified Google Cloud Storage URI where the extracted table should be written.
  example: []
  syntax:
    content: >-
      [JsonProperty("destinationUri")]

      public virtual string DestinationUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("destinationUri")>

      Public Overridable Property DestinationUri As String
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUri*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: destinationUri
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUris
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUris
  id: DestinationUris
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
  langs:
  - csharp
  - vb
  name: DestinationUris
  nameWithType: JobConfigurationExtract.DestinationUris
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUris
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DestinationUris
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3415
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Pick one] A list of fully-qualified Google Cloud Storage URIs where the extracted table should be

    written.
  example: []
  syntax:
    content: >-
      [JsonProperty("destinationUris")]

      public virtual IList<string> DestinationUris { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: >-
      <JsonProperty("destinationUris")>

      Public Overridable Property DestinationUris As IList(Of String)
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUris*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: destinationUris
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.FieldDelimiter
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.FieldDelimiter
  id: FieldDelimiter
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
  langs:
  - csharp
  - vb
  name: FieldDelimiter
  nameWithType: JobConfigurationExtract.FieldDelimiter
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.FieldDelimiter
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: FieldDelimiter
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3419
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Optional] Delimiter to use between fields in the exported data. Default is &apos;,&apos;'
  example: []
  syntax:
    content: >-
      [JsonProperty("fieldDelimiter")]

      public virtual string FieldDelimiter { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("fieldDelimiter")>

      Public Overridable Property FieldDelimiter As String
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.FieldDelimiter*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fieldDelimiter
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.PrintHeader
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.PrintHeader
  id: PrintHeader
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
  langs:
  - csharp
  - vb
  name: PrintHeader
  nameWithType: JobConfigurationExtract.PrintHeader
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.PrintHeader
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: PrintHeader
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3423
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Optional] Whether to print out a header row in the results. Default is true.'
  example: []
  syntax:
    content: >-
      [JsonProperty("printHeader")]

      public virtual bool? PrintHeader { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("printHeader")>

      Public Overridable Property PrintHeader As Boolean?
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.PrintHeader*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: printHeader
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.SourceTable
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.SourceTable
  id: SourceTable
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
  langs:
  - csharp
  - vb
  name: SourceTable
  nameWithType: JobConfigurationExtract.SourceTable
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.SourceTable
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: SourceTable
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3427
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Required] A reference to the table being exported.'
  example: []
  syntax:
    content: >-
      [JsonProperty("sourceTable")]

      public virtual TableReference SourceTable { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.TableReference
    content.vb: >-
      <JsonProperty("sourceTable")>

      Public Overridable Property SourceTable As TableReference
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.SourceTable*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sourceTable
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: JobConfigurationExtract.ETag
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3431
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The ETag of the item.
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.ETag*
  implements:
  - Google.Apis.Requests.IDirectResponseSchema.ETag
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Requests.IDirectResponseSchema
  commentId: T:Google.Apis.Requests.IDirectResponseSchema
  parent: Google.Apis.Requests
  isExternal: true
  name: IDirectResponseSchema
  nameWithType: IDirectResponseSchema
  fullName: Google.Apis.Requests.IDirectResponseSchema
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: false
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.Compression*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.Compression
  isExternal: false
  name: Compression
  nameWithType: JobConfigurationExtract.Compression
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.Compression
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationFormat*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationFormat
  isExternal: false
  name: DestinationFormat
  nameWithType: JobConfigurationExtract.DestinationFormat
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationFormat
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUri*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUri
  isExternal: false
  name: DestinationUri
  nameWithType: JobConfigurationExtract.DestinationUri
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUri
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUris*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUris
  isExternal: false
  name: DestinationUris
  nameWithType: JobConfigurationExtract.DestinationUris
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.DestinationUris
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.FieldDelimiter*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.FieldDelimiter
  isExternal: false
  name: FieldDelimiter
  nameWithType: JobConfigurationExtract.FieldDelimiter
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.FieldDelimiter
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.PrintHeader*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.PrintHeader
  isExternal: false
  name: PrintHeader
  nameWithType: JobConfigurationExtract.PrintHeader
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.PrintHeader
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.SourceTable*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.SourceTable
  isExternal: false
  name: SourceTable
  nameWithType: JobConfigurationExtract.SourceTable
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.SourceTable
- uid: Google.Apis.Bigquery.v2.Data.TableReference
  commentId: T:Google.Apis.Bigquery.v2.Data.TableReference
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: TableReference
  nameWithType: TableReference
  fullName: Google.Apis.Bigquery.v2.Data.TableReference
- uid: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.ETag
  isExternal: false
  name: ETag
  nameWithType: JobConfigurationExtract.ETag
  fullName: Google.Apis.Bigquery.v2.Data.JobConfigurationExtract.ETag
- uid: Google.Apis.Requests.IDirectResponseSchema.ETag
  commentId: P:Google.Apis.Requests.IDirectResponseSchema.ETag
  parent: Google.Apis.Requests.IDirectResponseSchema
  isExternal: true
  name: ETag
  nameWithType: IDirectResponseSchema.ETag
  fullName: Google.Apis.Requests.IDirectResponseSchema.ETag
