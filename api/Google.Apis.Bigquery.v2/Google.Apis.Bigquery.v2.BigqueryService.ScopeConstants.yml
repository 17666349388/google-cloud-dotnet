### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants
  commentId: T:Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants
  id: BigqueryService.ScopeConstants
  parent: Google.Apis.Bigquery.v2
  children:
  - Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.Bigquery
  - Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.BigqueryInsertdata
  - Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.BigqueryReadonly
  - Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.CloudPlatform
  - Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.CloudPlatformReadOnly
  - Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.DevstorageFullControl
  - Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.DevstorageReadOnly
  - Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.DevstorageReadWrite
  langs:
  - csharp
  - vb
  name: BigqueryService.ScopeConstants
  nameWithType: BigqueryService.ScopeConstants
  fullName: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ScopeConstants
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 147
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Available OAuth 2.0 scope constants for use with the BigQuery API.
  example: []
  syntax:
    content: public static class ScopeConstants
    content.vb: Public Module ScopeConstants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.Bigquery
  commentId: F:Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.Bigquery
  id: Bigquery
  parent: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants
  langs:
  - csharp
  - vb
  name: Bigquery
  nameWithType: BigqueryService.ScopeConstants.Bigquery
  fullName: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.Bigquery
  type: Field
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Bigquery
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 150
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: View and manage your data in Google BigQuery
  example: []
  syntax:
    content: public const string Bigquery = "https://www.googleapis.com/auth/bigquery"
    return:
      type: System.String
    content.vb: Public Const Bigquery As String = "https://www.googleapis.com/auth/bigquery"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.BigqueryInsertdata
  commentId: F:Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.BigqueryInsertdata
  id: BigqueryInsertdata
  parent: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants
  langs:
  - csharp
  - vb
  name: BigqueryInsertdata
  nameWithType: BigqueryService.ScopeConstants.BigqueryInsertdata
  fullName: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.BigqueryInsertdata
  type: Field
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BigqueryInsertdata
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 153
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Insert data into Google BigQuery
  example: []
  syntax:
    content: public const string BigqueryInsertdata = "https://www.googleapis.com/auth/bigquery.insertdata"
    return:
      type: System.String
    content.vb: Public Const BigqueryInsertdata As String = "https://www.googleapis.com/auth/bigquery.insertdata"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.BigqueryReadonly
  commentId: F:Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.BigqueryReadonly
  id: BigqueryReadonly
  parent: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants
  langs:
  - csharp
  - vb
  name: BigqueryReadonly
  nameWithType: BigqueryService.ScopeConstants.BigqueryReadonly
  fullName: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.BigqueryReadonly
  type: Field
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BigqueryReadonly
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 156
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: View your data in Google BigQuery
  example: []
  syntax:
    content: public const string BigqueryReadonly = "https://www.googleapis.com/auth/bigquery.readonly"
    return:
      type: System.String
    content.vb: Public Const BigqueryReadonly As String = "https://www.googleapis.com/auth/bigquery.readonly"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.CloudPlatform
  commentId: F:Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.CloudPlatform
  id: CloudPlatform
  parent: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants
  langs:
  - csharp
  - vb
  name: CloudPlatform
  nameWithType: BigqueryService.ScopeConstants.CloudPlatform
  fullName: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.CloudPlatform
  type: Field
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CloudPlatform
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 159
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: View and manage your data across Google Cloud Platform services
  example: []
  syntax:
    content: public const string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform"
    return:
      type: System.String
    content.vb: Public Const CloudPlatform As String = "https://www.googleapis.com/auth/cloud-platform"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.CloudPlatformReadOnly
  commentId: F:Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.CloudPlatformReadOnly
  id: CloudPlatformReadOnly
  parent: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants
  langs:
  - csharp
  - vb
  name: CloudPlatformReadOnly
  nameWithType: BigqueryService.ScopeConstants.CloudPlatformReadOnly
  fullName: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.CloudPlatformReadOnly
  type: Field
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CloudPlatformReadOnly
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 162
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: View your data across Google Cloud Platform services
  example: []
  syntax:
    content: public const string CloudPlatformReadOnly = "https://www.googleapis.com/auth/cloud-platform.read-only"
    return:
      type: System.String
    content.vb: Public Const CloudPlatformReadOnly As String = "https://www.googleapis.com/auth/cloud-platform.read-only"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.DevstorageFullControl
  commentId: F:Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.DevstorageFullControl
  id: DevstorageFullControl
  parent: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants
  langs:
  - csharp
  - vb
  name: DevstorageFullControl
  nameWithType: BigqueryService.ScopeConstants.DevstorageFullControl
  fullName: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.DevstorageFullControl
  type: Field
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DevstorageFullControl
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 165
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Manage your data and permissions in Google Cloud Storage
  example: []
  syntax:
    content: public const string DevstorageFullControl = "https://www.googleapis.com/auth/devstorage.full_control"
    return:
      type: System.String
    content.vb: Public Const DevstorageFullControl As String = "https://www.googleapis.com/auth/devstorage.full_control"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.DevstorageReadOnly
  commentId: F:Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.DevstorageReadOnly
  id: DevstorageReadOnly
  parent: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants
  langs:
  - csharp
  - vb
  name: DevstorageReadOnly
  nameWithType: BigqueryService.ScopeConstants.DevstorageReadOnly
  fullName: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.DevstorageReadOnly
  type: Field
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DevstorageReadOnly
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 168
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: View your data in Google Cloud Storage
  example: []
  syntax:
    content: public const string DevstorageReadOnly = "https://www.googleapis.com/auth/devstorage.read_only"
    return:
      type: System.String
    content.vb: Public Const DevstorageReadOnly As String = "https://www.googleapis.com/auth/devstorage.read_only"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.DevstorageReadWrite
  commentId: F:Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.DevstorageReadWrite
  id: DevstorageReadWrite
  parent: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants
  langs:
  - csharp
  - vb
  name: DevstorageReadWrite
  nameWithType: BigqueryService.ScopeConstants.DevstorageReadWrite
  fullName: Google.Apis.Bigquery.v2.BigqueryService.ScopeConstants.DevstorageReadWrite
  type: Field
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DevstorageReadWrite
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 171
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Manage your data in Google Cloud Storage
  example: []
  syntax:
    content: public const string DevstorageReadWrite = "https://www.googleapis.com/auth/devstorage.read_write"
    return:
      type: System.String
    content.vb: Public Const DevstorageReadWrite As String = "https://www.googleapis.com/auth/devstorage.read_write"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Google.Apis.Bigquery.v2
  commentId: N:Google.Apis.Bigquery.v2
  name: Google.Apis.Bigquery.v2
  nameWithType: Google.Apis.Bigquery.v2
  fullName: Google.Apis.Bigquery.v2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
