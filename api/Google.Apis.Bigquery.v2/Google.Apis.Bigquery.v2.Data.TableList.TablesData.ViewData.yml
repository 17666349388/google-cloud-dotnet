### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData
  commentId: T:Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData
  id: TableList.TablesData.ViewData
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData.UseLegacySql
  langs:
  - csharp
  - vb
  name: TableList.TablesData.ViewData
  nameWithType: TableList.TablesData.ViewData
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ViewData
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4250
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Additional details for a view.
  example: []
  syntax:
    content: 'public class ViewData : object'
    content.vb: >-
      Public Class ViewData
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData.UseLegacySql
  commentId: P:Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData.UseLegacySql
  id: UseLegacySql
  parent: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData
  langs:
  - csharp
  - vb
  name: UseLegacySql
  nameWithType: TableList.TablesData.ViewData.UseLegacySql
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData.UseLegacySql
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UseLegacySql
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 4253
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: True if view is defined in legacy SQL dialect, false if in standard SQL.
  example: []
  syntax:
    content: public virtual System.Nullable<bool> UseLegacySql { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Overridable Property UseLegacySql As System.Nullable(Of Boolean)
  overload: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData.UseLegacySql*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData.UseLegacySql*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData.UseLegacySql
  isExternal: false
  name: UseLegacySql
  nameWithType: TableList.TablesData.ViewData.UseLegacySql
  fullName: Google.Apis.Bigquery.v2.Data.TableList.TablesData.ViewData.UseLegacySql
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: System.Nullable<Boolean>
  nameWithType: System.Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: System.Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: System.Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: System.Nullable<>
  nameWithType: System.Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: System.Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: System.Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
