### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.Dataset.AccessData
  commentId: T:Google.Apis.Bigquery.v2.Data.Dataset.AccessData
  id: Dataset.AccessData
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Domain
  - Google.Apis.Bigquery.v2.Data.Dataset.AccessData.GroupByEmail
  - Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Role
  - Google.Apis.Bigquery.v2.Data.Dataset.AccessData.SpecialGroup
  - Google.Apis.Bigquery.v2.Data.Dataset.AccessData.UserByEmail
  - Google.Apis.Bigquery.v2.Data.Dataset.AccessData.View
  langs:
  - csharp
  - vb
  name: Dataset.AccessData
  nameWithType: Dataset.AccessData
  fullName: Google.Apis.Bigquery.v2.Data.Dataset.AccessData
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AccessData
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2699
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: 'public class AccessData : object'
    content.vb: >-
      Public Class AccessData
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Domain
  commentId: P:Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Domain
  id: Domain
  parent: Google.Apis.Bigquery.v2.Data.Dataset.AccessData
  langs:
  - csharp
  - vb
  name: Domain
  nameWithType: Dataset.AccessData.Domain
  fullName: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Domain
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Domain
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2703
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Pick one] A domain to grant access to. Any users signed in with the domain specified will be

    granted the specified access. Example: "example.com".
  example: []
  syntax:
    content: public virtual string Domain { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Domain As String
  overload: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Domain*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.GroupByEmail
  commentId: P:Google.Apis.Bigquery.v2.Data.Dataset.AccessData.GroupByEmail
  id: GroupByEmail
  parent: Google.Apis.Bigquery.v2.Data.Dataset.AccessData
  langs:
  - csharp
  - vb
  name: GroupByEmail
  nameWithType: Dataset.AccessData.GroupByEmail
  fullName: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.GroupByEmail
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GroupByEmail
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2707
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: '[Pick one] An email address of a Google Group to grant access to.'
  example: []
  syntax:
    content: public virtual string GroupByEmail { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property GroupByEmail As String
  overload: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.GroupByEmail*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Role
  commentId: P:Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Role
  id: Role
  parent: Google.Apis.Bigquery.v2.Data.Dataset.AccessData
  langs:
  - csharp
  - vb
  name: Role
  nameWithType: Dataset.AccessData.Role
  fullName: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Role
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Role
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2712
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Required] Describes the rights granted to the user specified by the other member of the access

    object. The following string values are supported: READER, WRITER, OWNER.
  example: []
  syntax:
    content: public virtual string Role { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Role As String
  overload: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Role*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.SpecialGroup
  commentId: P:Google.Apis.Bigquery.v2.Data.Dataset.AccessData.SpecialGroup
  id: SpecialGroup
  parent: Google.Apis.Bigquery.v2.Data.Dataset.AccessData
  langs:
  - csharp
  - vb
  name: SpecialGroup
  nameWithType: Dataset.AccessData.SpecialGroup
  fullName: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.SpecialGroup
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: SpecialGroup
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2718
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Pick one] A special group to grant access to. Possible values include: projectOwners: Owners

    of the enclosing project. projectReaders: Readers of the enclosing project. projectWriters: Writers of

    the enclosing project. allAuthenticatedUsers: All authenticated BigQuery users.
  example: []
  syntax:
    content: public virtual string SpecialGroup { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property SpecialGroup As String
  overload: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.SpecialGroup*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.UserByEmail
  commentId: P:Google.Apis.Bigquery.v2.Data.Dataset.AccessData.UserByEmail
  id: UserByEmail
  parent: Google.Apis.Bigquery.v2.Data.Dataset.AccessData
  langs:
  - csharp
  - vb
  name: UserByEmail
  nameWithType: Dataset.AccessData.UserByEmail
  fullName: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.UserByEmail
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UserByEmail
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2723
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Pick one] An email address of a user to grant access to. For example:

    fred@example.com.
  example: []
  syntax:
    content: public virtual string UserByEmail { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property UserByEmail As String
  overload: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.UserByEmail*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.View
  commentId: P:Google.Apis.Bigquery.v2.Data.Dataset.AccessData.View
  id: View
  parent: Google.Apis.Bigquery.v2.Data.Dataset.AccessData
  langs:
  - csharp
  - vb
  name: View
  nameWithType: Dataset.AccessData.View
  fullName: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.View
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: View
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2730
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    [Pick one] A view from a different dataset to grant access to. Queries executed against that

    view will have read access to tables in this dataset. The role field is not required when this field is

    set. If that view is updated by any user, access to the view needs to be granted again via an update

    operation.
  example: []
  syntax:
    content: public virtual TableReference View { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.TableReference
    content.vb: Public Overridable Property View As TableReference
  overload: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.View*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Domain*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Domain
  isExternal: false
  name: Domain
  nameWithType: Dataset.AccessData.Domain
  fullName: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Domain
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.GroupByEmail*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Dataset.AccessData.GroupByEmail
  isExternal: false
  name: GroupByEmail
  nameWithType: Dataset.AccessData.GroupByEmail
  fullName: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.GroupByEmail
- uid: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Role*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Role
  isExternal: false
  name: Role
  nameWithType: Dataset.AccessData.Role
  fullName: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.Role
- uid: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.SpecialGroup*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Dataset.AccessData.SpecialGroup
  isExternal: false
  name: SpecialGroup
  nameWithType: Dataset.AccessData.SpecialGroup
  fullName: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.SpecialGroup
- uid: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.UserByEmail*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Dataset.AccessData.UserByEmail
  isExternal: false
  name: UserByEmail
  nameWithType: Dataset.AccessData.UserByEmail
  fullName: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.UserByEmail
- uid: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.View*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.Dataset.AccessData.View
  isExternal: false
  name: View
  nameWithType: Dataset.AccessData.View
  fullName: Google.Apis.Bigquery.v2.Data.Dataset.AccessData.View
- uid: Google.Apis.Bigquery.v2.Data.TableReference
  commentId: T:Google.Apis.Bigquery.v2.Data.TableReference
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: TableReference
  nameWithType: TableReference
  fullName: Google.Apis.Bigquery.v2.Data.TableReference
