### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.ProjectList
  commentId: T:Google.Apis.Bigquery.v2.Data.ProjectList
  id: ProjectList
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.ProjectList.ETag
  - Google.Apis.Bigquery.v2.Data.ProjectList.Kind
  - Google.Apis.Bigquery.v2.Data.ProjectList.NextPageToken
  - Google.Apis.Bigquery.v2.Data.ProjectList.Projects
  - Google.Apis.Bigquery.v2.Data.ProjectList.TotalItems
  langs:
  - csharp
  - vb
  name: ProjectList
  nameWithType: ProjectList
  fullName: Google.Apis.Bigquery.v2.Data.ProjectList
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ProjectList
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3844
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: 'public class ProjectList : Requests.IDirectResponseSchema'
    content.vb: >-
      Public Class ProjectList
          Inherits Requests.IDirectResponseSchema
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.ProjectList.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.ProjectList.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.ProjectList
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: ProjectList.ETag
  fullName: Google.Apis.Bigquery.v2.Data.ProjectList.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3847
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: A hash of the page of results
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.ProjectList.ETag*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.ProjectList.Kind
  commentId: P:Google.Apis.Bigquery.v2.Data.ProjectList.Kind
  id: Kind
  parent: Google.Apis.Bigquery.v2.Data.ProjectList
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: ProjectList.Kind
  fullName: Google.Apis.Bigquery.v2.Data.ProjectList.Kind
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Kind
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3851
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The type of list.
  example: []
  syntax:
    content: public virtual string Kind { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Kind As String
  overload: Google.Apis.Bigquery.v2.Data.ProjectList.Kind*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.ProjectList.NextPageToken
  commentId: P:Google.Apis.Bigquery.v2.Data.ProjectList.NextPageToken
  id: NextPageToken
  parent: Google.Apis.Bigquery.v2.Data.ProjectList
  langs:
  - csharp
  - vb
  name: NextPageToken
  nameWithType: ProjectList.NextPageToken
  fullName: Google.Apis.Bigquery.v2.Data.ProjectList.NextPageToken
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NextPageToken
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3855
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: A token to request the next page of results.
  example: []
  syntax:
    content: public virtual string NextPageToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property NextPageToken As String
  overload: Google.Apis.Bigquery.v2.Data.ProjectList.NextPageToken*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.ProjectList.Projects
  commentId: P:Google.Apis.Bigquery.v2.Data.ProjectList.Projects
  id: Projects
  parent: Google.Apis.Bigquery.v2.Data.ProjectList
  langs:
  - csharp
  - vb
  name: Projects
  nameWithType: ProjectList.Projects
  fullName: Google.Apis.Bigquery.v2.Data.ProjectList.Projects
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Projects
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3859
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: Projects to which you have at least READ access.
  example: []
  syntax:
    content: public virtual IList<ProjectList.ProjectsData> Projects { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.ProjectList.ProjectsData}
    content.vb: Public Overridable Property Projects As IList(Of ProjectList.ProjectsData)
  overload: Google.Apis.Bigquery.v2.Data.ProjectList.Projects*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.ProjectList.TotalItems
  commentId: P:Google.Apis.Bigquery.v2.Data.ProjectList.TotalItems
  id: TotalItems
  parent: Google.Apis.Bigquery.v2.Data.ProjectList
  langs:
  - csharp
  - vb
  name: TotalItems
  nameWithType: ProjectList.TotalItems
  fullName: Google.Apis.Bigquery.v2.Data.ProjectList.TotalItems
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TotalItems
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 3863
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The total number of projects in the list.
  example: []
  syntax:
    content: public virtual int ? TotalItems { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Overridable Property TotalItems As Integer?
  overload: Google.Apis.Bigquery.v2.Data.ProjectList.TotalItems*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Bigquery.v2.Data.ProjectList.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ProjectList.ETag
  isExternal: false
  name: ETag
  nameWithType: ProjectList.ETag
  fullName: Google.Apis.Bigquery.v2.Data.ProjectList.ETag
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.ProjectList.Kind*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ProjectList.Kind
  isExternal: false
  name: Kind
  nameWithType: ProjectList.Kind
  fullName: Google.Apis.Bigquery.v2.Data.ProjectList.Kind
- uid: Google.Apis.Bigquery.v2.Data.ProjectList.NextPageToken*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ProjectList.NextPageToken
  isExternal: false
  name: NextPageToken
  nameWithType: ProjectList.NextPageToken
  fullName: Google.Apis.Bigquery.v2.Data.ProjectList.NextPageToken
- uid: Google.Apis.Bigquery.v2.Data.ProjectList.Projects*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ProjectList.Projects
  isExternal: false
  name: Projects
  nameWithType: ProjectList.Projects
  fullName: Google.Apis.Bigquery.v2.Data.ProjectList.Projects
- uid: System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.ProjectList.ProjectsData}
  commentId: T:System.Collections.Generic.IList{Google.Apis.Bigquery.v2.Data.ProjectList.ProjectsData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ProjectList.ProjectsData>
  nameWithType: IList<ProjectList.ProjectsData>
  fullName: System.Collections.Generic.IList<Google.Apis.Bigquery.v2.Data.ProjectList.ProjectsData>
  nameWithType.vb: IList(Of ProjectList.ProjectsData)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Bigquery.v2.Data.ProjectList.ProjectsData)
  name.vb: IList(Of ProjectList.ProjectsData)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Bigquery.v2.Data.ProjectList.ProjectsData
    name: ProjectList.ProjectsData
    nameWithType: ProjectList.ProjectsData
    fullName: Google.Apis.Bigquery.v2.Data.ProjectList.ProjectsData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Bigquery.v2.Data.ProjectList.ProjectsData
    name: ProjectList.ProjectsData
    nameWithType: ProjectList.ProjectsData
    fullName: Google.Apis.Bigquery.v2.Data.ProjectList.ProjectsData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Bigquery.v2.Data.ProjectList.TotalItems*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.ProjectList.TotalItems
  isExternal: false
  name: TotalItems
  nameWithType: ProjectList.TotalItems
  fullName: Google.Apis.Bigquery.v2.Data.ProjectList.TotalItems
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
