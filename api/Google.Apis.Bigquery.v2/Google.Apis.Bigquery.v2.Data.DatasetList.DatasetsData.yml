### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData
  commentId: T:Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData
  id: DatasetList.DatasetsData
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.DatasetReference
  - Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.FriendlyName
  - Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Id
  - Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Kind
  - Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Labels
  langs:
  - csharp
  - vb
  name: DatasetList.DatasetsData
  nameWithType: DatasetList.DatasetsData
  fullName: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DatasetsData
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2822
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  syntax:
    content: public class DatasetsData
    content.vb: Public Class DatasetsData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.DatasetReference
  commentId: P:Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.DatasetReference
  id: DatasetReference
  parent: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData
  langs:
  - csharp
  - vb
  name: DatasetReference
  nameWithType: DatasetList.DatasetsData.DatasetReference
  fullName: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.DatasetReference
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DatasetReference
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2826
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    The dataset reference. Use this property to access specific parts of the dataset&apos;s ID, such as

    project ID or dataset ID.
  example: []
  syntax:
    content: public virtual DatasetReference DatasetReference { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.DatasetReference
    content.vb: Public Overridable Property DatasetReference As DatasetReference
  overload: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.DatasetReference*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.FriendlyName
  commentId: P:Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.FriendlyName
  id: FriendlyName
  parent: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData
  langs:
  - csharp
  - vb
  name: FriendlyName
  nameWithType: DatasetList.DatasetsData.FriendlyName
  fullName: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.FriendlyName
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: FriendlyName
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2830
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: A descriptive name for the dataset, if one exists.
  example: []
  syntax:
    content: public virtual string FriendlyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property FriendlyName As String
  overload: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.FriendlyName*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Id
  commentId: P:Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Id
  id: Id
  parent: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: DatasetList.DatasetsData.Id
  fullName: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Id
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Id
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2834
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The fully-qualified, unique, opaque ID of the dataset.
  example: []
  syntax:
    content: public virtual string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Id As String
  overload: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Id*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Kind
  commentId: P:Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Kind
  id: Kind
  parent: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: DatasetList.DatasetsData.Kind
  fullName: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Kind
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Kind
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2838
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The resource type. This property always returns the value &quot;bigquery#dataset&quot;.
  example: []
  syntax:
    content: public virtual string Kind { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Kind As String
  overload: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Kind*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Labels
  commentId: P:Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Labels
  id: Labels
  parent: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData
  langs:
  - csharp
  - vb
  name: Labels
  nameWithType: DatasetList.DatasetsData.Labels
  fullName: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Labels
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Labels
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 2843
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    The labels associated with this dataset. You can use these to organize and group your

    datasets.
  example: []
  syntax:
    content: public virtual IDictionary<string, string> Labels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Overridable Property Labels As IDictionary(Of String, String)
  overload: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Labels*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.DatasetReference*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.DatasetReference
  isExternal: false
  name: DatasetReference
  nameWithType: DatasetList.DatasetsData.DatasetReference
  fullName: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.DatasetReference
- uid: Google.Apis.Bigquery.v2.Data.DatasetReference
  commentId: T:Google.Apis.Bigquery.v2.Data.DatasetReference
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: DatasetReference
  nameWithType: DatasetReference
  fullName: Google.Apis.Bigquery.v2.Data.DatasetReference
- uid: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.FriendlyName*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.FriendlyName
  isExternal: false
  name: FriendlyName
  nameWithType: DatasetList.DatasetsData.FriendlyName
  fullName: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.FriendlyName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Id*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Id
  isExternal: false
  name: Id
  nameWithType: DatasetList.DatasetsData.Id
  fullName: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Id
- uid: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Kind*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Kind
  isExternal: false
  name: Kind
  nameWithType: DatasetList.DatasetsData.Kind
  fullName: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Kind
- uid: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Labels*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Labels
  isExternal: false
  name: Labels
  nameWithType: DatasetList.DatasetsData.Labels
  fullName: Google.Apis.Bigquery.v2.Data.DatasetList.DatasetsData.Labels
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
