### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.Data.StandardSqlDataType
  commentId: T:Google.Apis.Bigquery.v2.Data.StandardSqlDataType
  id: StandardSqlDataType
  parent: Google.Apis.Bigquery.v2.Data
  children:
  - Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ArrayElementType
  - Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ETag
  - Google.Apis.Bigquery.v2.Data.StandardSqlDataType.StructType
  - Google.Apis.Bigquery.v2.Data.StandardSqlDataType.TypeKind
  langs:
  - csharp
  - vb
  name: StandardSqlDataType
  nameWithType: StandardSqlDataType
  fullName: Google.Apis.Bigquery.v2.Data.StandardSqlDataType
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: StandardSqlDataType
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6477
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    The type of a variable, e.g., a function argument. Examples: INT64: {type_kind=&quot;INT64&quot;} ARRAY:

    {type_kind=&quot;ARRAY&quot;, array_element_type=&quot;STRING&quot;} STRUCT>: {type_kind=&quot;STRUCT&quot;, struct_type={fields=[ {name=&quot;x&quot;,

    type={type_kind=&quot;STRING&quot;}}, {name=&quot;y&quot;, type={type_kind=&quot;ARRAY&quot;, array_element_type=&quot;DATE&quot;}} ]}}
  example: []
  syntax:
    content: 'public class StandardSqlDataType : IDirectResponseSchema'
    content.vb: >-
      Public Class StandardSqlDataType
          Implements IDirectResponseSchema
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Requests.IDirectResponseSchema
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ArrayElementType
  commentId: P:Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ArrayElementType
  id: ArrayElementType
  parent: Google.Apis.Bigquery.v2.Data.StandardSqlDataType
  langs:
  - csharp
  - vb
  name: ArrayElementType
  nameWithType: StandardSqlDataType.ArrayElementType
  fullName: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ArrayElementType
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ArrayElementType
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6480
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The type of the array&apos;s elements, if type_kind = &quot;ARRAY&quot;.
  example: []
  syntax:
    content: >-
      [JsonProperty("arrayElementType")]

      public virtual StandardSqlDataType ArrayElementType { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.StandardSqlDataType
    content.vb: >-
      <JsonProperty("arrayElementType")>

      Public Overridable Property ArrayElementType As StandardSqlDataType
  overload: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ArrayElementType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: arrayElementType
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.StructType
  commentId: P:Google.Apis.Bigquery.v2.Data.StandardSqlDataType.StructType
  id: StructType
  parent: Google.Apis.Bigquery.v2.Data.StandardSqlDataType
  langs:
  - csharp
  - vb
  name: StructType
  nameWithType: StandardSqlDataType.StructType
  fullName: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.StructType
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: StructType
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6484
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The fields of this struct, in order, if type_kind = &quot;STRUCT&quot;.
  example: []
  syntax:
    content: >-
      [JsonProperty("structType")]

      public virtual StandardSqlStructType StructType { get; set; }
    parameters: []
    return:
      type: Google.Apis.Bigquery.v2.Data.StandardSqlStructType
    content.vb: >-
      <JsonProperty("structType")>

      Public Overridable Property StructType As StandardSqlStructType
  overload: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.StructType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: structType
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.TypeKind
  commentId: P:Google.Apis.Bigquery.v2.Data.StandardSqlDataType.TypeKind
  id: TypeKind
  parent: Google.Apis.Bigquery.v2.Data.StandardSqlDataType
  langs:
  - csharp
  - vb
  name: TypeKind
  nameWithType: StandardSqlDataType.TypeKind
  fullName: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.TypeKind
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TypeKind
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6489
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: >-
    Required. The top level type of this field. Can be any standard SQL data type (e.g., &quot;INT64&quot;,

    &quot;DATE&quot;, &quot;ARRAY&quot;).
  example: []
  syntax:
    content: >-
      [JsonProperty("typeKind")]

      public virtual string TypeKind { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("typeKind")>

      Public Overridable Property TypeKind As String
  overload: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.TypeKind*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: typeKind
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ETag
  commentId: P:Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ETag
  id: ETag
  parent: Google.Apis.Bigquery.v2.Data.StandardSqlDataType
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: StandardSqlDataType.ETag
  fullName: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 6493
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2.Data
  summary: The ETag of the item.
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ETag*
  implements:
  - Google.Apis.Requests.IDirectResponseSchema.ETag
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Requests.IDirectResponseSchema
  commentId: T:Google.Apis.Requests.IDirectResponseSchema
  parent: Google.Apis.Requests
  isExternal: true
  name: IDirectResponseSchema
  nameWithType: IDirectResponseSchema
  fullName: Google.Apis.Requests.IDirectResponseSchema
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: true
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ArrayElementType*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ArrayElementType
  name: ArrayElementType
  nameWithType: StandardSqlDataType.ArrayElementType
  fullName: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ArrayElementType
- uid: Google.Apis.Bigquery.v2.Data.StandardSqlDataType
  commentId: T:Google.Apis.Bigquery.v2.Data.StandardSqlDataType
  parent: Google.Apis.Bigquery.v2.Data
  name: StandardSqlDataType
  nameWithType: StandardSqlDataType
  fullName: Google.Apis.Bigquery.v2.Data.StandardSqlDataType
- uid: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.StructType*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.StandardSqlDataType.StructType
  name: StructType
  nameWithType: StandardSqlDataType.StructType
  fullName: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.StructType
- uid: Google.Apis.Bigquery.v2.Data.StandardSqlStructType
  commentId: T:Google.Apis.Bigquery.v2.Data.StandardSqlStructType
  parent: Google.Apis.Bigquery.v2.Data
  name: StandardSqlStructType
  nameWithType: StandardSqlStructType
  fullName: Google.Apis.Bigquery.v2.Data.StandardSqlStructType
- uid: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.TypeKind*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.StandardSqlDataType.TypeKind
  name: TypeKind
  nameWithType: StandardSqlDataType.TypeKind
  fullName: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.TypeKind
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ETag*
  commentId: Overload:Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ETag
  name: ETag
  nameWithType: StandardSqlDataType.ETag
  fullName: Google.Apis.Bigquery.v2.Data.StandardSqlDataType.ETag
- uid: Google.Apis.Requests.IDirectResponseSchema.ETag
  commentId: P:Google.Apis.Requests.IDirectResponseSchema.ETag
  parent: Google.Apis.Requests.IDirectResponseSchema
  isExternal: true
  name: ETag
  nameWithType: IDirectResponseSchema.ETag
  fullName: Google.Apis.Requests.IDirectResponseSchema.ETag
