### YamlMime:ManagedReference
items:
- uid: Google.Apis.Bigquery.v2.DatasetsResource
  commentId: T:Google.Apis.Bigquery.v2.DatasetsResource
  id: DatasetsResource
  parent: Google.Apis.Bigquery.v2
  children:
  - Google.Apis.Bigquery.v2.DatasetsResource.#ctor(Google.Apis.Services.IClientService)
  - Google.Apis.Bigquery.v2.DatasetsResource.Delete(System.String,System.String)
  - Google.Apis.Bigquery.v2.DatasetsResource.Get(System.String,System.String)
  - Google.Apis.Bigquery.v2.DatasetsResource.Insert(Google.Apis.Bigquery.v2.Data.Dataset,System.String)
  - Google.Apis.Bigquery.v2.DatasetsResource.List(System.String)
  - Google.Apis.Bigquery.v2.DatasetsResource.Patch(Google.Apis.Bigquery.v2.Data.Dataset,System.String,System.String)
  - Google.Apis.Bigquery.v2.DatasetsResource.Update(Google.Apis.Bigquery.v2.Data.Dataset,System.String,System.String)
  langs:
  - csharp
  - vb
  name: DatasetsResource
  nameWithType: DatasetsResource
  fullName: Google.Apis.Bigquery.v2.DatasetsResource
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DatasetsResource
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 302
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: The "datasets" collection of methods.
  example: []
  syntax:
    content: public class DatasetsResource
    content.vb: Public Class DatasetsResource
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Bigquery.v2.DatasetsResource.#ctor(Google.Apis.Services.IClientService)
  commentId: M:Google.Apis.Bigquery.v2.DatasetsResource.#ctor(Google.Apis.Services.IClientService)
  id: '#ctor(Google.Apis.Services.IClientService)'
  parent: Google.Apis.Bigquery.v2.DatasetsResource
  langs:
  - csharp
  - vb
  name: DatasetsResource(IClientService)
  nameWithType: DatasetsResource.DatasetsResource(IClientService)
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.DatasetsResource(Google.Apis.Services.IClientService)
  type: Constructor
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 310
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Constructs a new resource.
  example: []
  syntax:
    content: public DatasetsResource(IClientService service)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
    content.vb: Public Sub New(service As IClientService)
  overload: Google.Apis.Bigquery.v2.DatasetsResource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Bigquery.v2.DatasetsResource.Delete(System.String,System.String)
  commentId: M:Google.Apis.Bigquery.v2.DatasetsResource.Delete(System.String,System.String)
  id: Delete(System.String,System.String)
  parent: Google.Apis.Bigquery.v2.DatasetsResource
  langs:
  - csharp
  - vb
  name: Delete(String, String)
  nameWithType: DatasetsResource.Delete(String, String)
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.Delete(System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Delete
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 323
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: >-
    Deletes the dataset specified by the datasetId value. Before you can delete a dataset, you must

    delete all its tables, either manually or by specifying deleteContents. Immediately after deletion, you can

    create another dataset with the same name.
  example: []
  syntax:
    content: public virtual DatasetsResource.DeleteRequest Delete(string projectId, string datasetId)
    parameters:
    - id: projectId
      type: System.String
      description: Project ID of the dataset being deleted
    - id: datasetId
      type: System.String
      description: >-
        Dataset ID

        of dataset being deleted
    return:
      type: Google.Apis.Bigquery.v2.DatasetsResource.DeleteRequest
    content.vb: Public Overridable Function Delete(projectId As String, datasetId As String) As DatasetsResource.DeleteRequest
  overload: Google.Apis.Bigquery.v2.DatasetsResource.Delete*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.DatasetsResource.Get(System.String,System.String)
  commentId: M:Google.Apis.Bigquery.v2.DatasetsResource.Get(System.String,System.String)
  id: Get(System.String,System.String)
  parent: Google.Apis.Bigquery.v2.DatasetsResource
  langs:
  - csharp
  - vb
  name: Get(String, String)
  nameWithType: DatasetsResource.Get(String, String)
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.Get(System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Get
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 415
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Returns the dataset specified by datasetID.
  example: []
  syntax:
    content: public virtual DatasetsResource.GetRequest Get(string projectId, string datasetId)
    parameters:
    - id: projectId
      type: System.String
      description: Project ID of the requested dataset
    - id: datasetId
      type: System.String
      description: >-
        Dataset ID of

        the requested dataset
    return:
      type: Google.Apis.Bigquery.v2.DatasetsResource.GetRequest
    content.vb: Public Overridable Function Get(projectId As String, datasetId As String) As DatasetsResource.GetRequest
  overload: Google.Apis.Bigquery.v2.DatasetsResource.Get*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.DatasetsResource.Insert(Google.Apis.Bigquery.v2.Data.Dataset,System.String)
  commentId: M:Google.Apis.Bigquery.v2.DatasetsResource.Insert(Google.Apis.Bigquery.v2.Data.Dataset,System.String)
  id: Insert(Google.Apis.Bigquery.v2.Data.Dataset,System.String)
  parent: Google.Apis.Bigquery.v2.DatasetsResource
  langs:
  - csharp
  - vb
  name: Insert(Dataset, String)
  nameWithType: DatasetsResource.Insert(Dataset, String)
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.Insert(Google.Apis.Bigquery.v2.Data.Dataset, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Insert
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 490
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: Creates a new empty dataset.
  example: []
  syntax:
    content: public virtual DatasetsResource.InsertRequest Insert(Dataset body, string projectId)
    parameters:
    - id: body
      type: Google.Apis.Bigquery.v2.Data.Dataset
      description: The body of the request.
    - id: projectId
      type: System.String
      description: Project ID of the new dataset
    return:
      type: Google.Apis.Bigquery.v2.DatasetsResource.InsertRequest
    content.vb: Public Overridable Function Insert(body As Dataset, projectId As String) As DatasetsResource.InsertRequest
  overload: Google.Apis.Bigquery.v2.DatasetsResource.Insert*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.DatasetsResource.List(System.String)
  commentId: M:Google.Apis.Bigquery.v2.DatasetsResource.List(System.String)
  id: List(System.String)
  parent: Google.Apis.Bigquery.v2.DatasetsResource
  langs:
  - csharp
  - vb
  name: List(String)
  nameWithType: DatasetsResource.List(String)
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.List(System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: List
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 558
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: >-
    Lists all datasets in the specified project to which you have been granted the READER dataset

    role.
  example: []
  syntax:
    content: public virtual DatasetsResource.ListRequest List(string projectId)
    parameters:
    - id: projectId
      type: System.String
      description: Project ID of the datasets to be listed
    return:
      type: Google.Apis.Bigquery.v2.DatasetsResource.ListRequest
    content.vb: Public Overridable Function List(projectId As String) As DatasetsResource.ListRequest
  overload: Google.Apis.Bigquery.v2.DatasetsResource.List*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.DatasetsResource.Patch(Google.Apis.Bigquery.v2.Data.Dataset,System.String,System.String)
  commentId: M:Google.Apis.Bigquery.v2.DatasetsResource.Patch(Google.Apis.Bigquery.v2.Data.Dataset,System.String,System.String)
  id: Patch(Google.Apis.Bigquery.v2.Data.Dataset,System.String,System.String)
  parent: Google.Apis.Bigquery.v2.DatasetsResource
  langs:
  - csharp
  - vb
  name: Patch(Dataset, String, String)
  nameWithType: DatasetsResource.Patch(Dataset, String, String)
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.Patch(Google.Apis.Bigquery.v2.Data.Dataset, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Patch
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 678
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: >-
    Updates information in an existing dataset. The update method replaces the entire dataset resource,

    whereas the patch method only replaces fields that are provided in the submitted dataset resource. This

    method supports patch semantics.
  example: []
  syntax:
    content: public virtual DatasetsResource.PatchRequest Patch(Dataset body, string projectId, string datasetId)
    parameters:
    - id: body
      type: Google.Apis.Bigquery.v2.Data.Dataset
      description: The body of the request.
    - id: projectId
      type: System.String
      description: Project ID of the dataset being updated
    - id: datasetId
      type: System.String
      description: >-
        Dataset ID

        of the dataset being updated
    return:
      type: Google.Apis.Bigquery.v2.DatasetsResource.PatchRequest
    content.vb: Public Overridable Function Patch(body As Dataset, projectId As String, datasetId As String) As DatasetsResource.PatchRequest
  overload: Google.Apis.Bigquery.v2.DatasetsResource.Patch*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Bigquery.v2.DatasetsResource.Update(Google.Apis.Bigquery.v2.Data.Dataset,System.String,System.String)
  commentId: M:Google.Apis.Bigquery.v2.DatasetsResource.Update(Google.Apis.Bigquery.v2.Data.Dataset,System.String,System.String)
  id: Update(Google.Apis.Bigquery.v2.Data.Dataset,System.String,System.String)
  parent: Google.Apis.Bigquery.v2.DatasetsResource
  langs:
  - csharp
  - vb
  name: Update(Dataset, String, String)
  nameWithType: DatasetsResource.Update(Dataset, String, String)
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.Update(Google.Apis.Bigquery.v2.Data.Dataset, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Update
    path: Src/Generated/Google.Apis.Bigquery.v2/Google.Apis.Bigquery.v2.cs
    startLine: 765
  assemblies:
  - Google.Apis.Bigquery.v2
  namespace: Google.Apis.Bigquery.v2
  summary: >-
    Updates information in an existing dataset. The update method replaces the entire dataset resource,

    whereas the patch method only replaces fields that are provided in the submitted dataset resource.
  example: []
  syntax:
    content: public virtual DatasetsResource.UpdateRequest Update(Dataset body, string projectId, string datasetId)
    parameters:
    - id: body
      type: Google.Apis.Bigquery.v2.Data.Dataset
      description: The body of the request.
    - id: projectId
      type: System.String
      description: Project ID of the dataset being updated
    - id: datasetId
      type: System.String
      description: >-
        Dataset ID

        of the dataset being updated
    return:
      type: Google.Apis.Bigquery.v2.DatasetsResource.UpdateRequest
    content.vb: Public Overridable Function Update(body As Dataset, projectId As String, datasetId As String) As DatasetsResource.UpdateRequest
  overload: Google.Apis.Bigquery.v2.DatasetsResource.Update*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Bigquery.v2
  commentId: N:Google.Apis.Bigquery.v2
  isExternal: false
  name: Google.Apis.Bigquery.v2
  nameWithType: Google.Apis.Bigquery.v2
  fullName: Google.Apis.Bigquery.v2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Bigquery.v2.DatasetsResource.#ctor*
  commentId: Overload:Google.Apis.Bigquery.v2.DatasetsResource.#ctor
  isExternal: false
  name: DatasetsResource
  nameWithType: DatasetsResource.DatasetsResource
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.DatasetsResource
- uid: Google.Apis.Services.IClientService
  commentId: T:Google.Apis.Services.IClientService
  parent: Google.Apis.Services
  isExternal: true
  name: IClientService
  nameWithType: IClientService
  fullName: Google.Apis.Services.IClientService
- uid: Google.Apis.Services
  commentId: N:Google.Apis.Services
  isExternal: false
  name: Google.Apis.Services
  nameWithType: Google.Apis.Services
  fullName: Google.Apis.Services
- uid: Google.Apis.Bigquery.v2.DatasetsResource.Delete*
  commentId: Overload:Google.Apis.Bigquery.v2.DatasetsResource.Delete
  isExternal: false
  name: Delete
  nameWithType: DatasetsResource.Delete
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.Delete
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Bigquery.v2.DatasetsResource.DeleteRequest
  commentId: T:Google.Apis.Bigquery.v2.DatasetsResource.DeleteRequest
  parent: Google.Apis.Bigquery.v2
  isExternal: false
  name: DatasetsResource.DeleteRequest
  nameWithType: DatasetsResource.DeleteRequest
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.DeleteRequest
- uid: Google.Apis.Bigquery.v2.DatasetsResource.Get*
  commentId: Overload:Google.Apis.Bigquery.v2.DatasetsResource.Get
  isExternal: false
  name: Get
  nameWithType: DatasetsResource.Get
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.Get
- uid: Google.Apis.Bigquery.v2.DatasetsResource.GetRequest
  commentId: T:Google.Apis.Bigquery.v2.DatasetsResource.GetRequest
  parent: Google.Apis.Bigquery.v2
  isExternal: false
  name: DatasetsResource.GetRequest
  nameWithType: DatasetsResource.GetRequest
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.GetRequest
- uid: Google.Apis.Bigquery.v2.DatasetsResource.Insert*
  commentId: Overload:Google.Apis.Bigquery.v2.DatasetsResource.Insert
  isExternal: false
  name: Insert
  nameWithType: DatasetsResource.Insert
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.Insert
- uid: Google.Apis.Bigquery.v2.Data.Dataset
  commentId: T:Google.Apis.Bigquery.v2.Data.Dataset
  parent: Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Dataset
  nameWithType: Dataset
  fullName: Google.Apis.Bigquery.v2.Data.Dataset
- uid: Google.Apis.Bigquery.v2.DatasetsResource.InsertRequest
  commentId: T:Google.Apis.Bigquery.v2.DatasetsResource.InsertRequest
  parent: Google.Apis.Bigquery.v2
  isExternal: false
  name: DatasetsResource.InsertRequest
  nameWithType: DatasetsResource.InsertRequest
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.InsertRequest
- uid: Google.Apis.Bigquery.v2.Data
  commentId: N:Google.Apis.Bigquery.v2.Data
  isExternal: false
  name: Google.Apis.Bigquery.v2.Data
  nameWithType: Google.Apis.Bigquery.v2.Data
  fullName: Google.Apis.Bigquery.v2.Data
- uid: Google.Apis.Bigquery.v2.DatasetsResource.List*
  commentId: Overload:Google.Apis.Bigquery.v2.DatasetsResource.List
  isExternal: false
  name: List
  nameWithType: DatasetsResource.List
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.List
- uid: Google.Apis.Bigquery.v2.DatasetsResource.ListRequest
  commentId: T:Google.Apis.Bigquery.v2.DatasetsResource.ListRequest
  parent: Google.Apis.Bigquery.v2
  isExternal: false
  name: DatasetsResource.ListRequest
  nameWithType: DatasetsResource.ListRequest
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.ListRequest
- uid: Google.Apis.Bigquery.v2.DatasetsResource.Patch*
  commentId: Overload:Google.Apis.Bigquery.v2.DatasetsResource.Patch
  isExternal: false
  name: Patch
  nameWithType: DatasetsResource.Patch
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.Patch
- uid: Google.Apis.Bigquery.v2.DatasetsResource.PatchRequest
  commentId: T:Google.Apis.Bigquery.v2.DatasetsResource.PatchRequest
  parent: Google.Apis.Bigquery.v2
  isExternal: false
  name: DatasetsResource.PatchRequest
  nameWithType: DatasetsResource.PatchRequest
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.PatchRequest
- uid: Google.Apis.Bigquery.v2.DatasetsResource.Update*
  commentId: Overload:Google.Apis.Bigquery.v2.DatasetsResource.Update
  isExternal: false
  name: Update
  nameWithType: DatasetsResource.Update
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.Update
- uid: Google.Apis.Bigquery.v2.DatasetsResource.UpdateRequest
  commentId: T:Google.Apis.Bigquery.v2.DatasetsResource.UpdateRequest
  parent: Google.Apis.Bigquery.v2
  isExternal: false
  name: DatasetsResource.UpdateRequest
  nameWithType: DatasetsResource.UpdateRequest
  fullName: Google.Apis.Bigquery.v2.DatasetsResource.UpdateRequest
