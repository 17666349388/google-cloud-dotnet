### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.NotificationsResource
  commentId: T:Google.Apis.Storage.v1.NotificationsResource
  id: NotificationsResource
  parent: Google.Apis.Storage.v1
  children:
  - Google.Apis.Storage.v1.NotificationsResource.#ctor(Google.Apis.Services.IClientService)
  - Google.Apis.Storage.v1.NotificationsResource.Delete(System.String,System.String)
  - Google.Apis.Storage.v1.NotificationsResource.Get(System.String,System.String)
  - Google.Apis.Storage.v1.NotificationsResource.Insert(Google.Apis.Storage.v1.Data.Notification,System.String)
  - Google.Apis.Storage.v1.NotificationsResource.List(System.String)
  langs:
  - csharp
  - vb
  name: NotificationsResource
  nameWithType: NotificationsResource
  fullName: Google.Apis.Storage.v1.NotificationsResource
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NotificationsResource
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 2829
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: The &quot;notifications&quot; collection of methods.
  example: []
  syntax:
    content: public class NotificationsResource
    content.vb: Public Class NotificationsResource
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.NotificationsResource.#ctor(Google.Apis.Services.IClientService)
  commentId: M:Google.Apis.Storage.v1.NotificationsResource.#ctor(Google.Apis.Services.IClientService)
  id: '#ctor(Google.Apis.Services.IClientService)'
  parent: Google.Apis.Storage.v1.NotificationsResource
  langs:
  - csharp
  - vb
  name: NotificationsResource(IClientService)
  nameWithType: NotificationsResource.NotificationsResource(IClientService)
  fullName: Google.Apis.Storage.v1.NotificationsResource.NotificationsResource(Google.Apis.Services.IClientService)
  type: Constructor
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 2837
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Constructs a new resource.
  example: []
  syntax:
    content: public NotificationsResource(IClientService service)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
    content.vb: Public Sub New(service As IClientService)
  overload: Google.Apis.Storage.v1.NotificationsResource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Storage.v1.NotificationsResource.Delete(System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.NotificationsResource.Delete(System.String,System.String)
  id: Delete(System.String,System.String)
  parent: Google.Apis.Storage.v1.NotificationsResource
  langs:
  - csharp
  - vb
  name: Delete(String, String)
  nameWithType: NotificationsResource.Delete(String, String)
  fullName: Google.Apis.Storage.v1.NotificationsResource.Delete(System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Delete
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 2848
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Permanently deletes a notification subscription.
  example: []
  syntax:
    content: public virtual NotificationsResource.DeleteRequest Delete(string bucket, string notification)
    parameters:
    - id: bucket
      type: System.String
      description: The parent bucket of the notification.
    - id: notification
      type: System.String
      description: >-
        ID of the

        notification to delete.
    return:
      type: Google.Apis.Storage.v1.NotificationsResource.DeleteRequest
    content.vb: Public Overridable Function Delete(bucket As String, notification As String) As NotificationsResource.DeleteRequest
  overload: Google.Apis.Storage.v1.NotificationsResource.Delete*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.NotificationsResource.Get(System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.NotificationsResource.Get(System.String,System.String)
  id: Get(System.String,System.String)
  parent: Google.Apis.Storage.v1.NotificationsResource
  langs:
  - csharp
  - vb
  name: Get(String, String)
  nameWithType: NotificationsResource.Get(String, String)
  fullName: Google.Apis.Storage.v1.NotificationsResource.Get(System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Get
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 2937
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: View a notification configuration.
  example: []
  syntax:
    content: public virtual NotificationsResource.GetRequest Get(string bucket, string notification)
    parameters:
    - id: bucket
      type: System.String
      description: The parent bucket of the notification.
    - id: notification
      type: System.String
      description: >-
        Notification

        ID
    return:
      type: Google.Apis.Storage.v1.NotificationsResource.GetRequest
    content.vb: Public Overridable Function Get(bucket As String, notification As String) As NotificationsResource.GetRequest
  overload: Google.Apis.Storage.v1.NotificationsResource.Get*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.NotificationsResource.Insert(Google.Apis.Storage.v1.Data.Notification,System.String)
  commentId: M:Google.Apis.Storage.v1.NotificationsResource.Insert(Google.Apis.Storage.v1.Data.Notification,System.String)
  id: Insert(Google.Apis.Storage.v1.Data.Notification,System.String)
  parent: Google.Apis.Storage.v1.NotificationsResource
  langs:
  - csharp
  - vb
  name: Insert(Notification, String)
  nameWithType: NotificationsResource.Insert(Notification, String)
  fullName: Google.Apis.Storage.v1.NotificationsResource.Insert(Google.Apis.Storage.v1.Data.Notification, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Insert
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 3025
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Creates a notification subscription for a given bucket.
  example: []
  syntax:
    content: public virtual NotificationsResource.InsertRequest Insert(Notification body, string bucket)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.Notification
      description: The body of the request.
    - id: bucket
      type: System.String
      description: The parent bucket of the notification.
    return:
      type: Google.Apis.Storage.v1.NotificationsResource.InsertRequest
    content.vb: Public Overridable Function Insert(body As Notification, bucket As String) As NotificationsResource.InsertRequest
  overload: Google.Apis.Storage.v1.NotificationsResource.Insert*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.NotificationsResource.List(System.String)
  commentId: M:Google.Apis.Storage.v1.NotificationsResource.List(System.String)
  id: List(System.String)
  parent: Google.Apis.Storage.v1.NotificationsResource
  langs:
  - csharp
  - vb
  name: List(String)
  nameWithType: NotificationsResource.List(String)
  fullName: Google.Apis.Storage.v1.NotificationsResource.List(System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: List
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 3105
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Retrieves a list of notification subscriptions for a given bucket.
  example: []
  syntax:
    content: public virtual NotificationsResource.ListRequest List(string bucket)
    parameters:
    - id: bucket
      type: System.String
      description: Name of a Google Cloud Storage bucket.
    return:
      type: Google.Apis.Storage.v1.NotificationsResource.ListRequest
    content.vb: Public Overridable Function List(bucket As String) As NotificationsResource.ListRequest
  overload: Google.Apis.Storage.v1.NotificationsResource.List*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1
  commentId: N:Google.Apis.Storage.v1
  isExternal: false
  name: Google.Apis.Storage.v1
  nameWithType: Google.Apis.Storage.v1
  fullName: Google.Apis.Storage.v1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Storage.v1.NotificationsResource.#ctor*
  commentId: Overload:Google.Apis.Storage.v1.NotificationsResource.#ctor
  isExternal: false
  name: NotificationsResource
  nameWithType: NotificationsResource.NotificationsResource
  fullName: Google.Apis.Storage.v1.NotificationsResource.NotificationsResource
- uid: Google.Apis.Services.IClientService
  commentId: T:Google.Apis.Services.IClientService
  parent: Google.Apis.Services
  isExternal: true
  name: IClientService
  nameWithType: IClientService
  fullName: Google.Apis.Services.IClientService
- uid: Google.Apis.Services
  commentId: N:Google.Apis.Services
  isExternal: false
  name: Google.Apis.Services
  nameWithType: Google.Apis.Services
  fullName: Google.Apis.Services
- uid: Google.Apis.Storage.v1.NotificationsResource.Delete*
  commentId: Overload:Google.Apis.Storage.v1.NotificationsResource.Delete
  isExternal: false
  name: Delete
  nameWithType: NotificationsResource.Delete
  fullName: Google.Apis.Storage.v1.NotificationsResource.Delete
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Storage.v1.NotificationsResource.DeleteRequest
  commentId: T:Google.Apis.Storage.v1.NotificationsResource.DeleteRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: NotificationsResource.DeleteRequest
  nameWithType: NotificationsResource.DeleteRequest
  fullName: Google.Apis.Storage.v1.NotificationsResource.DeleteRequest
- uid: Google.Apis.Storage.v1.NotificationsResource.Get*
  commentId: Overload:Google.Apis.Storage.v1.NotificationsResource.Get
  isExternal: false
  name: Get
  nameWithType: NotificationsResource.Get
  fullName: Google.Apis.Storage.v1.NotificationsResource.Get
- uid: Google.Apis.Storage.v1.NotificationsResource.GetRequest
  commentId: T:Google.Apis.Storage.v1.NotificationsResource.GetRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: NotificationsResource.GetRequest
  nameWithType: NotificationsResource.GetRequest
  fullName: Google.Apis.Storage.v1.NotificationsResource.GetRequest
- uid: Google.Apis.Storage.v1.NotificationsResource.Insert*
  commentId: Overload:Google.Apis.Storage.v1.NotificationsResource.Insert
  isExternal: false
  name: Insert
  nameWithType: NotificationsResource.Insert
  fullName: Google.Apis.Storage.v1.NotificationsResource.Insert
- uid: Google.Apis.Storage.v1.Data.Notification
  commentId: T:Google.Apis.Storage.v1.Data.Notification
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: Notification
  nameWithType: Notification
  fullName: Google.Apis.Storage.v1.Data.Notification
- uid: Google.Apis.Storage.v1.NotificationsResource.InsertRequest
  commentId: T:Google.Apis.Storage.v1.NotificationsResource.InsertRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: NotificationsResource.InsertRequest
  nameWithType: NotificationsResource.InsertRequest
  fullName: Google.Apis.Storage.v1.NotificationsResource.InsertRequest
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  isExternal: false
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: Google.Apis.Storage.v1.NotificationsResource.List*
  commentId: Overload:Google.Apis.Storage.v1.NotificationsResource.List
  isExternal: false
  name: List
  nameWithType: NotificationsResource.List
  fullName: Google.Apis.Storage.v1.NotificationsResource.List
- uid: Google.Apis.Storage.v1.NotificationsResource.ListRequest
  commentId: T:Google.Apis.Storage.v1.NotificationsResource.ListRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: NotificationsResource.ListRequest
  nameWithType: NotificationsResource.ListRequest
  fullName: Google.Apis.Storage.v1.NotificationsResource.ListRequest
