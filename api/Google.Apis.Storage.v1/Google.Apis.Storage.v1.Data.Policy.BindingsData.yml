### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.Data.Policy.BindingsData
  commentId: T:Google.Apis.Storage.v1.Data.Policy.BindingsData
  id: Policy.BindingsData
  parent: Google.Apis.Storage.v1.Data
  children:
  - Google.Apis.Storage.v1.Data.Policy.BindingsData.Condition
  - Google.Apis.Storage.v1.Data.Policy.BindingsData.Members
  - Google.Apis.Storage.v1.Data.Policy.BindingsData.Role
  langs:
  - csharp
  - vb
  name: Policy.BindingsData
  nameWithType: Policy.BindingsData
  fullName: Google.Apis.Storage.v1.Data.Policy.BindingsData
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BindingsData
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7945
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  syntax:
    content: public class BindingsData
    content.vb: Public Class BindingsData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.Data.Policy.BindingsData.Condition
  commentId: P:Google.Apis.Storage.v1.Data.Policy.BindingsData.Condition
  id: Condition
  parent: Google.Apis.Storage.v1.Data.Policy.BindingsData
  langs:
  - csharp
  - vb
  name: Condition
  nameWithType: Policy.BindingsData.Condition
  fullName: Google.Apis.Storage.v1.Data.Policy.BindingsData.Condition
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Condition
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7947
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  syntax:
    content: >-
      [JsonProperty("condition")]

      public virtual object Condition { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: >-
      <JsonProperty("condition")>

      Public Overridable Property Condition As Object
  overload: Google.Apis.Storage.v1.Data.Policy.BindingsData.Condition*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: condition
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Policy.BindingsData.Members
  commentId: P:Google.Apis.Storage.v1.Data.Policy.BindingsData.Members
  id: Members
  parent: Google.Apis.Storage.v1.Data.Policy.BindingsData
  langs:
  - csharp
  - vb
  name: Members
  nameWithType: Policy.BindingsData.Members
  fullName: Google.Apis.Storage.v1.Data.Policy.BindingsData.Members
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Members
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7963
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    A collection of identifiers for members who may assume the provided role. Recognized

    identifiers are as follows: - allUsers — A special identifier that represents anyone on the internet;

    with or without a Google account. - allAuthenticatedUsers — A special identifier that represents anyone

    who is authenticated with a Google account or a service account. - user:emailid — An email address that

    represents a specific account. For example, user:alice@gmail.com or user:joe@example.com. -

    serviceAccount:emailid — An email address that represents a service account. For example,

    serviceAccount:my-other-app@appspot.gserviceaccount.com . - group:emailid — An email address that

    represents a Google group. For example, group:admins@example.com. - domain:domain — A Google Apps domain

    name that represents all the users of that domain. For example, domain:google.com or domain:example.com.

    - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project -

    projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project -

    projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-

    project
  example: []
  syntax:
    content: >-
      [JsonProperty("members")]

      public virtual IList<string> Members { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: >-
      <JsonProperty("members")>

      Public Overridable Property Members As IList(Of String)
  overload: Google.Apis.Storage.v1.Data.Policy.BindingsData.Members*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: members
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Policy.BindingsData.Role
  commentId: P:Google.Apis.Storage.v1.Data.Policy.BindingsData.Role
  id: Role
  parent: Google.Apis.Storage.v1.Data.Policy.BindingsData
  langs:
  - csharp
  - vb
  name: Role
  nameWithType: Policy.BindingsData.Role
  fullName: Google.Apis.Storage.v1.Data.Policy.BindingsData.Role
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Role
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7981
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    The role to which members belong. Two types of roles are supported: new IAM roles, which grant

    permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map

    directly to ACL permissions. All roles are of the format roles/storage.specificRole. The new IAM roles

    are: - roles/storage.admin — Full control of Google Cloud Storage resources. -

    roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects. -

    roles/storage.objectCreator — Access to create objects in Google Cloud Storage. -

    roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are: -

    roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL

    entry on an object with the READER role. - roles/storage.legacyObjectOwner — Read/write access to

    existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role. -

    roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL

    entry on a bucket with the READER role. - roles/storage.legacyBucketWriter — Read access to buckets with

    object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role. -

    roles/storage.legacyBucketOwner — Read and write access to existing buckets with object

    listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
  example: []
  syntax:
    content: >-
      [JsonProperty("role")]

      public virtual string Role { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("role")>

      Public Overridable Property Role As String
  overload: Google.Apis.Storage.v1.Data.Policy.BindingsData.Role*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: role
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  isExternal: false
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Storage.v1.Data.Policy.BindingsData.Condition*
  commentId: Overload:Google.Apis.Storage.v1.Data.Policy.BindingsData.Condition
  isExternal: false
  name: Condition
  nameWithType: Policy.BindingsData.Condition
  fullName: Google.Apis.Storage.v1.Data.Policy.BindingsData.Condition
- uid: Google.Apis.Storage.v1.Data.Policy.BindingsData.Members*
  commentId: Overload:Google.Apis.Storage.v1.Data.Policy.BindingsData.Members
  isExternal: false
  name: Members
  nameWithType: Policy.BindingsData.Members
  fullName: Google.Apis.Storage.v1.Data.Policy.BindingsData.Members
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Storage.v1.Data.Policy.BindingsData.Role*
  commentId: Overload:Google.Apis.Storage.v1.Data.Policy.BindingsData.Role
  isExternal: false
  name: Role
  nameWithType: Policy.BindingsData.Role
  fullName: Google.Apis.Storage.v1.Data.Policy.BindingsData.Role
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
