### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.BucketsResource
  commentId: T:Google.Apis.Storage.v1.BucketsResource
  id: BucketsResource
  parent: Google.Apis.Storage.v1
  children:
  - Google.Apis.Storage.v1.BucketsResource.#ctor(Google.Apis.Services.IClientService)
  - Google.Apis.Storage.v1.BucketsResource.Delete(System.String)
  - Google.Apis.Storage.v1.BucketsResource.Get(System.String)
  - Google.Apis.Storage.v1.BucketsResource.GetIamPolicy(System.String)
  - Google.Apis.Storage.v1.BucketsResource.Insert(Google.Apis.Storage.v1.Data.Bucket,System.String)
  - Google.Apis.Storage.v1.BucketsResource.List(System.String)
  - Google.Apis.Storage.v1.BucketsResource.LockRetentionPolicy(System.String,System.Int64)
  - Google.Apis.Storage.v1.BucketsResource.Patch(Google.Apis.Storage.v1.Data.Bucket,System.String)
  - Google.Apis.Storage.v1.BucketsResource.SetIamPolicy(Google.Apis.Storage.v1.Data.Policy,System.String)
  - Google.Apis.Storage.v1.BucketsResource.TestIamPermissions(System.String,Google.Apis.Util.Repeatable{System.String})
  - Google.Apis.Storage.v1.BucketsResource.Update(Google.Apis.Storage.v1.Data.Bucket,System.String)
  langs:
  - csharp
  - vb
  name: BucketsResource
  nameWithType: BucketsResource
  fullName: Google.Apis.Storage.v1.BucketsResource
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BucketsResource
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 981
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: The &quot;buckets&quot; collection of methods.
  example: []
  syntax:
    content: public class BucketsResource
    content.vb: Public Class BucketsResource
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.BucketsResource.#ctor(Google.Apis.Services.IClientService)
  commentId: M:Google.Apis.Storage.v1.BucketsResource.#ctor(Google.Apis.Services.IClientService)
  id: '#ctor(Google.Apis.Services.IClientService)'
  parent: Google.Apis.Storage.v1.BucketsResource
  langs:
  - csharp
  - vb
  name: BucketsResource(IClientService)
  nameWithType: BucketsResource.BucketsResource(IClientService)
  fullName: Google.Apis.Storage.v1.BucketsResource.BucketsResource(Google.Apis.Services.IClientService)
  type: Constructor
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 989
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Constructs a new resource.
  example: []
  syntax:
    content: public BucketsResource(IClientService service)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
    content.vb: Public Sub New(service As IClientService)
  overload: Google.Apis.Storage.v1.BucketsResource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Storage.v1.BucketsResource.Delete(System.String)
  commentId: M:Google.Apis.Storage.v1.BucketsResource.Delete(System.String)
  id: Delete(System.String)
  parent: Google.Apis.Storage.v1.BucketsResource
  langs:
  - csharp
  - vb
  name: Delete(String)
  nameWithType: BucketsResource.Delete(String)
  fullName: Google.Apis.Storage.v1.BucketsResource.Delete(System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Delete
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 998
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Permanently deletes an empty bucket.
  example: []
  syntax:
    content: public virtual BucketsResource.DeleteRequest Delete(string bucket)
    parameters:
    - id: bucket
      type: System.String
      description: Name of a bucket.
    return:
      type: Google.Apis.Storage.v1.BucketsResource.DeleteRequest
    content.vb: Public Overridable Function Delete(bucket As String) As BucketsResource.DeleteRequest
  overload: Google.Apis.Storage.v1.BucketsResource.Delete*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.BucketsResource.Get(System.String)
  commentId: M:Google.Apis.Storage.v1.BucketsResource.Get(System.String)
  id: Get(System.String)
  parent: Google.Apis.Storage.v1.BucketsResource
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: BucketsResource.Get(String)
  fullName: Google.Apis.Storage.v1.BucketsResource.Get(System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Get
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 1111
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Returns metadata for the specified bucket.
  example: []
  syntax:
    content: public virtual BucketsResource.GetRequest Get(string bucket)
    parameters:
    - id: bucket
      type: System.String
      description: Name of a bucket.
    return:
      type: Google.Apis.Storage.v1.BucketsResource.GetRequest
    content.vb: Public Overridable Function Get(bucket As String) As BucketsResource.GetRequest
  overload: Google.Apis.Storage.v1.BucketsResource.Get*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.BucketsResource.GetIamPolicy(System.String)
  commentId: M:Google.Apis.Storage.v1.BucketsResource.GetIamPolicy(System.String)
  id: GetIamPolicy(System.String)
  parent: Google.Apis.Storage.v1.BucketsResource
  langs:
  - csharp
  - vb
  name: GetIamPolicy(String)
  nameWithType: BucketsResource.GetIamPolicy(String)
  fullName: Google.Apis.Storage.v1.BucketsResource.GetIamPolicy(System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GetIamPolicy
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 1250
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Returns an IAM policy for the specified bucket.
  example: []
  syntax:
    content: public virtual BucketsResource.GetIamPolicyRequest GetIamPolicy(string bucket)
    parameters:
    - id: bucket
      type: System.String
      description: Name of a bucket.
    return:
      type: Google.Apis.Storage.v1.BucketsResource.GetIamPolicyRequest
    content.vb: Public Overridable Function GetIamPolicy(bucket As String) As BucketsResource.GetIamPolicyRequest
  overload: Google.Apis.Storage.v1.BucketsResource.GetIamPolicy*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.BucketsResource.Insert(Google.Apis.Storage.v1.Data.Bucket,System.String)
  commentId: M:Google.Apis.Storage.v1.BucketsResource.Insert(Google.Apis.Storage.v1.Data.Bucket,System.String)
  id: Insert(Google.Apis.Storage.v1.Data.Bucket,System.String)
  parent: Google.Apis.Storage.v1.BucketsResource
  langs:
  - csharp
  - vb
  name: Insert(Bucket, String)
  nameWithType: BucketsResource.Insert(Bucket, String)
  fullName: Google.Apis.Storage.v1.BucketsResource.Insert(Google.Apis.Storage.v1.Data.Bucket, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Insert
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 1353
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Creates a new bucket.
  example: []
  syntax:
    content: public virtual BucketsResource.InsertRequest Insert(Bucket body, string project)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.Bucket
      description: The body of the request.
    - id: project
      type: System.String
      description: A valid API project identifier.
    return:
      type: Google.Apis.Storage.v1.BucketsResource.InsertRequest
    content.vb: Public Overridable Function Insert(body As Bucket, project As String) As BucketsResource.InsertRequest
  overload: Google.Apis.Storage.v1.BucketsResource.Insert*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.BucketsResource.List(System.String)
  commentId: M:Google.Apis.Storage.v1.BucketsResource.List(System.String)
  id: List(System.String)
  parent: Google.Apis.Storage.v1.BucketsResource
  langs:
  - csharp
  - vb
  name: List(String)
  nameWithType: BucketsResource.List(String)
  fullName: Google.Apis.Storage.v1.BucketsResource.List(System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: List
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 1544
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Retrieves a list of buckets for a given project.
  example: []
  syntax:
    content: public virtual BucketsResource.ListRequest List(string project)
    parameters:
    - id: project
      type: System.String
      description: A valid API project identifier.
    return:
      type: Google.Apis.Storage.v1.BucketsResource.ListRequest
    content.vb: Public Overridable Function List(project As String) As BucketsResource.ListRequest
  overload: Google.Apis.Storage.v1.BucketsResource.List*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.BucketsResource.LockRetentionPolicy(System.String,System.Int64)
  commentId: M:Google.Apis.Storage.v1.BucketsResource.LockRetentionPolicy(System.String,System.Int64)
  id: LockRetentionPolicy(System.String,System.Int64)
  parent: Google.Apis.Storage.v1.BucketsResource
  langs:
  - csharp
  - vb
  name: LockRetentionPolicy(String, Int64)
  nameWithType: BucketsResource.LockRetentionPolicy(String, Int64)
  fullName: Google.Apis.Storage.v1.BucketsResource.LockRetentionPolicy(System.String, System.Int64)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LockRetentionPolicy
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 1700
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Locks retention policy on a bucket.
  example: []
  syntax:
    content: public virtual BucketsResource.LockRetentionPolicyRequest LockRetentionPolicy(string bucket, long ifMetagenerationMatch)
    parameters:
    - id: bucket
      type: System.String
      description: Name of a bucket.
    - id: ifMetagenerationMatch
      type: System.Int64
      description: >-
        Makes the operation

        conditional on whether bucket&apos;s current metageneration matches the given value.
    return:
      type: Google.Apis.Storage.v1.BucketsResource.LockRetentionPolicyRequest
    content.vb: Public Overridable Function LockRetentionPolicy(bucket As String, ifMetagenerationMatch As Long) As BucketsResource.LockRetentionPolicyRequest
  overload: Google.Apis.Storage.v1.BucketsResource.LockRetentionPolicy*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.BucketsResource.Patch(Google.Apis.Storage.v1.Data.Bucket,System.String)
  commentId: M:Google.Apis.Storage.v1.BucketsResource.Patch(Google.Apis.Storage.v1.Data.Bucket,System.String)
  id: Patch(Google.Apis.Storage.v1.Data.Bucket,System.String)
  parent: Google.Apis.Storage.v1.BucketsResource
  langs:
  - csharp
  - vb
  name: Patch(Bucket, String)
  nameWithType: BucketsResource.Patch(Bucket, String)
  fullName: Google.Apis.Storage.v1.BucketsResource.Patch(Google.Apis.Storage.v1.Data.Bucket, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Patch
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 1804
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Patches a bucket. Changes to the bucket will be readable immediately after writing, but

    configuration changes may take time to propagate.
  example: []
  syntax:
    content: public virtual BucketsResource.PatchRequest Patch(Bucket body, string bucket)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.Bucket
      description: The body of the request.
    - id: bucket
      type: System.String
      description: Name of a bucket.
    return:
      type: Google.Apis.Storage.v1.BucketsResource.PatchRequest
    content.vb: Public Overridable Function Patch(body As Bucket, bucket As String) As BucketsResource.PatchRequest
  overload: Google.Apis.Storage.v1.BucketsResource.Patch*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.BucketsResource.SetIamPolicy(Google.Apis.Storage.v1.Data.Policy,System.String)
  commentId: M:Google.Apis.Storage.v1.BucketsResource.SetIamPolicy(Google.Apis.Storage.v1.Data.Policy,System.String)
  id: SetIamPolicy(Google.Apis.Storage.v1.Data.Policy,System.String)
  parent: Google.Apis.Storage.v1.BucketsResource
  langs:
  - csharp
  - vb
  name: SetIamPolicy(Policy, String)
  nameWithType: BucketsResource.SetIamPolicy(Policy, String)
  fullName: Google.Apis.Storage.v1.BucketsResource.SetIamPolicy(Google.Apis.Storage.v1.Data.Policy, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: SetIamPolicy
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 2023
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Updates an IAM policy for the specified bucket.
  example: []
  syntax:
    content: public virtual BucketsResource.SetIamPolicyRequest SetIamPolicy(Policy body, string bucket)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.Policy
      description: The body of the request.
    - id: bucket
      type: System.String
      description: Name of a bucket.
    return:
      type: Google.Apis.Storage.v1.BucketsResource.SetIamPolicyRequest
    content.vb: Public Overridable Function SetIamPolicy(body As Policy, bucket As String) As BucketsResource.SetIamPolicyRequest
  overload: Google.Apis.Storage.v1.BucketsResource.SetIamPolicy*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.BucketsResource.TestIamPermissions(System.String,Google.Apis.Util.Repeatable{System.String})
  commentId: M:Google.Apis.Storage.v1.BucketsResource.TestIamPermissions(System.String,Google.Apis.Util.Repeatable{System.String})
  id: TestIamPermissions(System.String,Google.Apis.Util.Repeatable{System.String})
  parent: Google.Apis.Storage.v1.BucketsResource
  langs:
  - csharp
  - vb
  name: TestIamPermissions(String, Repeatable<String>)
  nameWithType: BucketsResource.TestIamPermissions(String, Repeatable<String>)
  fullName: Google.Apis.Storage.v1.BucketsResource.TestIamPermissions(System.String, Google.Apis.Util.Repeatable<System.String>)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TestIamPermissions
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 2119
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Tests a set of permissions on the given bucket to see which, if any, are held by the

    caller.
  example: []
  syntax:
    content: public virtual BucketsResource.TestIamPermissionsRequest TestIamPermissions(string bucket, Repeatable<string> permissions)
    parameters:
    - id: bucket
      type: System.String
      description: Name of a bucket.
    - id: permissions
      type: Google.Apis.Util.Repeatable{System.String}
      description: Permissions to test.
    return:
      type: Google.Apis.Storage.v1.BucketsResource.TestIamPermissionsRequest
    content.vb: Public Overridable Function TestIamPermissions(bucket As String, permissions As Repeatable(Of String)) As BucketsResource.TestIamPermissionsRequest
  overload: Google.Apis.Storage.v1.BucketsResource.TestIamPermissions*
  nameWithType.vb: BucketsResource.TestIamPermissions(String, Repeatable(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Apis.Storage.v1.BucketsResource.TestIamPermissions(System.String, Google.Apis.Util.Repeatable(Of System.String))
  name.vb: TestIamPermissions(String, Repeatable(Of String))
- uid: Google.Apis.Storage.v1.BucketsResource.Update(Google.Apis.Storage.v1.Data.Bucket,System.String)
  commentId: M:Google.Apis.Storage.v1.BucketsResource.Update(Google.Apis.Storage.v1.Data.Bucket,System.String)
  id: Update(Google.Apis.Storage.v1.Data.Bucket,System.String)
  parent: Google.Apis.Storage.v1.BucketsResource
  langs:
  - csharp
  - vb
  name: Update(Bucket, String)
  nameWithType: BucketsResource.Update(Bucket, String)
  fullName: Google.Apis.Storage.v1.BucketsResource.Update(Google.Apis.Storage.v1.Data.Bucket, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Update
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 2223
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Updates a bucket. Changes to the bucket will be readable immediately after writing, but

    configuration changes may take time to propagate.
  example: []
  syntax:
    content: public virtual BucketsResource.UpdateRequest Update(Bucket body, string bucket)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.Bucket
      description: The body of the request.
    - id: bucket
      type: System.String
      description: Name of a bucket.
    return:
      type: Google.Apis.Storage.v1.BucketsResource.UpdateRequest
    content.vb: Public Overridable Function Update(body As Bucket, bucket As String) As BucketsResource.UpdateRequest
  overload: Google.Apis.Storage.v1.BucketsResource.Update*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1
  commentId: N:Google.Apis.Storage.v1
  name: Google.Apis.Storage.v1
  nameWithType: Google.Apis.Storage.v1
  fullName: Google.Apis.Storage.v1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Storage.v1.BucketsResource.#ctor*
  commentId: Overload:Google.Apis.Storage.v1.BucketsResource.#ctor
  name: BucketsResource
  nameWithType: BucketsResource.BucketsResource
  fullName: Google.Apis.Storage.v1.BucketsResource.BucketsResource
- uid: Google.Apis.Services.IClientService
  commentId: T:Google.Apis.Services.IClientService
  parent: Google.Apis.Services
  isExternal: true
  name: IClientService
  nameWithType: IClientService
  fullName: Google.Apis.Services.IClientService
- uid: Google.Apis.Services
  commentId: N:Google.Apis.Services
  isExternal: true
  name: Google.Apis.Services
  nameWithType: Google.Apis.Services
  fullName: Google.Apis.Services
- uid: Google.Apis.Storage.v1.BucketsResource.Delete*
  commentId: Overload:Google.Apis.Storage.v1.BucketsResource.Delete
  name: Delete
  nameWithType: BucketsResource.Delete
  fullName: Google.Apis.Storage.v1.BucketsResource.Delete
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Storage.v1.BucketsResource.DeleteRequest
  commentId: T:Google.Apis.Storage.v1.BucketsResource.DeleteRequest
  parent: Google.Apis.Storage.v1
  name: BucketsResource.DeleteRequest
  nameWithType: BucketsResource.DeleteRequest
  fullName: Google.Apis.Storage.v1.BucketsResource.DeleteRequest
- uid: Google.Apis.Storage.v1.BucketsResource.Get*
  commentId: Overload:Google.Apis.Storage.v1.BucketsResource.Get
  name: Get
  nameWithType: BucketsResource.Get
  fullName: Google.Apis.Storage.v1.BucketsResource.Get
- uid: Google.Apis.Storage.v1.BucketsResource.GetRequest
  commentId: T:Google.Apis.Storage.v1.BucketsResource.GetRequest
  parent: Google.Apis.Storage.v1
  name: BucketsResource.GetRequest
  nameWithType: BucketsResource.GetRequest
  fullName: Google.Apis.Storage.v1.BucketsResource.GetRequest
- uid: Google.Apis.Storage.v1.BucketsResource.GetIamPolicy*
  commentId: Overload:Google.Apis.Storage.v1.BucketsResource.GetIamPolicy
  name: GetIamPolicy
  nameWithType: BucketsResource.GetIamPolicy
  fullName: Google.Apis.Storage.v1.BucketsResource.GetIamPolicy
- uid: Google.Apis.Storage.v1.BucketsResource.GetIamPolicyRequest
  commentId: T:Google.Apis.Storage.v1.BucketsResource.GetIamPolicyRequest
  parent: Google.Apis.Storage.v1
  name: BucketsResource.GetIamPolicyRequest
  nameWithType: BucketsResource.GetIamPolicyRequest
  fullName: Google.Apis.Storage.v1.BucketsResource.GetIamPolicyRequest
- uid: Google.Apis.Storage.v1.BucketsResource.Insert*
  commentId: Overload:Google.Apis.Storage.v1.BucketsResource.Insert
  name: Insert
  nameWithType: BucketsResource.Insert
  fullName: Google.Apis.Storage.v1.BucketsResource.Insert
- uid: Google.Apis.Storage.v1.Data.Bucket
  commentId: T:Google.Apis.Storage.v1.Data.Bucket
  parent: Google.Apis.Storage.v1.Data
  name: Bucket
  nameWithType: Bucket
  fullName: Google.Apis.Storage.v1.Data.Bucket
- uid: Google.Apis.Storage.v1.BucketsResource.InsertRequest
  commentId: T:Google.Apis.Storage.v1.BucketsResource.InsertRequest
  parent: Google.Apis.Storage.v1
  name: BucketsResource.InsertRequest
  nameWithType: BucketsResource.InsertRequest
  fullName: Google.Apis.Storage.v1.BucketsResource.InsertRequest
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: Google.Apis.Storage.v1.BucketsResource.List*
  commentId: Overload:Google.Apis.Storage.v1.BucketsResource.List
  name: List
  nameWithType: BucketsResource.List
  fullName: Google.Apis.Storage.v1.BucketsResource.List
- uid: Google.Apis.Storage.v1.BucketsResource.ListRequest
  commentId: T:Google.Apis.Storage.v1.BucketsResource.ListRequest
  parent: Google.Apis.Storage.v1
  name: BucketsResource.ListRequest
  nameWithType: BucketsResource.ListRequest
  fullName: Google.Apis.Storage.v1.BucketsResource.ListRequest
- uid: Google.Apis.Storage.v1.BucketsResource.LockRetentionPolicy*
  commentId: Overload:Google.Apis.Storage.v1.BucketsResource.LockRetentionPolicy
  name: LockRetentionPolicy
  nameWithType: BucketsResource.LockRetentionPolicy
  fullName: Google.Apis.Storage.v1.BucketsResource.LockRetentionPolicy
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Google.Apis.Storage.v1.BucketsResource.LockRetentionPolicyRequest
  commentId: T:Google.Apis.Storage.v1.BucketsResource.LockRetentionPolicyRequest
  parent: Google.Apis.Storage.v1
  name: BucketsResource.LockRetentionPolicyRequest
  nameWithType: BucketsResource.LockRetentionPolicyRequest
  fullName: Google.Apis.Storage.v1.BucketsResource.LockRetentionPolicyRequest
- uid: Google.Apis.Storage.v1.BucketsResource.Patch*
  commentId: Overload:Google.Apis.Storage.v1.BucketsResource.Patch
  name: Patch
  nameWithType: BucketsResource.Patch
  fullName: Google.Apis.Storage.v1.BucketsResource.Patch
- uid: Google.Apis.Storage.v1.BucketsResource.PatchRequest
  commentId: T:Google.Apis.Storage.v1.BucketsResource.PatchRequest
  parent: Google.Apis.Storage.v1
  name: BucketsResource.PatchRequest
  nameWithType: BucketsResource.PatchRequest
  fullName: Google.Apis.Storage.v1.BucketsResource.PatchRequest
- uid: Google.Apis.Storage.v1.BucketsResource.SetIamPolicy*
  commentId: Overload:Google.Apis.Storage.v1.BucketsResource.SetIamPolicy
  name: SetIamPolicy
  nameWithType: BucketsResource.SetIamPolicy
  fullName: Google.Apis.Storage.v1.BucketsResource.SetIamPolicy
- uid: Google.Apis.Storage.v1.Data.Policy
  commentId: T:Google.Apis.Storage.v1.Data.Policy
  parent: Google.Apis.Storage.v1.Data
  name: Policy
  nameWithType: Policy
  fullName: Google.Apis.Storage.v1.Data.Policy
- uid: Google.Apis.Storage.v1.BucketsResource.SetIamPolicyRequest
  commentId: T:Google.Apis.Storage.v1.BucketsResource.SetIamPolicyRequest
  parent: Google.Apis.Storage.v1
  name: BucketsResource.SetIamPolicyRequest
  nameWithType: BucketsResource.SetIamPolicyRequest
  fullName: Google.Apis.Storage.v1.BucketsResource.SetIamPolicyRequest
- uid: Google.Apis.Storage.v1.BucketsResource.TestIamPermissions*
  commentId: Overload:Google.Apis.Storage.v1.BucketsResource.TestIamPermissions
  name: TestIamPermissions
  nameWithType: BucketsResource.TestIamPermissions
  fullName: Google.Apis.Storage.v1.BucketsResource.TestIamPermissions
- uid: Google.Apis.Util.Repeatable{System.String}
  commentId: T:Google.Apis.Util.Repeatable{System.String}
  parent: Google.Apis.Util
  definition: Google.Apis.Util.Repeatable`1
  name: Repeatable<String>
  nameWithType: Repeatable<String>
  fullName: Google.Apis.Util.Repeatable<System.String>
  nameWithType.vb: Repeatable(Of String)
  fullName.vb: Google.Apis.Util.Repeatable(Of System.String)
  name.vb: Repeatable(Of String)
  spec.csharp:
  - uid: Google.Apis.Util.Repeatable`1
    name: Repeatable
    nameWithType: Repeatable
    fullName: Google.Apis.Util.Repeatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Util.Repeatable`1
    name: Repeatable
    nameWithType: Repeatable
    fullName: Google.Apis.Util.Repeatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.BucketsResource.TestIamPermissionsRequest
  commentId: T:Google.Apis.Storage.v1.BucketsResource.TestIamPermissionsRequest
  parent: Google.Apis.Storage.v1
  name: BucketsResource.TestIamPermissionsRequest
  nameWithType: BucketsResource.TestIamPermissionsRequest
  fullName: Google.Apis.Storage.v1.BucketsResource.TestIamPermissionsRequest
- uid: Google.Apis.Util.Repeatable`1
  commentId: T:Google.Apis.Util.Repeatable`1
  isExternal: true
  name: Repeatable<T>
  nameWithType: Repeatable<T>
  fullName: Google.Apis.Util.Repeatable<T>
  nameWithType.vb: Repeatable(Of T)
  fullName.vb: Google.Apis.Util.Repeatable(Of T)
  name.vb: Repeatable(Of T)
  spec.csharp:
  - uid: Google.Apis.Util.Repeatable`1
    name: Repeatable
    nameWithType: Repeatable
    fullName: Google.Apis.Util.Repeatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Util.Repeatable`1
    name: Repeatable
    nameWithType: Repeatable
    fullName: Google.Apis.Util.Repeatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: true
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Storage.v1.BucketsResource.Update*
  commentId: Overload:Google.Apis.Storage.v1.BucketsResource.Update
  name: Update
  nameWithType: BucketsResource.Update
  fullName: Google.Apis.Storage.v1.BucketsResource.Update
- uid: Google.Apis.Storage.v1.BucketsResource.UpdateRequest
  commentId: T:Google.Apis.Storage.v1.BucketsResource.UpdateRequest
  parent: Google.Apis.Storage.v1
  name: BucketsResource.UpdateRequest
  nameWithType: BucketsResource.UpdateRequest
  fullName: Google.Apis.Storage.v1.BucketsResource.UpdateRequest
