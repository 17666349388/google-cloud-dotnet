### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.LifecycleData
  id: Bucket.LifecycleData
  parent: Google.Apis.Storage.v1.Data
  children:
  - Google.Apis.Storage.v1.Data.Bucket.LifecycleData.Rule
  langs:
  - csharp
  - vb
  name: Bucket.LifecycleData
  nameWithType: Bucket.LifecycleData
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LifecycleData
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6367
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The bucket's lifecycle configuration. See lifecycle management for more information.
  example: []
  syntax:
    content: 'public class LifecycleData : object'
    content.vb: >-
      Public Class LifecycleData
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.Rule
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.Rule
  id: Rule
  parent: Google.Apis.Storage.v1.Data.Bucket.LifecycleData
  langs:
  - csharp
  - vb
  name: Rule
  nameWithType: Bucket.LifecycleData.Rule
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.Rule
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Rule
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6371
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    A lifecycle management rule, which is made of an action to take and the condition(s) under

    which the action will be taken.
  example: []
  syntax:
    content: public virtual System.Collections.Generic.IList<Bucket.LifecycleData.RuleData> Rule { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData}
    content.vb: Public Overridable Property Rule As System.Collections.Generic.IList(Of Bucket.LifecycleData.RuleData)
  overload: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.Rule*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  isExternal: false
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.Rule*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.Rule
  isExternal: false
  name: Rule
  nameWithType: Bucket.LifecycleData.Rule
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.Rule
- uid: System.Collections.Generic.IList{Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData}
  commentId: '!:System.Collections.Generic.IList{Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData}'
  definition: System.Collections.Generic.IList`1
  name: System.Collections.Generic.IList<Bucket.LifecycleData.RuleData>
  nameWithType: System.Collections.Generic.IList<Bucket.LifecycleData.RuleData>
  fullName: System.Collections.Generic.IList<Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData>
  nameWithType.vb: System.Collections.Generic.IList(Of Bucket.LifecycleData.RuleData)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData)
  name.vb: System.Collections.Generic.IList(Of Bucket.LifecycleData.RuleData)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData
    name: Bucket.LifecycleData.RuleData
    nameWithType: Bucket.LifecycleData.RuleData
    fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData
    name: Bucket.LifecycleData.RuleData
    nameWithType: Bucket.LifecycleData.RuleData
    fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  isExternal: true
  name: System.Collections.Generic.IList<>
  nameWithType: System.Collections.Generic.IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: System.Collections.Generic.IList(Of )
  fullName.vb: System.Collections.Generic.IList(Of )
  name.vb: System.Collections.Generic.IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
