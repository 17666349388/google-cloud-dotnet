### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData
  id: Bucket.IamConfigurationData.BucketPolicyOnlyData
  parent: Google.Apis.Storage.v1.Data
  children:
  - Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.Enabled
  - Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTime
  - Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTimeRaw
  langs:
  - csharp
  - vb
  name: Bucket.IamConfigurationData.BucketPolicyOnlyData
  nameWithType: Bucket.IamConfigurationData.BucketPolicyOnlyData
  fullName: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BucketPolicyOnlyData
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 8356
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The bucket&apos;s Bucket Policy Only configuration.
  example: []
  syntax:
    content: public class BucketPolicyOnlyData
    content.vb: Public Class BucketPolicyOnlyData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.Enabled
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.Enabled
  id: Enabled
  parent: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: Bucket.IamConfigurationData.BucketPolicyOnlyData.Enabled
  fullName: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.Enabled
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Enabled
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 8359
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: If set, access is controlled only by bucket-level or above IAM policies.
  example: []
  syntax:
    content: >-
      [JsonProperty("enabled")]

      public virtual bool? Enabled { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("enabled")>

      Public Overridable Property Enabled As Boolean?
  overload: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.Enabled*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: enabled
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTimeRaw
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTimeRaw
  id: LockedTimeRaw
  parent: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData
  langs:
  - csharp
  - vb
  name: LockedTimeRaw
  nameWithType: Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTimeRaw
  fullName: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTimeRaw
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LockedTimeRaw
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 8365
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in

    RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until

    the locked time, after which the field is immutable.
  example: []
  syntax:
    content: >-
      [JsonProperty("lockedTime")]

      public virtual string LockedTimeRaw { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("lockedTime")>

      Public Overridable Property LockedTimeRaw As String
  overload: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTimeRaw*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lockedTime
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTime
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTime
  id: LockedTime
  parent: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData
  langs:
  - csharp
  - vb
  name: LockedTime
  nameWithType: Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTime
  fullName: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTime
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LockedTime
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 8369
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> representation of <xref href="Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTimeRaw" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public virtual DateTime? LockedTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonIgnore>

      Public Overridable Property LockedTime As Date?
  overload: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTime*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.Enabled*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.Enabled
  name: Enabled
  nameWithType: Bucket.IamConfigurationData.BucketPolicyOnlyData.Enabled
  fullName: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.Enabled
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTimeRaw*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTimeRaw
  name: LockedTimeRaw
  nameWithType: Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTimeRaw
  fullName: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTimeRaw
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTimeRaw
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTimeRaw
  isExternal: true
- uid: System.DateTime
  commentId: T:System.DateTime
  isExternal: true
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTime*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTime
  name: LockedTime
  nameWithType: Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTime
  fullName: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData.LockedTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
