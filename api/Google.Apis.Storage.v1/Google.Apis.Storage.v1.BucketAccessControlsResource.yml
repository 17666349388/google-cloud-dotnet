### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource
  commentId: T:Google.Apis.Storage.v1.BucketAccessControlsResource
  id: BucketAccessControlsResource
  parent: Google.Apis.Storage.v1
  children:
  - Google.Apis.Storage.v1.BucketAccessControlsResource.#ctor(Google.Apis.Services.IClientService)
  - Google.Apis.Storage.v1.BucketAccessControlsResource.Delete(System.String,System.String)
  - Google.Apis.Storage.v1.BucketAccessControlsResource.Get(System.String,System.String)
  - Google.Apis.Storage.v1.BucketAccessControlsResource.Insert(Google.Apis.Storage.v1.Data.BucketAccessControl,System.String)
  - Google.Apis.Storage.v1.BucketAccessControlsResource.List(System.String)
  - Google.Apis.Storage.v1.BucketAccessControlsResource.Patch(Google.Apis.Storage.v1.Data.BucketAccessControl,System.String,System.String)
  - Google.Apis.Storage.v1.BucketAccessControlsResource.Update(Google.Apis.Storage.v1.Data.BucketAccessControl,System.String,System.String)
  langs:
  - csharp
  - vb
  name: BucketAccessControlsResource
  nameWithType: BucketAccessControlsResource
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BucketAccessControlsResource
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 323
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: The "bucketAccessControls" collection of methods.
  example: []
  syntax:
    content: 'public class BucketAccessControlsResource : object'
    content.vb: >-
      Public Class BucketAccessControlsResource
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.#ctor(Google.Apis.Services.IClientService)
  commentId: M:Google.Apis.Storage.v1.BucketAccessControlsResource.#ctor(Google.Apis.Services.IClientService)
  id: '#ctor(Google.Apis.Services.IClientService)'
  parent: Google.Apis.Storage.v1.BucketAccessControlsResource
  langs:
  - csharp
  - vb
  name: BucketAccessControlsResource(Services.IClientService)
  nameWithType: BucketAccessControlsResource.BucketAccessControlsResource(Services.IClientService)
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.BucketAccessControlsResource(Google.Apis.Services.IClientService)
  type: Constructor
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 331
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Constructs a new resource.
  example: []
  syntax:
    content: public BucketAccessControlsResource(Services.IClientService service)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
    content.vb: Public Sub New(service As Services.IClientService)
  overload: Google.Apis.Storage.v1.BucketAccessControlsResource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.Delete(System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.BucketAccessControlsResource.Delete(System.String,System.String)
  id: Delete(System.String,System.String)
  parent: Google.Apis.Storage.v1.BucketAccessControlsResource
  langs:
  - csharp
  - vb
  name: Delete(String, String)
  nameWithType: BucketAccessControlsResource.Delete(String, String)
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.Delete(System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Delete
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 343
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Permanently deletes the ACL entry for the specified entity on the specified bucket.
  example: []
  syntax:
    content: public virtual BucketAccessControlsResource.DeleteRequest Delete(string bucket, string entity)
    parameters:
    - id: bucket
      type: System.String
      description: Name of a bucket.
    - id: entity
      type: System.String
      description: >-
        The entity holding the permission. Can

        be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or

        allAuthenticatedUsers.
    return:
      type: Google.Apis.Storage.v1.BucketAccessControlsResource.DeleteRequest
    content.vb: Public Overridable Function Delete(bucket As String, entity As String) As BucketAccessControlsResource.DeleteRequest
  overload: Google.Apis.Storage.v1.BucketAccessControlsResource.Delete*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.Get(System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.BucketAccessControlsResource.Get(System.String,System.String)
  id: Get(System.String,System.String)
  parent: Google.Apis.Storage.v1.BucketAccessControlsResource
  langs:
  - csharp
  - vb
  name: Get(String, String)
  nameWithType: BucketAccessControlsResource.Get(String, String)
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.Get(System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Get
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 421
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Returns the ACL entry for the specified entity on the specified bucket.
  example: []
  syntax:
    content: public virtual BucketAccessControlsResource.GetRequest Get(string bucket, string entity)
    parameters:
    - id: bucket
      type: System.String
      description: Name of a bucket.
    - id: entity
      type: System.String
      description: >-
        The entity holding the permission. Can

        be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or

        allAuthenticatedUsers.
    return:
      type: Google.Apis.Storage.v1.BucketAccessControlsResource.GetRequest
    content.vb: Public Overridable Function Get(bucket As String, entity As String) As BucketAccessControlsResource.GetRequest
  overload: Google.Apis.Storage.v1.BucketAccessControlsResource.Get*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.Insert(Google.Apis.Storage.v1.Data.BucketAccessControl,System.String)
  commentId: M:Google.Apis.Storage.v1.BucketAccessControlsResource.Insert(Google.Apis.Storage.v1.Data.BucketAccessControl,System.String)
  id: Insert(Google.Apis.Storage.v1.Data.BucketAccessControl,System.String)
  parent: Google.Apis.Storage.v1.BucketAccessControlsResource
  langs:
  - csharp
  - vb
  name: Insert(BucketAccessControl, String)
  nameWithType: BucketAccessControlsResource.Insert(BucketAccessControl, String)
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.Insert(Google.Apis.Storage.v1.Data.BucketAccessControl, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Insert
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 497
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Creates a new ACL entry on the specified bucket.
  example: []
  syntax:
    content: public virtual BucketAccessControlsResource.InsertRequest Insert(BucketAccessControl body, string bucket)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.BucketAccessControl
      description: The body of the request.
    - id: bucket
      type: System.String
      description: Name of a bucket.
    return:
      type: Google.Apis.Storage.v1.BucketAccessControlsResource.InsertRequest
    content.vb: Public Overridable Function Insert(body As BucketAccessControl, bucket As String) As BucketAccessControlsResource.InsertRequest
  overload: Google.Apis.Storage.v1.BucketAccessControlsResource.Insert*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.List(System.String)
  commentId: M:Google.Apis.Storage.v1.BucketAccessControlsResource.List(System.String)
  id: List(System.String)
  parent: Google.Apis.Storage.v1.BucketAccessControlsResource
  langs:
  - csharp
  - vb
  name: List(String)
  nameWithType: BucketAccessControlsResource.List(String)
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.List(System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: List
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 564
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Retrieves ACL entries on the specified bucket.
  example: []
  syntax:
    content: public virtual BucketAccessControlsResource.ListRequest List(string bucket)
    parameters:
    - id: bucket
      type: System.String
      description: Name of a bucket.
    return:
      type: Google.Apis.Storage.v1.BucketAccessControlsResource.ListRequest
    content.vb: Public Overridable Function List(bucket As String) As BucketAccessControlsResource.ListRequest
  overload: Google.Apis.Storage.v1.BucketAccessControlsResource.List*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.Patch(Google.Apis.Storage.v1.Data.BucketAccessControl,System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.BucketAccessControlsResource.Patch(Google.Apis.Storage.v1.Data.BucketAccessControl,System.String,System.String)
  id: Patch(Google.Apis.Storage.v1.Data.BucketAccessControl,System.String,System.String)
  parent: Google.Apis.Storage.v1.BucketAccessControlsResource
  langs:
  - csharp
  - vb
  name: Patch(BucketAccessControl, String, String)
  nameWithType: BucketAccessControlsResource.Patch(BucketAccessControl, String, String)
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.Patch(Google.Apis.Storage.v1.Data.BucketAccessControl, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Patch
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 628
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Updates an ACL entry on the specified bucket. This method supports patch semantics.
  example: []
  syntax:
    content: public virtual BucketAccessControlsResource.PatchRequest Patch(BucketAccessControl body, string bucket, string entity)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.BucketAccessControl
      description: The body of the request.
    - id: bucket
      type: System.String
      description: Name of a bucket.
    - id: entity
      type: System.String
      description: >-
        The entity holding the permission. Can

        be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or

        allAuthenticatedUsers.
    return:
      type: Google.Apis.Storage.v1.BucketAccessControlsResource.PatchRequest
    content.vb: Public Overridable Function Patch(body As BucketAccessControl, bucket As String, entity As String) As BucketAccessControlsResource.PatchRequest
  overload: Google.Apis.Storage.v1.BucketAccessControlsResource.Patch*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.Update(Google.Apis.Storage.v1.Data.BucketAccessControl,System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.BucketAccessControlsResource.Update(Google.Apis.Storage.v1.Data.BucketAccessControl,System.String,System.String)
  id: Update(Google.Apis.Storage.v1.Data.BucketAccessControl,System.String,System.String)
  parent: Google.Apis.Storage.v1.BucketAccessControlsResource
  langs:
  - csharp
  - vb
  name: Update(BucketAccessControl, String, String)
  nameWithType: BucketAccessControlsResource.Update(BucketAccessControl, String, String)
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.Update(Google.Apis.Storage.v1.Data.BucketAccessControl, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Update
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 714
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Updates an ACL entry on the specified bucket.
  example: []
  syntax:
    content: public virtual BucketAccessControlsResource.UpdateRequest Update(BucketAccessControl body, string bucket, string entity)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.BucketAccessControl
      description: The body of the request.
    - id: bucket
      type: System.String
      description: Name of a bucket.
    - id: entity
      type: System.String
      description: >-
        The entity holding the permission. Can

        be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or

        allAuthenticatedUsers.
    return:
      type: Google.Apis.Storage.v1.BucketAccessControlsResource.UpdateRequest
    content.vb: Public Overridable Function Update(body As BucketAccessControl, bucket As String, entity As String) As BucketAccessControlsResource.UpdateRequest
  overload: Google.Apis.Storage.v1.BucketAccessControlsResource.Update*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1
  commentId: N:Google.Apis.Storage.v1
  isExternal: false
  name: Google.Apis.Storage.v1
  nameWithType: Google.Apis.Storage.v1
  fullName: Google.Apis.Storage.v1
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.#ctor*
  commentId: Overload:Google.Apis.Storage.v1.BucketAccessControlsResource.#ctor
  isExternal: false
  name: BucketAccessControlsResource
  nameWithType: BucketAccessControlsResource.BucketAccessControlsResource
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.BucketAccessControlsResource
- uid: Google.Apis.Services.IClientService
  isExternal: true
  name: Services.IClientService
  nameWithType: Services.IClientService
  fullName: Google.Apis.Services.IClientService
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.Delete*
  commentId: Overload:Google.Apis.Storage.v1.BucketAccessControlsResource.Delete
  isExternal: false
  name: Delete
  nameWithType: BucketAccessControlsResource.Delete
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.Delete
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.DeleteRequest
  commentId: T:Google.Apis.Storage.v1.BucketAccessControlsResource.DeleteRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: BucketAccessControlsResource.DeleteRequest
  nameWithType: BucketAccessControlsResource.DeleteRequest
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.DeleteRequest
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.Get*
  commentId: Overload:Google.Apis.Storage.v1.BucketAccessControlsResource.Get
  isExternal: false
  name: Get
  nameWithType: BucketAccessControlsResource.Get
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.Get
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.GetRequest
  commentId: T:Google.Apis.Storage.v1.BucketAccessControlsResource.GetRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: BucketAccessControlsResource.GetRequest
  nameWithType: BucketAccessControlsResource.GetRequest
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.GetRequest
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.Insert*
  commentId: Overload:Google.Apis.Storage.v1.BucketAccessControlsResource.Insert
  isExternal: false
  name: Insert
  nameWithType: BucketAccessControlsResource.Insert
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.Insert
- uid: Google.Apis.Storage.v1.Data.BucketAccessControl
  commentId: T:Google.Apis.Storage.v1.Data.BucketAccessControl
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: BucketAccessControl
  nameWithType: BucketAccessControl
  fullName: Google.Apis.Storage.v1.Data.BucketAccessControl
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.InsertRequest
  commentId: T:Google.Apis.Storage.v1.BucketAccessControlsResource.InsertRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: BucketAccessControlsResource.InsertRequest
  nameWithType: BucketAccessControlsResource.InsertRequest
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.InsertRequest
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  isExternal: false
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.List*
  commentId: Overload:Google.Apis.Storage.v1.BucketAccessControlsResource.List
  isExternal: false
  name: List
  nameWithType: BucketAccessControlsResource.List
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.List
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.ListRequest
  commentId: T:Google.Apis.Storage.v1.BucketAccessControlsResource.ListRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: BucketAccessControlsResource.ListRequest
  nameWithType: BucketAccessControlsResource.ListRequest
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.ListRequest
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.Patch*
  commentId: Overload:Google.Apis.Storage.v1.BucketAccessControlsResource.Patch
  isExternal: false
  name: Patch
  nameWithType: BucketAccessControlsResource.Patch
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.Patch
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.PatchRequest
  commentId: T:Google.Apis.Storage.v1.BucketAccessControlsResource.PatchRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: BucketAccessControlsResource.PatchRequest
  nameWithType: BucketAccessControlsResource.PatchRequest
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.PatchRequest
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.Update*
  commentId: Overload:Google.Apis.Storage.v1.BucketAccessControlsResource.Update
  isExternal: false
  name: Update
  nameWithType: BucketAccessControlsResource.Update
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.Update
- uid: Google.Apis.Storage.v1.BucketAccessControlsResource.UpdateRequest
  commentId: T:Google.Apis.Storage.v1.BucketAccessControlsResource.UpdateRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: BucketAccessControlsResource.UpdateRequest
  nameWithType: BucketAccessControlsResource.UpdateRequest
  fullName: Google.Apis.Storage.v1.BucketAccessControlsResource.UpdateRequest
