### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.Data.Bucket
  commentId: T:Google.Apis.Storage.v1.Data.Bucket
  id: Bucket
  parent: Google.Apis.Storage.v1.Data
  children:
  - Google.Apis.Storage.v1.Data.Bucket.Acl
  - Google.Apis.Storage.v1.Data.Bucket.Cors
  - Google.Apis.Storage.v1.Data.Bucket.DefaultObjectAcl
  - Google.Apis.Storage.v1.Data.Bucket.ETag
  - Google.Apis.Storage.v1.Data.Bucket.Id
  - Google.Apis.Storage.v1.Data.Bucket.Kind
  - Google.Apis.Storage.v1.Data.Bucket.Labels
  - Google.Apis.Storage.v1.Data.Bucket.Lifecycle
  - Google.Apis.Storage.v1.Data.Bucket.Location
  - Google.Apis.Storage.v1.Data.Bucket.Logging
  - Google.Apis.Storage.v1.Data.Bucket.Metageneration
  - Google.Apis.Storage.v1.Data.Bucket.Name
  - Google.Apis.Storage.v1.Data.Bucket.Owner
  - Google.Apis.Storage.v1.Data.Bucket.ProjectNumber
  - Google.Apis.Storage.v1.Data.Bucket.SelfLink
  - Google.Apis.Storage.v1.Data.Bucket.StorageClass
  - Google.Apis.Storage.v1.Data.Bucket.TimeCreated
  - Google.Apis.Storage.v1.Data.Bucket.TimeCreatedRaw
  - Google.Apis.Storage.v1.Data.Bucket.Updated
  - Google.Apis.Storage.v1.Data.Bucket.UpdatedRaw
  - Google.Apis.Storage.v1.Data.Bucket.Versioning
  - Google.Apis.Storage.v1.Data.Bucket.Website
  langs:
  - csharp
  - vb
  name: Bucket
  nameWithType: Bucket
  fullName: Google.Apis.Storage.v1.Data.Bucket
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Bucket
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6223
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: A bucket.
  example: []
  syntax:
    content: 'public class Bucket : Requests.IDirectResponseSchema'
    content.vb: >-
      Public Class Bucket
          Inherits Requests.IDirectResponseSchema
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.Data.Bucket.Acl
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.Acl
  id: Acl
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: Acl
  nameWithType: Bucket.Acl
  fullName: Google.Apis.Storage.v1.Data.Bucket.Acl
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Acl
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6226
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: Access controls on the bucket.
  example: []
  syntax:
    content: public virtual System.Collections.Generic.IList<BucketAccessControl> Acl { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Storage.v1.Data.BucketAccessControl}
    content.vb: Public Overridable Property Acl As System.Collections.Generic.IList(Of BucketAccessControl)
  overload: Google.Apis.Storage.v1.Data.Bucket.Acl*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.Cors
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.Cors
  id: Cors
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: Cors
  nameWithType: Bucket.Cors
  fullName: Google.Apis.Storage.v1.Data.Bucket.Cors
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Cors
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6230
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The bucket's Cross-Origin Resource Sharing (CORS) configuration.
  example: []
  syntax:
    content: public virtual System.Collections.Generic.IList<Bucket.CorsData> Cors { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Storage.v1.Data.Bucket.CorsData}
    content.vb: Public Overridable Property Cors As System.Collections.Generic.IList(Of Bucket.CorsData)
  overload: Google.Apis.Storage.v1.Data.Bucket.Cors*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.DefaultObjectAcl
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.DefaultObjectAcl
  id: DefaultObjectAcl
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: DefaultObjectAcl
  nameWithType: Bucket.DefaultObjectAcl
  fullName: Google.Apis.Storage.v1.Data.Bucket.DefaultObjectAcl
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DefaultObjectAcl
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6234
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: Default access controls to apply to new objects when no ACL is provided.
  example: []
  syntax:
    content: public virtual System.Collections.Generic.IList<ObjectAccessControl> DefaultObjectAcl { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Storage.v1.Data.ObjectAccessControl}
    content.vb: Public Overridable Property DefaultObjectAcl As System.Collections.Generic.IList(Of ObjectAccessControl)
  overload: Google.Apis.Storage.v1.Data.Bucket.DefaultObjectAcl*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.ETag
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.ETag
  id: ETag
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: Bucket.ETag
  fullName: Google.Apis.Storage.v1.Data.Bucket.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6238
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: HTTP 1.1 Entity tag for the bucket.
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Storage.v1.Data.Bucket.ETag*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.Id
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.Id
  id: Id
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Bucket.Id
  fullName: Google.Apis.Storage.v1.Data.Bucket.Id
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Id
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6242
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The ID of the bucket. For buckets, the id and name properities are the same.
  example: []
  syntax:
    content: public virtual string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Id As String
  overload: Google.Apis.Storage.v1.Data.Bucket.Id*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.Kind
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.Kind
  id: Kind
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: Bucket.Kind
  fullName: Google.Apis.Storage.v1.Data.Bucket.Kind
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Kind
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6246
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The kind of item this is. For buckets, this is always storage#bucket.
  example: []
  syntax:
    content: public virtual string Kind { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Kind As String
  overload: Google.Apis.Storage.v1.Data.Bucket.Kind*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.Labels
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.Labels
  id: Labels
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: Labels
  nameWithType: Bucket.Labels
  fullName: Google.Apis.Storage.v1.Data.Bucket.Labels
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Labels
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6250
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: User-provided labels, in key/value pairs.
  example: []
  syntax:
    content: public virtual System.Collections.Generic.IDictionary<string, string> Labels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Overridable Property Labels As System.Collections.Generic.IDictionary(Of String, String)
  overload: Google.Apis.Storage.v1.Data.Bucket.Labels*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.Lifecycle
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.Lifecycle
  id: Lifecycle
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: Lifecycle
  nameWithType: Bucket.Lifecycle
  fullName: Google.Apis.Storage.v1.Data.Bucket.Lifecycle
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Lifecycle
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6254
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The bucket's lifecycle configuration. See lifecycle management for more information.
  example: []
  syntax:
    content: public virtual Bucket.LifecycleData Lifecycle { get; set; }
    parameters: []
    return:
      type: Google.Apis.Storage.v1.Data.Bucket.LifecycleData
    content.vb: Public Overridable Property Lifecycle As Bucket.LifecycleData
  overload: Google.Apis.Storage.v1.Data.Bucket.Lifecycle*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.Location
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.Location
  id: Location
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: Bucket.Location
  fullName: Google.Apis.Storage.v1.Data.Bucket.Location
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Location
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6259
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    The location of the bucket. Object data for objects in the bucket resides in physical storage

    within this region. Defaults to US. See the developer's guide for the authoritative list.
  example: []
  syntax:
    content: public virtual string Location { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Location As String
  overload: Google.Apis.Storage.v1.Data.Bucket.Location*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.Logging
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.Logging
  id: Logging
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: Logging
  nameWithType: Bucket.Logging
  fullName: Google.Apis.Storage.v1.Data.Bucket.Logging
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Logging
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6264
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    The bucket's logging configuration, which defines the destination bucket and optional name prefix

    for the current bucket's logs.
  example: []
  syntax:
    content: public virtual Bucket.LoggingData Logging { get; set; }
    parameters: []
    return:
      type: Google.Apis.Storage.v1.Data.Bucket.LoggingData
    content.vb: Public Overridable Property Logging As Bucket.LoggingData
  overload: Google.Apis.Storage.v1.Data.Bucket.Logging*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.Metageneration
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.Metageneration
  id: Metageneration
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: Metageneration
  nameWithType: Bucket.Metageneration
  fullName: Google.Apis.Storage.v1.Data.Bucket.Metageneration
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Metageneration
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6268
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The metadata generation of this bucket.
  example: []
  syntax:
    content: public virtual System.Nullable<long> Metageneration { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Overridable Property Metageneration As System.Nullable(Of Long)
  overload: Google.Apis.Storage.v1.Data.Bucket.Metageneration*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.Name
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.Name
  id: Name
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Bucket.Name
  fullName: Google.Apis.Storage.v1.Data.Bucket.Name
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Name
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6272
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The name of the bucket.
  example: []
  syntax:
    content: public virtual string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Name As String
  overload: Google.Apis.Storage.v1.Data.Bucket.Name*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.Owner
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.Owner
  id: Owner
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: Bucket.Owner
  fullName: Google.Apis.Storage.v1.Data.Bucket.Owner
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Owner
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6276
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The owner of the bucket. This is always the project team's owner group.
  example: []
  syntax:
    content: public virtual Bucket.OwnerData Owner { get; set; }
    parameters: []
    return:
      type: Google.Apis.Storage.v1.Data.Bucket.OwnerData
    content.vb: Public Overridable Property Owner As Bucket.OwnerData
  overload: Google.Apis.Storage.v1.Data.Bucket.Owner*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.ProjectNumber
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.ProjectNumber
  id: ProjectNumber
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: ProjectNumber
  nameWithType: Bucket.ProjectNumber
  fullName: Google.Apis.Storage.v1.Data.Bucket.ProjectNumber
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ProjectNumber
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6280
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The project number of the project the bucket belongs to.
  example: []
  syntax:
    content: public virtual System.Nullable<ulong> ProjectNumber { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.UInt64}
    content.vb: Public Overridable Property ProjectNumber As System.Nullable(Of ULong)
  overload: Google.Apis.Storage.v1.Data.Bucket.ProjectNumber*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.SelfLink
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.SelfLink
  id: SelfLink
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: SelfLink
  nameWithType: Bucket.SelfLink
  fullName: Google.Apis.Storage.v1.Data.Bucket.SelfLink
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: SelfLink
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6284
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The URI of this bucket.
  example: []
  syntax:
    content: public virtual string SelfLink { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property SelfLink As String
  overload: Google.Apis.Storage.v1.Data.Bucket.SelfLink*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.StorageClass
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.StorageClass
  id: StorageClass
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: StorageClass
  nameWithType: Bucket.StorageClass
  fullName: Google.Apis.Storage.v1.Data.Bucket.StorageClass
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: StorageClass
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6292
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    The bucket's default storage class, used whenever no storageClass is specified for a newly-created

    object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage.

    Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, and DURABLE_REDUCED_AVAILABILITY. If

    this value is not specified when the bucket is created, it will default to STANDARD. For more information,

    see storage classes.
  example: []
  syntax:
    content: public virtual string StorageClass { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property StorageClass As String
  overload: Google.Apis.Storage.v1.Data.Bucket.StorageClass*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.TimeCreatedRaw
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.TimeCreatedRaw
  id: TimeCreatedRaw
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: TimeCreatedRaw
  nameWithType: Bucket.TimeCreatedRaw
  fullName: Google.Apis.Storage.v1.Data.Bucket.TimeCreatedRaw
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TimeCreatedRaw
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6296
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The creation time of the bucket in RFC 3339 format.
  example: []
  syntax:
    content: public virtual string TimeCreatedRaw { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property TimeCreatedRaw As String
  overload: Google.Apis.Storage.v1.Data.Bucket.TimeCreatedRaw*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.TimeCreated
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.TimeCreated
  id: TimeCreated
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: TimeCreated
  nameWithType: Bucket.TimeCreated
  fullName: Google.Apis.Storage.v1.Data.Bucket.TimeCreated
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TimeCreated
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6300
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: <seealso cref="!:System.DateTime"></seealso> representation of <xref href="Google.Apis.Storage.v1.Data.Bucket.TimeCreatedRaw" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual System.Nullable<System.DateTime> TimeCreated { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Overridable Property TimeCreated As System.Nullable(Of System.DateTime)
  overload: Google.Apis.Storage.v1.Data.Bucket.TimeCreated*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.UpdatedRaw
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.UpdatedRaw
  id: UpdatedRaw
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: UpdatedRaw
  nameWithType: Bucket.UpdatedRaw
  fullName: Google.Apis.Storage.v1.Data.Bucket.UpdatedRaw
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UpdatedRaw
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6314
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The modification time of the bucket in RFC 3339 format.
  example: []
  syntax:
    content: public virtual string UpdatedRaw { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property UpdatedRaw As String
  overload: Google.Apis.Storage.v1.Data.Bucket.UpdatedRaw*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.Updated
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.Updated
  id: Updated
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: Bucket.Updated
  fullName: Google.Apis.Storage.v1.Data.Bucket.Updated
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Updated
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6318
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: <seealso cref="!:System.DateTime"></seealso> representation of <xref href="Google.Apis.Storage.v1.Data.Bucket.UpdatedRaw" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual System.Nullable<System.DateTime> Updated { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Overridable Property Updated As System.Nullable(Of System.DateTime)
  overload: Google.Apis.Storage.v1.Data.Bucket.Updated*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.Versioning
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.Versioning
  id: Versioning
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: Versioning
  nameWithType: Bucket.Versioning
  fullName: Google.Apis.Storage.v1.Data.Bucket.Versioning
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Versioning
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6332
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The bucket's versioning configuration.
  example: []
  syntax:
    content: public virtual Bucket.VersioningData Versioning { get; set; }
    parameters: []
    return:
      type: Google.Apis.Storage.v1.Data.Bucket.VersioningData
    content.vb: Public Overridable Property Versioning As Bucket.VersioningData
  overload: Google.Apis.Storage.v1.Data.Bucket.Versioning*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.Website
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.Website
  id: Website
  parent: Google.Apis.Storage.v1.Data.Bucket
  langs:
  - csharp
  - vb
  name: Website
  nameWithType: Bucket.Website
  fullName: Google.Apis.Storage.v1.Data.Bucket.Website
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Website
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6337
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    The bucket's website configuration, controlling how the service behaves when accessing bucket

    contents as a web site. See the Static Website Examples for more information.
  example: []
  syntax:
    content: public virtual Bucket.WebsiteData Website { get; set; }
    parameters: []
    return:
      type: Google.Apis.Storage.v1.Data.Bucket.WebsiteData
    content.vb: Public Overridable Property Website As Bucket.WebsiteData
  overload: Google.Apis.Storage.v1.Data.Bucket.Website*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  isExternal: false
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Storage.v1.Data.Bucket.Acl*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.Acl
  isExternal: false
  name: Acl
  nameWithType: Bucket.Acl
  fullName: Google.Apis.Storage.v1.Data.Bucket.Acl
- uid: System.Collections.Generic.IList{Google.Apis.Storage.v1.Data.BucketAccessControl}
  commentId: '!:System.Collections.Generic.IList{Google.Apis.Storage.v1.Data.BucketAccessControl}'
  definition: System.Collections.Generic.IList`1
  name: System.Collections.Generic.IList<BucketAccessControl>
  nameWithType: System.Collections.Generic.IList<BucketAccessControl>
  fullName: System.Collections.Generic.IList<Google.Apis.Storage.v1.Data.BucketAccessControl>
  nameWithType.vb: System.Collections.Generic.IList(Of BucketAccessControl)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Storage.v1.Data.BucketAccessControl)
  name.vb: System.Collections.Generic.IList(Of BucketAccessControl)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Storage.v1.Data.BucketAccessControl
    name: BucketAccessControl
    nameWithType: BucketAccessControl
    fullName: Google.Apis.Storage.v1.Data.BucketAccessControl
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Storage.v1.Data.BucketAccessControl
    name: BucketAccessControl
    nameWithType: BucketAccessControl
    fullName: Google.Apis.Storage.v1.Data.BucketAccessControl
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  isExternal: true
  name: System.Collections.Generic.IList<>
  nameWithType: System.Collections.Generic.IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: System.Collections.Generic.IList(Of )
  fullName.vb: System.Collections.Generic.IList(Of )
  name.vb: System.Collections.Generic.IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.Cors*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.Cors
  isExternal: false
  name: Cors
  nameWithType: Bucket.Cors
  fullName: Google.Apis.Storage.v1.Data.Bucket.Cors
- uid: System.Collections.Generic.IList{Google.Apis.Storage.v1.Data.Bucket.CorsData}
  commentId: '!:System.Collections.Generic.IList{Google.Apis.Storage.v1.Data.Bucket.CorsData}'
  definition: System.Collections.Generic.IList`1
  name: System.Collections.Generic.IList<Bucket.CorsData>
  nameWithType: System.Collections.Generic.IList<Bucket.CorsData>
  fullName: System.Collections.Generic.IList<Google.Apis.Storage.v1.Data.Bucket.CorsData>
  nameWithType.vb: System.Collections.Generic.IList(Of Bucket.CorsData)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Storage.v1.Data.Bucket.CorsData)
  name.vb: System.Collections.Generic.IList(Of Bucket.CorsData)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Storage.v1.Data.Bucket.CorsData
    name: Bucket.CorsData
    nameWithType: Bucket.CorsData
    fullName: Google.Apis.Storage.v1.Data.Bucket.CorsData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Storage.v1.Data.Bucket.CorsData
    name: Bucket.CorsData
    nameWithType: Bucket.CorsData
    fullName: Google.Apis.Storage.v1.Data.Bucket.CorsData
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.DefaultObjectAcl*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.DefaultObjectAcl
  isExternal: false
  name: DefaultObjectAcl
  nameWithType: Bucket.DefaultObjectAcl
  fullName: Google.Apis.Storage.v1.Data.Bucket.DefaultObjectAcl
- uid: System.Collections.Generic.IList{Google.Apis.Storage.v1.Data.ObjectAccessControl}
  commentId: '!:System.Collections.Generic.IList{Google.Apis.Storage.v1.Data.ObjectAccessControl}'
  definition: System.Collections.Generic.IList`1
  name: System.Collections.Generic.IList<ObjectAccessControl>
  nameWithType: System.Collections.Generic.IList<ObjectAccessControl>
  fullName: System.Collections.Generic.IList<Google.Apis.Storage.v1.Data.ObjectAccessControl>
  nameWithType.vb: System.Collections.Generic.IList(Of ObjectAccessControl)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Storage.v1.Data.ObjectAccessControl)
  name.vb: System.Collections.Generic.IList(Of ObjectAccessControl)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Storage.v1.Data.ObjectAccessControl
    name: ObjectAccessControl
    nameWithType: ObjectAccessControl
    fullName: Google.Apis.Storage.v1.Data.ObjectAccessControl
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Storage.v1.Data.ObjectAccessControl
    name: ObjectAccessControl
    nameWithType: ObjectAccessControl
    fullName: Google.Apis.Storage.v1.Data.ObjectAccessControl
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.ETag*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.ETag
  isExternal: false
  name: ETag
  nameWithType: Bucket.ETag
  fullName: Google.Apis.Storage.v1.Data.Bucket.ETag
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Storage.v1.Data.Bucket.Id*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.Id
  isExternal: false
  name: Id
  nameWithType: Bucket.Id
  fullName: Google.Apis.Storage.v1.Data.Bucket.Id
- uid: Google.Apis.Storage.v1.Data.Bucket.Kind*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.Kind
  isExternal: false
  name: Kind
  nameWithType: Bucket.Kind
  fullName: Google.Apis.Storage.v1.Data.Bucket.Kind
- uid: Google.Apis.Storage.v1.Data.Bucket.Labels*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.Labels
  isExternal: false
  name: Labels
  nameWithType: Bucket.Labels
  fullName: Google.Apis.Storage.v1.Data.Bucket.Labels
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: '!:System.Collections.Generic.IDictionary{System.String,System.String}'
  definition: System.Collections.Generic.IDictionary`2
  name: System.Collections.Generic.IDictionary<String, String>
  nameWithType: System.Collections.Generic.IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: System.Collections.Generic.IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: System.Collections.Generic.IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: System.Collections.Generic.IDictionary
    nameWithType: System.Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: System.Collections.Generic.IDictionary
    nameWithType: System.Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  isExternal: true
  name: System.Collections.Generic.IDictionary<, >
  nameWithType: System.Collections.Generic.IDictionary<, >
  fullName: System.Collections.Generic.IDictionary<, >
  nameWithType.vb: System.Collections.Generic.IDictionary(Of , )
  fullName.vb: System.Collections.Generic.IDictionary(Of , )
  name.vb: System.Collections.Generic.IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: System.Collections.Generic.IDictionary
    nameWithType: System.Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: System.Collections.Generic.IDictionary
    nameWithType: System.Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.Lifecycle*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.Lifecycle
  isExternal: false
  name: Lifecycle
  nameWithType: Bucket.Lifecycle
  fullName: Google.Apis.Storage.v1.Data.Bucket.Lifecycle
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.LifecycleData
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: Bucket.LifecycleData
  nameWithType: Bucket.LifecycleData
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData
- uid: Google.Apis.Storage.v1.Data.Bucket.Location*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.Location
  isExternal: false
  name: Location
  nameWithType: Bucket.Location
  fullName: Google.Apis.Storage.v1.Data.Bucket.Location
- uid: Google.Apis.Storage.v1.Data.Bucket.Logging*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.Logging
  isExternal: false
  name: Logging
  nameWithType: Bucket.Logging
  fullName: Google.Apis.Storage.v1.Data.Bucket.Logging
- uid: Google.Apis.Storage.v1.Data.Bucket.LoggingData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.LoggingData
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: Bucket.LoggingData
  nameWithType: Bucket.LoggingData
  fullName: Google.Apis.Storage.v1.Data.Bucket.LoggingData
- uid: Google.Apis.Storage.v1.Data.Bucket.Metageneration*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.Metageneration
  isExternal: false
  name: Metageneration
  nameWithType: Bucket.Metageneration
  fullName: Google.Apis.Storage.v1.Data.Bucket.Metageneration
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: System.Nullable<Int64>
  nameWithType: System.Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: System.Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: System.Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: System.Nullable<>
  nameWithType: System.Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: System.Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: System.Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.Name*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.Name
  isExternal: false
  name: Name
  nameWithType: Bucket.Name
  fullName: Google.Apis.Storage.v1.Data.Bucket.Name
- uid: Google.Apis.Storage.v1.Data.Bucket.Owner*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.Owner
  isExternal: false
  name: Owner
  nameWithType: Bucket.Owner
  fullName: Google.Apis.Storage.v1.Data.Bucket.Owner
- uid: Google.Apis.Storage.v1.Data.Bucket.OwnerData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.OwnerData
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: Bucket.OwnerData
  nameWithType: Bucket.OwnerData
  fullName: Google.Apis.Storage.v1.Data.Bucket.OwnerData
- uid: Google.Apis.Storage.v1.Data.Bucket.ProjectNumber*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.ProjectNumber
  isExternal: false
  name: ProjectNumber
  nameWithType: Bucket.ProjectNumber
  fullName: Google.Apis.Storage.v1.Data.Bucket.ProjectNumber
- uid: System.Nullable{System.UInt64}
  commentId: '!:System.Nullable{System.UInt64}'
  definition: System.Nullable`1
  name: System.Nullable<UInt64>
  nameWithType: System.Nullable<UInt64>
  fullName: System.Nullable<System.UInt64>
  nameWithType.vb: System.Nullable(Of UInt64)
  fullName.vb: System.Nullable(Of System.UInt64)
  name.vb: System.Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.SelfLink*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.SelfLink
  isExternal: false
  name: SelfLink
  nameWithType: Bucket.SelfLink
  fullName: Google.Apis.Storage.v1.Data.Bucket.SelfLink
- uid: Google.Apis.Storage.v1.Data.Bucket.StorageClass*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.StorageClass
  isExternal: false
  name: StorageClass
  nameWithType: Bucket.StorageClass
  fullName: Google.Apis.Storage.v1.Data.Bucket.StorageClass
- uid: Google.Apis.Storage.v1.Data.Bucket.TimeCreatedRaw*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.TimeCreatedRaw
  isExternal: false
  name: TimeCreatedRaw
  nameWithType: Bucket.TimeCreatedRaw
  fullName: Google.Apis.Storage.v1.Data.Bucket.TimeCreatedRaw
- uid: Google.Apis.Storage.v1.Data.Bucket.TimeCreatedRaw
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.TimeCreatedRaw
- uid: Google.Apis.Storage.v1.Data.Bucket.TimeCreated*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.TimeCreated
  isExternal: false
  name: TimeCreated
  nameWithType: Bucket.TimeCreated
  fullName: Google.Apis.Storage.v1.Data.Bucket.TimeCreated
- uid: System.Nullable{System.DateTime}
  commentId: '!:System.Nullable{System.DateTime}'
  definition: System.Nullable`1
  name: System.Nullable<System.DateTime>
  nameWithType: System.Nullable<System.DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: System.Nullable(Of System.DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: System.Nullable(Of System.DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: System.DateTime
    nameWithType: System.DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: System.DateTime
    nameWithType: System.DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.UpdatedRaw*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.UpdatedRaw
  isExternal: false
  name: UpdatedRaw
  nameWithType: Bucket.UpdatedRaw
  fullName: Google.Apis.Storage.v1.Data.Bucket.UpdatedRaw
- uid: Google.Apis.Storage.v1.Data.Bucket.UpdatedRaw
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.UpdatedRaw
- uid: Google.Apis.Storage.v1.Data.Bucket.Updated*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.Updated
  isExternal: false
  name: Updated
  nameWithType: Bucket.Updated
  fullName: Google.Apis.Storage.v1.Data.Bucket.Updated
- uid: Google.Apis.Storage.v1.Data.Bucket.Versioning*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.Versioning
  isExternal: false
  name: Versioning
  nameWithType: Bucket.Versioning
  fullName: Google.Apis.Storage.v1.Data.Bucket.Versioning
- uid: Google.Apis.Storage.v1.Data.Bucket.VersioningData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.VersioningData
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: Bucket.VersioningData
  nameWithType: Bucket.VersioningData
  fullName: Google.Apis.Storage.v1.Data.Bucket.VersioningData
- uid: Google.Apis.Storage.v1.Data.Bucket.Website*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.Website
  isExternal: false
  name: Website
  nameWithType: Bucket.Website
  fullName: Google.Apis.Storage.v1.Data.Bucket.Website
- uid: Google.Apis.Storage.v1.Data.Bucket.WebsiteData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.WebsiteData
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: Bucket.WebsiteData
  nameWithType: Bucket.WebsiteData
  fullName: Google.Apis.Storage.v1.Data.Bucket.WebsiteData
