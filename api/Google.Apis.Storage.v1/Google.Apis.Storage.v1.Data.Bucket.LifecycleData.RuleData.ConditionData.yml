### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  id: Bucket.LifecycleData.RuleData.ConditionData
  parent: Google.Apis.Storage.v1.Data
  children:
  - Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age
  - Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
  - Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive
  - Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
  - Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
  langs:
  - csharp
  - vb
  name: Bucket.LifecycleData.RuleData.ConditionData
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ConditionData
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6402
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The condition(s) under which the action will be taken.
  example: []
  syntax:
    content: 'public class ConditionData : object'
    content.vb: >-
      Public Class ConditionData
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age
  id: Age
  parent: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  langs:
  - csharp
  - vb
  name: Age
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.Age
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Age
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6406
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    Age of an object (in days). This condition is satisfied when an object reaches the

    specified age.
  example: []
  syntax:
    content: public virtual System.Nullable<int> Age { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Overridable Property Age As System.Nullable(Of Integer)
  overload: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
  id: CreatedBefore
  parent: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  langs:
  - csharp
  - vb
  name: CreatedBefore
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CreatedBefore
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6412
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This

    condition is satisfied when an object is created before midnight of the specified date in

    UTC.
  example: []
  syntax:
    content: public virtual string CreatedBefore { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property CreatedBefore As String
  overload: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive
  id: IsLive
  parent: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  langs:
  - csharp
  - vb
  name: IsLive
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.IsLive
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IsLive
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6417
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    Relevant only for versioned objects. If the value is true, this condition matches live

    objects; if the value is false, it matches archived objects.
  example: []
  syntax:
    content: public virtual System.Nullable<bool> IsLive { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Overridable Property IsLive As System.Nullable(Of Boolean)
  overload: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
  id: MatchesStorageClass
  parent: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  langs:
  - csharp
  - vb
  name: MatchesStorageClass
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MatchesStorageClass
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6423
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    Objects having any of the storage classes specified by this condition will be matched.

    Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, STANDARD, and

    DURABLE_REDUCED_AVAILABILITY.
  example: []
  syntax:
    content: public virtual System.Collections.Generic.IList<string> MatchesStorageClass { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Overridable Property MatchesStorageClass As System.Collections.Generic.IList(Of String)
  overload: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
  id: NumNewerVersions
  parent: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  langs:
  - csharp
  - vb
  name: NumNewerVersions
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NumNewerVersions
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6429
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    Relevant only for versioned objects. If the value is N, this condition is satisfied

    when there are at least N versions (including the live version) newer than this version of the

    object.
  example: []
  syntax:
    content: public virtual System.Nullable<int> NumNewerVersions { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Overridable Property NumNewerVersions As System.Nullable(Of Integer)
  overload: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  isExternal: false
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age
  isExternal: false
  name: Age
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.Age
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: System.Nullable<Int32>
  nameWithType: System.Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: System.Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: System.Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: System.Nullable<>
  nameWithType: System.Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: System.Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: System.Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
  isExternal: false
  name: CreatedBefore
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive
  isExternal: false
  name: IsLive
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.IsLive
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: System.Nullable<Boolean>
  nameWithType: System.Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: System.Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: System.Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
  isExternal: false
  name: MatchesStorageClass
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
- uid: System.Collections.Generic.IList{System.String}
  commentId: '!:System.Collections.Generic.IList{System.String}'
  definition: System.Collections.Generic.IList`1
  name: System.Collections.Generic.IList<String>
  nameWithType: System.Collections.Generic.IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: System.Collections.Generic.IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: System.Collections.Generic.IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  isExternal: true
  name: System.Collections.Generic.IList<>
  nameWithType: System.Collections.Generic.IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: System.Collections.Generic.IList(Of )
  fullName.vb: System.Collections.Generic.IList(Of )
  name.vb: System.Collections.Generic.IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: System.Collections.Generic.IList
    nameWithType: System.Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
  isExternal: false
  name: NumNewerVersions
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
