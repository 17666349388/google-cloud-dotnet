### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  id: Bucket.LifecycleData.RuleData.ConditionData
  parent: Google.Apis.Storage.v1.Data
  children:
  - Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age
  - Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
  - Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive
  - Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesPattern
  - Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
  - Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
  langs:
  - csharp
  - vb
  name: Bucket.LifecycleData.RuleData.ConditionData
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ConditionData
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 8450
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The condition(s) under which the action will be taken.
  example: []
  syntax:
    content: public class ConditionData
    content.vb: Public Class ConditionData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age
  id: Age
  parent: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  langs:
  - csharp
  - vb
  name: Age
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.Age
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Age
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 8454
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    Age of an object (in days). This condition is satisfied when an object reaches the

    specified age.
  example: []
  syntax:
    content: >-
      [JsonProperty("age")]

      public virtual int? Age { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("age")>

      Public Overridable Property Age As Integer?
  overload: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: age
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
  id: CreatedBefore
  parent: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  langs:
  - csharp
  - vb
  name: CreatedBefore
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CreatedBefore
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 8460
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    A date in RFC 3339 format with only the date part (for instance, &quot;2013-01-15&quot;). This

    condition is satisfied when an object is created before midnight of the specified date in

    UTC.
  example: []
  syntax:
    content: >-
      [JsonProperty("createdBefore")]

      public virtual string CreatedBefore { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("createdBefore")>

      Public Overridable Property CreatedBefore As String
  overload: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: createdBefore
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive
  id: IsLive
  parent: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  langs:
  - csharp
  - vb
  name: IsLive
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.IsLive
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IsLive
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 8465
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    Relevant only for versioned objects. If the value is true, this condition matches live

    objects; if the value is false, it matches archived objects.
  example: []
  syntax:
    content: >-
      [JsonProperty("isLive")]

      public virtual bool? IsLive { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("isLive")>

      Public Overridable Property IsLive As Boolean?
  overload: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isLive
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesPattern
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesPattern
  id: MatchesPattern
  parent: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  langs:
  - csharp
  - vb
  name: MatchesPattern
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.MatchesPattern
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesPattern
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MatchesPattern
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 8473
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    A regular expression that satisfies the RE2 syntax. This condition is satisfied when

    the name of the object matches the RE2 pattern. Note: This feature is currently in the &quot;Early

    Access&quot; launch stage and is only available to a whitelisted set of users; that means that this

    feature may be changed in backward-incompatible ways and that it is not guaranteed to be

    released.
  example: []
  syntax:
    content: >-
      [JsonProperty("matchesPattern")]

      public virtual string MatchesPattern { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("matchesPattern")>

      Public Overridable Property MatchesPattern As String
  overload: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesPattern*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: matchesPattern
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
  id: MatchesStorageClass
  parent: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  langs:
  - csharp
  - vb
  name: MatchesStorageClass
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MatchesStorageClass
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 8479
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    Objects having any of the storage classes specified by this condition will be matched.

    Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, STANDARD, and

    DURABLE_REDUCED_AVAILABILITY.
  example: []
  syntax:
    content: >-
      [JsonProperty("matchesStorageClass")]

      public virtual IList<string> MatchesStorageClass { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: >-
      <JsonProperty("matchesStorageClass")>

      Public Overridable Property MatchesStorageClass As IList(Of String)
  overload: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: matchesStorageClass
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
  id: NumNewerVersions
  parent: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  langs:
  - csharp
  - vb
  name: NumNewerVersions
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NumNewerVersions
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 8485
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    Relevant only for versioned objects. If the value is N, this condition is satisfied

    when there are at least N versions (including the live version) newer than this version of the

    object.
  example: []
  syntax:
    content: >-
      [JsonProperty("numNewerVersions")]

      public virtual int? NumNewerVersions { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("numNewerVersions")>

      Public Overridable Property NumNewerVersions As Integer?
  overload: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: numNewerVersions
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age
  name: Age
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.Age
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.Age
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
  name: CreatedBefore
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.CreatedBefore
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive
  name: IsLive
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.IsLive
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.IsLive
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesPattern*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesPattern
  name: MatchesPattern
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.MatchesPattern
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesPattern
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
  name: MatchesStorageClass
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.MatchesStorageClass
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
  name: NumNewerVersions
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData.NumNewerVersions
