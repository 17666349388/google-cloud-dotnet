### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData
  id: Bucket.IamConfigurationData
  parent: Google.Apis.Storage.v1.Data
  children:
  - Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnly
  - Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.UniformBucketLevelAccess
  langs:
  - csharp
  - vb
  name: Bucket.IamConfigurationData
  nameWithType: Bucket.IamConfigurationData
  fullName: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IamConfigurationData
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 8343
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The bucket&apos;s IAM configuration.
  example: []
  syntax:
    content: public class IamConfigurationData
    content.vb: Public Class IamConfigurationData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnly
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnly
  id: BucketPolicyOnly
  parent: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData
  langs:
  - csharp
  - vb
  name: BucketPolicyOnly
  nameWithType: Bucket.IamConfigurationData.BucketPolicyOnly
  fullName: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnly
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BucketPolicyOnly
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 8346
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The bucket&apos;s Bucket Policy Only configuration.
  example: []
  syntax:
    content: >-
      [JsonProperty("bucketPolicyOnly")]

      public virtual Bucket.IamConfigurationData.BucketPolicyOnlyData BucketPolicyOnly { get; set; }
    parameters: []
    return:
      type: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData
    content.vb: >-
      <JsonProperty("bucketPolicyOnly")>

      Public Overridable Property BucketPolicyOnly As Bucket.IamConfigurationData.BucketPolicyOnlyData
  overload: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnly*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: bucketPolicyOnly
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.UniformBucketLevelAccess
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.UniformBucketLevelAccess
  id: UniformBucketLevelAccess
  parent: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData
  langs:
  - csharp
  - vb
  name: UniformBucketLevelAccess
  nameWithType: Bucket.IamConfigurationData.UniformBucketLevelAccess
  fullName: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.UniformBucketLevelAccess
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UniformBucketLevelAccess
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 8350
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The bucket&apos;s uniform bucket-level access configuration.
  example: []
  syntax:
    content: >-
      [JsonProperty("uniformBucketLevelAccess")]

      public virtual Bucket.IamConfigurationData.UniformBucketLevelAccessData UniformBucketLevelAccess { get; set; }
    parameters: []
    return:
      type: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.UniformBucketLevelAccessData
    content.vb: >-
      <JsonProperty("uniformBucketLevelAccess")>

      Public Overridable Property UniformBucketLevelAccess As Bucket.IamConfigurationData.UniformBucketLevelAccessData
  overload: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.UniformBucketLevelAccess*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: uniformBucketLevelAccess
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnly*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnly
  name: BucketPolicyOnly
  nameWithType: Bucket.IamConfigurationData.BucketPolicyOnly
  fullName: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnly
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData
  parent: Google.Apis.Storage.v1.Data
  name: Bucket.IamConfigurationData.BucketPolicyOnlyData
  nameWithType: Bucket.IamConfigurationData.BucketPolicyOnlyData
  fullName: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.BucketPolicyOnlyData
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.UniformBucketLevelAccess*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.UniformBucketLevelAccess
  name: UniformBucketLevelAccess
  nameWithType: Bucket.IamConfigurationData.UniformBucketLevelAccess
  fullName: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.UniformBucketLevelAccess
- uid: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.UniformBucketLevelAccessData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.UniformBucketLevelAccessData
  parent: Google.Apis.Storage.v1.Data
  name: Bucket.IamConfigurationData.UniformBucketLevelAccessData
  nameWithType: Bucket.IamConfigurationData.UniformBucketLevelAccessData
  fullName: Google.Apis.Storage.v1.Data.Bucket.IamConfigurationData.UniformBucketLevelAccessData
