### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  id: ObjectsResource.InsertMediaUpload
  parent: Google.Apis.Storage.v1
  children:
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.#ctor(Google.Apis.Services.IClientService,Google.Apis.Storage.v1.Data.Object,System.String,System.IO.Stream,System.String)
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject
  langs:
  - csharp
  - vb
  name: ObjectsResource.InsertMediaUpload
  nameWithType: ObjectsResource.InsertMediaUpload
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: InsertMediaUpload
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5096
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Insert media upload which supports resumable upload.
  example: []
  syntax:
    content: 'public class InsertMediaUpload : ResumableUpload<Object, Object>'
    content.vb: >-
      Public Class InsertMediaUpload
          Inherits ResumableUpload(Of Object, Object)
  inheritance:
  - System.Object
  - Google.Apis.Upload.ResumableUpload
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}
  inheritedMembers:
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}.ProcessResponse(System.Net.Http.HttpResponseMessage)
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}.ResponseBody
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}.ResponseReceived
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.InitiateSessionAsync(System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.Service
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.Path
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.HttpMethod
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.ContentType
  - Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.Body
  - Google.Apis.Upload.ResumableUpload.MinimumChunkSize
  - Google.Apis.Upload.ResumableUpload.DefaultChunkSize
  - Google.Apis.Upload.ResumableUpload.chunkSize
  - Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
  - Google.Apis.Upload.ResumableUpload.GetProgress
  - Google.Apis.Upload.ResumableUpload.Upload
  - Google.Apis.Upload.ResumableUpload.UploadAsync
  - Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.Resume
  - Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  - Google.Apis.Upload.ResumableUpload.ResumeAsync
  - Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  - Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
  - Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
  - Google.Apis.Upload.ResumableUpload.Options
  - Google.Apis.Upload.ResumableUpload.ContentStream
  - Google.Apis.Upload.ResumableUpload.ChunkSize
  - Google.Apis.Upload.ResumableUpload.ProgressChanged
  - Google.Apis.Upload.ResumableUpload.UploadSessionData
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt
  id: Alt
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Alt
  nameWithType: ObjectsResource.InsertMediaUpload.Alt
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Alt
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5101
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Data format for the response.
  example: []
  syntax:
    content: >-
      [RequestParameter("alt", RequestParameterType.Query)]

      public virtual ObjectsResource.InsertMediaUpload.AltEnum? Alt { get; set; }
    parameters: []
    return:
      type: System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum}
    content.vb: >-
      <RequestParameter("alt", RequestParameterType.Query)>

      Public Overridable Property Alt As ObjectsResource.InsertMediaUpload.AltEnum?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: alt
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields
  id: Fields
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: ObjectsResource.InsertMediaUpload.Fields
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Fields
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5113
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Selector specifying which fields to include in a partial response.
  example: []
  syntax:
    content: >-
      [RequestParameter("fields", RequestParameterType.Query)]

      public virtual string Fields { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("fields", RequestParameterType.Query)>

      Public Overridable Property Fields As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: fields
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key
  id: Key
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: ObjectsResource.InsertMediaUpload.Key
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Key
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5118
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    API key. Your API key identifies your project and provides you with API access, quota, and

    reports. Required unless you provide an OAuth 2.0 token.
  example: []
  syntax:
    content: >-
      [RequestParameter("key", RequestParameterType.Query)]

      public virtual string Key { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("key", RequestParameterType.Query)>

      Public Overridable Property Key As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: key
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken
  id: OauthToken
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: OauthToken
  nameWithType: ObjectsResource.InsertMediaUpload.OauthToken
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: OauthToken
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5122
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: OAuth 2.0 token for the current user.
  example: []
  syntax:
    content: >-
      [RequestParameter("oauth_token", RequestParameterType.Query)]

      public virtual string OauthToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("oauth_token", RequestParameterType.Query)>

      Public Overridable Property OauthToken As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: oauth_token
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint
  id: PrettyPrint
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: PrettyPrint
  nameWithType: ObjectsResource.InsertMediaUpload.PrettyPrint
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: PrettyPrint
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5127
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Returns response with indentations and line breaks.
  example: []
  syntax:
    content: >-
      [RequestParameter("prettyPrint", RequestParameterType.Query)]

      public virtual bool ? PrettyPrint { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <RequestParameter("prettyPrint", RequestParameterType.Query)>

      Public Overridable Property PrettyPrint As Boolean?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: prettyPrint
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser
  id: QuotaUser
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: QuotaUser
  nameWithType: ObjectsResource.InsertMediaUpload.QuotaUser
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: QuotaUser
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5133
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Available to use for quota purposes for server-side applications. Can be any arbitrary string

    assigned to a user, but should not exceed 40 characters. Overrides userIp if both are

    provided.
  example: []
  syntax:
    content: >-
      [RequestParameter("quotaUser", RequestParameterType.Query)]

      public virtual string QuotaUser { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("quotaUser", RequestParameterType.Query)>

      Public Overridable Property QuotaUser As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: quotaUser
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp
  id: UserIp
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: UserIp
  nameWithType: ObjectsResource.InsertMediaUpload.UserIp
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UserIp
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5138
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    IP address of the site where the request originates. Use this if you want to enforce per-user

    limits.
  example: []
  syntax:
    content: >-
      [RequestParameter("userIp", RequestParameterType.Query)]

      public virtual string UserIp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("userIp", RequestParameterType.Query)>

      Public Overridable Property UserIp As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: userIp
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket
  id: Bucket
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Bucket
  nameWithType: ObjectsResource.InsertMediaUpload.Bucket
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Bucket
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5144
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Name of the bucket in which to store the new object. Overrides the provided object metadata's

    bucket value, if any.
  example: []
  syntax:
    content: >-
      [RequestParameter("bucket", RequestParameterType.Path)]

      public virtual string Bucket { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("bucket", RequestParameterType.Path)>

      Public Overridable ReadOnly Property Bucket As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: bucket
    - type: Google.Apis.Util.RequestParameterType
      value: 0
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding
  id: ContentEncoding
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: ContentEncoding
  nameWithType: ObjectsResource.InsertMediaUpload.ContentEncoding
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ContentEncoding
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5151
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    If set, sets the contentEncoding property of the final object to this value. Setting this

    parameter is equivalent to setting the contentEncoding metadata property. This can be useful when

    uploading an object with uploadType=media to indicate the encoding of the content being

    uploaded.
  example: []
  syntax:
    content: >-
      [RequestParameter("contentEncoding", RequestParameterType.Query)]

      public virtual string ContentEncoding { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("contentEncoding", RequestParameterType.Query)>

      Public Overridable Property ContentEncoding As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: contentEncoding
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch
  id: IfGenerationMatch
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: IfGenerationMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfGenerationMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IfGenerationMatch
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5156
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Makes the operation conditional on whether the object's current generation matches the given

    value.
  example: []
  syntax:
    content: >-
      [RequestParameter("ifGenerationMatch", RequestParameterType.Query)]

      public virtual long ? IfGenerationMatch { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <RequestParameter("ifGenerationMatch", RequestParameterType.Query)>

      Public Overridable Property IfGenerationMatch As Long?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: ifGenerationMatch
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
  id: IfGenerationNotMatch
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: IfGenerationNotMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IfGenerationNotMatch
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5161
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Makes the operation conditional on whether the object's current generation does not match the

    given value.
  example: []
  syntax:
    content: >-
      [RequestParameter("ifGenerationNotMatch", RequestParameterType.Query)]

      public virtual long ? IfGenerationNotMatch { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <RequestParameter("ifGenerationNotMatch", RequestParameterType.Query)>

      Public Overridable Property IfGenerationNotMatch As Long?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: ifGenerationNotMatch
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
  id: IfMetagenerationMatch
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: IfMetagenerationMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IfMetagenerationMatch
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5166
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Makes the operation conditional on whether the object's current metageneration matches the

    given value.
  example: []
  syntax:
    content: >-
      [RequestParameter("ifMetagenerationMatch", RequestParameterType.Query)]

      public virtual long ? IfMetagenerationMatch { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <RequestParameter("ifMetagenerationMatch", RequestParameterType.Query)>

      Public Overridable Property IfMetagenerationMatch As Long?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: ifMetagenerationMatch
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
  id: IfMetagenerationNotMatch
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: IfMetagenerationNotMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IfMetagenerationNotMatch
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5171
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Makes the operation conditional on whether the object's current metageneration does not match

    the given value.
  example: []
  syntax:
    content: >-
      [RequestParameter("ifMetagenerationNotMatch", RequestParameterType.Query)]

      public virtual long ? IfMetagenerationNotMatch { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <RequestParameter("ifMetagenerationNotMatch", RequestParameterType.Query)>

      Public Overridable Property IfMetagenerationNotMatch As Long?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: ifMetagenerationNotMatch
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name
  id: Name
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ObjectsResource.InsertMediaUpload.Name
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Name
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5177
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Name of the object. Required when the object metadata is not otherwise provided. Overrides the

    object metadata's name value, if any. For information about how to URL encode object names to be path

    safe, see Encoding URI Path Parts.
  example: []
  syntax:
    content: >-
      [RequestParameter("name", RequestParameterType.Query)]

      public virtual string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("name", RequestParameterType.Query)>

      Public Overridable Property Name As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: name
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl
  id: PredefinedAcl
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: PredefinedAcl
  nameWithType: ObjectsResource.InsertMediaUpload.PredefinedAcl
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: PredefinedAcl
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5181
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Apply a predefined set of access controls to this object.
  example: []
  syntax:
    content: >-
      [RequestParameter("predefinedAcl", RequestParameterType.Query)]

      public virtual ObjectsResource.InsertMediaUpload.PredefinedAclEnum? PredefinedAcl { get; set; }
    parameters: []
    return:
      type: System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum}
    content.vb: >-
      <RequestParameter("predefinedAcl", RequestParameterType.Query)>

      Public Overridable Property PredefinedAcl As ObjectsResource.InsertMediaUpload.PredefinedAclEnum?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: predefinedAcl
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection
  id: Projection
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Projection
  nameWithType: ObjectsResource.InsertMediaUpload.Projection
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Projection
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5210
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl

    property, when it defaults to full.
  example: []
  syntax:
    content: >-
      [RequestParameter("projection", RequestParameterType.Query)]

      public virtual ObjectsResource.InsertMediaUpload.ProjectionEnum? Projection { get; set; }
    parameters: []
    return:
      type: System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum}
    content.vb: >-
      <RequestParameter("projection", RequestParameterType.Query)>

      Public Overridable Property Projection As ObjectsResource.InsertMediaUpload.ProjectionEnum?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: projection
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject
  id: UserProject
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: UserProject
  nameWithType: ObjectsResource.InsertMediaUpload.UserProject
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UserProject
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5226
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: The project number to be billed for this request, for Requester Pays buckets.
  example: []
  syntax:
    content: >-
      [RequestParameter("userProject", RequestParameterType.Query)]

      public virtual string UserProject { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RequestParameter("userProject", RequestParameterType.Query)>

      Public Overridable Property UserProject As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject*
  attributes:
  - type: Google.Apis.Util.RequestParameterAttribute
    ctor: Google.Apis.Util.RequestParameterAttribute.#ctor(System.String,Google.Apis.Util.RequestParameterType)
    arguments:
    - type: System.String
      value: userProject
    - type: Google.Apis.Util.RequestParameterType
      value: 1
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.#ctor(Google.Apis.Services.IClientService,Google.Apis.Storage.v1.Data.Object,System.String,System.IO.Stream,System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.#ctor(Google.Apis.Services.IClientService,Google.Apis.Storage.v1.Data.Object,System.String,System.IO.Stream,System.String)
  id: '#ctor(Google.Apis.Services.IClientService,Google.Apis.Storage.v1.Data.Object,System.String,System.IO.Stream,System.String)'
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: InsertMediaUpload(IClientService, Object, String, Stream, String)
  nameWithType: ObjectsResource.InsertMediaUpload.InsertMediaUpload(IClientService, Object, String, Stream, String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.InsertMediaUpload(Google.Apis.Services.IClientService, Google.Apis.Storage.v1.Data.Object, System.String, System.IO.Stream, System.String)
  type: Constructor
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5230
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Constructs a new Insert media upload instance.
  example: []
  syntax:
    content: public InsertMediaUpload(IClientService service, Object body, string bucket, Stream stream, string contentType)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
    - id: body
      type: Google.Apis.Storage.v1.Data.Object
    - id: bucket
      type: System.String
    - id: stream
      type: System.IO.Stream
    - id: contentType
      type: System.String
    content.vb: Public Sub New(service As IClientService, body As Object, bucket As String, stream As Stream, contentType As String)
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Apis.Storage.v1
  commentId: N:Google.Apis.Storage.v1
  isExternal: false
  name: Google.Apis.Storage.v1
  nameWithType: Google.Apis.Storage.v1
  fullName: Google.Apis.Storage.v1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Upload.ResumableUpload
  commentId: T:Google.Apis.Upload.ResumableUpload
  parent: Google.Apis.Upload
  isExternal: true
  name: ResumableUpload
  nameWithType: ResumableUpload
  fullName: Google.Apis.Upload.ResumableUpload
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}
  commentId: T:Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}
  parent: Google.Apis.Upload
  definition: Google.Apis.Upload.ResumableUpload`1
  name: ResumableUpload<Object>
  nameWithType: ResumableUpload<Object>
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Storage.v1.Data.Object>
  nameWithType.vb: ResumableUpload(Of Object)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Storage.v1.Data.Object)
  name.vb: ResumableUpload(Of Object)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`1
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Storage.v1.Data.Object
    name: Object
    nameWithType: Object
    fullName: Google.Apis.Storage.v1.Data.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`1
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Storage.v1.Data.Object
    name: Object
    nameWithType: Object
    fullName: Google.Apis.Storage.v1.Data.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}
  commentId: T:Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}
  parent: Google.Apis.Upload
  definition: Google.Apis.Upload.ResumableUpload`2
  name: ResumableUpload<Object, Object>
  nameWithType: ResumableUpload<Object, Object>
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Storage.v1.Data.Object, Google.Apis.Storage.v1.Data.Object>
  nameWithType.vb: ResumableUpload(Of Object, Object)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Storage.v1.Data.Object, Google.Apis.Storage.v1.Data.Object)
  name.vb: ResumableUpload(Of Object, Object)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`2
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Storage.v1.Data.Object
    name: Object
    nameWithType: Object
    fullName: Google.Apis.Storage.v1.Data.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Storage.v1.Data.Object
    name: Object
    nameWithType: Object
    fullName: Google.Apis.Storage.v1.Data.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`2
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Storage.v1.Data.Object
    name: Object
    nameWithType: Object
    fullName: Google.Apis.Storage.v1.Data.Object
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Storage.v1.Data.Object
    name: Object
    nameWithType: Object
    fullName: Google.Apis.Storage.v1.Data.Object
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}.ProcessResponse(System.Net.Http.HttpResponseMessage)
  commentId: M:Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}.ProcessResponse(System.Net.Http.HttpResponseMessage)
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}
  definition: Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
  name: ProcessResponse(HttpResponseMessage)
  nameWithType: ResumableUpload<Object, Object>.ProcessResponse(HttpResponseMessage)
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Storage.v1.Data.Object, Google.Apis.Storage.v1.Data.Object>.ProcessResponse(System.Net.Http.HttpResponseMessage)
  nameWithType.vb: ResumableUpload(Of Object, Object).ProcessResponse(HttpResponseMessage)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Storage.v1.Data.Object, Google.Apis.Storage.v1.Data.Object).ProcessResponse(System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload<Object, Object>.ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Storage.v1.Data.Object, Google.Apis.Storage.v1.Data.Object>.ProcessResponse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload(Of Object, Object).ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Storage.v1.Data.Object, Google.Apis.Storage.v1.Data.Object).ProcessResponse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}.ResponseBody
  commentId: P:Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}.ResponseBody
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}
  definition: Google.Apis.Upload.ResumableUpload`2.ResponseBody
  name: ResponseBody
  nameWithType: ResumableUpload<Object, Object>.ResponseBody
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Storage.v1.Data.Object, Google.Apis.Storage.v1.Data.Object>.ResponseBody
  nameWithType.vb: ResumableUpload(Of Object, Object).ResponseBody
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Storage.v1.Data.Object, Google.Apis.Storage.v1.Data.Object).ResponseBody
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}.ResponseReceived
  commentId: E:Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}.ResponseReceived
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object,Google.Apis.Storage.v1.Data.Object}
  definition: Google.Apis.Upload.ResumableUpload`2.ResponseReceived
  name: ResponseReceived
  nameWithType: ResumableUpload<Object, Object>.ResponseReceived
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Storage.v1.Data.Object, Google.Apis.Storage.v1.Data.Object>.ResponseReceived
  nameWithType.vb: ResumableUpload(Of Object, Object).ResponseReceived
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Storage.v1.Data.Object, Google.Apis.Storage.v1.Data.Object).ResponseReceived
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.InitiateSessionAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.InitiateSessionAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}
  definition: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
  name: InitiateSessionAsync(CancellationToken)
  nameWithType: ResumableUpload<Object>.InitiateSessionAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Storage.v1.Data.Object>.InitiateSessionAsync(System.Threading.CancellationToken)
  nameWithType.vb: ResumableUpload(Of Object).InitiateSessionAsync(CancellationToken)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Storage.v1.Data.Object).InitiateSessionAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
    name: InitiateSessionAsync
    nameWithType: ResumableUpload<Object>.InitiateSessionAsync
    fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Storage.v1.Data.Object>.InitiateSessionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
    name: InitiateSessionAsync
    nameWithType: ResumableUpload(Of Object).InitiateSessionAsync
    fullName: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Storage.v1.Data.Object).InitiateSessionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.Service
  commentId: P:Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.Service
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}
  definition: Google.Apis.Upload.ResumableUpload`1.Service
  name: Service
  nameWithType: ResumableUpload<Object>.Service
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Storage.v1.Data.Object>.Service
  nameWithType.vb: ResumableUpload(Of Object).Service
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Storage.v1.Data.Object).Service
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.Path
  commentId: P:Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.Path
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}
  definition: Google.Apis.Upload.ResumableUpload`1.Path
  name: Path
  nameWithType: ResumableUpload<Object>.Path
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Storage.v1.Data.Object>.Path
  nameWithType.vb: ResumableUpload(Of Object).Path
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Storage.v1.Data.Object).Path
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.HttpMethod
  commentId: P:Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.HttpMethod
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}
  definition: Google.Apis.Upload.ResumableUpload`1.HttpMethod
  name: HttpMethod
  nameWithType: ResumableUpload<Object>.HttpMethod
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Storage.v1.Data.Object>.HttpMethod
  nameWithType.vb: ResumableUpload(Of Object).HttpMethod
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Storage.v1.Data.Object).HttpMethod
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.ContentType
  commentId: P:Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.ContentType
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}
  definition: Google.Apis.Upload.ResumableUpload`1.ContentType
  name: ContentType
  nameWithType: ResumableUpload<Object>.ContentType
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Storage.v1.Data.Object>.ContentType
  nameWithType.vb: ResumableUpload(Of Object).ContentType
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Storage.v1.Data.Object).ContentType
- uid: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.Body
  commentId: P:Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}.Body
  parent: Google.Apis.Upload.ResumableUpload{Google.Apis.Storage.v1.Data.Object}
  definition: Google.Apis.Upload.ResumableUpload`1.Body
  name: Body
  nameWithType: ResumableUpload<Object>.Body
  fullName: Google.Apis.Upload.ResumableUpload<Google.Apis.Storage.v1.Data.Object>.Body
  nameWithType.vb: ResumableUpload(Of Object).Body
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of Google.Apis.Storage.v1.Data.Object).Body
- uid: Google.Apis.Upload.ResumableUpload.MinimumChunkSize
  commentId: F:Google.Apis.Upload.ResumableUpload.MinimumChunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: MinimumChunkSize
  nameWithType: ResumableUpload.MinimumChunkSize
  fullName: Google.Apis.Upload.ResumableUpload.MinimumChunkSize
- uid: Google.Apis.Upload.ResumableUpload.DefaultChunkSize
  commentId: F:Google.Apis.Upload.ResumableUpload.DefaultChunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: DefaultChunkSize
  nameWithType: ResumableUpload.DefaultChunkSize
  fullName: Google.Apis.Upload.ResumableUpload.DefaultChunkSize
- uid: Google.Apis.Upload.ResumableUpload.chunkSize
  commentId: F:Google.Apis.Upload.ResumableUpload.chunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: chunkSize
  nameWithType: ResumableUpload.chunkSize
  fullName: Google.Apis.Upload.ResumableUpload.chunkSize
- uid: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
  commentId: M:Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: CreateFromUploadUri(Uri, Stream, ResumableUploadOptions)
  nameWithType: ResumableUpload.CreateFromUploadUri(Uri, Stream, ResumableUploadOptions)
  fullName: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri, System.IO.Stream, Google.Apis.Upload.ResumableUploadOptions)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
    name: CreateFromUploadUri
    nameWithType: ResumableUpload.CreateFromUploadUri
    fullName: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Upload.ResumableUploadOptions
    name: ResumableUploadOptions
    nameWithType: ResumableUploadOptions
    fullName: Google.Apis.Upload.ResumableUploadOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
    name: CreateFromUploadUri
    nameWithType: ResumableUpload.CreateFromUploadUri
    fullName: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Upload.ResumableUploadOptions
    name: ResumableUploadOptions
    nameWithType: ResumableUploadOptions
    fullName: Google.Apis.Upload.ResumableUploadOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.GetProgress
  commentId: M:Google.Apis.Upload.ResumableUpload.GetProgress
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: GetProgress()
  nameWithType: ResumableUpload.GetProgress()
  fullName: Google.Apis.Upload.ResumableUpload.GetProgress()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.GetProgress
    name: GetProgress
    nameWithType: ResumableUpload.GetProgress
    fullName: Google.Apis.Upload.ResumableUpload.GetProgress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.GetProgress
    name: GetProgress
    nameWithType: ResumableUpload.GetProgress
    fullName: Google.Apis.Upload.ResumableUpload.GetProgress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.Upload
  commentId: M:Google.Apis.Upload.ResumableUpload.Upload
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: Upload()
  nameWithType: ResumableUpload.Upload()
  fullName: Google.Apis.Upload.ResumableUpload.Upload()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.Upload
    name: Upload
    nameWithType: ResumableUpload.Upload
    fullName: Google.Apis.Upload.ResumableUpload.Upload
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.Upload
    name: Upload
    nameWithType: ResumableUpload.Upload
    fullName: Google.Apis.Upload.ResumableUpload.Upload
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.UploadAsync
  commentId: M:Google.Apis.Upload.ResumableUpload.UploadAsync
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: UploadAsync()
  nameWithType: ResumableUpload.UploadAsync()
  fullName: Google.Apis.Upload.ResumableUpload.UploadAsync()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: UploadAsync(CancellationToken)
  nameWithType: ResumableUpload.UploadAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.Resume
  commentId: M:Google.Apis.Upload.ResumableUpload.Resume
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: Resume()
  nameWithType: ResumableUpload.Resume()
  fullName: Google.Apis.Upload.ResumableUpload.Resume()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.Resume
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.Resume
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  commentId: M:Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: Resume(Uri)
  nameWithType: ResumableUpload.Resume(Uri)
  fullName: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ResumeAsync()
  nameWithType: ResumableUpload.ResumeAsync()
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ResumeAsync(CancellationToken)
  nameWithType: ResumableUpload.ResumeAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ResumeAsync(Uri)
  nameWithType: ResumableUpload.ResumeAsync(Uri)
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ResumeAsync(Uri, CancellationToken)
  nameWithType: ResumableUpload.ResumeAsync(Uri, CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
  commentId: M:Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ProcessResponse(HttpResponseMessage)
  nameWithType: ResumableUpload.ProcessResponse(HttpResponseMessage)
  fullName: Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload.ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload.ProcessResponse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload.ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload.ProcessResponse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: SendNextChunkAsync(Stream, CancellationToken)
  nameWithType: ResumableUpload.SendNextChunkAsync(Stream, CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: SendNextChunkAsync
    nameWithType: ResumableUpload.SendNextChunkAsync
    fullName: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: SendNextChunkAsync
    nameWithType: ResumableUpload.SendNextChunkAsync
    fullName: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
  commentId: M:Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ExceptionForResponseAsync(HttpResponseMessage)
  nameWithType: ResumableUpload.ExceptionForResponseAsync(HttpResponseMessage)
  fullName: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
    name: ExceptionForResponseAsync
    nameWithType: ResumableUpload.ExceptionForResponseAsync
    fullName: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
    name: ExceptionForResponseAsync
    nameWithType: ResumableUpload.ExceptionForResponseAsync
    fullName: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.Options
  commentId: P:Google.Apis.Upload.ResumableUpload.Options
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: Options
  nameWithType: ResumableUpload.Options
  fullName: Google.Apis.Upload.ResumableUpload.Options
- uid: Google.Apis.Upload.ResumableUpload.ContentStream
  commentId: P:Google.Apis.Upload.ResumableUpload.ContentStream
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ContentStream
  nameWithType: ResumableUpload.ContentStream
  fullName: Google.Apis.Upload.ResumableUpload.ContentStream
- uid: Google.Apis.Upload.ResumableUpload.ChunkSize
  commentId: P:Google.Apis.Upload.ResumableUpload.ChunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ChunkSize
  nameWithType: ResumableUpload.ChunkSize
  fullName: Google.Apis.Upload.ResumableUpload.ChunkSize
- uid: Google.Apis.Upload.ResumableUpload.ProgressChanged
  commentId: E:Google.Apis.Upload.ResumableUpload.ProgressChanged
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ProgressChanged
  nameWithType: ResumableUpload.ProgressChanged
  fullName: Google.Apis.Upload.ResumableUpload.ProgressChanged
- uid: Google.Apis.Upload.ResumableUpload.UploadSessionData
  commentId: E:Google.Apis.Upload.ResumableUpload.UploadSessionData
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: UploadSessionData
  nameWithType: ResumableUpload.UploadSessionData
  fullName: Google.Apis.Upload.ResumableUpload.UploadSessionData
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Upload
  commentId: N:Google.Apis.Upload
  isExternal: false
  name: Google.Apis.Upload
  nameWithType: Google.Apis.Upload
  fullName: Google.Apis.Upload
- uid: Google.Apis.Upload.ResumableUpload`1
  commentId: T:Google.Apis.Upload.ResumableUpload`1
  isExternal: true
  name: ResumableUpload<TRequest>
  nameWithType: ResumableUpload<TRequest>
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>
  nameWithType.vb: ResumableUpload(Of TRequest)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest)
  name.vb: ResumableUpload(Of TRequest)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`1
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`1
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload`2
  commentId: T:Google.Apis.Upload.ResumableUpload`2
  isExternal: true
  name: ResumableUpload<TRequest, TResponse>
  nameWithType: ResumableUpload<TRequest, TResponse>
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse)
  name.vb: ResumableUpload(Of TRequest, TResponse)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`2
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`2
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
  commentId: M:Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
  isExternal: true
  name: ProcessResponse(HttpResponseMessage)
  nameWithType: ResumableUpload<TRequest, TResponse>.ProcessResponse(HttpResponseMessage)
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ProcessResponse(System.Net.Http.HttpResponseMessage)
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse).ProcessResponse(HttpResponseMessage)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ProcessResponse(System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload<TRequest, TResponse>.ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ProcessResponse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload(Of TRequest, TResponse).ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ProcessResponse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload`2.ResponseBody
  commentId: P:Google.Apis.Upload.ResumableUpload`2.ResponseBody
  isExternal: true
  name: ResponseBody
  nameWithType: ResumableUpload<TRequest, TResponse>.ResponseBody
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ResponseBody
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse).ResponseBody
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ResponseBody
- uid: Google.Apis.Upload.ResumableUpload`2.ResponseReceived
  commentId: E:Google.Apis.Upload.ResumableUpload`2.ResponseReceived
  isExternal: true
  name: ResponseReceived
  nameWithType: ResumableUpload<TRequest, TResponse>.ResponseReceived
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ResponseReceived
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse).ResponseReceived
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ResponseReceived
- uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
  isExternal: true
  name: InitiateSessionAsync(CancellationToken)
  nameWithType: ResumableUpload<TRequest>.InitiateSessionAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.InitiateSessionAsync(System.Threading.CancellationToken)
  nameWithType.vb: ResumableUpload(Of TRequest).InitiateSessionAsync(CancellationToken)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).InitiateSessionAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
    name: InitiateSessionAsync
    nameWithType: ResumableUpload<TRequest>.InitiateSessionAsync
    fullName: Google.Apis.Upload.ResumableUpload<TRequest>.InitiateSessionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
    name: InitiateSessionAsync
    nameWithType: ResumableUpload(Of TRequest).InitiateSessionAsync
    fullName: Google.Apis.Upload.ResumableUpload(Of TRequest).InitiateSessionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload`1.Service
  commentId: P:Google.Apis.Upload.ResumableUpload`1.Service
  isExternal: true
  name: Service
  nameWithType: ResumableUpload<TRequest>.Service
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Service
  nameWithType.vb: ResumableUpload(Of TRequest).Service
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Service
- uid: Google.Apis.Upload.ResumableUpload`1.Path
  commentId: P:Google.Apis.Upload.ResumableUpload`1.Path
  isExternal: true
  name: Path
  nameWithType: ResumableUpload<TRequest>.Path
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Path
  nameWithType.vb: ResumableUpload(Of TRequest).Path
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Path
- uid: Google.Apis.Upload.ResumableUpload`1.HttpMethod
  commentId: P:Google.Apis.Upload.ResumableUpload`1.HttpMethod
  isExternal: true
  name: HttpMethod
  nameWithType: ResumableUpload<TRequest>.HttpMethod
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.HttpMethod
  nameWithType.vb: ResumableUpload(Of TRequest).HttpMethod
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).HttpMethod
- uid: Google.Apis.Upload.ResumableUpload`1.ContentType
  commentId: P:Google.Apis.Upload.ResumableUpload`1.ContentType
  isExternal: true
  name: ContentType
  nameWithType: ResumableUpload<TRequest>.ContentType
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.ContentType
  nameWithType.vb: ResumableUpload(Of TRequest).ContentType
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).ContentType
- uid: Google.Apis.Upload.ResumableUpload`1.Body
  commentId: P:Google.Apis.Upload.ResumableUpload`1.Body
  isExternal: true
  name: Body
  nameWithType: ResumableUpload<TRequest>.Body
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Body
  nameWithType.vb: ResumableUpload(Of TRequest).Body
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Body
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt
  isExternal: false
  name: Alt
  nameWithType: ObjectsResource.InsertMediaUpload.Alt
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt
- uid: System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum}
  commentId: T:System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ObjectsResource.InsertMediaUpload.AltEnum>
  nameWithType: Nullable<ObjectsResource.InsertMediaUpload.AltEnum>
  fullName: System.Nullable<Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum>
  nameWithType.vb: Nullable(Of ObjectsResource.InsertMediaUpload.AltEnum)
  fullName.vb: System.Nullable(Of Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum)
  name.vb: Nullable(Of ObjectsResource.InsertMediaUpload.AltEnum)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum
    name: ObjectsResource.InsertMediaUpload.AltEnum
    nameWithType: ObjectsResource.InsertMediaUpload.AltEnum
    fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum
    name: ObjectsResource.InsertMediaUpload.AltEnum
    nameWithType: ObjectsResource.InsertMediaUpload.AltEnum
    fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields
  isExternal: false
  name: Fields
  nameWithType: ObjectsResource.InsertMediaUpload.Fields
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key
  isExternal: false
  name: Key
  nameWithType: ObjectsResource.InsertMediaUpload.Key
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken
  isExternal: false
  name: OauthToken
  nameWithType: ObjectsResource.InsertMediaUpload.OauthToken
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint
  isExternal: false
  name: PrettyPrint
  nameWithType: ObjectsResource.InsertMediaUpload.PrettyPrint
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser
  isExternal: false
  name: QuotaUser
  nameWithType: ObjectsResource.InsertMediaUpload.QuotaUser
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp
  isExternal: false
  name: UserIp
  nameWithType: ObjectsResource.InsertMediaUpload.UserIp
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket
  isExternal: false
  name: Bucket
  nameWithType: ObjectsResource.InsertMediaUpload.Bucket
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding
  isExternal: false
  name: ContentEncoding
  nameWithType: ObjectsResource.InsertMediaUpload.ContentEncoding
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch
  isExternal: false
  name: IfGenerationMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfGenerationMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
  isExternal: false
  name: IfGenerationNotMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
  isExternal: false
  name: IfMetagenerationMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
  isExternal: false
  name: IfMetagenerationNotMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name
  isExternal: false
  name: Name
  nameWithType: ObjectsResource.InsertMediaUpload.Name
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl
  isExternal: false
  name: PredefinedAcl
  nameWithType: ObjectsResource.InsertMediaUpload.PredefinedAcl
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl
- uid: System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum}
  commentId: T:System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ObjectsResource.InsertMediaUpload.PredefinedAclEnum>
  nameWithType: Nullable<ObjectsResource.InsertMediaUpload.PredefinedAclEnum>
  fullName: System.Nullable<Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum>
  nameWithType.vb: Nullable(Of ObjectsResource.InsertMediaUpload.PredefinedAclEnum)
  fullName.vb: System.Nullable(Of Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum)
  name.vb: Nullable(Of ObjectsResource.InsertMediaUpload.PredefinedAclEnum)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum
    name: ObjectsResource.InsertMediaUpload.PredefinedAclEnum
    nameWithType: ObjectsResource.InsertMediaUpload.PredefinedAclEnum
    fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum
    name: ObjectsResource.InsertMediaUpload.PredefinedAclEnum
    nameWithType: ObjectsResource.InsertMediaUpload.PredefinedAclEnum
    fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection
  isExternal: false
  name: Projection
  nameWithType: ObjectsResource.InsertMediaUpload.Projection
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection
- uid: System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum}
  commentId: T:System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ObjectsResource.InsertMediaUpload.ProjectionEnum>
  nameWithType: Nullable<ObjectsResource.InsertMediaUpload.ProjectionEnum>
  fullName: System.Nullable<Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum>
  nameWithType.vb: Nullable(Of ObjectsResource.InsertMediaUpload.ProjectionEnum)
  fullName.vb: System.Nullable(Of Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum)
  name.vb: Nullable(Of ObjectsResource.InsertMediaUpload.ProjectionEnum)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum
    name: ObjectsResource.InsertMediaUpload.ProjectionEnum
    nameWithType: ObjectsResource.InsertMediaUpload.ProjectionEnum
    fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum
    name: ObjectsResource.InsertMediaUpload.ProjectionEnum
    nameWithType: ObjectsResource.InsertMediaUpload.ProjectionEnum
    fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject
  isExternal: false
  name: UserProject
  nameWithType: ObjectsResource.InsertMediaUpload.UserProject
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.#ctor*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.#ctor
  isExternal: false
  name: InsertMediaUpload
  nameWithType: ObjectsResource.InsertMediaUpload.InsertMediaUpload
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.InsertMediaUpload
- uid: Google.Apis.Services.IClientService
  commentId: T:Google.Apis.Services.IClientService
  parent: Google.Apis.Services
  isExternal: true
  name: IClientService
  nameWithType: IClientService
  fullName: Google.Apis.Services.IClientService
- uid: Google.Apis.Storage.v1.Data.Object
  commentId: T:Google.Apis.Storage.v1.Data.Object
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: Google.Apis.Storage.v1.Data.Object
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Google.Apis.Services
  commentId: N:Google.Apis.Services
  isExternal: false
  name: Google.Apis.Services
  nameWithType: Google.Apis.Services
  fullName: Google.Apis.Services
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  isExternal: false
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
