### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  id: ObjectsResource.InsertMediaUpload
  parent: Google.Apis.Storage.v1
  children:
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.#ctor(Google.Apis.Services.IClientService,Google.Apis.Storage.v1.Data.Object,System.String,System.IO.Stream,System.String)
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.KmsKeyName
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp
  - Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject
  langs:
  - csharp
  - vb
  name: ObjectsResource.InsertMediaUpload
  nameWithType: ObjectsResource.InsertMediaUpload
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: InsertMediaUpload
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5281
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Insert media upload which supports resumable upload.
  example: []
  syntax:
    content: 'public class InsertMediaUpload : Upload.ResumableUpload<Object, Object>'
    content.vb: >-
      Public Class InsertMediaUpload
          Inherits Upload.ResumableUpload(Of Object, Object)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt
  id: Alt
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Alt
  nameWithType: ObjectsResource.InsertMediaUpload.Alt
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Alt
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5286
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Data format for the response.
  example: []
  syntax:
    content: public virtual ObjectsResource.InsertMediaUpload.AltEnum? Alt { get; set; }
    parameters: []
    return:
      type: System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum}
    content.vb: Public Overridable Property Alt As ObjectsResource.InsertMediaUpload.AltEnum?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields
  id: Fields
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: ObjectsResource.InsertMediaUpload.Fields
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Fields
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5298
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Selector specifying which fields to include in a partial response.
  example: []
  syntax:
    content: public virtual string Fields { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Fields As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key
  id: Key
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: ObjectsResource.InsertMediaUpload.Key
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Key
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5303
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    API key. Your API key identifies your project and provides you with API access, quota, and

    reports. Required unless you provide an OAuth 2.0 token.
  example: []
  syntax:
    content: public virtual string Key { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Key As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken
  id: OauthToken
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: OauthToken
  nameWithType: ObjectsResource.InsertMediaUpload.OauthToken
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: OauthToken
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5307
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: OAuth 2.0 token for the current user.
  example: []
  syntax:
    content: public virtual string OauthToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property OauthToken As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint
  id: PrettyPrint
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: PrettyPrint
  nameWithType: ObjectsResource.InsertMediaUpload.PrettyPrint
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: PrettyPrint
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5312
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Returns response with indentations and line breaks.
  example: []
  syntax:
    content: public virtual bool ? PrettyPrint { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Overridable Property PrettyPrint As Boolean?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser
  id: QuotaUser
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: QuotaUser
  nameWithType: ObjectsResource.InsertMediaUpload.QuotaUser
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: QuotaUser
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5318
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Available to use for quota purposes for server-side applications. Can be any arbitrary string

    assigned to a user, but should not exceed 40 characters. Overrides userIp if both are

    provided.
  example: []
  syntax:
    content: public virtual string QuotaUser { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property QuotaUser As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp
  id: UserIp
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: UserIp
  nameWithType: ObjectsResource.InsertMediaUpload.UserIp
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UserIp
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5323
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    IP address of the site where the request originates. Use this if you want to enforce per-user

    limits.
  example: []
  syntax:
    content: public virtual string UserIp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property UserIp As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket
  id: Bucket
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Bucket
  nameWithType: ObjectsResource.InsertMediaUpload.Bucket
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Bucket
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5329
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Name of the bucket in which to store the new object. Overrides the provided object metadata&apos;s

    bucket value, if any.
  example: []
  syntax:
    content: public virtual string Bucket { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Bucket As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding
  id: ContentEncoding
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: ContentEncoding
  nameWithType: ObjectsResource.InsertMediaUpload.ContentEncoding
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ContentEncoding
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5336
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    If set, sets the contentEncoding property of the final object to this value. Setting this

    parameter is equivalent to setting the contentEncoding metadata property. This can be useful when

    uploading an object with uploadType=media to indicate the encoding of the content being

    uploaded.
  example: []
  syntax:
    content: public virtual string ContentEncoding { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ContentEncoding As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch
  id: IfGenerationMatch
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: IfGenerationMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfGenerationMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IfGenerationMatch
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5342
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Makes the operation conditional on whether the object&apos;s current generation matches the given

    value. Setting to 0 makes the operation succeed only if there are no live versions of the

    object.
  example: []
  syntax:
    content: public virtual long ? IfGenerationMatch { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Overridable Property IfGenerationMatch As Long?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
  id: IfGenerationNotMatch
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: IfGenerationNotMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IfGenerationNotMatch
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5348
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Makes the operation conditional on whether the object&apos;s current generation does not match the

    given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed

    only if there is a live version of the object.
  example: []
  syntax:
    content: public virtual long ? IfGenerationNotMatch { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Overridable Property IfGenerationNotMatch As Long?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
  id: IfMetagenerationMatch
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: IfMetagenerationMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IfMetagenerationMatch
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5353
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Makes the operation conditional on whether the object&apos;s current metageneration matches the

    given value.
  example: []
  syntax:
    content: public virtual long ? IfMetagenerationMatch { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Overridable Property IfMetagenerationMatch As Long?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
  id: IfMetagenerationNotMatch
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: IfMetagenerationNotMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IfMetagenerationNotMatch
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5358
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Makes the operation conditional on whether the object&apos;s current metageneration does not match

    the given value.
  example: []
  syntax:
    content: public virtual long ? IfMetagenerationNotMatch { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Overridable Property IfMetagenerationNotMatch As Long?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.KmsKeyName
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.KmsKeyName
  id: KmsKeyName
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: KmsKeyName
  nameWithType: ObjectsResource.InsertMediaUpload.KmsKeyName
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.KmsKeyName
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: KmsKeyName
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5364
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings

    /my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata&apos;s

    kms_key_name value, if any.
  example: []
  syntax:
    content: public virtual string KmsKeyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property KmsKeyName As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.KmsKeyName*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name
  id: Name
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ObjectsResource.InsertMediaUpload.Name
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Name
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5370
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Name of the object. Required when the object metadata is not otherwise provided. Overrides the

    object metadata&apos;s name value, if any. For information about how to URL encode object names to be path

    safe, see Encoding URI Path Parts.
  example: []
  syntax:
    content: public virtual string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Name As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl
  id: PredefinedAcl
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: PredefinedAcl
  nameWithType: ObjectsResource.InsertMediaUpload.PredefinedAcl
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: PredefinedAcl
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5374
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Apply a predefined set of access controls to this object.
  example: []
  syntax:
    content: public virtual ObjectsResource.InsertMediaUpload.PredefinedAclEnum? PredefinedAcl { get; set; }
    parameters: []
    return:
      type: System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum}
    content.vb: Public Overridable Property PredefinedAcl As ObjectsResource.InsertMediaUpload.PredefinedAclEnum?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection
  id: Projection
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: Projection
  nameWithType: ObjectsResource.InsertMediaUpload.Projection
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Projection
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5403
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl

    property, when it defaults to full.
  example: []
  syntax:
    content: public virtual ObjectsResource.InsertMediaUpload.ProjectionEnum? Projection { get; set; }
    parameters: []
    return:
      type: System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum}
    content.vb: Public Overridable Property Projection As ObjectsResource.InsertMediaUpload.ProjectionEnum?
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject
  commentId: P:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject
  id: UserProject
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: UserProject
  nameWithType: ObjectsResource.InsertMediaUpload.UserProject
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UserProject
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5419
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: The project to be billed for this request, for Requester Pays buckets.
  example: []
  syntax:
    content: public virtual string UserProject { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property UserProject As String
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.#ctor(Google.Apis.Services.IClientService,Google.Apis.Storage.v1.Data.Object,System.String,System.IO.Stream,System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.#ctor(Google.Apis.Services.IClientService,Google.Apis.Storage.v1.Data.Object,System.String,System.IO.Stream,System.String)
  id: '#ctor(Google.Apis.Services.IClientService,Google.Apis.Storage.v1.Data.Object,System.String,System.IO.Stream,System.String)'
  parent: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  langs:
  - csharp
  - vb
  name: InsertMediaUpload(Services.IClientService, Object, String, Stream, String)
  nameWithType: ObjectsResource.InsertMediaUpload.InsertMediaUpload(Services.IClientService, Object, String, Stream, String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.InsertMediaUpload(Google.Apis.Services.IClientService, Google.Apis.Storage.v1.Data.Object, System.String, System.IO.Stream, System.String)
  type: Constructor
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5423
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Constructs a new Insert media upload instance.
  example: []
  syntax:
    content: public InsertMediaUpload(Services.IClientService service, Object body, string bucket, Stream stream, string contentType)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
    - id: body
      type: Google.Apis.Storage.v1.Data.Object
    - id: bucket
      type: System.String
    - id: stream
      type: System.IO.Stream
    - id: contentType
      type: System.String
    content.vb: Public Sub New(service As Services.IClientService, body As Object, bucket As String, stream As Stream, contentType As String)
  overload: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Apis.Storage.v1
  commentId: N:Google.Apis.Storage.v1
  isExternal: false
  name: Google.Apis.Storage.v1
  nameWithType: Google.Apis.Storage.v1
  fullName: Google.Apis.Storage.v1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt
  isExternal: false
  name: Alt
  nameWithType: ObjectsResource.InsertMediaUpload.Alt
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Alt
- uid: System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum}
  commentId: T:System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ObjectsResource.InsertMediaUpload.AltEnum>
  nameWithType: Nullable<ObjectsResource.InsertMediaUpload.AltEnum>
  fullName: System.Nullable<Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum>
  nameWithType.vb: Nullable(Of ObjectsResource.InsertMediaUpload.AltEnum)
  fullName.vb: System.Nullable(Of Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum)
  name.vb: Nullable(Of ObjectsResource.InsertMediaUpload.AltEnum)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum
    name: ObjectsResource.InsertMediaUpload.AltEnum
    nameWithType: ObjectsResource.InsertMediaUpload.AltEnum
    fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum
    name: ObjectsResource.InsertMediaUpload.AltEnum
    nameWithType: ObjectsResource.InsertMediaUpload.AltEnum
    fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.AltEnum
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields
  isExternal: false
  name: Fields
  nameWithType: ObjectsResource.InsertMediaUpload.Fields
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Fields
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key
  isExternal: false
  name: Key
  nameWithType: ObjectsResource.InsertMediaUpload.Key
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Key
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken
  isExternal: false
  name: OauthToken
  nameWithType: ObjectsResource.InsertMediaUpload.OauthToken
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.OauthToken
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint
  isExternal: false
  name: PrettyPrint
  nameWithType: ObjectsResource.InsertMediaUpload.PrettyPrint
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PrettyPrint
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser
  isExternal: false
  name: QuotaUser
  nameWithType: ObjectsResource.InsertMediaUpload.QuotaUser
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.QuotaUser
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp
  isExternal: false
  name: UserIp
  nameWithType: ObjectsResource.InsertMediaUpload.UserIp
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserIp
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket
  isExternal: false
  name: Bucket
  nameWithType: ObjectsResource.InsertMediaUpload.Bucket
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Bucket
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding
  isExternal: false
  name: ContentEncoding
  nameWithType: ObjectsResource.InsertMediaUpload.ContentEncoding
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ContentEncoding
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch
  isExternal: false
  name: IfGenerationMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfGenerationMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationMatch
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
  isExternal: false
  name: IfGenerationNotMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfGenerationNotMatch
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
  isExternal: false
  name: IfMetagenerationMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationMatch
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
  isExternal: false
  name: IfMetagenerationNotMatch
  nameWithType: ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.IfMetagenerationNotMatch
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.KmsKeyName*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.KmsKeyName
  isExternal: false
  name: KmsKeyName
  nameWithType: ObjectsResource.InsertMediaUpload.KmsKeyName
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.KmsKeyName
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name
  isExternal: false
  name: Name
  nameWithType: ObjectsResource.InsertMediaUpload.Name
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Name
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl
  isExternal: false
  name: PredefinedAcl
  nameWithType: ObjectsResource.InsertMediaUpload.PredefinedAcl
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAcl
- uid: System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum}
  commentId: T:System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ObjectsResource.InsertMediaUpload.PredefinedAclEnum>
  nameWithType: Nullable<ObjectsResource.InsertMediaUpload.PredefinedAclEnum>
  fullName: System.Nullable<Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum>
  nameWithType.vb: Nullable(Of ObjectsResource.InsertMediaUpload.PredefinedAclEnum)
  fullName.vb: System.Nullable(Of Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum)
  name.vb: Nullable(Of ObjectsResource.InsertMediaUpload.PredefinedAclEnum)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum
    name: ObjectsResource.InsertMediaUpload.PredefinedAclEnum
    nameWithType: ObjectsResource.InsertMediaUpload.PredefinedAclEnum
    fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum
    name: ObjectsResource.InsertMediaUpload.PredefinedAclEnum
    nameWithType: ObjectsResource.InsertMediaUpload.PredefinedAclEnum
    fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.PredefinedAclEnum
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection
  isExternal: false
  name: Projection
  nameWithType: ObjectsResource.InsertMediaUpload.Projection
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.Projection
- uid: System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum}
  commentId: T:System.Nullable{Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ObjectsResource.InsertMediaUpload.ProjectionEnum>
  nameWithType: Nullable<ObjectsResource.InsertMediaUpload.ProjectionEnum>
  fullName: System.Nullable<Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum>
  nameWithType.vb: Nullable(Of ObjectsResource.InsertMediaUpload.ProjectionEnum)
  fullName.vb: System.Nullable(Of Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum)
  name.vb: Nullable(Of ObjectsResource.InsertMediaUpload.ProjectionEnum)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum
    name: ObjectsResource.InsertMediaUpload.ProjectionEnum
    nameWithType: ObjectsResource.InsertMediaUpload.ProjectionEnum
    fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum
    name: ObjectsResource.InsertMediaUpload.ProjectionEnum
    nameWithType: ObjectsResource.InsertMediaUpload.ProjectionEnum
    fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.ProjectionEnum
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject
  isExternal: false
  name: UserProject
  nameWithType: ObjectsResource.InsertMediaUpload.UserProject
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.UserProject
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.#ctor*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.#ctor
  isExternal: false
  name: InsertMediaUpload
  nameWithType: ObjectsResource.InsertMediaUpload.InsertMediaUpload
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload.InsertMediaUpload
- uid: Google.Apis.Services.IClientService
  isExternal: true
  name: Services.IClientService
  nameWithType: Services.IClientService
  fullName: Google.Apis.Services.IClientService
- uid: Google.Apis.Storage.v1.Data.Object
  commentId: T:Google.Apis.Storage.v1.Data.Object
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: Google.Apis.Storage.v1.Data.Object
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  isExternal: false
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
