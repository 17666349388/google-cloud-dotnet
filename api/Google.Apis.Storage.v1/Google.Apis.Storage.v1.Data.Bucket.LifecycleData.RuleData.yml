### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData
  id: Bucket.LifecycleData.RuleData
  parent: Google.Apis.Storage.v1.Data
  children:
  - Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Action
  - Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Condition
  langs:
  - csharp
  - vb
  name: Bucket.LifecycleData.RuleData
  nameWithType: Bucket.LifecycleData.RuleData
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RuleData
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7132
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  syntax:
    content: public class RuleData
    content.vb: Public Class RuleData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Action
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Action
  id: Action
  parent: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: Bucket.LifecycleData.RuleData.Action
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Action
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Action
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7135
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The action to take.
  example: []
  syntax:
    content: >-
      [JsonProperty("action")]

      public virtual Bucket.LifecycleData.RuleData.ActionData Action { get; set; }
    parameters: []
    return:
      type: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ActionData
    content.vb: >-
      <JsonProperty("action")>

      Public Overridable Property Action As Bucket.LifecycleData.RuleData.ActionData
  overload: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Action*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: action
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Condition
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Condition
  id: Condition
  parent: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData
  langs:
  - csharp
  - vb
  name: Condition
  nameWithType: Bucket.LifecycleData.RuleData.Condition
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Condition
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Condition
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7139
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The condition(s) under which the action will be taken.
  example: []
  syntax:
    content: >-
      [JsonProperty("condition")]

      public virtual Bucket.LifecycleData.RuleData.ConditionData Condition { get; set; }
    parameters: []
    return:
      type: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
    content.vb: >-
      <JsonProperty("condition")>

      Public Overridable Property Condition As Bucket.LifecycleData.RuleData.ConditionData
  overload: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Condition*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: condition
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  isExternal: false
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Action*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Action
  isExternal: false
  name: Action
  nameWithType: Bucket.LifecycleData.RuleData.Action
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Action
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ActionData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ActionData
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: Bucket.LifecycleData.RuleData.ActionData
  nameWithType: Bucket.LifecycleData.RuleData.ActionData
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ActionData
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Condition*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Condition
  isExternal: false
  name: Condition
  nameWithType: Bucket.LifecycleData.RuleData.Condition
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.Condition
- uid: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: Bucket.LifecycleData.RuleData.ConditionData
  nameWithType: Bucket.LifecycleData.RuleData.ConditionData
  fullName: Google.Apis.Storage.v1.Data.Bucket.LifecycleData.RuleData.ConditionData
