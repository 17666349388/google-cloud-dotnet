### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.ObjectsResource
  commentId: T:Google.Apis.Storage.v1.ObjectsResource
  id: ObjectsResource
  parent: Google.Apis.Storage.v1
  children:
  - Google.Apis.Storage.v1.ObjectsResource.#ctor(Google.Apis.Services.IClientService)
  - Google.Apis.Storage.v1.ObjectsResource.Compose(Google.Apis.Storage.v1.Data.ComposeRequest,System.String,System.String)
  - Google.Apis.Storage.v1.ObjectsResource.Copy(Google.Apis.Storage.v1.Data.Object,System.String,System.String,System.String,System.String)
  - Google.Apis.Storage.v1.ObjectsResource.Delete(System.String,System.String)
  - Google.Apis.Storage.v1.ObjectsResource.Get(System.String,System.String)
  - Google.Apis.Storage.v1.ObjectsResource.GetIamPolicy(System.String,System.String)
  - Google.Apis.Storage.v1.ObjectsResource.Insert(Google.Apis.Storage.v1.Data.Object,System.String)
  - Google.Apis.Storage.v1.ObjectsResource.Insert(Google.Apis.Storage.v1.Data.Object,System.String,System.IO.Stream,System.String)
  - Google.Apis.Storage.v1.ObjectsResource.List(System.String)
  - Google.Apis.Storage.v1.ObjectsResource.Patch(Google.Apis.Storage.v1.Data.Object,System.String,System.String)
  - Google.Apis.Storage.v1.ObjectsResource.Rewrite(Google.Apis.Storage.v1.Data.Object,System.String,System.String,System.String,System.String)
  - Google.Apis.Storage.v1.ObjectsResource.SetIamPolicy(Google.Apis.Storage.v1.Data.Policy,System.String,System.String)
  - Google.Apis.Storage.v1.ObjectsResource.TestIamPermissions(System.String,System.String,Google.Apis.Util.Repeatable{System.String})
  - Google.Apis.Storage.v1.ObjectsResource.Update(Google.Apis.Storage.v1.Data.Object,System.String,System.String)
  - Google.Apis.Storage.v1.ObjectsResource.WatchAll(Google.Apis.Storage.v1.Data.Channel,System.String)
  langs:
  - csharp
  - vb
  name: ObjectsResource
  nameWithType: ObjectsResource
  fullName: Google.Apis.Storage.v1.ObjectsResource
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ObjectsResource
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 3828
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: The &quot;objects&quot; collection of methods.
  example: []
  syntax:
    content: public class ObjectsResource
    content.vb: Public Class ObjectsResource
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.ObjectsResource.#ctor(Google.Apis.Services.IClientService)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.#ctor(Google.Apis.Services.IClientService)
  id: '#ctor(Google.Apis.Services.IClientService)'
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: ObjectsResource(Services.IClientService)
  nameWithType: ObjectsResource.ObjectsResource(Services.IClientService)
  fullName: Google.Apis.Storage.v1.ObjectsResource.ObjectsResource(Google.Apis.Services.IClientService)
  type: Constructor
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 3836
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Constructs a new resource.
  example: []
  syntax:
    content: public ObjectsResource(Services.IClientService service)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
    content.vb: Public Sub New(service As Services.IClientService)
  overload: Google.Apis.Storage.v1.ObjectsResource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Storage.v1.ObjectsResource.Compose(Google.Apis.Storage.v1.Data.ComposeRequest,System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.Compose(Google.Apis.Storage.v1.Data.ComposeRequest,System.String,System.String)
  id: Compose(Google.Apis.Storage.v1.Data.ComposeRequest,System.String,System.String)
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: Compose(ComposeRequest, String, String)
  nameWithType: ObjectsResource.Compose(ComposeRequest, String, String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.Compose(Google.Apis.Storage.v1.Data.ComposeRequest, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Compose
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 3849
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Concatenates a list of existing objects into a new object in the same bucket.
  example: []
  syntax:
    content: public virtual ObjectsResource.ComposeRequest Compose(ComposeRequest body, string destinationBucket, string destinationObject)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.ComposeRequest
      description: The body of the request.
    - id: destinationBucket
      type: System.String
      description: Name of the bucket in which to store the new object.
    - id: destinationObject
      type: System.String
      description: >-
        Name of the new object. For information about how to URL encode object names to be path

        safe, see Encoding URI Path Parts.
    return:
      type: Google.Apis.Storage.v1.ObjectsResource.ComposeRequest
    content.vb: Public Overridable Function Compose(body As ComposeRequest, destinationBucket As String, destinationObject As String) As ObjectsResource.ComposeRequest
  overload: Google.Apis.Storage.v1.ObjectsResource.Compose*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.Copy(Google.Apis.Storage.v1.Data.Object,System.String,System.String,System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.Copy(Google.Apis.Storage.v1.Data.Object,System.String,System.String,System.String,System.String)
  id: Copy(Google.Apis.Storage.v1.Data.Object,System.String,System.String,System.String,System.String)
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: Copy(Object, String, String, String, String)
  nameWithType: ObjectsResource.Copy(Object, String, String, String, String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.Copy(Google.Apis.Storage.v1.Data.Object, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Copy
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 4088
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Copies a source object to a destination object. Optionally overrides metadata.
  example: []
  syntax:
    content: public virtual ObjectsResource.CopyRequest Copy(Object body, string sourceBucket, string sourceObject, string destinationBucket, string destinationObject)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.Object
      description: The body of the request.
    - id: sourceBucket
      type: System.String
      description: Name of the bucket in which to find the source object.
    - id: sourceObject
      type: System.String
      description: >-
        Name of the source object. For information about how to URL encode object names to be path safe,

        see Encoding URI Path Parts.
    - id: destinationBucket
      type: System.String
      description: >-
        Name of the bucket in which to store

        the new object. Overrides the provided object metadata&apos;s bucket value, if any.For information about how to URL

        encode object names to be path safe, see Encoding URI Path Parts.
    - id: destinationObject
      type: System.String
      description: >-
        Name of the new object. Required when the object metadata is not otherwise provided.

        Overrides the object metadata&apos;s name value, if any.
    return:
      type: Google.Apis.Storage.v1.ObjectsResource.CopyRequest
    content.vb: Public Overridable Function Copy(body As Object, sourceBucket As String, sourceObject As String, destinationBucket As String, destinationObject As String) As ObjectsResource.CopyRequest
  overload: Google.Apis.Storage.v1.ObjectsResource.Copy*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.Delete(System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.Delete(System.String,System.String)
  id: Delete(System.String,System.String)
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: Delete(String, String)
  nameWithType: ObjectsResource.Delete(String, String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.Delete(System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Delete
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 4462
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the

    bucket, or if the generation parameter is used.
  example: []
  syntax:
    content: public virtual ObjectsResource.DeleteRequest Delete(string bucket, string storageObject)
    parameters:
    - id: bucket
      type: System.String
      description: Name of the bucket in which the object resides.
    - id: storageObject
      type: System.String
      description: >-
        Name of the object. For information about how to URL encode object names to be path safe, see

        Encoding URI Path Parts.
    return:
      type: Google.Apis.Storage.v1.ObjectsResource.DeleteRequest
    content.vb: Public Overridable Function Delete(bucket As String, storageObject As String) As ObjectsResource.DeleteRequest
  overload: Google.Apis.Storage.v1.ObjectsResource.Delete*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.Get(System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.Get(System.String,System.String)
  id: Get(System.String,System.String)
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: Get(String, String)
  nameWithType: ObjectsResource.Get(String, String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.Get(System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Get
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 4626
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Retrieves an object or its metadata.
  example: []
  syntax:
    content: public virtual ObjectsResource.GetRequest Get(string bucket, string storageObject)
    parameters:
    - id: bucket
      type: System.String
      description: Name of the bucket in which the object resides.
    - id: storageObject
      type: System.String
      description: >-
        Name of the object. For information about how to URL encode object names to be path safe, see

        Encoding URI Path Parts.
    return:
      type: Google.Apis.Storage.v1.ObjectsResource.GetRequest
    content.vb: Public Overridable Function Get(bucket As String, storageObject As String) As ObjectsResource.GetRequest
  overload: Google.Apis.Storage.v1.ObjectsResource.Get*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.GetIamPolicy(System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.GetIamPolicy(System.String,System.String)
  id: GetIamPolicy(System.String,System.String)
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: GetIamPolicy(String, String)
  nameWithType: ObjectsResource.GetIamPolicy(String, String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.GetIamPolicy(System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GetIamPolicy
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 4866
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Returns an IAM policy for the specified object.
  example: []
  syntax:
    content: public virtual ObjectsResource.GetIamPolicyRequest GetIamPolicy(string bucket, string storageObject)
    parameters:
    - id: bucket
      type: System.String
      description: Name of the bucket in which the object resides.
    - id: storageObject
      type: System.String
      description: >-
        Name of the object. For information about how to URL encode object names to be path safe, see

        Encoding URI Path Parts.
    return:
      type: Google.Apis.Storage.v1.ObjectsResource.GetIamPolicyRequest
    content.vb: Public Overridable Function GetIamPolicy(bucket As String, storageObject As String) As ObjectsResource.GetIamPolicyRequest
  overload: Google.Apis.Storage.v1.ObjectsResource.GetIamPolicy*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.Insert(Google.Apis.Storage.v1.Data.Object,System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.Insert(Google.Apis.Storage.v1.Data.Object,System.String)
  id: Insert(Google.Apis.Storage.v1.Data.Object,System.String)
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: Insert(Object, String)
  nameWithType: ObjectsResource.Insert(Object, String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.Insert(Google.Apis.Storage.v1.Data.Object, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Insert
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 4970
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Stores a new object and metadata.
  example: []
  syntax:
    content: public virtual ObjectsResource.InsertRequest Insert(Object body, string bucket)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.Object
      description: The body of the request.
    - id: bucket
      type: System.String
      description: >-
        Name of the bucket in which to store the new object. Overrides the provided object metadata&apos;s

        bucket value, if any.
    return:
      type: Google.Apis.Storage.v1.ObjectsResource.InsertRequest
    content.vb: Public Overridable Function Insert(body As Object, bucket As String) As ObjectsResource.InsertRequest
  overload: Google.Apis.Storage.v1.ObjectsResource.Insert*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.Insert(Google.Apis.Storage.v1.Data.Object,System.String,System.IO.Stream,System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.Insert(Google.Apis.Storage.v1.Data.Object,System.String,System.IO.Stream,System.String)
  id: Insert(Google.Apis.Storage.v1.Data.Object,System.String,System.IO.Stream,System.String)
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: Insert(Object, String, Stream, String)
  nameWithType: ObjectsResource.Insert(Object, String, Stream, String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.Insert(Google.Apis.Storage.v1.Data.Object, System.String, System.IO.Stream, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Insert
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5275
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Stores a new object and metadata.
  example: []
  syntax:
    content: public virtual ObjectsResource.InsertMediaUpload Insert(Object body, string bucket, Stream stream, string contentType)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.Object
      description: The body of the request.
    - id: bucket
      type: System.String
      description: >-
        Name of the bucket in which to store the new object. Overrides the provided object metadata&apos;s

        bucket value, if any.
    - id: stream
      type: System.IO.Stream
      description: The stream to upload.
    - id: contentType
      type: System.String
      description: The content type of the stream to upload.
    return:
      type: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
    content.vb: Public Overridable Function Insert(body As Object, bucket As String, stream As Stream, contentType As String) As ObjectsResource.InsertMediaUpload
  overload: Google.Apis.Storage.v1.ObjectsResource.Insert*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.List(System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.List(System.String)
  id: List(System.String)
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: List(String)
  nameWithType: ObjectsResource.List(String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.List(System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: List
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5434
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Retrieves a list of objects matching the criteria.
  example: []
  syntax:
    content: public virtual ObjectsResource.ListRequest List(string bucket)
    parameters:
    - id: bucket
      type: System.String
      description: Name of the bucket in which to look for objects.
    return:
      type: Google.Apis.Storage.v1.ObjectsResource.ListRequest
    content.vb: Public Overridable Function List(bucket As String) As ObjectsResource.ListRequest
  overload: Google.Apis.Storage.v1.ObjectsResource.List*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.Patch(Google.Apis.Storage.v1.Data.Object,System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.Patch(Google.Apis.Storage.v1.Data.Object,System.String,System.String)
  id: Patch(Google.Apis.Storage.v1.Data.Object,System.String,System.String)
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: Patch(Object, String, String)
  nameWithType: ObjectsResource.Patch(Object, String, String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.Patch(Google.Apis.Storage.v1.Data.Object, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Patch
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5609
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Updates an object&apos;s metadata. This method supports patch semantics.
  example: []
  syntax:
    content: public virtual ObjectsResource.PatchRequest Patch(Object body, string bucket, string storageObject)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.Object
      description: The body of the request.
    - id: bucket
      type: System.String
      description: Name of the bucket in which the object resides.
    - id: storageObject
      type: System.String
      description: >-
        Name of the object. For information about how to URL encode object names to be path safe, see

        Encoding URI Path Parts.
    return:
      type: Google.Apis.Storage.v1.ObjectsResource.PatchRequest
    content.vb: Public Overridable Function Patch(body As Object, bucket As String, storageObject As String) As ObjectsResource.PatchRequest
  overload: Google.Apis.Storage.v1.ObjectsResource.Patch*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.Rewrite(Google.Apis.Storage.v1.Data.Object,System.String,System.String,System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.Rewrite(Google.Apis.Storage.v1.Data.Object,System.String,System.String,System.String,System.String)
  id: Rewrite(Google.Apis.Storage.v1.Data.Object,System.String,System.String,System.String,System.String)
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: Rewrite(Object, String, String, String, String)
  nameWithType: ObjectsResource.Rewrite(Object, String, String, String, String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.Rewrite(Google.Apis.Storage.v1.Data.Object, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Rewrite
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 5847
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Rewrites a source object to a destination object. Optionally overrides metadata.
  example: []
  syntax:
    content: public virtual ObjectsResource.RewriteRequest Rewrite(Object body, string sourceBucket, string sourceObject, string destinationBucket, string destinationObject)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.Object
      description: The body of the request.
    - id: sourceBucket
      type: System.String
      description: Name of the bucket in which to find the source object.
    - id: sourceObject
      type: System.String
      description: >-
        Name of the source object. For information about how to URL encode object names to be path safe,

        see Encoding URI Path Parts.
    - id: destinationBucket
      type: System.String
      description: >-
        Name of the bucket in which to store

        the new object. Overrides the provided object metadata&apos;s bucket value, if any.
    - id: destinationObject
      type: System.String
      description: >-
        Name of the new object. Required when the object metadata is not otherwise provided.

        Overrides the object metadata&apos;s name value, if any. For information about how to URL encode object names to be path

        safe, see Encoding URI Path Parts.
    return:
      type: Google.Apis.Storage.v1.ObjectsResource.RewriteRequest
    content.vb: Public Overridable Function Rewrite(body As Object, sourceBucket As String, sourceObject As String, destinationBucket As String, destinationObject As String) As ObjectsResource.RewriteRequest
  overload: Google.Apis.Storage.v1.ObjectsResource.Rewrite*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.SetIamPolicy(Google.Apis.Storage.v1.Data.Policy,System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.SetIamPolicy(Google.Apis.Storage.v1.Data.Policy,System.String,System.String)
  id: SetIamPolicy(Google.Apis.Storage.v1.Data.Policy,System.String,System.String)
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: SetIamPolicy(Policy, String, String)
  nameWithType: ObjectsResource.SetIamPolicy(Policy, String, String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.SetIamPolicy(Google.Apis.Storage.v1.Data.Policy, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: SetIamPolicy
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6216
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Updates an IAM policy for the specified object.
  example: []
  syntax:
    content: public virtual ObjectsResource.SetIamPolicyRequest SetIamPolicy(Policy body, string bucket, string storageObject)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.Policy
      description: The body of the request.
    - id: bucket
      type: System.String
      description: Name of the bucket in which the object resides.
    - id: storageObject
      type: System.String
      description: >-
        Name of the object. For information about how to URL encode object names to be path safe, see

        Encoding URI Path Parts.
    return:
      type: Google.Apis.Storage.v1.ObjectsResource.SetIamPolicyRequest
    content.vb: Public Overridable Function SetIamPolicy(body As Policy, bucket As String, storageObject As String) As ObjectsResource.SetIamPolicyRequest
  overload: Google.Apis.Storage.v1.ObjectsResource.SetIamPolicy*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.TestIamPermissions(System.String,System.String,Google.Apis.Util.Repeatable{System.String})
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.TestIamPermissions(System.String,System.String,Google.Apis.Util.Repeatable{System.String})
  id: TestIamPermissions(System.String,System.String,Google.Apis.Util.Repeatable{System.String})
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: TestIamPermissions(String, String, Util.Repeatable<String>)
  nameWithType: ObjectsResource.TestIamPermissions(String, String, Util.Repeatable<String>)
  fullName: Google.Apis.Storage.v1.ObjectsResource.TestIamPermissions(System.String, System.String, Google.Apis.Util.Repeatable<System.String>)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TestIamPermissions
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6330
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: >-
    Tests a set of permissions on the given object to see which, if any, are held by the

    caller.
  example: []
  syntax:
    content: public virtual ObjectsResource.TestIamPermissionsRequest TestIamPermissions(string bucket, string storageObject, Util.Repeatable<string> permissions)
    parameters:
    - id: bucket
      type: System.String
      description: Name of the bucket in which the object resides.
    - id: storageObject
      type: System.String
      description: >-
        Name of the object. For information about how to URL encode object names to be path safe, see

        Encoding URI Path Parts.
    - id: permissions
      type: Google.Apis.Util.Repeatable{System.String}
      description: Permissions to test.
    return:
      type: Google.Apis.Storage.v1.ObjectsResource.TestIamPermissionsRequest
    content.vb: Public Overridable Function TestIamPermissions(bucket As String, storageObject As String, permissions As Util.Repeatable(Of String)) As ObjectsResource.TestIamPermissionsRequest
  overload: Google.Apis.Storage.v1.ObjectsResource.TestIamPermissions*
  nameWithType.vb: ObjectsResource.TestIamPermissions(String, String, Util.Repeatable(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Apis.Storage.v1.ObjectsResource.TestIamPermissions(System.String, System.String, Google.Apis.Util.Repeatable(Of System.String))
  name.vb: TestIamPermissions(String, String, Util.Repeatable(Of String))
- uid: Google.Apis.Storage.v1.ObjectsResource.Update(Google.Apis.Storage.v1.Data.Object,System.String,System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.Update(Google.Apis.Storage.v1.Data.Object,System.String,System.String)
  id: Update(Google.Apis.Storage.v1.Data.Object,System.String,System.String)
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: Update(Object, String, String)
  nameWithType: ObjectsResource.Update(Object, String, String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.Update(Google.Apis.Storage.v1.Data.Object, System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Update
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6451
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Updates an object&apos;s metadata.
  example: []
  syntax:
    content: public virtual ObjectsResource.UpdateRequest Update(Object body, string bucket, string storageObject)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.Object
      description: The body of the request.
    - id: bucket
      type: System.String
      description: Name of the bucket in which the object resides.
    - id: storageObject
      type: System.String
      description: >-
        Name of the object. For information about how to URL encode object names to be path safe, see

        Encoding URI Path Parts.
    return:
      type: Google.Apis.Storage.v1.ObjectsResource.UpdateRequest
    content.vb: Public Overridable Function Update(body As Object, bucket As String, storageObject As String) As ObjectsResource.UpdateRequest
  overload: Google.Apis.Storage.v1.ObjectsResource.Update*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.ObjectsResource.WatchAll(Google.Apis.Storage.v1.Data.Channel,System.String)
  commentId: M:Google.Apis.Storage.v1.ObjectsResource.WatchAll(Google.Apis.Storage.v1.Data.Channel,System.String)
  id: WatchAll(Google.Apis.Storage.v1.Data.Channel,System.String)
  parent: Google.Apis.Storage.v1.ObjectsResource
  langs:
  - csharp
  - vb
  name: WatchAll(Channel, String)
  nameWithType: ObjectsResource.WatchAll(Channel, String)
  fullName: Google.Apis.Storage.v1.ObjectsResource.WatchAll(Google.Apis.Storage.v1.Data.Channel, System.String)
  type: Method
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: WatchAll
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6733
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1
  summary: Watch for changes on all objects in a bucket.
  example: []
  syntax:
    content: public virtual ObjectsResource.WatchAllRequest WatchAll(Channel body, string bucket)
    parameters:
    - id: body
      type: Google.Apis.Storage.v1.Data.Channel
      description: The body of the request.
    - id: bucket
      type: System.String
      description: Name of the bucket in which to look for objects.
    return:
      type: Google.Apis.Storage.v1.ObjectsResource.WatchAllRequest
    content.vb: Public Overridable Function WatchAll(body As Channel, bucket As String) As ObjectsResource.WatchAllRequest
  overload: Google.Apis.Storage.v1.ObjectsResource.WatchAll*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1
  commentId: N:Google.Apis.Storage.v1
  isExternal: false
  name: Google.Apis.Storage.v1
  nameWithType: Google.Apis.Storage.v1
  fullName: Google.Apis.Storage.v1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Storage.v1.ObjectsResource.#ctor*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.#ctor
  isExternal: false
  name: ObjectsResource
  nameWithType: ObjectsResource.ObjectsResource
  fullName: Google.Apis.Storage.v1.ObjectsResource.ObjectsResource
- uid: Google.Apis.Services.IClientService
  isExternal: true
  name: Services.IClientService
  nameWithType: Services.IClientService
  fullName: Google.Apis.Services.IClientService
- uid: Google.Apis.Storage.v1.ObjectsResource.Compose*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.Compose
  isExternal: false
  name: Compose
  nameWithType: ObjectsResource.Compose
  fullName: Google.Apis.Storage.v1.ObjectsResource.Compose
- uid: Google.Apis.Storage.v1.Data.ComposeRequest
  commentId: T:Google.Apis.Storage.v1.Data.ComposeRequest
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: ComposeRequest
  nameWithType: ComposeRequest
  fullName: Google.Apis.Storage.v1.Data.ComposeRequest
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Storage.v1.ObjectsResource.ComposeRequest
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.ComposeRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: ObjectsResource.ComposeRequest
  nameWithType: ObjectsResource.ComposeRequest
  fullName: Google.Apis.Storage.v1.ObjectsResource.ComposeRequest
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  isExternal: false
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: Google.Apis.Storage.v1.ObjectsResource.Copy*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.Copy
  isExternal: false
  name: Copy
  nameWithType: ObjectsResource.Copy
  fullName: Google.Apis.Storage.v1.ObjectsResource.Copy
- uid: Google.Apis.Storage.v1.Data.Object
  commentId: T:Google.Apis.Storage.v1.Data.Object
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: Google.Apis.Storage.v1.Data.Object
- uid: Google.Apis.Storage.v1.ObjectsResource.CopyRequest
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.CopyRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: ObjectsResource.CopyRequest
  nameWithType: ObjectsResource.CopyRequest
  fullName: Google.Apis.Storage.v1.ObjectsResource.CopyRequest
- uid: Google.Apis.Storage.v1.ObjectsResource.Delete*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.Delete
  isExternal: false
  name: Delete
  nameWithType: ObjectsResource.Delete
  fullName: Google.Apis.Storage.v1.ObjectsResource.Delete
- uid: Google.Apis.Storage.v1.ObjectsResource.DeleteRequest
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.DeleteRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: ObjectsResource.DeleteRequest
  nameWithType: ObjectsResource.DeleteRequest
  fullName: Google.Apis.Storage.v1.ObjectsResource.DeleteRequest
- uid: Google.Apis.Storage.v1.ObjectsResource.Get*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.Get
  isExternal: false
  name: Get
  nameWithType: ObjectsResource.Get
  fullName: Google.Apis.Storage.v1.ObjectsResource.Get
- uid: Google.Apis.Storage.v1.ObjectsResource.GetRequest
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.GetRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: ObjectsResource.GetRequest
  nameWithType: ObjectsResource.GetRequest
  fullName: Google.Apis.Storage.v1.ObjectsResource.GetRequest
- uid: Google.Apis.Storage.v1.ObjectsResource.GetIamPolicy*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.GetIamPolicy
  isExternal: false
  name: GetIamPolicy
  nameWithType: ObjectsResource.GetIamPolicy
  fullName: Google.Apis.Storage.v1.ObjectsResource.GetIamPolicy
- uid: Google.Apis.Storage.v1.ObjectsResource.GetIamPolicyRequest
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.GetIamPolicyRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: ObjectsResource.GetIamPolicyRequest
  nameWithType: ObjectsResource.GetIamPolicyRequest
  fullName: Google.Apis.Storage.v1.ObjectsResource.GetIamPolicyRequest
- uid: Google.Apis.Storage.v1.ObjectsResource.Insert*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.Insert
  isExternal: false
  name: Insert
  nameWithType: ObjectsResource.Insert
  fullName: Google.Apis.Storage.v1.ObjectsResource.Insert
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertRequest
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.InsertRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: ObjectsResource.InsertRequest
  nameWithType: ObjectsResource.InsertRequest
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertRequest
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: ObjectsResource.InsertMediaUpload
  nameWithType: ObjectsResource.InsertMediaUpload
  fullName: Google.Apis.Storage.v1.ObjectsResource.InsertMediaUpload
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Google.Apis.Storage.v1.ObjectsResource.List*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.List
  isExternal: false
  name: List
  nameWithType: ObjectsResource.List
  fullName: Google.Apis.Storage.v1.ObjectsResource.List
- uid: Google.Apis.Storage.v1.ObjectsResource.ListRequest
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.ListRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: ObjectsResource.ListRequest
  nameWithType: ObjectsResource.ListRequest
  fullName: Google.Apis.Storage.v1.ObjectsResource.ListRequest
- uid: Google.Apis.Storage.v1.ObjectsResource.Patch*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.Patch
  isExternal: false
  name: Patch
  nameWithType: ObjectsResource.Patch
  fullName: Google.Apis.Storage.v1.ObjectsResource.Patch
- uid: Google.Apis.Storage.v1.ObjectsResource.PatchRequest
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.PatchRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: ObjectsResource.PatchRequest
  nameWithType: ObjectsResource.PatchRequest
  fullName: Google.Apis.Storage.v1.ObjectsResource.PatchRequest
- uid: Google.Apis.Storage.v1.ObjectsResource.Rewrite*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.Rewrite
  isExternal: false
  name: Rewrite
  nameWithType: ObjectsResource.Rewrite
  fullName: Google.Apis.Storage.v1.ObjectsResource.Rewrite
- uid: Google.Apis.Storage.v1.ObjectsResource.RewriteRequest
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.RewriteRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: ObjectsResource.RewriteRequest
  nameWithType: ObjectsResource.RewriteRequest
  fullName: Google.Apis.Storage.v1.ObjectsResource.RewriteRequest
- uid: Google.Apis.Storage.v1.ObjectsResource.SetIamPolicy*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.SetIamPolicy
  isExternal: false
  name: SetIamPolicy
  nameWithType: ObjectsResource.SetIamPolicy
  fullName: Google.Apis.Storage.v1.ObjectsResource.SetIamPolicy
- uid: Google.Apis.Storage.v1.Data.Policy
  commentId: T:Google.Apis.Storage.v1.Data.Policy
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: Policy
  nameWithType: Policy
  fullName: Google.Apis.Storage.v1.Data.Policy
- uid: Google.Apis.Storage.v1.ObjectsResource.SetIamPolicyRequest
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.SetIamPolicyRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: ObjectsResource.SetIamPolicyRequest
  nameWithType: ObjectsResource.SetIamPolicyRequest
  fullName: Google.Apis.Storage.v1.ObjectsResource.SetIamPolicyRequest
- uid: Google.Apis.Storage.v1.ObjectsResource.TestIamPermissions*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.TestIamPermissions
  isExternal: false
  name: TestIamPermissions
  nameWithType: ObjectsResource.TestIamPermissions
  fullName: Google.Apis.Storage.v1.ObjectsResource.TestIamPermissions
- uid: Google.Apis.Util.Repeatable{System.String}
  commentId: '!:Google.Apis.Util.Repeatable{System.String}'
  definition: Google.Apis.Util.Repeatable`1
  name: Util.Repeatable<String>
  nameWithType: Util.Repeatable<String>
  fullName: Google.Apis.Util.Repeatable<System.String>
  nameWithType.vb: Util.Repeatable(Of String)
  fullName.vb: Google.Apis.Util.Repeatable(Of System.String)
  name.vb: Util.Repeatable(Of String)
  spec.csharp:
  - uid: Google.Apis.Util.Repeatable`1
    name: Util.Repeatable
    nameWithType: Util.Repeatable
    fullName: Google.Apis.Util.Repeatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Util.Repeatable`1
    name: Util.Repeatable
    nameWithType: Util.Repeatable
    fullName: Google.Apis.Util.Repeatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.ObjectsResource.TestIamPermissionsRequest
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.TestIamPermissionsRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: ObjectsResource.TestIamPermissionsRequest
  nameWithType: ObjectsResource.TestIamPermissionsRequest
  fullName: Google.Apis.Storage.v1.ObjectsResource.TestIamPermissionsRequest
- uid: Google.Apis.Util.Repeatable`1
  isExternal: true
  name: Util.Repeatable<>
  nameWithType: Util.Repeatable<>
  fullName: Google.Apis.Util.Repeatable<>
  nameWithType.vb: Util.Repeatable(Of )
  fullName.vb: Google.Apis.Util.Repeatable(Of )
  name.vb: Util.Repeatable(Of )
  spec.csharp:
  - uid: Google.Apis.Util.Repeatable`1
    name: Util.Repeatable
    nameWithType: Util.Repeatable
    fullName: Google.Apis.Util.Repeatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Util.Repeatable`1
    name: Util.Repeatable
    nameWithType: Util.Repeatable
    fullName: Google.Apis.Util.Repeatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.ObjectsResource.Update*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.Update
  isExternal: false
  name: Update
  nameWithType: ObjectsResource.Update
  fullName: Google.Apis.Storage.v1.ObjectsResource.Update
- uid: Google.Apis.Storage.v1.ObjectsResource.UpdateRequest
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.UpdateRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: ObjectsResource.UpdateRequest
  nameWithType: ObjectsResource.UpdateRequest
  fullName: Google.Apis.Storage.v1.ObjectsResource.UpdateRequest
- uid: Google.Apis.Storage.v1.ObjectsResource.WatchAll*
  commentId: Overload:Google.Apis.Storage.v1.ObjectsResource.WatchAll
  isExternal: false
  name: WatchAll
  nameWithType: ObjectsResource.WatchAll
  fullName: Google.Apis.Storage.v1.ObjectsResource.WatchAll
- uid: Google.Apis.Storage.v1.Data.Channel
  commentId: T:Google.Apis.Storage.v1.Data.Channel
  parent: Google.Apis.Storage.v1.Data
  isExternal: false
  name: Channel
  nameWithType: Channel
  fullName: Google.Apis.Storage.v1.Data.Channel
- uid: Google.Apis.Storage.v1.ObjectsResource.WatchAllRequest
  commentId: T:Google.Apis.Storage.v1.ObjectsResource.WatchAllRequest
  parent: Google.Apis.Storage.v1
  isExternal: false
  name: ObjectsResource.WatchAllRequest
  nameWithType: ObjectsResource.WatchAllRequest
  fullName: Google.Apis.Storage.v1.ObjectsResource.WatchAllRequest
