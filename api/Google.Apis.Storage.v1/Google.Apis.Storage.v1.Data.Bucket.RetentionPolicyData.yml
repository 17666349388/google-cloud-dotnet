### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData
  commentId: T:Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData
  id: Bucket.RetentionPolicyData
  parent: Google.Apis.Storage.v1.Data
  children:
  - Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTime
  - Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTimeRaw
  - Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.IsLocked
  - Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.RetentionPeriod
  langs:
  - csharp
  - vb
  name: Bucket.RetentionPolicyData
  nameWithType: Bucket.RetentionPolicyData
  fullName: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RetentionPolicyData
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7225
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    The bucket&apos;s retention policy. The retention policy enforces a minimum retention time for all

    objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects

    younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can

    be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy

    cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease

    period of a locked retention policy will result in a PERMISSION_DENIED error.
  example: []
  syntax:
    content: public class RetentionPolicyData
    content.vb: Public Class RetentionPolicyData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTimeRaw
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTimeRaw
  id: EffectiveTimeRaw
  parent: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData
  langs:
  - csharp
  - vb
  name: EffectiveTimeRaw
  nameWithType: Bucket.RetentionPolicyData.EffectiveTimeRaw
  fullName: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTimeRaw
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: EffectiveTimeRaw
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7229
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    Server-determined value that indicates the time from which policy was enforced and effective.

    This value is in RFC 3339 format.
  example: []
  syntax:
    content: >-
      [JsonProperty("effectiveTime")]

      public virtual string EffectiveTimeRaw { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("effectiveTime")>

      Public Overridable Property EffectiveTimeRaw As String
  overload: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTimeRaw*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: effectiveTime
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTime
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTime
  id: EffectiveTime
  parent: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData
  langs:
  - csharp
  - vb
  name: EffectiveTime
  nameWithType: Bucket.RetentionPolicyData.EffectiveTime
  fullName: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTime
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: EffectiveTime
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7233
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> representation of <xref href="Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTimeRaw" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public virtual DateTime? EffectiveTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonIgnore>

      Public Overridable Property EffectiveTime As Date?
  overload: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTime*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.IsLocked
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.IsLocked
  id: IsLocked
  parent: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData
  langs:
  - csharp
  - vb
  name: IsLocked
  nameWithType: Bucket.RetentionPolicyData.IsLocked
  fullName: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.IsLocked
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IsLocked
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7247
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: Once locked, an object retention policy cannot be modified.
  example: []
  syntax:
    content: >-
      [JsonProperty("isLocked")]

      public virtual bool? IsLocked { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("isLocked")>

      Public Overridable Property IsLocked As Boolean?
  overload: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.IsLocked*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isLocked
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.RetentionPeriod
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.RetentionPeriod
  id: RetentionPeriod
  parent: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData
  langs:
  - csharp
  - vb
  name: RetentionPeriod
  nameWithType: Bucket.RetentionPolicyData.RetentionPeriod
  fullName: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.RetentionPeriod
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RetentionPeriod
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7253
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    The duration in seconds that objects need to be retained. Retention duration must be greater

    than zero and less than 100 years. Note that enforcement of retention periods less than a day is not

    guaranteed. Such periods should only be used for testing purposes.
  example: []
  syntax:
    content: >-
      [JsonProperty("retentionPeriod")]

      public virtual long? RetentionPeriod { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("retentionPeriod")>

      Public Overridable Property RetentionPeriod As Long?
  overload: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.RetentionPeriod*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: retentionPeriod
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  isExternal: false
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTimeRaw*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTimeRaw
  isExternal: false
  name: EffectiveTimeRaw
  nameWithType: Bucket.RetentionPolicyData.EffectiveTimeRaw
  fullName: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTimeRaw
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTimeRaw
  commentId: P:Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTimeRaw
- uid: System.DateTime
  commentId: T:System.DateTime
- uid: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTime*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTime
  isExternal: false
  name: EffectiveTime
  nameWithType: Bucket.RetentionPolicyData.EffectiveTime
  fullName: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.EffectiveTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.IsLocked*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.IsLocked
  isExternal: false
  name: IsLocked
  nameWithType: Bucket.RetentionPolicyData.IsLocked
  fullName: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.IsLocked
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.RetentionPeriod*
  commentId: Overload:Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.RetentionPeriod
  isExternal: false
  name: RetentionPeriod
  nameWithType: Bucket.RetentionPolicyData.RetentionPeriod
  fullName: Google.Apis.Storage.v1.Data.Bucket.RetentionPolicyData.RetentionPeriod
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
