### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.Data.ComposeRequest.SourceObjectsData.ObjectPreconditionsData
  commentId: T:Google.Apis.Storage.v1.Data.ComposeRequest.SourceObjectsData.ObjectPreconditionsData
  id: ComposeRequest.SourceObjectsData.ObjectPreconditionsData
  parent: Google.Apis.Storage.v1.Data
  children:
  - Google.Apis.Storage.v1.Data.ComposeRequest.SourceObjectsData.ObjectPreconditionsData.IfGenerationMatch
  langs:
  - csharp
  - vb
  name: ComposeRequest.SourceObjectsData.ObjectPreconditionsData
  nameWithType: ComposeRequest.SourceObjectsData.ObjectPreconditionsData
  fullName: Google.Apis.Storage.v1.Data.ComposeRequest.SourceObjectsData.ObjectPreconditionsData
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ObjectPreconditionsData
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6683
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: Conditions that must be met for this operation to execute.
  example: []
  syntax:
    content: 'public class ObjectPreconditionsData : object'
    content.vb: >-
      Public Class ObjectPreconditionsData
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.Data.ComposeRequest.SourceObjectsData.ObjectPreconditionsData.IfGenerationMatch
  commentId: P:Google.Apis.Storage.v1.Data.ComposeRequest.SourceObjectsData.ObjectPreconditionsData.IfGenerationMatch
  id: IfGenerationMatch
  parent: Google.Apis.Storage.v1.Data.ComposeRequest.SourceObjectsData.ObjectPreconditionsData
  langs:
  - csharp
  - vb
  name: IfGenerationMatch
  nameWithType: ComposeRequest.SourceObjectsData.ObjectPreconditionsData.IfGenerationMatch
  fullName: Google.Apis.Storage.v1.Data.ComposeRequest.SourceObjectsData.ObjectPreconditionsData.IfGenerationMatch
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IfGenerationMatch
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 6688
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    Only perform the composition if the generation of the source object that would be used

    matches this value. If this value and a generation are both specified, they must be the same value

    or the call will fail.
  example: []
  syntax:
    content: public virtual System.Nullable<long> IfGenerationMatch { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Overridable Property IfGenerationMatch As System.Nullable(Of Long)
  overload: Google.Apis.Storage.v1.Data.ComposeRequest.SourceObjectsData.ObjectPreconditionsData.IfGenerationMatch*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  isExternal: false
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Storage.v1.Data.ComposeRequest.SourceObjectsData.ObjectPreconditionsData.IfGenerationMatch*
  commentId: Overload:Google.Apis.Storage.v1.Data.ComposeRequest.SourceObjectsData.ObjectPreconditionsData.IfGenerationMatch
  isExternal: false
  name: IfGenerationMatch
  nameWithType: ComposeRequest.SourceObjectsData.ObjectPreconditionsData.IfGenerationMatch
  fullName: Google.Apis.Storage.v1.Data.ComposeRequest.SourceObjectsData.ObjectPreconditionsData.IfGenerationMatch
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: System.Nullable<Int64>
  nameWithType: System.Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: System.Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: System.Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: System.Nullable<>
  nameWithType: System.Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: System.Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: System.Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: System.Nullable
    nameWithType: System.Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
