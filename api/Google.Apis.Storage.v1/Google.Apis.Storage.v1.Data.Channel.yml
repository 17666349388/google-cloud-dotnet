### YamlMime:ManagedReference
items:
- uid: Google.Apis.Storage.v1.Data.Channel
  commentId: T:Google.Apis.Storage.v1.Data.Channel
  id: Channel
  parent: Google.Apis.Storage.v1.Data
  children:
  - Google.Apis.Storage.v1.Data.Channel.Address
  - Google.Apis.Storage.v1.Data.Channel.ETag
  - Google.Apis.Storage.v1.Data.Channel.Expiration
  - Google.Apis.Storage.v1.Data.Channel.Id
  - Google.Apis.Storage.v1.Data.Channel.Kind
  - Google.Apis.Storage.v1.Data.Channel.Params__
  - Google.Apis.Storage.v1.Data.Channel.Payload
  - Google.Apis.Storage.v1.Data.Channel.ResourceId
  - Google.Apis.Storage.v1.Data.Channel.ResourceUri
  - Google.Apis.Storage.v1.Data.Channel.Token
  - Google.Apis.Storage.v1.Data.Channel.Type
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: Channel
  fullName: Google.Apis.Storage.v1.Data.Channel
  type: Class
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Channel
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7430
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: An notification channel used to watch for resource changes.
  example: []
  syntax:
    content: 'public class Channel : IDirectResponseSchema'
    content.vb: >-
      Public Class Channel
          Implements IDirectResponseSchema
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Requests.IDirectResponseSchema
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Storage.v1.Data.Channel.Address
  commentId: P:Google.Apis.Storage.v1.Data.Channel.Address
  id: Address
  parent: Google.Apis.Storage.v1.Data.Channel
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: Channel.Address
  fullName: Google.Apis.Storage.v1.Data.Channel.Address
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Address
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7433
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The address where notifications are delivered for this channel.
  example: []
  syntax:
    content: >-
      [JsonProperty("address")]

      public virtual string Address { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("address")>

      Public Overridable Property Address As String
  overload: Google.Apis.Storage.v1.Data.Channel.Address*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: address
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Channel.Expiration
  commentId: P:Google.Apis.Storage.v1.Data.Channel.Expiration
  id: Expiration
  parent: Google.Apis.Storage.v1.Data.Channel
  langs:
  - csharp
  - vb
  name: Expiration
  nameWithType: Channel.Expiration
  fullName: Google.Apis.Storage.v1.Data.Channel.Expiration
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Expiration
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7438
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds.

    Optional.
  example: []
  syntax:
    content: >-
      [JsonProperty("expiration")]

      public virtual long ? Expiration { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("expiration")>

      Public Overridable Property Expiration As Long?
  overload: Google.Apis.Storage.v1.Data.Channel.Expiration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: expiration
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Channel.Id
  commentId: P:Google.Apis.Storage.v1.Data.Channel.Id
  id: Id
  parent: Google.Apis.Storage.v1.Data.Channel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Channel.Id
  fullName: Google.Apis.Storage.v1.Data.Channel.Id
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Id
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7442
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: A UUID or similar unique string that identifies this channel.
  example: []
  syntax:
    content: >-
      [JsonProperty("id")]

      public virtual string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id")>

      Public Overridable Property Id As String
  overload: Google.Apis.Storage.v1.Data.Channel.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Channel.Kind
  commentId: P:Google.Apis.Storage.v1.Data.Channel.Kind
  id: Kind
  parent: Google.Apis.Storage.v1.Data.Channel
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: Channel.Kind
  fullName: Google.Apis.Storage.v1.Data.Channel.Kind
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Kind
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7447
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed

    string &quot;api#channel&quot;.
  example: []
  syntax:
    content: >-
      [JsonProperty("kind")]

      public virtual string Kind { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("kind")>

      Public Overridable Property Kind As String
  overload: Google.Apis.Storage.v1.Data.Channel.Kind*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: kind
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Channel.Params__
  commentId: P:Google.Apis.Storage.v1.Data.Channel.Params__
  id: Params__
  parent: Google.Apis.Storage.v1.Data.Channel
  langs:
  - csharp
  - vb
  name: Params__
  nameWithType: Channel.Params__
  fullName: Google.Apis.Storage.v1.Data.Channel.Params__
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Params__
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7451
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: Additional parameters controlling delivery channel behavior. Optional.
  example: []
  syntax:
    content: >-
      [JsonProperty("params")]

      public virtual IDictionary<string, string> Params__ { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: >-
      <JsonProperty("params")>

      Public Overridable Property Params__ As IDictionary(Of String, String)
  overload: Google.Apis.Storage.v1.Data.Channel.Params__*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: params
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Channel.Payload
  commentId: P:Google.Apis.Storage.v1.Data.Channel.Payload
  id: Payload
  parent: Google.Apis.Storage.v1.Data.Channel
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: Channel.Payload
  fullName: Google.Apis.Storage.v1.Data.Channel.Payload
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Payload
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7455
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: A Boolean value to indicate whether payload is wanted. Optional.
  example: []
  syntax:
    content: >-
      [JsonProperty("payload")]

      public virtual bool ? Payload { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("payload")>

      Public Overridable Property Payload As Boolean?
  overload: Google.Apis.Storage.v1.Data.Channel.Payload*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: payload
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Channel.ResourceId
  commentId: P:Google.Apis.Storage.v1.Data.Channel.ResourceId
  id: ResourceId
  parent: Google.Apis.Storage.v1.Data.Channel
  langs:
  - csharp
  - vb
  name: ResourceId
  nameWithType: Channel.ResourceId
  fullName: Google.Apis.Storage.v1.Data.Channel.ResourceId
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ResourceId
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7460
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    An opaque ID that identifies the resource being watched on this channel. Stable across different

    API versions.
  example: []
  syntax:
    content: >-
      [JsonProperty("resourceId")]

      public virtual string ResourceId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("resourceId")>

      Public Overridable Property ResourceId As String
  overload: Google.Apis.Storage.v1.Data.Channel.ResourceId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: resourceId
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Channel.ResourceUri
  commentId: P:Google.Apis.Storage.v1.Data.Channel.ResourceUri
  id: ResourceUri
  parent: Google.Apis.Storage.v1.Data.Channel
  langs:
  - csharp
  - vb
  name: ResourceUri
  nameWithType: Channel.ResourceUri
  fullName: Google.Apis.Storage.v1.Data.Channel.ResourceUri
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ResourceUri
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7464
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: A version-specific identifier for the watched resource.
  example: []
  syntax:
    content: >-
      [JsonProperty("resourceUri")]

      public virtual string ResourceUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("resourceUri")>

      Public Overridable Property ResourceUri As String
  overload: Google.Apis.Storage.v1.Data.Channel.ResourceUri*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: resourceUri
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Channel.Token
  commentId: P:Google.Apis.Storage.v1.Data.Channel.Token
  id: Token
  parent: Google.Apis.Storage.v1.Data.Channel
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: Channel.Token
  fullName: Google.Apis.Storage.v1.Data.Channel.Token
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Token
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7469
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: >-
    An arbitrary string delivered to the target address with each notification delivered over this

    channel. Optional.
  example: []
  syntax:
    content: >-
      [JsonProperty("token")]

      public virtual string Token { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("token")>

      Public Overridable Property Token As String
  overload: Google.Apis.Storage.v1.Data.Channel.Token*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: token
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Channel.Type
  commentId: P:Google.Apis.Storage.v1.Data.Channel.Type
  id: Type
  parent: Google.Apis.Storage.v1.Data.Channel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Channel.Type
  fullName: Google.Apis.Storage.v1.Data.Channel.Type
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Type
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7473
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The type of delivery mechanism used for this channel.
  example: []
  syntax:
    content: >-
      [JsonProperty("type")]

      public virtual string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("type")>

      Public Overridable Property Type As String
  overload: Google.Apis.Storage.v1.Data.Channel.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Apis.Storage.v1.Data.Channel.ETag
  commentId: P:Google.Apis.Storage.v1.Data.Channel.ETag
  id: ETag
  parent: Google.Apis.Storage.v1.Data.Channel
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: Channel.ETag
  fullName: Google.Apis.Storage.v1.Data.Channel.ETag
  type: Property
  source:
    remote:
      path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETag
    path: Src/Generated/Google.Apis.Storage.v1/Google.Apis.Storage.v1.cs
    startLine: 7477
  assemblies:
  - Google.Apis.Storage.v1
  namespace: Google.Apis.Storage.v1.Data
  summary: The ETag of the item.
  example: []
  syntax:
    content: public virtual string ETag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ETag As String
  overload: Google.Apis.Storage.v1.Data.Channel.ETag*
  implements:
  - Google.Apis.Requests.IDirectResponseSchema.ETag
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Apis.Storage.v1.Data
  commentId: N:Google.Apis.Storage.v1.Data
  isExternal: false
  name: Google.Apis.Storage.v1.Data
  nameWithType: Google.Apis.Storage.v1.Data
  fullName: Google.Apis.Storage.v1.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Requests.IDirectResponseSchema
  commentId: T:Google.Apis.Requests.IDirectResponseSchema
  parent: Google.Apis.Requests
  isExternal: true
  name: IDirectResponseSchema
  nameWithType: IDirectResponseSchema
  fullName: Google.Apis.Requests.IDirectResponseSchema
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: false
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Storage.v1.Data.Channel.Address*
  commentId: Overload:Google.Apis.Storage.v1.Data.Channel.Address
  isExternal: false
  name: Address
  nameWithType: Channel.Address
  fullName: Google.Apis.Storage.v1.Data.Channel.Address
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Storage.v1.Data.Channel.Expiration*
  commentId: Overload:Google.Apis.Storage.v1.Data.Channel.Expiration
  isExternal: false
  name: Expiration
  nameWithType: Channel.Expiration
  fullName: Google.Apis.Storage.v1.Data.Channel.Expiration
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Channel.Id*
  commentId: Overload:Google.Apis.Storage.v1.Data.Channel.Id
  isExternal: false
  name: Id
  nameWithType: Channel.Id
  fullName: Google.Apis.Storage.v1.Data.Channel.Id
- uid: Google.Apis.Storage.v1.Data.Channel.Kind*
  commentId: Overload:Google.Apis.Storage.v1.Data.Channel.Kind
  isExternal: false
  name: Kind
  nameWithType: Channel.Kind
  fullName: Google.Apis.Storage.v1.Data.Channel.Kind
- uid: Google.Apis.Storage.v1.Data.Channel.Params__*
  commentId: Overload:Google.Apis.Storage.v1.Data.Channel.Params__
  isExternal: false
  name: Params__
  nameWithType: Channel.Params__
  fullName: Google.Apis.Storage.v1.Data.Channel.Params__
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Storage.v1.Data.Channel.Payload*
  commentId: Overload:Google.Apis.Storage.v1.Data.Channel.Payload
  isExternal: false
  name: Payload
  nameWithType: Channel.Payload
  fullName: Google.Apis.Storage.v1.Data.Channel.Payload
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Storage.v1.Data.Channel.ResourceId*
  commentId: Overload:Google.Apis.Storage.v1.Data.Channel.ResourceId
  isExternal: false
  name: ResourceId
  nameWithType: Channel.ResourceId
  fullName: Google.Apis.Storage.v1.Data.Channel.ResourceId
- uid: Google.Apis.Storage.v1.Data.Channel.ResourceUri*
  commentId: Overload:Google.Apis.Storage.v1.Data.Channel.ResourceUri
  isExternal: false
  name: ResourceUri
  nameWithType: Channel.ResourceUri
  fullName: Google.Apis.Storage.v1.Data.Channel.ResourceUri
- uid: Google.Apis.Storage.v1.Data.Channel.Token*
  commentId: Overload:Google.Apis.Storage.v1.Data.Channel.Token
  isExternal: false
  name: Token
  nameWithType: Channel.Token
  fullName: Google.Apis.Storage.v1.Data.Channel.Token
- uid: Google.Apis.Storage.v1.Data.Channel.Type*
  commentId: Overload:Google.Apis.Storage.v1.Data.Channel.Type
  isExternal: false
  name: Type
  nameWithType: Channel.Type
  fullName: Google.Apis.Storage.v1.Data.Channel.Type
- uid: Google.Apis.Storage.v1.Data.Channel.ETag*
  commentId: Overload:Google.Apis.Storage.v1.Data.Channel.ETag
  isExternal: false
  name: ETag
  nameWithType: Channel.ETag
  fullName: Google.Apis.Storage.v1.Data.Channel.ETag
- uid: Google.Apis.Requests.IDirectResponseSchema.ETag
  commentId: P:Google.Apis.Requests.IDirectResponseSchema.ETag
  parent: Google.Apis.Requests.IDirectResponseSchema
  isExternal: true
  name: ETag
  nameWithType: IDirectResponseSchema.ETag
  fullName: Google.Apis.Requests.IDirectResponseSchema.ETag
