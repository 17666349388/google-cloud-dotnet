### YamlMime:ManagedReference
items:
- uid: Grpc.Core.Utils.GrpcPreconditions
  commentId: T:Grpc.Core.Utils.GrpcPreconditions
  id: GrpcPreconditions
  parent: Grpc.Core.Utils
  children:
  - Grpc.Core.Utils.GrpcPreconditions.CheckArgument(System.Boolean)
  - Grpc.Core.Utils.GrpcPreconditions.CheckArgument(System.Boolean,System.String)
  - Grpc.Core.Utils.GrpcPreconditions.CheckNotNull``1(``0)
  - Grpc.Core.Utils.GrpcPreconditions.CheckNotNull``1(``0,System.String)
  - Grpc.Core.Utils.GrpcPreconditions.CheckState(System.Boolean)
  - Grpc.Core.Utils.GrpcPreconditions.CheckState(System.Boolean,System.String)
  langs:
  - csharp
  - vb
  name: GrpcPreconditions
  nameWithType: GrpcPreconditions
  fullName: Grpc.Core.Utils.GrpcPreconditions
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core/Utils/GrpcPreconditions.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: GrpcPreconditions
    path: src/csharp/Grpc.Core/Utils/GrpcPreconditions.cs
    startLine: 25
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Utils
  summary: "\nUtility methods to simplify checking preconditions in the code.\n"
  example: []
  syntax:
    content: public static class GrpcPreconditions
    content.vb: Public Module GrpcPreconditions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Grpc.Core.Utils.GrpcPreconditions.CheckArgument(System.Boolean)
  commentId: M:Grpc.Core.Utils.GrpcPreconditions.CheckArgument(System.Boolean)
  id: CheckArgument(System.Boolean)
  parent: Grpc.Core.Utils.GrpcPreconditions
  langs:
  - csharp
  - vb
  name: CheckArgument(Boolean)
  nameWithType: GrpcPreconditions.CheckArgument(Boolean)
  fullName: Grpc.Core.Utils.GrpcPreconditions.CheckArgument(System.Boolean)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Utils/GrpcPreconditions.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: CheckArgument
    path: src/csharp/Grpc.Core/Utils/GrpcPreconditions.cs
    startLine: 31
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Utils
  summary: "\nThrows <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> if condition is false.\n"
  example: []
  syntax:
    content: public static void CheckArgument(bool condition)
    parameters:
    - id: condition
      type: System.Boolean
      description: The condition.
    content.vb: Public Shared Sub CheckArgument(condition As Boolean)
  overload: Grpc.Core.Utils.GrpcPreconditions.CheckArgument*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Grpc.Core.Utils.GrpcPreconditions.CheckArgument(System.Boolean,System.String)
  commentId: M:Grpc.Core.Utils.GrpcPreconditions.CheckArgument(System.Boolean,System.String)
  id: CheckArgument(System.Boolean,System.String)
  parent: Grpc.Core.Utils.GrpcPreconditions
  langs:
  - csharp
  - vb
  name: CheckArgument(Boolean, String)
  nameWithType: GrpcPreconditions.CheckArgument(Boolean, String)
  fullName: Grpc.Core.Utils.GrpcPreconditions.CheckArgument(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Utils/GrpcPreconditions.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: CheckArgument
    path: src/csharp/Grpc.Core/Utils/GrpcPreconditions.cs
    startLine: 44
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Utils
  summary: "\nThrows <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> with given message if condition is false.\n"
  example: []
  syntax:
    content: public static void CheckArgument(bool condition, string errorMessage)
    parameters:
    - id: condition
      type: System.Boolean
      description: The condition.
    - id: errorMessage
      type: System.String
      description: The error message.
    content.vb: Public Shared Sub CheckArgument(condition As Boolean, errorMessage As String)
  overload: Grpc.Core.Utils.GrpcPreconditions.CheckArgument*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Grpc.Core.Utils.GrpcPreconditions.CheckNotNull``1(``0)
  commentId: M:Grpc.Core.Utils.GrpcPreconditions.CheckNotNull``1(``0)
  id: CheckNotNull``1(``0)
  parent: Grpc.Core.Utils.GrpcPreconditions
  langs:
  - csharp
  - vb
  name: CheckNotNull<T>(T)
  nameWithType: GrpcPreconditions.CheckNotNull<T>(T)
  fullName: Grpc.Core.Utils.GrpcPreconditions.CheckNotNull<T>(T)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Utils/GrpcPreconditions.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: CheckNotNull
    path: src/csharp/Grpc.Core/Utils/GrpcPreconditions.cs
    startLine: 56
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Utils
  summary: "\nThrows <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> if reference is null.\n"
  example: []
  syntax:
    content: public static T CheckNotNull<T>(T reference)
    parameters:
    - id: reference
      type: '{T}'
      description: The reference.
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function CheckNotNull(Of T)(reference As T) As T
  overload: Grpc.Core.Utils.GrpcPreconditions.CheckNotNull*
  nameWithType.vb: GrpcPreconditions.CheckNotNull(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Grpc.Core.Utils.GrpcPreconditions.CheckNotNull(Of T)(T)
  name.vb: CheckNotNull(Of T)(T)
- uid: Grpc.Core.Utils.GrpcPreconditions.CheckNotNull``1(``0,System.String)
  commentId: M:Grpc.Core.Utils.GrpcPreconditions.CheckNotNull``1(``0,System.String)
  id: CheckNotNull``1(``0,System.String)
  parent: Grpc.Core.Utils.GrpcPreconditions
  langs:
  - csharp
  - vb
  name: CheckNotNull<T>(T, String)
  nameWithType: GrpcPreconditions.CheckNotNull<T>(T, String)
  fullName: Grpc.Core.Utils.GrpcPreconditions.CheckNotNull<T>(T, System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Utils/GrpcPreconditions.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: CheckNotNull
    path: src/csharp/Grpc.Core/Utils/GrpcPreconditions.cs
    startLine: 70
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Utils
  summary: "\nThrows <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> if reference is null.\n"
  example: []
  syntax:
    content: public static T CheckNotNull<T>(T reference, string paramName)
    parameters:
    - id: reference
      type: '{T}'
      description: The reference.
    - id: paramName
      type: System.String
      description: The parameter name.
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function CheckNotNull(Of T)(reference As T, paramName As String) As T
  overload: Grpc.Core.Utils.GrpcPreconditions.CheckNotNull*
  nameWithType.vb: GrpcPreconditions.CheckNotNull(Of T)(T, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Grpc.Core.Utils.GrpcPreconditions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
- uid: Grpc.Core.Utils.GrpcPreconditions.CheckState(System.Boolean)
  commentId: M:Grpc.Core.Utils.GrpcPreconditions.CheckState(System.Boolean)
  id: CheckState(System.Boolean)
  parent: Grpc.Core.Utils.GrpcPreconditions
  langs:
  - csharp
  - vb
  name: CheckState(Boolean)
  nameWithType: GrpcPreconditions.CheckState(Boolean)
  fullName: Grpc.Core.Utils.GrpcPreconditions.CheckState(System.Boolean)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Utils/GrpcPreconditions.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: CheckState
    path: src/csharp/Grpc.Core/Utils/GrpcPreconditions.cs
    startLine: 83
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Utils
  summary: "\nThrows <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> if condition is false.\n"
  example: []
  syntax:
    content: public static void CheckState(bool condition)
    parameters:
    - id: condition
      type: System.Boolean
      description: The condition.
    content.vb: Public Shared Sub CheckState(condition As Boolean)
  overload: Grpc.Core.Utils.GrpcPreconditions.CheckState*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Grpc.Core.Utils.GrpcPreconditions.CheckState(System.Boolean,System.String)
  commentId: M:Grpc.Core.Utils.GrpcPreconditions.CheckState(System.Boolean,System.String)
  id: CheckState(System.Boolean,System.String)
  parent: Grpc.Core.Utils.GrpcPreconditions
  langs:
  - csharp
  - vb
  name: CheckState(Boolean, String)
  nameWithType: GrpcPreconditions.CheckState(Boolean, String)
  fullName: Grpc.Core.Utils.GrpcPreconditions.CheckState(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Utils/GrpcPreconditions.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: CheckState
    path: src/csharp/Grpc.Core/Utils/GrpcPreconditions.cs
    startLine: 96
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Utils
  summary: "\nThrows <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> with given message if condition is false.\n"
  example: []
  syntax:
    content: public static void CheckState(bool condition, string errorMessage)
    parameters:
    - id: condition
      type: System.Boolean
      description: The condition.
    - id: errorMessage
      type: System.String
      description: The error message.
    content.vb: Public Shared Sub CheckState(condition As Boolean, errorMessage As String)
  overload: Grpc.Core.Utils.GrpcPreconditions.CheckState*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Grpc.Core.Utils
  commentId: N:Grpc.Core.Utils
  isExternal: false
  name: Grpc.Core.Utils
  nameWithType: Grpc.Core.Utils
  fullName: Grpc.Core.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Grpc.Core.Utils.GrpcPreconditions.CheckArgument*
  commentId: Overload:Grpc.Core.Utils.GrpcPreconditions.CheckArgument
  isExternal: false
  name: CheckArgument
  nameWithType: GrpcPreconditions.CheckArgument
  fullName: Grpc.Core.Utils.GrpcPreconditions.CheckArgument
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Grpc.Core.Utils.GrpcPreconditions.CheckNotNull*
  commentId: Overload:Grpc.Core.Utils.GrpcPreconditions.CheckNotNull
  isExternal: false
  name: CheckNotNull
  nameWithType: GrpcPreconditions.CheckNotNull
  fullName: Grpc.Core.Utils.GrpcPreconditions.CheckNotNull
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Grpc.Core.Utils.GrpcPreconditions.CheckState*
  commentId: Overload:Grpc.Core.Utils.GrpcPreconditions.CheckState
  isExternal: false
  name: CheckState
  nameWithType: GrpcPreconditions.CheckState
  fullName: Grpc.Core.Utils.GrpcPreconditions.CheckState
