### YamlMime:ManagedReference
items:
- uid: Grpc.Core.Logging.NullLogger
  commentId: T:Grpc.Core.Logging.NullLogger
  id: NullLogger
  parent: Grpc.Core.Logging
  children:
  - Grpc.Core.Logging.NullLogger.Debug(System.String)
  - Grpc.Core.Logging.NullLogger.Debug(System.String,System.Object[])
  - Grpc.Core.Logging.NullLogger.Error(System.Exception,System.String)
  - Grpc.Core.Logging.NullLogger.Error(System.String)
  - Grpc.Core.Logging.NullLogger.Error(System.String,System.Object[])
  - Grpc.Core.Logging.NullLogger.ForType``1
  - Grpc.Core.Logging.NullLogger.Info(System.String)
  - Grpc.Core.Logging.NullLogger.Info(System.String,System.Object[])
  - Grpc.Core.Logging.NullLogger.Warning(System.Exception,System.String)
  - Grpc.Core.Logging.NullLogger.Warning(System.String)
  - Grpc.Core.Logging.NullLogger.Warning(System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: NullLogger
  nameWithType: NullLogger
  fullName: Grpc.Core.Logging.NullLogger
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/NullLogger.cs
      branch: v1.13.x
      repo: https://github.com/grpc/grpc
    id: NullLogger
    path: src/csharp/Grpc.Core/Logging/NullLogger.cs
    startLine: 25
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nLogger which doesn&apos;t log any information anywhere.\n"
  example: []
  syntax:
    content: 'public sealed class NullLogger : ILogger'
    content.vb: >-
      Public NotInheritable Class NullLogger
          Implements ILogger
  inheritance:
  - System.Object
  implements:
  - Grpc.Core.Logging.ILogger
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Grpc.Core.Logging.NullLogger.Debug(System.String)
  commentId: M:Grpc.Core.Logging.NullLogger.Debug(System.String)
  id: Debug(System.String)
  parent: Grpc.Core.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Debug(String)
  nameWithType: NullLogger.Debug(String)
  fullName: Grpc.Core.Logging.NullLogger.Debug(System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/NullLogger.cs
      branch: v1.13.x
      repo: https://github.com/grpc/grpc
    id: Debug
    path: src/csharp/Grpc.Core/Logging/NullLogger.cs
    startLine: 30
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nAs with all logging calls on this logger, this method is a no-op.\n"
  example: []
  syntax:
    content: public void Debug(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub Debug(message As String)
  overload: Grpc.Core.Logging.NullLogger.Debug*
  implements:
  - Grpc.Core.Logging.ILogger.Debug(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.Logging.NullLogger.Debug(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.NullLogger.Debug(System.String,System.Object[])
  id: Debug(System.String,System.Object[])
  parent: Grpc.Core.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Debug(String, Object[])
  nameWithType: NullLogger.Debug(String, Object[])
  fullName: Grpc.Core.Logging.NullLogger.Debug(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/NullLogger.cs
      branch: v1.13.x
      repo: https://github.com/grpc/grpc
    id: Debug
    path: src/csharp/Grpc.Core/Logging/NullLogger.cs
    startLine: 37
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nAs with all logging calls on this logger, this method is a no-op.\n"
  example: []
  syntax:
    content: public void Debug(string format, params object[] formatArgs)
    parameters:
    - id: format
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Public Sub Debug(format As String, ParamArray formatArgs As Object())
  overload: Grpc.Core.Logging.NullLogger.Debug*
  implements:
  - Grpc.Core.Logging.ILogger.Debug(System.String,System.Object[])
  nameWithType.vb: NullLogger.Debug(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.Logging.NullLogger.Debug(System.String, System.Object())
  name.vb: Debug(String, Object())
- uid: Grpc.Core.Logging.NullLogger.Error(System.String)
  commentId: M:Grpc.Core.Logging.NullLogger.Error(System.String)
  id: Error(System.String)
  parent: Grpc.Core.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Error(String)
  nameWithType: NullLogger.Error(String)
  fullName: Grpc.Core.Logging.NullLogger.Error(System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/NullLogger.cs
      branch: v1.13.x
      repo: https://github.com/grpc/grpc
    id: Error
    path: src/csharp/Grpc.Core/Logging/NullLogger.cs
    startLine: 44
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nAs with all logging calls on this logger, this method is a no-op.\n"
  example: []
  syntax:
    content: public void Error(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub Error(message As String)
  overload: Grpc.Core.Logging.NullLogger.Error*
  implements:
  - Grpc.Core.Logging.ILogger.Error(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.Logging.NullLogger.Error(System.Exception,System.String)
  commentId: M:Grpc.Core.Logging.NullLogger.Error(System.Exception,System.String)
  id: Error(System.Exception,System.String)
  parent: Grpc.Core.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Error(Exception, String)
  nameWithType: NullLogger.Error(Exception, String)
  fullName: Grpc.Core.Logging.NullLogger.Error(System.Exception, System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/NullLogger.cs
      branch: v1.13.x
      repo: https://github.com/grpc/grpc
    id: Error
    path: src/csharp/Grpc.Core/Logging/NullLogger.cs
    startLine: 51
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nAs with all logging calls on this logger, this method is a no-op.\n"
  example: []
  syntax:
    content: public void Error(Exception exception, string message)
    parameters:
    - id: exception
      type: System.Exception
    - id: message
      type: System.String
    content.vb: Public Sub Error(exception As Exception, message As String)
  overload: Grpc.Core.Logging.NullLogger.Error*
  implements:
  - Grpc.Core.Logging.ILogger.Error(System.Exception,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.Logging.NullLogger.Error(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.NullLogger.Error(System.String,System.Object[])
  id: Error(System.String,System.Object[])
  parent: Grpc.Core.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Error(String, Object[])
  nameWithType: NullLogger.Error(String, Object[])
  fullName: Grpc.Core.Logging.NullLogger.Error(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/NullLogger.cs
      branch: v1.13.x
      repo: https://github.com/grpc/grpc
    id: Error
    path: src/csharp/Grpc.Core/Logging/NullLogger.cs
    startLine: 58
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nAs with all logging calls on this logger, this method is a no-op.\n"
  example: []
  syntax:
    content: public void Error(string format, params object[] formatArgs)
    parameters:
    - id: format
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Public Sub Error(format As String, ParamArray formatArgs As Object())
  overload: Grpc.Core.Logging.NullLogger.Error*
  implements:
  - Grpc.Core.Logging.ILogger.Error(System.String,System.Object[])
  nameWithType.vb: NullLogger.Error(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.Logging.NullLogger.Error(System.String, System.Object())
  name.vb: Error(String, Object())
- uid: Grpc.Core.Logging.NullLogger.ForType``1
  commentId: M:Grpc.Core.Logging.NullLogger.ForType``1
  id: ForType``1
  parent: Grpc.Core.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: ForType<T>()
  nameWithType: NullLogger.ForType<T>()
  fullName: Grpc.Core.Logging.NullLogger.ForType<T>()
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/NullLogger.cs
      branch: v1.13.x
      repo: https://github.com/grpc/grpc
    id: ForType
    path: src/csharp/Grpc.Core/Logging/NullLogger.cs
    startLine: 66
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nReturns a reference to the instance on which the method is called, as\ninstances aren&apos;t associated with specific types.\n"
  example: []
  syntax:
    content: public ILogger ForType<T>()
    typeParameters:
    - id: T
    return:
      type: Grpc.Core.Logging.ILogger
    content.vb: Public Function ForType(Of T) As ILogger
  overload: Grpc.Core.Logging.NullLogger.ForType*
  implements:
  - Grpc.Core.Logging.ILogger.ForType``1
  nameWithType.vb: NullLogger.ForType(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.Logging.NullLogger.ForType(Of T)()
  name.vb: ForType(Of T)()
- uid: Grpc.Core.Logging.NullLogger.Info(System.String)
  commentId: M:Grpc.Core.Logging.NullLogger.Info(System.String)
  id: Info(System.String)
  parent: Grpc.Core.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Info(String)
  nameWithType: NullLogger.Info(String)
  fullName: Grpc.Core.Logging.NullLogger.Info(System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/NullLogger.cs
      branch: v1.13.x
      repo: https://github.com/grpc/grpc
    id: Info
    path: src/csharp/Grpc.Core/Logging/NullLogger.cs
    startLine: 74
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nAs with all logging calls on this logger, this method is a no-op.\n"
  example: []
  syntax:
    content: public void Info(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub Info(message As String)
  overload: Grpc.Core.Logging.NullLogger.Info*
  implements:
  - Grpc.Core.Logging.ILogger.Info(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.Logging.NullLogger.Info(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.NullLogger.Info(System.String,System.Object[])
  id: Info(System.String,System.Object[])
  parent: Grpc.Core.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Info(String, Object[])
  nameWithType: NullLogger.Info(String, Object[])
  fullName: Grpc.Core.Logging.NullLogger.Info(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/NullLogger.cs
      branch: v1.13.x
      repo: https://github.com/grpc/grpc
    id: Info
    path: src/csharp/Grpc.Core/Logging/NullLogger.cs
    startLine: 81
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nAs with all logging calls on this logger, this method is a no-op.\n"
  example: []
  syntax:
    content: public void Info(string format, params object[] formatArgs)
    parameters:
    - id: format
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Public Sub Info(format As String, ParamArray formatArgs As Object())
  overload: Grpc.Core.Logging.NullLogger.Info*
  implements:
  - Grpc.Core.Logging.ILogger.Info(System.String,System.Object[])
  nameWithType.vb: NullLogger.Info(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.Logging.NullLogger.Info(System.String, System.Object())
  name.vb: Info(String, Object())
- uid: Grpc.Core.Logging.NullLogger.Warning(System.String)
  commentId: M:Grpc.Core.Logging.NullLogger.Warning(System.String)
  id: Warning(System.String)
  parent: Grpc.Core.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Warning(String)
  nameWithType: NullLogger.Warning(String)
  fullName: Grpc.Core.Logging.NullLogger.Warning(System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/NullLogger.cs
      branch: v1.13.x
      repo: https://github.com/grpc/grpc
    id: Warning
    path: src/csharp/Grpc.Core/Logging/NullLogger.cs
    startLine: 88
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nAs with all logging calls on this logger, this method is a no-op.\n"
  example: []
  syntax:
    content: public void Warning(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub Warning(message As String)
  overload: Grpc.Core.Logging.NullLogger.Warning*
  implements:
  - Grpc.Core.Logging.ILogger.Warning(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.Logging.NullLogger.Warning(System.Exception,System.String)
  commentId: M:Grpc.Core.Logging.NullLogger.Warning(System.Exception,System.String)
  id: Warning(System.Exception,System.String)
  parent: Grpc.Core.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Warning(Exception, String)
  nameWithType: NullLogger.Warning(Exception, String)
  fullName: Grpc.Core.Logging.NullLogger.Warning(System.Exception, System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/NullLogger.cs
      branch: v1.13.x
      repo: https://github.com/grpc/grpc
    id: Warning
    path: src/csharp/Grpc.Core/Logging/NullLogger.cs
    startLine: 95
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nAs with all logging calls on this logger, this method is a no-op.\n"
  example: []
  syntax:
    content: public void Warning(Exception exception, string message)
    parameters:
    - id: exception
      type: System.Exception
    - id: message
      type: System.String
    content.vb: Public Sub Warning(exception As Exception, message As String)
  overload: Grpc.Core.Logging.NullLogger.Warning*
  implements:
  - Grpc.Core.Logging.ILogger.Warning(System.Exception,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.Logging.NullLogger.Warning(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.NullLogger.Warning(System.String,System.Object[])
  id: Warning(System.String,System.Object[])
  parent: Grpc.Core.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Warning(String, Object[])
  nameWithType: NullLogger.Warning(String, Object[])
  fullName: Grpc.Core.Logging.NullLogger.Warning(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/NullLogger.cs
      branch: v1.13.x
      repo: https://github.com/grpc/grpc
    id: Warning
    path: src/csharp/Grpc.Core/Logging/NullLogger.cs
    startLine: 102
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nAs with all logging calls on this logger, this method is a no-op.\n"
  example: []
  syntax:
    content: public void Warning(string format, params object[] formatArgs)
    parameters:
    - id: format
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Public Sub Warning(format As String, ParamArray formatArgs As Object())
  overload: Grpc.Core.Logging.NullLogger.Warning*
  implements:
  - Grpc.Core.Logging.ILogger.Warning(System.String,System.Object[])
  nameWithType.vb: NullLogger.Warning(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.Logging.NullLogger.Warning(System.String, System.Object())
  name.vb: Warning(String, Object())
references:
- uid: Grpc.Core.Logging
  commentId: N:Grpc.Core.Logging
  isExternal: false
  name: Grpc.Core.Logging
  nameWithType: Grpc.Core.Logging
  fullName: Grpc.Core.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Grpc.Core.Logging.ILogger
  commentId: T:Grpc.Core.Logging.ILogger
  parent: Grpc.Core.Logging
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Grpc.Core.Logging.ILogger
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.Logging.NullLogger.Debug*
  commentId: Overload:Grpc.Core.Logging.NullLogger.Debug
  isExternal: false
  name: Debug
  nameWithType: NullLogger.Debug
  fullName: Grpc.Core.Logging.NullLogger.Debug
- uid: Grpc.Core.Logging.ILogger.Debug(System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Debug(System.String)
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Debug(String)
  nameWithType: ILogger.Debug(String)
  fullName: Grpc.Core.Logging.ILogger.Debug(System.String)
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Debug(System.String)
    name: Debug
    nameWithType: ILogger.Debug
    fullName: Grpc.Core.Logging.ILogger.Debug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Debug(System.String)
    name: Debug
    nameWithType: ILogger.Debug
    fullName: Grpc.Core.Logging.ILogger.Debug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Grpc.Core.Logging.ILogger.Debug(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.ILogger.Debug(System.String,System.Object[])
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Debug(String, Object[])
  nameWithType: ILogger.Debug(String, Object[])
  fullName: Grpc.Core.Logging.ILogger.Debug(System.String, System.Object[])
  nameWithType.vb: ILogger.Debug(String, Object())
  fullName.vb: Grpc.Core.Logging.ILogger.Debug(System.String, System.Object())
  name.vb: Debug(String, Object())
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Debug(System.String,System.Object[])
    name: Debug
    nameWithType: ILogger.Debug
    fullName: Grpc.Core.Logging.ILogger.Debug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Debug(System.String,System.Object[])
    name: Debug
    nameWithType: ILogger.Debug
    fullName: Grpc.Core.Logging.ILogger.Debug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Grpc.Core.Logging.NullLogger.Error*
  commentId: Overload:Grpc.Core.Logging.NullLogger.Error
  isExternal: false
  name: Error
  nameWithType: NullLogger.Error
  fullName: Grpc.Core.Logging.NullLogger.Error
- uid: Grpc.Core.Logging.ILogger.Error(System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Error(System.String)
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Error(String)
  nameWithType: ILogger.Error(String)
  fullName: Grpc.Core.Logging.ILogger.Error(System.String)
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Error(System.String)
    name: Error
    nameWithType: ILogger.Error
    fullName: Grpc.Core.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Error(System.String)
    name: Error
    nameWithType: ILogger.Error
    fullName: Grpc.Core.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.ILogger.Error(System.Exception,System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Error(System.Exception,System.String)
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Error(Exception, String)
  nameWithType: ILogger.Error(Exception, String)
  fullName: Grpc.Core.Logging.ILogger.Error(System.Exception, System.String)
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Error(System.Exception,System.String)
    name: Error
    nameWithType: ILogger.Error
    fullName: Grpc.Core.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Error(System.Exception,System.String)
    name: Error
    nameWithType: ILogger.Error
    fullName: Grpc.Core.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Grpc.Core.Logging.ILogger.Error(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.ILogger.Error(System.String,System.Object[])
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Error(String, Object[])
  nameWithType: ILogger.Error(String, Object[])
  fullName: Grpc.Core.Logging.ILogger.Error(System.String, System.Object[])
  nameWithType.vb: ILogger.Error(String, Object())
  fullName.vb: Grpc.Core.Logging.ILogger.Error(System.String, System.Object())
  name.vb: Error(String, Object())
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Error(System.String,System.Object[])
    name: Error
    nameWithType: ILogger.Error
    fullName: Grpc.Core.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Error(System.String,System.Object[])
    name: Error
    nameWithType: ILogger.Error
    fullName: Grpc.Core.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.NullLogger.ForType*
  commentId: Overload:Grpc.Core.Logging.NullLogger.ForType
  isExternal: false
  name: ForType
  nameWithType: NullLogger.ForType
  fullName: Grpc.Core.Logging.NullLogger.ForType
- uid: Grpc.Core.Logging.ILogger.ForType``1
  commentId: M:Grpc.Core.Logging.ILogger.ForType``1
  parent: Grpc.Core.Logging.ILogger
  isExternal: false
  name: ForType<T>()
  nameWithType: ILogger.ForType<T>()
  fullName: Grpc.Core.Logging.ILogger.ForType<T>()
  nameWithType.vb: ILogger.ForType(Of T)()
  fullName.vb: Grpc.Core.Logging.ILogger.ForType(Of T)()
  name.vb: ForType(Of T)()
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.ForType``1
    name: ForType<T>
    nameWithType: ILogger.ForType<T>
    fullName: Grpc.Core.Logging.ILogger.ForType<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.ForType``1
    name: ForType(Of T)
    nameWithType: ILogger.ForType(Of T)
    fullName: Grpc.Core.Logging.ILogger.ForType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.NullLogger.Info*
  commentId: Overload:Grpc.Core.Logging.NullLogger.Info
  isExternal: false
  name: Info
  nameWithType: NullLogger.Info
  fullName: Grpc.Core.Logging.NullLogger.Info
- uid: Grpc.Core.Logging.ILogger.Info(System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Info(System.String)
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Info(String)
  nameWithType: ILogger.Info(String)
  fullName: Grpc.Core.Logging.ILogger.Info(System.String)
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Info(System.String)
    name: Info
    nameWithType: ILogger.Info
    fullName: Grpc.Core.Logging.ILogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Info(System.String)
    name: Info
    nameWithType: ILogger.Info
    fullName: Grpc.Core.Logging.ILogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.ILogger.Info(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.ILogger.Info(System.String,System.Object[])
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Info(String, Object[])
  nameWithType: ILogger.Info(String, Object[])
  fullName: Grpc.Core.Logging.ILogger.Info(System.String, System.Object[])
  nameWithType.vb: ILogger.Info(String, Object())
  fullName.vb: Grpc.Core.Logging.ILogger.Info(System.String, System.Object())
  name.vb: Info(String, Object())
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Info(System.String,System.Object[])
    name: Info
    nameWithType: ILogger.Info
    fullName: Grpc.Core.Logging.ILogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Info(System.String,System.Object[])
    name: Info
    nameWithType: ILogger.Info
    fullName: Grpc.Core.Logging.ILogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.NullLogger.Warning*
  commentId: Overload:Grpc.Core.Logging.NullLogger.Warning
  isExternal: false
  name: Warning
  nameWithType: NullLogger.Warning
  fullName: Grpc.Core.Logging.NullLogger.Warning
- uid: Grpc.Core.Logging.ILogger.Warning(System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Warning(System.String)
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Warning(String)
  nameWithType: ILogger.Warning(String)
  fullName: Grpc.Core.Logging.ILogger.Warning(System.String)
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Warning(System.String)
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Grpc.Core.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Warning(System.String)
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Grpc.Core.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.ILogger.Warning(System.Exception,System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Warning(System.Exception,System.String)
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Warning(Exception, String)
  nameWithType: ILogger.Warning(Exception, String)
  fullName: Grpc.Core.Logging.ILogger.Warning(System.Exception, System.String)
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Warning(System.Exception,System.String)
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Grpc.Core.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Warning(System.Exception,System.String)
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Grpc.Core.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.ILogger.Warning(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.ILogger.Warning(System.String,System.Object[])
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Warning(String, Object[])
  nameWithType: ILogger.Warning(String, Object[])
  fullName: Grpc.Core.Logging.ILogger.Warning(System.String, System.Object[])
  nameWithType.vb: ILogger.Warning(String, Object())
  fullName.vb: Grpc.Core.Logging.ILogger.Warning(System.String, System.Object())
  name.vb: Warning(String, Object())
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Warning(System.String,System.Object[])
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Grpc.Core.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Warning(System.String,System.Object[])
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Grpc.Core.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
