### YamlMime:ManagedReference
items:
- uid: Grpc.Core.SerializationContext
  commentId: T:Grpc.Core.SerializationContext
  id: SerializationContext
  parent: Grpc.Core
  children:
  - Grpc.Core.SerializationContext.Complete
  - Grpc.Core.SerializationContext.Complete(System.Byte[])
  - Grpc.Core.SerializationContext.GetBufferWriter
  - Grpc.Core.SerializationContext.SetPayloadLength(System.Int32)
  langs:
  - csharp
  - vb
  name: SerializationContext
  nameWithType: SerializationContext
  fullName: Grpc.Core.SerializationContext
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/SerializationContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: SerializationContext
    path: src/csharp/Grpc.Core.Api/SerializationContext.cs
    startLine: 26
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nProvides storage for payload when serializing a message.\n"
  example: []
  syntax:
    content: public abstract class SerializationContext
    content.vb: Public MustInherit Class SerializationContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Grpc.Core.SerializationContext.Complete(System.Byte[])
  commentId: M:Grpc.Core.SerializationContext.Complete(System.Byte[])
  id: Complete(System.Byte[])
  parent: Grpc.Core.SerializationContext
  langs:
  - csharp
  - vb
  name: Complete(Byte[])
  nameWithType: SerializationContext.Complete(Byte[])
  fullName: Grpc.Core.SerializationContext.Complete(System.Byte[])
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/SerializationContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: Complete
    path: src/csharp/Grpc.Core.Api/SerializationContext.cs
    startLine: 34
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nUse the byte array as serialized form of current message and mark serialization process as complete.\n<code>Complete(byte[])</code> can only be called once. By calling this method the caller gives up the ownership of the\npayload which must not be accessed afterwards.\n"
  example: []
  syntax:
    content: public virtual void Complete(byte[] payload)
    parameters:
    - id: payload
      type: System.Byte[]
      description: the serialized form of current message
    content.vb: Public Overridable Sub Complete(payload As Byte())
  overload: Grpc.Core.SerializationContext.Complete*
  nameWithType.vb: SerializationContext.Complete(Byte())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Grpc.Core.SerializationContext.Complete(System.Byte())
  name.vb: Complete(Byte())
- uid: Grpc.Core.SerializationContext.GetBufferWriter
  commentId: M:Grpc.Core.SerializationContext.GetBufferWriter
  id: GetBufferWriter
  parent: Grpc.Core.SerializationContext
  langs:
  - csharp
  - vb
  name: GetBufferWriter()
  nameWithType: SerializationContext.GetBufferWriter()
  fullName: Grpc.Core.SerializationContext.GetBufferWriter()
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/SerializationContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: GetBufferWriter
    path: src/csharp/Grpc.Core.Api/SerializationContext.cs
    startLine: 43
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nGets buffer writer that can be used to write the serialized data. Once serialization is finished,\n<code>Complete()</code> needs to be called.\n"
  example: []
  syntax:
    content: public virtual IBufferWriter<byte> GetBufferWriter()
    return:
      type: IBufferWriter{System.Byte}
    content.vb: Public Overridable Function GetBufferWriter As IBufferWriter(Of Byte)
  overload: Grpc.Core.SerializationContext.GetBufferWriter*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Grpc.Core.SerializationContext.SetPayloadLength(System.Int32)
  commentId: M:Grpc.Core.SerializationContext.SetPayloadLength(System.Int32)
  id: SetPayloadLength(System.Int32)
  parent: Grpc.Core.SerializationContext
  langs:
  - csharp
  - vb
  name: SetPayloadLength(Int32)
  nameWithType: SerializationContext.SetPayloadLength(Int32)
  fullName: Grpc.Core.SerializationContext.SetPayloadLength(System.Int32)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/SerializationContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: SetPayloadLength
    path: src/csharp/Grpc.Core.Api/SerializationContext.cs
    startLine: 56
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nSets the payload length when writing serialized data into a buffer writer. If the serializer knows the full payload\nlength in advance, providing that information before obtaining the buffer writer using <code>GetBufferWriter()</code> can improve\nserialization efficiency by avoiding copies. The provided payload length must be the same as the data written to the writer.\nCalling this method is optional. If the payload length is not set then the length is calculated using the data written to\nthe buffer writer when <code>Complete()</code> is called.\n"
  example: []
  syntax:
    content: public virtual void SetPayloadLength(int payloadLength)
    parameters:
    - id: payloadLength
      type: System.Int32
      description: The total length of the payload in bytes.
    content.vb: Public Overridable Sub SetPayloadLength(payloadLength As Integer)
  overload: Grpc.Core.SerializationContext.SetPayloadLength*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Grpc.Core.SerializationContext.Complete
  commentId: M:Grpc.Core.SerializationContext.Complete
  id: Complete
  parent: Grpc.Core.SerializationContext
  langs:
  - csharp
  - vb
  name: Complete()
  nameWithType: SerializationContext.Complete()
  fullName: Grpc.Core.SerializationContext.Complete()
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/SerializationContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: Complete
    path: src/csharp/Grpc.Core.Api/SerializationContext.cs
    startLine: 63
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nComplete the payload written to the buffer writer. <code>Complete()</code> can only be called once.\n"
  example: []
  syntax:
    content: public virtual void Complete()
    content.vb: Public Overridable Sub Complete
  overload: Grpc.Core.SerializationContext.Complete*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Grpc.Core
  commentId: N:Grpc.Core
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.SerializationContext.Complete*
  commentId: Overload:Grpc.Core.SerializationContext.Complete
  name: Complete
  nameWithType: SerializationContext.Complete
  fullName: Grpc.Core.SerializationContext.Complete
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Grpc.Core.SerializationContext.GetBufferWriter*
  commentId: Overload:Grpc.Core.SerializationContext.GetBufferWriter
  name: GetBufferWriter
  nameWithType: SerializationContext.GetBufferWriter
  fullName: Grpc.Core.SerializationContext.GetBufferWriter
- uid: IBufferWriter{System.Byte}
  commentId: '!:IBufferWriter{System.Byte}'
  definition: IBufferWriter`1
  name: IBufferWriter<Byte>
  nameWithType: IBufferWriter<Byte>
  fullName: IBufferWriter<System.Byte>
  nameWithType.vb: IBufferWriter(Of Byte)
  fullName.vb: IBufferWriter(Of System.Byte)
  name.vb: IBufferWriter(Of Byte)
  spec.csharp:
  - uid: IBufferWriter`1
    name: IBufferWriter
    nameWithType: IBufferWriter
    fullName: IBufferWriter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IBufferWriter`1
    name: IBufferWriter
    nameWithType: IBufferWriter
    fullName: IBufferWriter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IBufferWriter`1
  commentId: '!:IBufferWriter`1'
  isExternal: true
  name: IBufferWriter<>
  nameWithType: IBufferWriter<>
  fullName: IBufferWriter<>
  nameWithType.vb: IBufferWriter(Of )
  fullName.vb: IBufferWriter(Of )
  name.vb: IBufferWriter(Of )
  spec.csharp:
  - uid: IBufferWriter`1
    name: IBufferWriter
    nameWithType: IBufferWriter
    fullName: IBufferWriter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IBufferWriter`1
    name: IBufferWriter
    nameWithType: IBufferWriter
    fullName: IBufferWriter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.SerializationContext.SetPayloadLength*
  commentId: Overload:Grpc.Core.SerializationContext.SetPayloadLength
  name: SetPayloadLength
  nameWithType: SerializationContext.SetPayloadLength
  fullName: Grpc.Core.SerializationContext.SetPayloadLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
