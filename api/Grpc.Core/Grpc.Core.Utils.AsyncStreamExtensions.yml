### YamlMime:ManagedReference
items:
- uid: Grpc.Core.Utils.AsyncStreamExtensions
  commentId: T:Grpc.Core.Utils.AsyncStreamExtensions
  id: AsyncStreamExtensions
  parent: Grpc.Core.Utils
  children:
  - Grpc.Core.Utils.AsyncStreamExtensions.ForEachAsync``1(Grpc.Core.IAsyncStreamReader{``0},System.Func{``0,System.Threading.Tasks.Task})
  - Grpc.Core.Utils.AsyncStreamExtensions.ToListAsync``1(Grpc.Core.IAsyncStreamReader{``0})
  - Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync``1(Grpc.Core.IClientStreamWriter{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean)
  - Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync``1(Grpc.Core.IServerStreamWriter{``0},System.Collections.Generic.IEnumerable{``0})
  langs:
  - csharp
  - vb
  name: AsyncStreamExtensions
  nameWithType: AsyncStreamExtensions
  fullName: Grpc.Core.Utils.AsyncStreamExtensions
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core/Utils/AsyncStreamExtensions.cs
      branch: v1.2.x
      repo: https://github.com/grpc/grpc
    id: AsyncStreamExtensions
    path: src/csharp/Grpc.Core/Utils/AsyncStreamExtensions.cs
    startLine: 42
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Utils
  summary: "\nExtension methods that simplify work with gRPC streaming calls.\n"
  example: []
  syntax:
    content: public static class AsyncStreamExtensions
    content.vb: Public Module AsyncStreamExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Grpc.Core.Utils.AsyncStreamExtensions.ForEachAsync``1(Grpc.Core.IAsyncStreamReader{``0},System.Func{``0,System.Threading.Tasks.Task})
  commentId: M:Grpc.Core.Utils.AsyncStreamExtensions.ForEachAsync``1(Grpc.Core.IAsyncStreamReader{``0},System.Func{``0,System.Threading.Tasks.Task})
  id: ForEachAsync``1(Grpc.Core.IAsyncStreamReader{``0},System.Func{``0,System.Threading.Tasks.Task})
  isExtensionMethod: true
  parent: Grpc.Core.Utils.AsyncStreamExtensions
  langs:
  - csharp
  - vb
  name: ForEachAsync<T>(IAsyncStreamReader<T>, Func<T, Task>)
  nameWithType: AsyncStreamExtensions.ForEachAsync<T>(IAsyncStreamReader<T>, Func<T, Task>)
  fullName: Grpc.Core.Utils.AsyncStreamExtensions.ForEachAsync<T>(Grpc.Core.IAsyncStreamReader<T>, System.Func<T, System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Utils/AsyncStreamExtensions.cs
      branch: v1.2.x
      repo: https://github.com/grpc/grpc
    id: ForEachAsync
    path: src/csharp/Grpc.Core/Utils/AsyncStreamExtensions.cs
    startLine: 47
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Utils
  summary: "\nReads the entire stream and executes an async action for each element.\n"
  example: []
  syntax:
    content: 'public static Task ForEachAsync<T>(this IAsyncStreamReader<T> streamReader, Func<T, Task> asyncAction)where T : class'
    parameters:
    - id: streamReader
      type: Grpc.Core.IAsyncStreamReader{{T}}
    - id: asyncAction
      type: System.Func{{T},System.Threading.Tasks.Task}
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ForEachAsync(Of T As Class)(streamReader As IAsyncStreamReader(Of T), asyncAction As Func(Of T, Task)) As Task
  overload: Grpc.Core.Utils.AsyncStreamExtensions.ForEachAsync*
  nameWithType.vb: AsyncStreamExtensions.ForEachAsync(Of T)(IAsyncStreamReader(Of T), Func(Of T, Task))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Grpc.Core.Utils.AsyncStreamExtensions.ForEachAsync(Of T)(Grpc.Core.IAsyncStreamReader(Of T), System.Func(Of T, System.Threading.Tasks.Task))
  name.vb: ForEachAsync(Of T)(IAsyncStreamReader(Of T), Func(Of T, Task))
- uid: Grpc.Core.Utils.AsyncStreamExtensions.ToListAsync``1(Grpc.Core.IAsyncStreamReader{``0})
  commentId: M:Grpc.Core.Utils.AsyncStreamExtensions.ToListAsync``1(Grpc.Core.IAsyncStreamReader{``0})
  id: ToListAsync``1(Grpc.Core.IAsyncStreamReader{``0})
  isExtensionMethod: true
  parent: Grpc.Core.Utils.AsyncStreamExtensions
  langs:
  - csharp
  - vb
  name: ToListAsync<T>(IAsyncStreamReader<T>)
  nameWithType: AsyncStreamExtensions.ToListAsync<T>(IAsyncStreamReader<T>)
  fullName: Grpc.Core.Utils.AsyncStreamExtensions.ToListAsync<T>(Grpc.Core.IAsyncStreamReader<T>)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Utils/AsyncStreamExtensions.cs
      branch: v1.2.x
      repo: https://github.com/grpc/grpc
    id: ToListAsync
    path: src/csharp/Grpc.Core/Utils/AsyncStreamExtensions.cs
    startLine: 59
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Utils
  summary: "\nReads the entire stream and creates a list containing all the elements read.\n"
  example: []
  syntax:
    content: 'public static Task<List<T>> ToListAsync<T>(this IAsyncStreamReader<T> streamReader)where T : class'
    parameters:
    - id: streamReader
      type: Grpc.Core.IAsyncStreamReader{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{{T}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToListAsync(Of T As Class)(streamReader As IAsyncStreamReader(Of T)) As Task(Of List(Of T))
  overload: Grpc.Core.Utils.AsyncStreamExtensions.ToListAsync*
  nameWithType.vb: AsyncStreamExtensions.ToListAsync(Of T)(IAsyncStreamReader(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Grpc.Core.Utils.AsyncStreamExtensions.ToListAsync(Of T)(Grpc.Core.IAsyncStreamReader(Of T))
  name.vb: ToListAsync(Of T)(IAsyncStreamReader(Of T))
- uid: Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync``1(Grpc.Core.IClientStreamWriter{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean)
  commentId: M:Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync``1(Grpc.Core.IClientStreamWriter{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean)
  id: WriteAllAsync``1(Grpc.Core.IClientStreamWriter{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean)
  isExtensionMethod: true
  parent: Grpc.Core.Utils.AsyncStreamExtensions
  langs:
  - csharp
  - vb
  name: WriteAllAsync<T>(IClientStreamWriter<T>, IEnumerable<T>, Boolean)
  nameWithType: AsyncStreamExtensions.WriteAllAsync<T>(IClientStreamWriter<T>, IEnumerable<T>, Boolean)
  fullName: Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync<T>(Grpc.Core.IClientStreamWriter<T>, System.Collections.Generic.IEnumerable<T>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Utils/AsyncStreamExtensions.cs
      branch: v1.2.x
      repo: https://github.com/grpc/grpc
    id: WriteAllAsync
    path: src/csharp/Grpc.Core/Utils/AsyncStreamExtensions.cs
    startLine: 74
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Utils
  summary: "\nWrites all elements from given enumerable to the stream.\nCompletes the stream afterwards unless close = false.\n"
  example: []
  syntax:
    content: 'public static Task WriteAllAsync<T>(this IClientStreamWriter<T> streamWriter, IEnumerable<T> elements, bool complete = true)where T : class'
    parameters:
    - id: streamWriter
      type: Grpc.Core.IClientStreamWriter{{T}}
    - id: elements
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: complete
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WriteAllAsync(Of T As Class)(streamWriter As IClientStreamWriter(Of T), elements As IEnumerable(Of T), complete As Boolean = True) As Task
  overload: Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync*
  nameWithType.vb: AsyncStreamExtensions.WriteAllAsync(Of T)(IClientStreamWriter(Of T), IEnumerable(Of T), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync(Of T)(Grpc.Core.IClientStreamWriter(Of T), System.Collections.Generic.IEnumerable(Of T), System.Boolean)
  name.vb: WriteAllAsync(Of T)(IClientStreamWriter(Of T), IEnumerable(Of T), Boolean)
- uid: Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync``1(Grpc.Core.IServerStreamWriter{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync``1(Grpc.Core.IServerStreamWriter{``0},System.Collections.Generic.IEnumerable{``0})
  id: WriteAllAsync``1(Grpc.Core.IServerStreamWriter{``0},System.Collections.Generic.IEnumerable{``0})
  isExtensionMethod: true
  parent: Grpc.Core.Utils.AsyncStreamExtensions
  langs:
  - csharp
  - vb
  name: WriteAllAsync<T>(IServerStreamWriter<T>, IEnumerable<T>)
  nameWithType: AsyncStreamExtensions.WriteAllAsync<T>(IServerStreamWriter<T>, IEnumerable<T>)
  fullName: Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync<T>(Grpc.Core.IServerStreamWriter<T>, System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Utils/AsyncStreamExtensions.cs
      branch: v1.2.x
      repo: https://github.com/grpc/grpc
    id: WriteAllAsync
    path: src/csharp/Grpc.Core/Utils/AsyncStreamExtensions.cs
    startLine: 90
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Utils
  summary: "\nWrites all elements from given enumerable to the stream.\n"
  example: []
  syntax:
    content: 'public static Task WriteAllAsync<T>(this IServerStreamWriter<T> streamWriter, IEnumerable<T> elements)where T : class'
    parameters:
    - id: streamWriter
      type: Grpc.Core.IServerStreamWriter{{T}}
    - id: elements
      type: System.Collections.Generic.IEnumerable{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WriteAllAsync(Of T As Class)(streamWriter As IServerStreamWriter(Of T), elements As IEnumerable(Of T)) As Task
  overload: Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync*
  nameWithType.vb: AsyncStreamExtensions.WriteAllAsync(Of T)(IServerStreamWriter(Of T), IEnumerable(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync(Of T)(Grpc.Core.IServerStreamWriter(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: WriteAllAsync(Of T)(IServerStreamWriter(Of T), IEnumerable(Of T))
references:
- uid: Grpc.Core.Utils
  commentId: N:Grpc.Core.Utils
  isExternal: false
  name: Grpc.Core.Utils
  nameWithType: Grpc.Core.Utils
  fullName: Grpc.Core.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.Utils.AsyncStreamExtensions.ForEachAsync*
  commentId: Overload:Grpc.Core.Utils.AsyncStreamExtensions.ForEachAsync
  isExternal: false
  name: ForEachAsync
  nameWithType: AsyncStreamExtensions.ForEachAsync
  fullName: Grpc.Core.Utils.AsyncStreamExtensions.ForEachAsync
- uid: Grpc.Core.IAsyncStreamReader{{T}}
  commentId: T:Grpc.Core.IAsyncStreamReader{``0}
  parent: Grpc.Core
  definition: Grpc.Core.IAsyncStreamReader`1
  name: IAsyncStreamReader<T>
  nameWithType: IAsyncStreamReader<T>
  fullName: Grpc.Core.IAsyncStreamReader<T>
  nameWithType.vb: IAsyncStreamReader(Of T)
  fullName.vb: Grpc.Core.IAsyncStreamReader(Of T)
  name.vb: IAsyncStreamReader(Of T)
  spec.csharp:
  - uid: Grpc.Core.IAsyncStreamReader`1
    name: IAsyncStreamReader
    nameWithType: IAsyncStreamReader
    fullName: Grpc.Core.IAsyncStreamReader
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.IAsyncStreamReader`1
    name: IAsyncStreamReader
    nameWithType: IAsyncStreamReader
    fullName: Grpc.Core.IAsyncStreamReader
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{T},System.Threading.Tasks.Task}
  commentId: T:System.Func{``0,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`2
  name: Func<T, Task>
  nameWithType: Func<T, Task>
  fullName: System.Func<T, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of T, Task)
  fullName.vb: System.Func(Of T, System.Threading.Tasks.Task)
  name.vb: Func(Of T, Task)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Grpc.Core.IAsyncStreamReader`1
  commentId: T:Grpc.Core.IAsyncStreamReader`1
  isExternal: false
  name: IAsyncStreamReader<T>
  nameWithType: IAsyncStreamReader<T>
  fullName: Grpc.Core.IAsyncStreamReader<T>
  nameWithType.vb: IAsyncStreamReader(Of T)
  fullName.vb: Grpc.Core.IAsyncStreamReader(Of T)
  name.vb: IAsyncStreamReader(Of T)
  spec.csharp:
  - uid: Grpc.Core.IAsyncStreamReader`1
    name: IAsyncStreamReader
    nameWithType: IAsyncStreamReader
    fullName: Grpc.Core.IAsyncStreamReader
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.IAsyncStreamReader`1
    name: IAsyncStreamReader
    nameWithType: IAsyncStreamReader
    fullName: Grpc.Core.IAsyncStreamReader
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: false
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Grpc.Core.Utils.AsyncStreamExtensions.ToListAsync*
  commentId: Overload:Grpc.Core.Utils.AsyncStreamExtensions.ToListAsync
  isExternal: false
  name: ToListAsync
  nameWithType: AsyncStreamExtensions.ToListAsync
  fullName: Grpc.Core.Utils.AsyncStreamExtensions.ToListAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{{T}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<T>>
  nameWithType: Task<List<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<T>>
  nameWithType.vb: Task(Of List(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of T))
  name.vb: Task(Of List(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync*
  commentId: Overload:Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync
  isExternal: false
  name: WriteAllAsync
  nameWithType: AsyncStreamExtensions.WriteAllAsync
  fullName: Grpc.Core.Utils.AsyncStreamExtensions.WriteAllAsync
- uid: Grpc.Core.IClientStreamWriter{{T}}
  commentId: T:Grpc.Core.IClientStreamWriter{``0}
  parent: Grpc.Core
  definition: Grpc.Core.IClientStreamWriter`1
  name: IClientStreamWriter<T>
  nameWithType: IClientStreamWriter<T>
  fullName: Grpc.Core.IClientStreamWriter<T>
  nameWithType.vb: IClientStreamWriter(Of T)
  fullName.vb: Grpc.Core.IClientStreamWriter(Of T)
  name.vb: IClientStreamWriter(Of T)
  spec.csharp:
  - uid: Grpc.Core.IClientStreamWriter`1
    name: IClientStreamWriter
    nameWithType: IClientStreamWriter
    fullName: Grpc.Core.IClientStreamWriter
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.IClientStreamWriter`1
    name: IClientStreamWriter
    nameWithType: IClientStreamWriter
    fullName: Grpc.Core.IClientStreamWriter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Grpc.Core.IClientStreamWriter`1
  commentId: T:Grpc.Core.IClientStreamWriter`1
  isExternal: false
  name: IClientStreamWriter<T>
  nameWithType: IClientStreamWriter<T>
  fullName: Grpc.Core.IClientStreamWriter<T>
  nameWithType.vb: IClientStreamWriter(Of T)
  fullName.vb: Grpc.Core.IClientStreamWriter(Of T)
  name.vb: IClientStreamWriter(Of T)
  spec.csharp:
  - uid: Grpc.Core.IClientStreamWriter`1
    name: IClientStreamWriter
    nameWithType: IClientStreamWriter
    fullName: Grpc.Core.IClientStreamWriter
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.IClientStreamWriter`1
    name: IClientStreamWriter
    nameWithType: IClientStreamWriter
    fullName: Grpc.Core.IClientStreamWriter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Grpc.Core.IServerStreamWriter{{T}}
  commentId: T:Grpc.Core.IServerStreamWriter{``0}
  parent: Grpc.Core
  definition: Grpc.Core.IServerStreamWriter`1
  name: IServerStreamWriter<T>
  nameWithType: IServerStreamWriter<T>
  fullName: Grpc.Core.IServerStreamWriter<T>
  nameWithType.vb: IServerStreamWriter(Of T)
  fullName.vb: Grpc.Core.IServerStreamWriter(Of T)
  name.vb: IServerStreamWriter(Of T)
  spec.csharp:
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.IServerStreamWriter`1
  commentId: T:Grpc.Core.IServerStreamWriter`1
  isExternal: false
  name: IServerStreamWriter<T>
  nameWithType: IServerStreamWriter<T>
  fullName: Grpc.Core.IServerStreamWriter<T>
  nameWithType.vb: IServerStreamWriter(Of T)
  fullName.vb: Grpc.Core.IServerStreamWriter(Of T)
  name.vb: IServerStreamWriter(Of T)
  spec.csharp:
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
