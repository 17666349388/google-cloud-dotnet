### YamlMime:ManagedReference
items:
- uid: Grpc.Core.CallInvocationDetails`2
  commentId: T:Grpc.Core.CallInvocationDetails`2
  id: CallInvocationDetails`2
  parent: Grpc.Core
  children:
  - Grpc.Core.CallInvocationDetails`2.#ctor(Grpc.Core.Channel,Grpc.Core.Method{`0,`1},Grpc.Core.CallOptions)
  - Grpc.Core.CallInvocationDetails`2.#ctor(Grpc.Core.Channel,Grpc.Core.Method{`0,`1},System.String,Grpc.Core.CallOptions)
  - Grpc.Core.CallInvocationDetails`2.#ctor(Grpc.Core.Channel,System.String,System.String,Grpc.Core.Marshaller{`0},Grpc.Core.Marshaller{`1},Grpc.Core.CallOptions)
  - Grpc.Core.CallInvocationDetails`2.Channel
  - Grpc.Core.CallInvocationDetails`2.Host
  - Grpc.Core.CallInvocationDetails`2.Method
  - Grpc.Core.CallInvocationDetails`2.Options
  - Grpc.Core.CallInvocationDetails`2.RequestMarshaller
  - Grpc.Core.CallInvocationDetails`2.ResponseMarshaller
  - Grpc.Core.CallInvocationDetails`2.WithOptions(Grpc.Core.CallOptions)
  langs:
  - csharp
  - vb
  name: CallInvocationDetails<TRequest, TResponse>
  nameWithType: CallInvocationDetails<TRequest, TResponse>
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>
  type: Struct
  source:
    remote:
      path: src/csharp/Grpc.Core/CallInvocationDetails.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: CallInvocationDetails
    path: src/csharp/Grpc.Core/CallInvocationDetails.cs
    startLine: 44
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nDetails about a client-side call to be invoked.\n"
  example: []
  syntax:
    content: public struct CallInvocationDetails<TRequest, TResponse>
    typeParameters:
    - id: TRequest
      description: Request message type for the call.
    - id: TResponse
      description: Response message type for the call.
    content.vb: Public Structure CallInvocationDetails(Of TRequest, TResponse)
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse)
  name.vb: CallInvocationDetails(Of TRequest, TResponse)
- uid: Grpc.Core.CallInvocationDetails`2.#ctor(Grpc.Core.Channel,Grpc.Core.Method{`0,`1},Grpc.Core.CallOptions)
  commentId: M:Grpc.Core.CallInvocationDetails`2.#ctor(Grpc.Core.Channel,Grpc.Core.Method{`0,`1},Grpc.Core.CallOptions)
  id: '#ctor(Grpc.Core.Channel,Grpc.Core.Method{`0,`1},Grpc.Core.CallOptions)'
  parent: Grpc.Core.CallInvocationDetails`2
  langs:
  - csharp
  - vb
  name: CallInvocationDetails(Channel, Method<TRequest, TResponse>, CallOptions)
  nameWithType: CallInvocationDetails<TRequest, TResponse>.CallInvocationDetails(Channel, Method<TRequest, TResponse>, CallOptions)
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.CallInvocationDetails(Grpc.Core.Channel, Grpc.Core.Method<TRequest, TResponse>, Grpc.Core.CallOptions)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core/CallInvocationDetails.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core/CallInvocationDetails.cs
    startLine: 59
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nInitializes a new instance of the <xref href=\"Grpc.Core.CallInvocationDetails%602\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public CallInvocationDetails(Channel channel, Method<TRequest, TResponse> method, CallOptions options)
    parameters:
    - id: channel
      type: Grpc.Core.Channel
      description: Channel to use for this call.
    - id: method
      type: Grpc.Core.Method{{TRequest},{TResponse}}
      description: Method to call.
    - id: options
      type: Grpc.Core.CallOptions
      description: Call options.
    content.vb: Public Sub New(channel As Channel, method As Method(Of TRequest, TResponse), options As CallOptions)
  overload: Grpc.Core.CallInvocationDetails`2.#ctor*
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).CallInvocationDetails(Channel, Method(Of TRequest, TResponse), CallOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).CallInvocationDetails(Grpc.Core.Channel, Grpc.Core.Method(Of TRequest, TResponse), Grpc.Core.CallOptions)
  name.vb: CallInvocationDetails(Channel, Method(Of TRequest, TResponse), CallOptions)
- uid: Grpc.Core.CallInvocationDetails`2.#ctor(Grpc.Core.Channel,Grpc.Core.Method{`0,`1},System.String,Grpc.Core.CallOptions)
  commentId: M:Grpc.Core.CallInvocationDetails`2.#ctor(Grpc.Core.Channel,Grpc.Core.Method{`0,`1},System.String,Grpc.Core.CallOptions)
  id: '#ctor(Grpc.Core.Channel,Grpc.Core.Method{`0,`1},System.String,Grpc.Core.CallOptions)'
  parent: Grpc.Core.CallInvocationDetails`2
  langs:
  - csharp
  - vb
  name: CallInvocationDetails(Channel, Method<TRequest, TResponse>, String, CallOptions)
  nameWithType: CallInvocationDetails<TRequest, TResponse>.CallInvocationDetails(Channel, Method<TRequest, TResponse>, String, CallOptions)
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.CallInvocationDetails(Grpc.Core.Channel, Grpc.Core.Method<TRequest, TResponse>, System.String, Grpc.Core.CallOptions)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core/CallInvocationDetails.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core/CallInvocationDetails.cs
    startLine: 71
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nInitializes a new instance of the <xref href=\"Grpc.Core.CallInvocationDetails%602\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public CallInvocationDetails(Channel channel, Method<TRequest, TResponse> method, string host, CallOptions options)
    parameters:
    - id: channel
      type: Grpc.Core.Channel
      description: Channel to use for this call.
    - id: method
      type: Grpc.Core.Method{{TRequest},{TResponse}}
      description: Method to call.
    - id: host
      type: System.String
      description: Host that contains the method. if <code>null</code>, default host will be used.
    - id: options
      type: Grpc.Core.CallOptions
      description: Call options.
    content.vb: Public Sub New(channel As Channel, method As Method(Of TRequest, TResponse), host As String, options As CallOptions)
  overload: Grpc.Core.CallInvocationDetails`2.#ctor*
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).CallInvocationDetails(Channel, Method(Of TRequest, TResponse), String, CallOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).CallInvocationDetails(Grpc.Core.Channel, Grpc.Core.Method(Of TRequest, TResponse), System.String, Grpc.Core.CallOptions)
  name.vb: CallInvocationDetails(Channel, Method(Of TRequest, TResponse), String, CallOptions)
- uid: Grpc.Core.CallInvocationDetails`2.#ctor(Grpc.Core.Channel,System.String,System.String,Grpc.Core.Marshaller{`0},Grpc.Core.Marshaller{`1},Grpc.Core.CallOptions)
  commentId: M:Grpc.Core.CallInvocationDetails`2.#ctor(Grpc.Core.Channel,System.String,System.String,Grpc.Core.Marshaller{`0},Grpc.Core.Marshaller{`1},Grpc.Core.CallOptions)
  id: '#ctor(Grpc.Core.Channel,System.String,System.String,Grpc.Core.Marshaller{`0},Grpc.Core.Marshaller{`1},Grpc.Core.CallOptions)'
  parent: Grpc.Core.CallInvocationDetails`2
  langs:
  - csharp
  - vb
  name: CallInvocationDetails(Channel, String, String, Marshaller<TRequest>, Marshaller<TResponse>, CallOptions)
  nameWithType: CallInvocationDetails<TRequest, TResponse>.CallInvocationDetails(Channel, String, String, Marshaller<TRequest>, Marshaller<TResponse>, CallOptions)
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.CallInvocationDetails(Grpc.Core.Channel, System.String, System.String, Grpc.Core.Marshaller<TRequest>, Grpc.Core.Marshaller<TResponse>, Grpc.Core.CallOptions)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core/CallInvocationDetails.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core/CallInvocationDetails.cs
    startLine: 85
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nInitializes a new instance of the <xref href=\"Grpc.Core.CallInvocationDetails%602\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public CallInvocationDetails(Channel channel, string method, string host, Marshaller<TRequest> requestMarshaller, Marshaller<TResponse> responseMarshaller, CallOptions options)
    parameters:
    - id: channel
      type: Grpc.Core.Channel
      description: Channel to use for this call.
    - id: method
      type: System.String
      description: Qualified method name.
    - id: host
      type: System.String
      description: Host that contains the method.
    - id: requestMarshaller
      type: Grpc.Core.Marshaller{{TRequest}}
      description: Request marshaller.
    - id: responseMarshaller
      type: Grpc.Core.Marshaller{{TResponse}}
      description: Response marshaller.
    - id: options
      type: Grpc.Core.CallOptions
      description: Call options.
    content.vb: Public Sub New(channel As Channel, method As String, host As String, requestMarshaller As Marshaller(Of TRequest), responseMarshaller As Marshaller(Of TResponse), options As CallOptions)
  overload: Grpc.Core.CallInvocationDetails`2.#ctor*
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).CallInvocationDetails(Channel, String, String, Marshaller(Of TRequest), Marshaller(Of TResponse), CallOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).CallInvocationDetails(Grpc.Core.Channel, System.String, System.String, Grpc.Core.Marshaller(Of TRequest), Grpc.Core.Marshaller(Of TResponse), Grpc.Core.CallOptions)
  name.vb: CallInvocationDetails(Channel, String, String, Marshaller(Of TRequest), Marshaller(Of TResponse), CallOptions)
- uid: Grpc.Core.CallInvocationDetails`2.Channel
  commentId: P:Grpc.Core.CallInvocationDetails`2.Channel
  id: Channel
  parent: Grpc.Core.CallInvocationDetails`2
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: CallInvocationDetails<TRequest, TResponse>.Channel
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.Channel
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/CallInvocationDetails.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: Channel
    path: src/csharp/Grpc.Core/CallInvocationDetails.cs
    startLine: 98
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGet channel associated with this call.\n"
  example: []
  syntax:
    content: public Channel Channel { get; }
    parameters: []
    return:
      type: Grpc.Core.Channel
    content.vb: Public ReadOnly Property Channel As Channel
  overload: Grpc.Core.CallInvocationDetails`2.Channel*
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).Channel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).Channel
- uid: Grpc.Core.CallInvocationDetails`2.Method
  commentId: P:Grpc.Core.CallInvocationDetails`2.Method
  id: Method
  parent: Grpc.Core.CallInvocationDetails`2
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: CallInvocationDetails<TRequest, TResponse>.Method
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.Method
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/CallInvocationDetails.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: Method
    path: src/csharp/Grpc.Core/CallInvocationDetails.cs
    startLine: 109
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGets name of method to be called.\n"
  example: []
  syntax:
    content: public string Method { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Method As String
  overload: Grpc.Core.CallInvocationDetails`2.Method*
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).Method
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).Method
- uid: Grpc.Core.CallInvocationDetails`2.Host
  commentId: P:Grpc.Core.CallInvocationDetails`2.Host
  id: Host
  parent: Grpc.Core.CallInvocationDetails`2
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: CallInvocationDetails<TRequest, TResponse>.Host
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.Host
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/CallInvocationDetails.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: Host
    path: src/csharp/Grpc.Core/CallInvocationDetails.cs
    startLine: 120
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGet name of host.\n"
  example: []
  syntax:
    content: public string Host { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Host As String
  overload: Grpc.Core.CallInvocationDetails`2.Host*
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).Host
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).Host
- uid: Grpc.Core.CallInvocationDetails`2.RequestMarshaller
  commentId: P:Grpc.Core.CallInvocationDetails`2.RequestMarshaller
  id: RequestMarshaller
  parent: Grpc.Core.CallInvocationDetails`2
  langs:
  - csharp
  - vb
  name: RequestMarshaller
  nameWithType: CallInvocationDetails<TRequest, TResponse>.RequestMarshaller
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.RequestMarshaller
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/CallInvocationDetails.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: RequestMarshaller
    path: src/csharp/Grpc.Core/CallInvocationDetails.cs
    startLine: 131
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGets marshaller used to serialize requests.\n"
  example: []
  syntax:
    content: public Marshaller<TRequest> RequestMarshaller { get; }
    parameters: []
    return:
      type: Grpc.Core.Marshaller{{TRequest}}
    content.vb: Public ReadOnly Property RequestMarshaller As Marshaller(Of TRequest)
  overload: Grpc.Core.CallInvocationDetails`2.RequestMarshaller*
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).RequestMarshaller
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).RequestMarshaller
- uid: Grpc.Core.CallInvocationDetails`2.ResponseMarshaller
  commentId: P:Grpc.Core.CallInvocationDetails`2.ResponseMarshaller
  id: ResponseMarshaller
  parent: Grpc.Core.CallInvocationDetails`2
  langs:
  - csharp
  - vb
  name: ResponseMarshaller
  nameWithType: CallInvocationDetails<TRequest, TResponse>.ResponseMarshaller
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.ResponseMarshaller
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/CallInvocationDetails.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: ResponseMarshaller
    path: src/csharp/Grpc.Core/CallInvocationDetails.cs
    startLine: 142
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGets marshaller used to deserialized responses.\n"
  example: []
  syntax:
    content: public Marshaller<TResponse> ResponseMarshaller { get; }
    parameters: []
    return:
      type: Grpc.Core.Marshaller{{TResponse}}
    content.vb: Public ReadOnly Property ResponseMarshaller As Marshaller(Of TResponse)
  overload: Grpc.Core.CallInvocationDetails`2.ResponseMarshaller*
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).ResponseMarshaller
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).ResponseMarshaller
- uid: Grpc.Core.CallInvocationDetails`2.Options
  commentId: P:Grpc.Core.CallInvocationDetails`2.Options
  id: Options
  parent: Grpc.Core.CallInvocationDetails`2
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: CallInvocationDetails<TRequest, TResponse>.Options
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.Options
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/CallInvocationDetails.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: Options
    path: src/csharp/Grpc.Core/CallInvocationDetails.cs
    startLine: 153
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGets the call options.\n"
  example: []
  syntax:
    content: public CallOptions Options { get; }
    parameters: []
    return:
      type: Grpc.Core.CallOptions
    content.vb: Public ReadOnly Property Options As CallOptions
  overload: Grpc.Core.CallInvocationDetails`2.Options*
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).Options
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).Options
- uid: Grpc.Core.CallInvocationDetails`2.WithOptions(Grpc.Core.CallOptions)
  commentId: M:Grpc.Core.CallInvocationDetails`2.WithOptions(Grpc.Core.CallOptions)
  id: WithOptions(Grpc.Core.CallOptions)
  parent: Grpc.Core.CallInvocationDetails`2
  langs:
  - csharp
  - vb
  name: WithOptions(CallOptions)
  nameWithType: CallInvocationDetails<TRequest, TResponse>.WithOptions(CallOptions)
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.WithOptions(Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/CallInvocationDetails.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: WithOptions
    path: src/csharp/Grpc.Core/CallInvocationDetails.cs
    startLine: 165
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nReturns new instance of <xref href=\"Grpc.Core.CallInvocationDetails%602\" data-throw-if-not-resolved=\"false\"></xref> with\n<code>Options</code> set to the value provided. Values of all other fields are preserved.\n"
  example: []
  syntax:
    content: public CallInvocationDetails<TRequest, TResponse> WithOptions(CallOptions options)
    parameters:
    - id: options
      type: Grpc.Core.CallOptions
    return:
      type: Grpc.Core.CallInvocationDetails`2
    content.vb: Public Function WithOptions(options As CallOptions) As CallInvocationDetails(Of TRequest, TResponse)
  overload: Grpc.Core.CallInvocationDetails`2.WithOptions*
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).WithOptions(CallOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).WithOptions(Grpc.Core.CallOptions)
references:
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: false
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.CallInvocationDetails`2
  commentId: T:Grpc.Core.CallInvocationDetails`2
  parent: Grpc.Core
  isExternal: false
  name: CallInvocationDetails<TRequest, TResponse>
  nameWithType: CallInvocationDetails<TRequest, TResponse>
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse)
  name.vb: CallInvocationDetails(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.CallInvocationDetails`2
    name: CallInvocationDetails
    nameWithType: CallInvocationDetails
    fullName: Grpc.Core.CallInvocationDetails
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.CallInvocationDetails`2
    name: CallInvocationDetails
    nameWithType: CallInvocationDetails
    fullName: Grpc.Core.CallInvocationDetails
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.CallInvocationDetails`2.#ctor*
  commentId: Overload:Grpc.Core.CallInvocationDetails`2.#ctor
  isExternal: false
  name: CallInvocationDetails
  nameWithType: CallInvocationDetails<TRequest, TResponse>.CallInvocationDetails
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.CallInvocationDetails
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).CallInvocationDetails
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).CallInvocationDetails
- uid: Grpc.Core.Channel
  commentId: T:Grpc.Core.Channel
  parent: Grpc.Core
  isExternal: false
  name: Channel
  nameWithType: Channel
  fullName: Grpc.Core.Channel
- uid: Grpc.Core.Method{{TRequest},{TResponse}}
  commentId: T:Grpc.Core.Method{`0,`1}
  parent: Grpc.Core
  definition: Grpc.Core.Method`2
  name: Method<TRequest, TResponse>
  nameWithType: Method<TRequest, TResponse>
  fullName: Grpc.Core.Method<TRequest, TResponse>
  nameWithType.vb: Method(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.Method(Of TRequest, TResponse)
  name.vb: Method(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.Method`2
    name: Method
    nameWithType: Method
    fullName: Grpc.Core.Method
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.Method`2
    name: Method
    nameWithType: Method
    fullName: Grpc.Core.Method
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.CallOptions
  commentId: T:Grpc.Core.CallOptions
  parent: Grpc.Core
  isExternal: false
  name: CallOptions
  nameWithType: CallOptions
  fullName: Grpc.Core.CallOptions
- uid: Grpc.Core.Method`2
  commentId: T:Grpc.Core.Method`2
  isExternal: false
  name: Method<TRequest, TResponse>
  nameWithType: Method<TRequest, TResponse>
  fullName: Grpc.Core.Method<TRequest, TResponse>
  nameWithType.vb: Method(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.Method(Of TRequest, TResponse)
  name.vb: Method(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.Method`2
    name: Method
    nameWithType: Method
    fullName: Grpc.Core.Method
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.Method`2
    name: Method
    nameWithType: Method
    fullName: Grpc.Core.Method
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Grpc.Core.Marshaller{{TRequest}}
  commentId: T:Grpc.Core.Marshaller{`0}
  parent: Grpc.Core
  definition: Grpc.Core.Marshaller`1
  name: Marshaller<TRequest>
  nameWithType: Marshaller<TRequest>
  fullName: Grpc.Core.Marshaller<TRequest>
  nameWithType.vb: Marshaller(Of TRequest)
  fullName.vb: Grpc.Core.Marshaller(Of TRequest)
  name.vb: Marshaller(Of TRequest)
  spec.csharp:
  - uid: Grpc.Core.Marshaller`1
    name: Marshaller
    nameWithType: Marshaller
    fullName: Grpc.Core.Marshaller
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.Marshaller`1
    name: Marshaller
    nameWithType: Marshaller
    fullName: Grpc.Core.Marshaller
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Marshaller{{TResponse}}
  commentId: T:Grpc.Core.Marshaller{`1}
  parent: Grpc.Core
  definition: Grpc.Core.Marshaller`1
  name: Marshaller<TResponse>
  nameWithType: Marshaller<TResponse>
  fullName: Grpc.Core.Marshaller<TResponse>
  nameWithType.vb: Marshaller(Of TResponse)
  fullName.vb: Grpc.Core.Marshaller(Of TResponse)
  name.vb: Marshaller(Of TResponse)
  spec.csharp:
  - uid: Grpc.Core.Marshaller`1
    name: Marshaller
    nameWithType: Marshaller
    fullName: Grpc.Core.Marshaller
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.Marshaller`1
    name: Marshaller
    nameWithType: Marshaller
    fullName: Grpc.Core.Marshaller
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Marshaller`1
  commentId: T:Grpc.Core.Marshaller`1
  isExternal: false
  name: Marshaller<T>
  nameWithType: Marshaller<T>
  fullName: Grpc.Core.Marshaller<T>
  nameWithType.vb: Marshaller(Of T)
  fullName.vb: Grpc.Core.Marshaller(Of T)
  name.vb: Marshaller(Of T)
  spec.csharp:
  - uid: Grpc.Core.Marshaller`1
    name: Marshaller
    nameWithType: Marshaller
    fullName: Grpc.Core.Marshaller
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.Marshaller`1
    name: Marshaller
    nameWithType: Marshaller
    fullName: Grpc.Core.Marshaller
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.CallInvocationDetails`2.Channel*
  commentId: Overload:Grpc.Core.CallInvocationDetails`2.Channel
  isExternal: false
  name: Channel
  nameWithType: CallInvocationDetails<TRequest, TResponse>.Channel
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.Channel
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).Channel
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).Channel
- uid: Grpc.Core.CallInvocationDetails`2.Method*
  commentId: Overload:Grpc.Core.CallInvocationDetails`2.Method
  isExternal: false
  name: Method
  nameWithType: CallInvocationDetails<TRequest, TResponse>.Method
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.Method
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).Method
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).Method
- uid: Grpc.Core.CallInvocationDetails`2.Host*
  commentId: Overload:Grpc.Core.CallInvocationDetails`2.Host
  isExternal: false
  name: Host
  nameWithType: CallInvocationDetails<TRequest, TResponse>.Host
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.Host
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).Host
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).Host
- uid: Grpc.Core.CallInvocationDetails`2.RequestMarshaller*
  commentId: Overload:Grpc.Core.CallInvocationDetails`2.RequestMarshaller
  isExternal: false
  name: RequestMarshaller
  nameWithType: CallInvocationDetails<TRequest, TResponse>.RequestMarshaller
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.RequestMarshaller
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).RequestMarshaller
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).RequestMarshaller
- uid: Grpc.Core.CallInvocationDetails`2.ResponseMarshaller*
  commentId: Overload:Grpc.Core.CallInvocationDetails`2.ResponseMarshaller
  isExternal: false
  name: ResponseMarshaller
  nameWithType: CallInvocationDetails<TRequest, TResponse>.ResponseMarshaller
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.ResponseMarshaller
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).ResponseMarshaller
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).ResponseMarshaller
- uid: Grpc.Core.CallInvocationDetails`2.Options*
  commentId: Overload:Grpc.Core.CallInvocationDetails`2.Options
  isExternal: false
  name: Options
  nameWithType: CallInvocationDetails<TRequest, TResponse>.Options
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.Options
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).Options
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).Options
- uid: Grpc.Core.CallInvocationDetails`2.WithOptions*
  commentId: Overload:Grpc.Core.CallInvocationDetails`2.WithOptions
  isExternal: false
  name: WithOptions
  nameWithType: CallInvocationDetails<TRequest, TResponse>.WithOptions
  fullName: Grpc.Core.CallInvocationDetails<TRequest, TResponse>.WithOptions
  nameWithType.vb: CallInvocationDetails(Of TRequest, TResponse).WithOptions
  fullName.vb: Grpc.Core.CallInvocationDetails(Of TRequest, TResponse).WithOptions
