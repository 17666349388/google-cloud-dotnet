### YamlMime:ManagedReference
items:
- uid: Grpc.Core.Logging.TextWriterLogger
  commentId: T:Grpc.Core.Logging.TextWriterLogger
  id: TextWriterLogger
  parent: Grpc.Core.Logging
  children:
  - Grpc.Core.Logging.TextWriterLogger.#ctor(System.Func{System.IO.TextWriter})
  - Grpc.Core.Logging.TextWriterLogger.#ctor(System.Func{System.IO.TextWriter},System.Type)
  - Grpc.Core.Logging.TextWriterLogger.#ctor(System.IO.TextWriter)
  - Grpc.Core.Logging.TextWriterLogger.AssociatedType
  - Grpc.Core.Logging.TextWriterLogger.Debug(System.String)
  - Grpc.Core.Logging.TextWriterLogger.Debug(System.String,System.Object[])
  - Grpc.Core.Logging.TextWriterLogger.Error(System.Exception,System.String)
  - Grpc.Core.Logging.TextWriterLogger.Error(System.String)
  - Grpc.Core.Logging.TextWriterLogger.Error(System.String,System.Object[])
  - Grpc.Core.Logging.TextWriterLogger.ForType``1
  - Grpc.Core.Logging.TextWriterLogger.Info(System.String)
  - Grpc.Core.Logging.TextWriterLogger.Info(System.String,System.Object[])
  - Grpc.Core.Logging.TextWriterLogger.Warning(System.Exception,System.String)
  - Grpc.Core.Logging.TextWriterLogger.Warning(System.String)
  - Grpc.Core.Logging.TextWriterLogger.Warning(System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: TextWriterLogger
  nameWithType: TextWriterLogger
  fullName: Grpc.Core.Logging.TextWriterLogger
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: TextWriterLogger
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 27
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logger that logs to an arbitrary <code>System.IO.TextWriter</code>.
  example: []
  syntax:
    content: 'public class TextWriterLogger : ILogger'
    content.vb: >-
      Public Class TextWriterLogger
          Implements ILogger
  inheritance:
  - System.Object
  derivedClasses:
  - Grpc.Core.Logging.ConsoleLogger
  implements:
  - Grpc.Core.Logging.ILogger
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Grpc.Core.Logging.TextWriterLogger.#ctor(System.IO.TextWriter)
  commentId: M:Grpc.Core.Logging.TextWriterLogger.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: TextWriterLogger(TextWriter)
  nameWithType: TextWriterLogger.TextWriterLogger(TextWriter)
  fullName: Grpc.Core.Logging.TextWriterLogger.TextWriterLogger(System.IO.TextWriter)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 40
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nCreates a console logger not associated to any specific type and writes to given <code>System.IO.TextWriter</code>.\nUser is responsible for providing an instance of TextWriter that is thread-safe.\n"
  example: []
  syntax:
    content: public TextWriterLogger(TextWriter textWriter)
    parameters:
    - id: textWriter
      type: System.IO.TextWriter
    content.vb: Public Sub New(textWriter As TextWriter)
  overload: Grpc.Core.Logging.TextWriterLogger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.Logging.TextWriterLogger.#ctor(System.Func{System.IO.TextWriter})
  commentId: M:Grpc.Core.Logging.TextWriterLogger.#ctor(System.Func{System.IO.TextWriter})
  id: '#ctor(System.Func{System.IO.TextWriter})'
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: TextWriterLogger(Func<TextWriter>)
  nameWithType: TextWriterLogger.TextWriterLogger(Func<TextWriter>)
  fullName: Grpc.Core.Logging.TextWriterLogger.TextWriterLogger(System.Func<System.IO.TextWriter>)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 49
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nCreates a console logger not associated to any specific type and writes to a <code>System.IO.TextWriter</code> obtained from given provider.\nUser is responsible for providing an instance of TextWriter that is thread-safe.\n"
  example: []
  syntax:
    content: public TextWriterLogger(Func<TextWriter> textWriterProvider)
    parameters:
    - id: textWriterProvider
      type: System.Func{System.IO.TextWriter}
    content.vb: Public Sub New(textWriterProvider As Func(Of TextWriter))
  overload: Grpc.Core.Logging.TextWriterLogger.#ctor*
  nameWithType.vb: TextWriterLogger.TextWriterLogger(Func(Of TextWriter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.Logging.TextWriterLogger.TextWriterLogger(System.Func(Of System.IO.TextWriter))
  name.vb: TextWriterLogger(Func(Of TextWriter))
- uid: Grpc.Core.Logging.TextWriterLogger.#ctor(System.Func{System.IO.TextWriter},System.Type)
  commentId: M:Grpc.Core.Logging.TextWriterLogger.#ctor(System.Func{System.IO.TextWriter},System.Type)
  id: '#ctor(System.Func{System.IO.TextWriter},System.Type)'
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: TextWriterLogger(Func<TextWriter>, Type)
  nameWithType: TextWriterLogger.TextWriterLogger(Func<TextWriter>, Type)
  fullName: Grpc.Core.Logging.TextWriterLogger.TextWriterLogger(System.Func<System.IO.TextWriter>, System.Type)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 54
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Creates a console logger that logs messsage specific for given type.
  example: []
  syntax:
    content: protected TextWriterLogger(Func<TextWriter> textWriterProvider, Type forType)
    parameters:
    - id: textWriterProvider
      type: System.Func{System.IO.TextWriter}
    - id: forType
      type: System.Type
    content.vb: Protected Sub New(textWriterProvider As Func(Of TextWriter), forType As Type)
  overload: Grpc.Core.Logging.TextWriterLogger.#ctor*
  nameWithType.vb: TextWriterLogger.TextWriterLogger(Func(Of TextWriter), Type)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Grpc.Core.Logging.TextWriterLogger.TextWriterLogger(System.Func(Of System.IO.TextWriter), System.Type)
  name.vb: TextWriterLogger(Func(Of TextWriter), Type)
- uid: Grpc.Core.Logging.TextWriterLogger.ForType``1
  commentId: M:Grpc.Core.Logging.TextWriterLogger.ForType``1
  id: ForType``1
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: ForType<T>()
  nameWithType: TextWriterLogger.ForType<T>()
  fullName: Grpc.Core.Logging.TextWriterLogger.ForType<T>()
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: ForType
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 76
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: "\nReturns a logger associated with the specified type.\n"
  example: []
  syntax:
    content: public virtual ILogger ForType<T>()
    typeParameters:
    - id: T
    return:
      type: Grpc.Core.Logging.ILogger
    content.vb: Public Overridable Function ForType(Of T) As ILogger
  overload: Grpc.Core.Logging.TextWriterLogger.ForType*
  implements:
  - Grpc.Core.Logging.ILogger.ForType``1
  nameWithType.vb: TextWriterLogger.ForType(Of T)()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Grpc.Core.Logging.TextWriterLogger.ForType(Of T)()
  name.vb: ForType(Of T)()
- uid: Grpc.Core.Logging.TextWriterLogger.Debug(System.String)
  commentId: M:Grpc.Core.Logging.TextWriterLogger.Debug(System.String)
  id: Debug(System.String)
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: Debug(String)
  nameWithType: TextWriterLogger.Debug(String)
  fullName: Grpc.Core.Logging.TextWriterLogger.Debug(System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Debug
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 86
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a message with severity Debug.
  example: []
  syntax:
    content: public void Debug(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub Debug(message As String)
  overload: Grpc.Core.Logging.TextWriterLogger.Debug*
  implements:
  - Grpc.Core.Logging.ILogger.Debug(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.Logging.TextWriterLogger.Debug(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.TextWriterLogger.Debug(System.String,System.Object[])
  id: Debug(System.String,System.Object[])
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: Debug(String, Object[])
  nameWithType: TextWriterLogger.Debug(String, Object[])
  fullName: Grpc.Core.Logging.TextWriterLogger.Debug(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Debug
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 92
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a formatted message with severity Debug.
  example: []
  syntax:
    content: public void Debug(string format, params object[] formatArgs)
    parameters:
    - id: format
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Public Sub Debug(format As String, ParamArray formatArgs As Object())
  overload: Grpc.Core.Logging.TextWriterLogger.Debug*
  implements:
  - Grpc.Core.Logging.ILogger.Debug(System.String,System.Object[])
  nameWithType.vb: TextWriterLogger.Debug(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.Logging.TextWriterLogger.Debug(System.String, System.Object())
  name.vb: Debug(String, Object())
- uid: Grpc.Core.Logging.TextWriterLogger.Info(System.String)
  commentId: M:Grpc.Core.Logging.TextWriterLogger.Info(System.String)
  id: Info(System.String)
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: Info(String)
  nameWithType: TextWriterLogger.Info(String)
  fullName: Grpc.Core.Logging.TextWriterLogger.Info(System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Info
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 98
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a message with severity Info.
  example: []
  syntax:
    content: public void Info(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub Info(message As String)
  overload: Grpc.Core.Logging.TextWriterLogger.Info*
  implements:
  - Grpc.Core.Logging.ILogger.Info(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.Logging.TextWriterLogger.Info(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.TextWriterLogger.Info(System.String,System.Object[])
  id: Info(System.String,System.Object[])
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: Info(String, Object[])
  nameWithType: TextWriterLogger.Info(String, Object[])
  fullName: Grpc.Core.Logging.TextWriterLogger.Info(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Info
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 104
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a formatted message with severity Info.
  example: []
  syntax:
    content: public void Info(string format, params object[] formatArgs)
    parameters:
    - id: format
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Public Sub Info(format As String, ParamArray formatArgs As Object())
  overload: Grpc.Core.Logging.TextWriterLogger.Info*
  implements:
  - Grpc.Core.Logging.ILogger.Info(System.String,System.Object[])
  nameWithType.vb: TextWriterLogger.Info(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.Logging.TextWriterLogger.Info(System.String, System.Object())
  name.vb: Info(String, Object())
- uid: Grpc.Core.Logging.TextWriterLogger.Warning(System.String)
  commentId: M:Grpc.Core.Logging.TextWriterLogger.Warning(System.String)
  id: Warning(System.String)
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: Warning(String)
  nameWithType: TextWriterLogger.Warning(String)
  fullName: Grpc.Core.Logging.TextWriterLogger.Warning(System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Warning
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 110
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a message with severity Warning.
  example: []
  syntax:
    content: public void Warning(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub Warning(message As String)
  overload: Grpc.Core.Logging.TextWriterLogger.Warning*
  implements:
  - Grpc.Core.Logging.ILogger.Warning(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.Logging.TextWriterLogger.Warning(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.TextWriterLogger.Warning(System.String,System.Object[])
  id: Warning(System.String,System.Object[])
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: Warning(String, Object[])
  nameWithType: TextWriterLogger.Warning(String, Object[])
  fullName: Grpc.Core.Logging.TextWriterLogger.Warning(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Warning
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 116
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a formatted message with severity Warning.
  example: []
  syntax:
    content: public void Warning(string format, params object[] formatArgs)
    parameters:
    - id: format
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Public Sub Warning(format As String, ParamArray formatArgs As Object())
  overload: Grpc.Core.Logging.TextWriterLogger.Warning*
  implements:
  - Grpc.Core.Logging.ILogger.Warning(System.String,System.Object[])
  nameWithType.vb: TextWriterLogger.Warning(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.Logging.TextWriterLogger.Warning(System.String, System.Object())
  name.vb: Warning(String, Object())
- uid: Grpc.Core.Logging.TextWriterLogger.Warning(System.Exception,System.String)
  commentId: M:Grpc.Core.Logging.TextWriterLogger.Warning(System.Exception,System.String)
  id: Warning(System.Exception,System.String)
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: Warning(Exception, String)
  nameWithType: TextWriterLogger.Warning(Exception, String)
  fullName: Grpc.Core.Logging.TextWriterLogger.Warning(System.Exception, System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Warning
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 122
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a message and an associated exception with severity Warning.
  example: []
  syntax:
    content: public void Warning(Exception exception, string message)
    parameters:
    - id: exception
      type: System.Exception
    - id: message
      type: System.String
    content.vb: Public Sub Warning(exception As Exception, message As String)
  overload: Grpc.Core.Logging.TextWriterLogger.Warning*
  implements:
  - Grpc.Core.Logging.ILogger.Warning(System.Exception,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.Logging.TextWriterLogger.Error(System.String)
  commentId: M:Grpc.Core.Logging.TextWriterLogger.Error(System.String)
  id: Error(System.String)
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: Error(String)
  nameWithType: TextWriterLogger.Error(String)
  fullName: Grpc.Core.Logging.TextWriterLogger.Error(System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Error
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 128
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a message with severity Error.
  example: []
  syntax:
    content: public void Error(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub Error(message As String)
  overload: Grpc.Core.Logging.TextWriterLogger.Error*
  implements:
  - Grpc.Core.Logging.ILogger.Error(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.Logging.TextWriterLogger.Error(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.TextWriterLogger.Error(System.String,System.Object[])
  id: Error(System.String,System.Object[])
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: Error(String, Object[])
  nameWithType: TextWriterLogger.Error(String, Object[])
  fullName: Grpc.Core.Logging.TextWriterLogger.Error(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Error
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 134
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a formatted message with severity Error.
  example: []
  syntax:
    content: public void Error(string format, params object[] formatArgs)
    parameters:
    - id: format
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Public Sub Error(format As String, ParamArray formatArgs As Object())
  overload: Grpc.Core.Logging.TextWriterLogger.Error*
  implements:
  - Grpc.Core.Logging.ILogger.Error(System.String,System.Object[])
  nameWithType.vb: TextWriterLogger.Error(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.Logging.TextWriterLogger.Error(System.String, System.Object())
  name.vb: Error(String, Object())
- uid: Grpc.Core.Logging.TextWriterLogger.Error(System.Exception,System.String)
  commentId: M:Grpc.Core.Logging.TextWriterLogger.Error(System.Exception,System.String)
  id: Error(System.Exception,System.String)
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: Error(Exception, String)
  nameWithType: TextWriterLogger.Error(Exception, String)
  fullName: Grpc.Core.Logging.TextWriterLogger.Error(System.Exception, System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Error
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 140
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a message and an associated exception with severity Error.
  example: []
  syntax:
    content: public void Error(Exception exception, string message)
    parameters:
    - id: exception
      type: System.Exception
    - id: message
      type: System.String
    content.vb: Public Sub Error(exception As Exception, message As String)
  overload: Grpc.Core.Logging.TextWriterLogger.Error*
  implements:
  - Grpc.Core.Logging.ILogger.Error(System.Exception,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.Logging.TextWriterLogger.AssociatedType
  commentId: P:Grpc.Core.Logging.TextWriterLogger.AssociatedType
  id: AssociatedType
  parent: Grpc.Core.Logging.TextWriterLogger
  langs:
  - csharp
  - vb
  name: AssociatedType
  nameWithType: TextWriterLogger.AssociatedType
  fullName: Grpc.Core.Logging.TextWriterLogger.AssociatedType
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: AssociatedType
    path: src/csharp/Grpc.Core/Logging/TextWriterLogger.cs
    startLine: 146
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Gets the type associated with this logger.
  example: []
  syntax:
    content: protected Type AssociatedType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Protected ReadOnly Property AssociatedType As Type
  overload: Grpc.Core.Logging.TextWriterLogger.AssociatedType*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
references:
- uid: Grpc.Core.Logging
  commentId: N:Grpc.Core.Logging
  name: Grpc.Core.Logging
  nameWithType: Grpc.Core.Logging
  fullName: Grpc.Core.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Grpc.Core.Logging.ILogger
  commentId: T:Grpc.Core.Logging.ILogger
  parent: Grpc.Core.Logging
  name: ILogger
  nameWithType: ILogger
  fullName: Grpc.Core.Logging.ILogger
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.Logging.TextWriterLogger.#ctor*
  commentId: Overload:Grpc.Core.Logging.TextWriterLogger.#ctor
  name: TextWriterLogger
  nameWithType: TextWriterLogger.TextWriterLogger
  fullName: Grpc.Core.Logging.TextWriterLogger.TextWriterLogger
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Func{System.IO.TextWriter}
  commentId: T:System.Func{System.IO.TextWriter}
  parent: System
  definition: System.Func`1
  name: Func<TextWriter>
  nameWithType: Func<TextWriter>
  fullName: System.Func<System.IO.TextWriter>
  nameWithType.vb: Func(Of TextWriter)
  fullName.vb: System.Func(Of System.IO.TextWriter)
  name.vb: Func(Of TextWriter)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Grpc.Core.Logging.TextWriterLogger.ForType*
  commentId: Overload:Grpc.Core.Logging.TextWriterLogger.ForType
  name: ForType
  nameWithType: TextWriterLogger.ForType
  fullName: Grpc.Core.Logging.TextWriterLogger.ForType
- uid: Grpc.Core.Logging.ILogger.ForType``1
  commentId: M:Grpc.Core.Logging.ILogger.ForType``1
  parent: Grpc.Core.Logging.ILogger
  name: ForType<T>()
  nameWithType: ILogger.ForType<T>()
  fullName: Grpc.Core.Logging.ILogger.ForType<T>()
  nameWithType.vb: ILogger.ForType(Of T)()
  fullName.vb: Grpc.Core.Logging.ILogger.ForType(Of T)()
  name.vb: ForType(Of T)()
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.ForType``1
    name: ForType<T>
    nameWithType: ILogger.ForType<T>
    fullName: Grpc.Core.Logging.ILogger.ForType<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.ForType``1
    name: ForType(Of T)
    nameWithType: ILogger.ForType(Of T)
    fullName: Grpc.Core.Logging.ILogger.ForType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.TextWriterLogger.Debug*
  commentId: Overload:Grpc.Core.Logging.TextWriterLogger.Debug
  name: Debug
  nameWithType: TextWriterLogger.Debug
  fullName: Grpc.Core.Logging.TextWriterLogger.Debug
- uid: Grpc.Core.Logging.ILogger.Debug(System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Debug(System.String)
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Debug(String)
  nameWithType: ILogger.Debug(String)
  fullName: Grpc.Core.Logging.ILogger.Debug(System.String)
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Debug(System.String)
    name: Debug
    nameWithType: ILogger.Debug
    fullName: Grpc.Core.Logging.ILogger.Debug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Debug(System.String)
    name: Debug
    nameWithType: ILogger.Debug
    fullName: Grpc.Core.Logging.ILogger.Debug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Grpc.Core.Logging.ILogger.Debug(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.ILogger.Debug(System.String,System.Object[])
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Debug(String, Object[])
  nameWithType: ILogger.Debug(String, Object[])
  fullName: Grpc.Core.Logging.ILogger.Debug(System.String, System.Object[])
  nameWithType.vb: ILogger.Debug(String, Object())
  fullName.vb: Grpc.Core.Logging.ILogger.Debug(System.String, System.Object())
  name.vb: Debug(String, Object())
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Debug(System.String,System.Object[])
    name: Debug
    nameWithType: ILogger.Debug
    fullName: Grpc.Core.Logging.ILogger.Debug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Debug(System.String,System.Object[])
    name: Debug
    nameWithType: ILogger.Debug
    fullName: Grpc.Core.Logging.ILogger.Debug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Grpc.Core.Logging.TextWriterLogger.Info*
  commentId: Overload:Grpc.Core.Logging.TextWriterLogger.Info
  name: Info
  nameWithType: TextWriterLogger.Info
  fullName: Grpc.Core.Logging.TextWriterLogger.Info
- uid: Grpc.Core.Logging.ILogger.Info(System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Info(System.String)
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Info(String)
  nameWithType: ILogger.Info(String)
  fullName: Grpc.Core.Logging.ILogger.Info(System.String)
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Info(System.String)
    name: Info
    nameWithType: ILogger.Info
    fullName: Grpc.Core.Logging.ILogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Info(System.String)
    name: Info
    nameWithType: ILogger.Info
    fullName: Grpc.Core.Logging.ILogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.ILogger.Info(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.ILogger.Info(System.String,System.Object[])
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Info(String, Object[])
  nameWithType: ILogger.Info(String, Object[])
  fullName: Grpc.Core.Logging.ILogger.Info(System.String, System.Object[])
  nameWithType.vb: ILogger.Info(String, Object())
  fullName.vb: Grpc.Core.Logging.ILogger.Info(System.String, System.Object())
  name.vb: Info(String, Object())
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Info(System.String,System.Object[])
    name: Info
    nameWithType: ILogger.Info
    fullName: Grpc.Core.Logging.ILogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Info(System.String,System.Object[])
    name: Info
    nameWithType: ILogger.Info
    fullName: Grpc.Core.Logging.ILogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.TextWriterLogger.Warning*
  commentId: Overload:Grpc.Core.Logging.TextWriterLogger.Warning
  name: Warning
  nameWithType: TextWriterLogger.Warning
  fullName: Grpc.Core.Logging.TextWriterLogger.Warning
- uid: Grpc.Core.Logging.ILogger.Warning(System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Warning(System.String)
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Warning(String)
  nameWithType: ILogger.Warning(String)
  fullName: Grpc.Core.Logging.ILogger.Warning(System.String)
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Warning(System.String)
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Grpc.Core.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Warning(System.String)
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Grpc.Core.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.ILogger.Warning(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.ILogger.Warning(System.String,System.Object[])
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Warning(String, Object[])
  nameWithType: ILogger.Warning(String, Object[])
  fullName: Grpc.Core.Logging.ILogger.Warning(System.String, System.Object[])
  nameWithType.vb: ILogger.Warning(String, Object())
  fullName.vb: Grpc.Core.Logging.ILogger.Warning(System.String, System.Object())
  name.vb: Warning(String, Object())
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Warning(System.String,System.Object[])
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Grpc.Core.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Warning(System.String,System.Object[])
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Grpc.Core.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.ILogger.Warning(System.Exception,System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Warning(System.Exception,System.String)
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Warning(Exception, String)
  nameWithType: ILogger.Warning(Exception, String)
  fullName: Grpc.Core.Logging.ILogger.Warning(System.Exception, System.String)
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Warning(System.Exception,System.String)
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Grpc.Core.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Warning(System.Exception,System.String)
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Grpc.Core.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Grpc.Core.Logging.TextWriterLogger.Error*
  commentId: Overload:Grpc.Core.Logging.TextWriterLogger.Error
  name: Error
  nameWithType: TextWriterLogger.Error
  fullName: Grpc.Core.Logging.TextWriterLogger.Error
- uid: Grpc.Core.Logging.ILogger.Error(System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Error(System.String)
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Error(String)
  nameWithType: ILogger.Error(String)
  fullName: Grpc.Core.Logging.ILogger.Error(System.String)
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Error(System.String)
    name: Error
    nameWithType: ILogger.Error
    fullName: Grpc.Core.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Error(System.String)
    name: Error
    nameWithType: ILogger.Error
    fullName: Grpc.Core.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.ILogger.Error(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.ILogger.Error(System.String,System.Object[])
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Error(String, Object[])
  nameWithType: ILogger.Error(String, Object[])
  fullName: Grpc.Core.Logging.ILogger.Error(System.String, System.Object[])
  nameWithType.vb: ILogger.Error(String, Object())
  fullName.vb: Grpc.Core.Logging.ILogger.Error(System.String, System.Object())
  name.vb: Error(String, Object())
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Error(System.String,System.Object[])
    name: Error
    nameWithType: ILogger.Error
    fullName: Grpc.Core.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Error(System.String,System.Object[])
    name: Error
    nameWithType: ILogger.Error
    fullName: Grpc.Core.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.ILogger.Error(System.Exception,System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Error(System.Exception,System.String)
  parent: Grpc.Core.Logging.ILogger
  isExternal: true
  name: Error(Exception, String)
  nameWithType: ILogger.Error(Exception, String)
  fullName: Grpc.Core.Logging.ILogger.Error(System.Exception, System.String)
  spec.csharp:
  - uid: Grpc.Core.Logging.ILogger.Error(System.Exception,System.String)
    name: Error
    nameWithType: ILogger.Error
    fullName: Grpc.Core.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Logging.ILogger.Error(System.Exception,System.String)
    name: Error
    nameWithType: ILogger.Error
    fullName: Grpc.Core.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Logging.TextWriterLogger.AssociatedType*
  commentId: Overload:Grpc.Core.Logging.TextWriterLogger.AssociatedType
  name: AssociatedType
  nameWithType: TextWriterLogger.AssociatedType
  fullName: Grpc.Core.Logging.TextWriterLogger.AssociatedType
