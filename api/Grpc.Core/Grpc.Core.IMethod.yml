### YamlMime:ManagedReference
items:
- uid: Grpc.Core.IMethod
  commentId: T:Grpc.Core.IMethod
  id: IMethod
  parent: Grpc.Core
  children:
  - Grpc.Core.IMethod.FullName
  - Grpc.Core.IMethod.Name
  - Grpc.Core.IMethod.ServiceName
  - Grpc.Core.IMethod.Type
  langs:
  - csharp
  - vb
  name: IMethod
  nameWithType: IMethod
  fullName: Grpc.Core.IMethod
  type: Interface
  source:
    remote:
      path: src/csharp/Grpc.Core/Method.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: IMethod
    path: src/csharp/Grpc.Core/Method.cs
    startLine: 44
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nA non-generic representation of a remote method.\n"
  example: []
  syntax:
    content: public interface IMethod
    content.vb: Public Interface IMethod
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Grpc.Core.IMethod.Type
  commentId: P:Grpc.Core.IMethod.Type
  id: Type
  parent: Grpc.Core.IMethod
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IMethod.Type
  fullName: Grpc.Core.IMethod.Type
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/Method.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: Type
    path: src/csharp/Grpc.Core/Method.cs
    startLine: 49
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGets the type of the method.\n"
  example: []
  syntax:
    content: MethodType Type { get; }
    parameters: []
    return:
      type: Grpc.Core.MethodType
    content.vb: ReadOnly Property Type As MethodType
  overload: Grpc.Core.IMethod.Type*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Grpc.Core.IMethod.ServiceName
  commentId: P:Grpc.Core.IMethod.ServiceName
  id: ServiceName
  parent: Grpc.Core.IMethod
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: IMethod.ServiceName
  fullName: Grpc.Core.IMethod.ServiceName
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/Method.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: ServiceName
    path: src/csharp/Grpc.Core/Method.cs
    startLine: 54
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGets the name of the service to which this method belongs.\n"
  example: []
  syntax:
    content: string ServiceName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ServiceName As String
  overload: Grpc.Core.IMethod.ServiceName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Grpc.Core.IMethod.Name
  commentId: P:Grpc.Core.IMethod.Name
  id: Name
  parent: Grpc.Core.IMethod
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IMethod.Name
  fullName: Grpc.Core.IMethod.Name
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/Method.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: Name
    path: src/csharp/Grpc.Core/Method.cs
    startLine: 59
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGets the unqualified name of the method.\n"
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Grpc.Core.IMethod.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Grpc.Core.IMethod.FullName
  commentId: P:Grpc.Core.IMethod.FullName
  id: FullName
  parent: Grpc.Core.IMethod
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: IMethod.FullName
  fullName: Grpc.Core.IMethod.FullName
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/Method.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: FullName
    path: src/csharp/Grpc.Core/Method.cs
    startLine: 65
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGets the fully qualified name of the method. On the server side, methods are dispatched\nbased on this name.\n"
  example: []
  syntax:
    content: string FullName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property FullName As String
  overload: Grpc.Core.IMethod.FullName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: false
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: Grpc.Core.IMethod.Type*
  commentId: Overload:Grpc.Core.IMethod.Type
  isExternal: false
  name: Type
  nameWithType: IMethod.Type
  fullName: Grpc.Core.IMethod.Type
- uid: Grpc.Core.MethodType
  commentId: T:Grpc.Core.MethodType
  parent: Grpc.Core
  isExternal: false
  name: MethodType
  nameWithType: MethodType
  fullName: Grpc.Core.MethodType
- uid: Grpc.Core.IMethod.ServiceName*
  commentId: Overload:Grpc.Core.IMethod.ServiceName
  isExternal: false
  name: ServiceName
  nameWithType: IMethod.ServiceName
  fullName: Grpc.Core.IMethod.ServiceName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.IMethod.Name*
  commentId: Overload:Grpc.Core.IMethod.Name
  isExternal: false
  name: Name
  nameWithType: IMethod.Name
  fullName: Grpc.Core.IMethod.Name
- uid: Grpc.Core.IMethod.FullName*
  commentId: Overload:Grpc.Core.IMethod.FullName
  isExternal: false
  name: FullName
  nameWithType: IMethod.FullName
  fullName: Grpc.Core.IMethod.FullName
