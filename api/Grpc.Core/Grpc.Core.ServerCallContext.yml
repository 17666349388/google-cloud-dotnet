### YamlMime:ManagedReference
items:
- uid: Grpc.Core.ServerCallContext
  commentId: T:Grpc.Core.ServerCallContext
  id: ServerCallContext
  parent: Grpc.Core
  children:
  - Grpc.Core.ServerCallContext.AuthContext
  - Grpc.Core.ServerCallContext.CancellationToken
  - Grpc.Core.ServerCallContext.CreatePropagationToken(Grpc.Core.ContextPropagationOptions)
  - Grpc.Core.ServerCallContext.Deadline
  - Grpc.Core.ServerCallContext.Host
  - Grpc.Core.ServerCallContext.Method
  - Grpc.Core.ServerCallContext.Peer
  - Grpc.Core.ServerCallContext.RequestHeaders
  - Grpc.Core.ServerCallContext.ResponseTrailers
  - Grpc.Core.ServerCallContext.Status
  - Grpc.Core.ServerCallContext.WriteOptions
  - Grpc.Core.ServerCallContext.WriteResponseHeadersAsync(Grpc.Core.Metadata)
  langs:
  - csharp
  - vb
  name: ServerCallContext
  nameWithType: ServerCallContext
  fullName: Grpc.Core.ServerCallContext
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core/ServerCallContext.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: ServerCallContext
    path: src/csharp/Grpc.Core/ServerCallContext.cs
    startLine: 29
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nContext for a server-side call.\n"
  example: []
  syntax:
    content: public class ServerCallContext
    content.vb: Public Class ServerCallContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Grpc.Core.ServerCallContext.WriteResponseHeadersAsync(Grpc.Core.Metadata)
  commentId: M:Grpc.Core.ServerCallContext.WriteResponseHeadersAsync(Grpc.Core.Metadata)
  id: WriteResponseHeadersAsync(Grpc.Core.Metadata)
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: WriteResponseHeadersAsync(Metadata)
  nameWithType: ServerCallContext.WriteResponseHeadersAsync(Metadata)
  fullName: Grpc.Core.ServerCallContext.WriteResponseHeadersAsync(Grpc.Core.Metadata)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/ServerCallContext.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: WriteResponseHeadersAsync
    path: src/csharp/Grpc.Core/ServerCallContext.cs
    startLine: 65
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nAsynchronously sends response headers for the current call to the client. This method may only be invoked once for each call and needs to be invoked\nbefore any response messages are written. Writing the first response message implicitly sends empty response headers if <code>WriteResponseHeadersAsync</code> haven&apos;t\nbeen called yet.\n"
  example: []
  syntax:
    content: public Task WriteResponseHeadersAsync(Metadata responseHeaders)
    parameters:
    - id: responseHeaders
      type: Grpc.Core.Metadata
      description: The response headers to send.
    return:
      type: System.Threading.Tasks.Task
      description: The task that finished once response headers have been written.
    content.vb: Public Function WriteResponseHeadersAsync(responseHeaders As Metadata) As Task
  overload: Grpc.Core.ServerCallContext.WriteResponseHeadersAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.ServerCallContext.CreatePropagationToken(Grpc.Core.ContextPropagationOptions)
  commentId: M:Grpc.Core.ServerCallContext.CreatePropagationToken(Grpc.Core.ContextPropagationOptions)
  id: CreatePropagationToken(Grpc.Core.ContextPropagationOptions)
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: CreatePropagationToken(ContextPropagationOptions)
  nameWithType: ServerCallContext.CreatePropagationToken(ContextPropagationOptions)
  fullName: Grpc.Core.ServerCallContext.CreatePropagationToken(Grpc.Core.ContextPropagationOptions)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/ServerCallContext.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: CreatePropagationToken
    path: src/csharp/Grpc.Core/ServerCallContext.cs
    startLine: 73
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nCreates a propagation token to be used to propagate call context to a child call.\n"
  example: []
  syntax:
    content: public ContextPropagationToken CreatePropagationToken(ContextPropagationOptions options = null)
    parameters:
    - id: options
      type: Grpc.Core.ContextPropagationOptions
    return:
      type: Grpc.Core.ContextPropagationToken
    content.vb: Public Function CreatePropagationToken(options As ContextPropagationOptions = Nothing) As ContextPropagationToken
  overload: Grpc.Core.ServerCallContext.CreatePropagationToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.ServerCallContext.Method
  commentId: P:Grpc.Core.ServerCallContext.Method
  id: Method
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: ServerCallContext.Method
  fullName: Grpc.Core.ServerCallContext.Method
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/ServerCallContext.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: Method
    path: src/csharp/Grpc.Core/ServerCallContext.cs
    startLine: 79
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: Name of method called in this RPC.
  example: []
  syntax:
    content: public string Method { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Method As String
  overload: Grpc.Core.ServerCallContext.Method*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.Host
  commentId: P:Grpc.Core.ServerCallContext.Host
  id: Host
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: ServerCallContext.Host
  fullName: Grpc.Core.ServerCallContext.Host
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/ServerCallContext.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: Host
    path: src/csharp/Grpc.Core/ServerCallContext.cs
    startLine: 88
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: Name of host called in this RPC.
  example: []
  syntax:
    content: public string Host { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Host As String
  overload: Grpc.Core.ServerCallContext.Host*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.Peer
  commentId: P:Grpc.Core.ServerCallContext.Peer
  id: Peer
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: Peer
  nameWithType: ServerCallContext.Peer
  fullName: Grpc.Core.ServerCallContext.Peer
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/ServerCallContext.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: Peer
    path: src/csharp/Grpc.Core/ServerCallContext.cs
    startLine: 97
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: Address of the remote endpoint in URI format.
  example: []
  syntax:
    content: public string Peer { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Peer As String
  overload: Grpc.Core.ServerCallContext.Peer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.Deadline
  commentId: P:Grpc.Core.ServerCallContext.Deadline
  id: Deadline
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: Deadline
  nameWithType: ServerCallContext.Deadline
  fullName: Grpc.Core.ServerCallContext.Deadline
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/ServerCallContext.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: Deadline
    path: src/csharp/Grpc.Core/ServerCallContext.cs
    startLine: 109
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: Deadline for this RPC.
  example: []
  syntax:
    content: public DateTime Deadline { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property Deadline As Date
  overload: Grpc.Core.ServerCallContext.Deadline*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.RequestHeaders
  commentId: P:Grpc.Core.ServerCallContext.RequestHeaders
  id: RequestHeaders
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: RequestHeaders
  nameWithType: ServerCallContext.RequestHeaders
  fullName: Grpc.Core.ServerCallContext.RequestHeaders
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/ServerCallContext.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: RequestHeaders
    path: src/csharp/Grpc.Core/ServerCallContext.cs
    startLine: 118
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: Initial metadata sent by client.
  example: []
  syntax:
    content: public Metadata RequestHeaders { get; }
    parameters: []
    return:
      type: Grpc.Core.Metadata
    content.vb: Public ReadOnly Property RequestHeaders As Metadata
  overload: Grpc.Core.ServerCallContext.RequestHeaders*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.CancellationToken
  commentId: P:Grpc.Core.ServerCallContext.CancellationToken
  id: CancellationToken
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: CancellationToken
  nameWithType: ServerCallContext.CancellationToken
  fullName: Grpc.Core.ServerCallContext.CancellationToken
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/ServerCallContext.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: CancellationToken
    path: src/csharp/Grpc.Core/ServerCallContext.cs
    startLine: 127
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: Cancellation token signals when call is cancelled.
  example: []
  syntax:
    content: public CancellationToken CancellationToken { get; }
    parameters: []
    return:
      type: System.Threading.CancellationToken
    content.vb: Public ReadOnly Property CancellationToken As CancellationToken
  overload: Grpc.Core.ServerCallContext.CancellationToken*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.ResponseTrailers
  commentId: P:Grpc.Core.ServerCallContext.ResponseTrailers
  id: ResponseTrailers
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: ResponseTrailers
  nameWithType: ServerCallContext.ResponseTrailers
  fullName: Grpc.Core.ServerCallContext.ResponseTrailers
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/ServerCallContext.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: ResponseTrailers
    path: src/csharp/Grpc.Core/ServerCallContext.cs
    startLine: 136
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: Trailers to send back to client after RPC finishes.
  example: []
  syntax:
    content: public Metadata ResponseTrailers { get; }
    parameters: []
    return:
      type: Grpc.Core.Metadata
    content.vb: Public ReadOnly Property ResponseTrailers As Metadata
  overload: Grpc.Core.ServerCallContext.ResponseTrailers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.Status
  commentId: P:Grpc.Core.ServerCallContext.Status
  id: Status
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ServerCallContext.Status
  fullName: Grpc.Core.ServerCallContext.Status
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/ServerCallContext.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: Status
    path: src/csharp/Grpc.Core/ServerCallContext.cs
    startLine: 145
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: Status to send back to client after RPC finishes.
  example: []
  syntax:
    content: public Status Status { get; set; }
    parameters: []
    return:
      type: Grpc.Core.Status
    content.vb: Public Property Status As Status
  overload: Grpc.Core.ServerCallContext.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Grpc.Core.ServerCallContext.WriteOptions
  commentId: P:Grpc.Core.ServerCallContext.WriteOptions
  id: WriteOptions
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: WriteOptions
  nameWithType: ServerCallContext.WriteOptions
  fullName: Grpc.Core.ServerCallContext.WriteOptions
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/ServerCallContext.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: WriteOptions
    path: src/csharp/Grpc.Core/ServerCallContext.cs
    startLine: 163
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nAllows setting write options for the following write.\nFor streaming response calls, this property is also exposed as on IServerStreamWriter for convenience.\nBoth properties are backed by the same underlying value.\n"
  example: []
  syntax:
    content: public WriteOptions WriteOptions { get; set; }
    parameters: []
    return:
      type: Grpc.Core.WriteOptions
    content.vb: Public Property WriteOptions As WriteOptions
  overload: Grpc.Core.ServerCallContext.WriteOptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Grpc.Core.ServerCallContext.AuthContext
  commentId: P:Grpc.Core.ServerCallContext.AuthContext
  id: AuthContext
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: AuthContext
  nameWithType: ServerCallContext.AuthContext
  fullName: Grpc.Core.ServerCallContext.AuthContext
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/ServerCallContext.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: AuthContext
    path: src/csharp/Grpc.Core/ServerCallContext.cs
    startLine: 180
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGets the <code>AuthContext</code> associated with this call.\nNote: Access to AuthContext is an experimental API that can change without any prior notice.\n"
  example: []
  syntax:
    content: public AuthContext AuthContext { get; }
    parameters: []
    return:
      type: Grpc.Core.AuthContext
    content.vb: Public ReadOnly Property AuthContext As AuthContext
  overload: Grpc.Core.ServerCallContext.AuthContext*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: false
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.ServerCallContext.WriteResponseHeadersAsync*
  commentId: Overload:Grpc.Core.ServerCallContext.WriteResponseHeadersAsync
  isExternal: false
  name: WriteResponseHeadersAsync
  nameWithType: ServerCallContext.WriteResponseHeadersAsync
  fullName: Grpc.Core.ServerCallContext.WriteResponseHeadersAsync
- uid: Grpc.Core.Metadata
  commentId: T:Grpc.Core.Metadata
  parent: Grpc.Core
  isExternal: false
  name: Metadata
  nameWithType: Metadata
  fullName: Grpc.Core.Metadata
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Grpc.Core.ServerCallContext.CreatePropagationToken*
  commentId: Overload:Grpc.Core.ServerCallContext.CreatePropagationToken
  isExternal: false
  name: CreatePropagationToken
  nameWithType: ServerCallContext.CreatePropagationToken
  fullName: Grpc.Core.ServerCallContext.CreatePropagationToken
- uid: Grpc.Core.ContextPropagationOptions
  commentId: T:Grpc.Core.ContextPropagationOptions
  parent: Grpc.Core
  isExternal: false
  name: ContextPropagationOptions
  nameWithType: ContextPropagationOptions
  fullName: Grpc.Core.ContextPropagationOptions
- uid: Grpc.Core.ContextPropagationToken
  commentId: T:Grpc.Core.ContextPropagationToken
  parent: Grpc.Core
  isExternal: false
  name: ContextPropagationToken
  nameWithType: ContextPropagationToken
  fullName: Grpc.Core.ContextPropagationToken
- uid: Grpc.Core.ServerCallContext.Method*
  commentId: Overload:Grpc.Core.ServerCallContext.Method
  isExternal: false
  name: Method
  nameWithType: ServerCallContext.Method
  fullName: Grpc.Core.ServerCallContext.Method
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Grpc.Core.ServerCallContext.Host*
  commentId: Overload:Grpc.Core.ServerCallContext.Host
  isExternal: false
  name: Host
  nameWithType: ServerCallContext.Host
  fullName: Grpc.Core.ServerCallContext.Host
- uid: Grpc.Core.ServerCallContext.Peer*
  commentId: Overload:Grpc.Core.ServerCallContext.Peer
  isExternal: false
  name: Peer
  nameWithType: ServerCallContext.Peer
  fullName: Grpc.Core.ServerCallContext.Peer
- uid: Grpc.Core.ServerCallContext.Deadline*
  commentId: Overload:Grpc.Core.ServerCallContext.Deadline
  isExternal: false
  name: Deadline
  nameWithType: ServerCallContext.Deadline
  fullName: Grpc.Core.ServerCallContext.Deadline
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Grpc.Core.ServerCallContext.RequestHeaders*
  commentId: Overload:Grpc.Core.ServerCallContext.RequestHeaders
  isExternal: false
  name: RequestHeaders
  nameWithType: ServerCallContext.RequestHeaders
  fullName: Grpc.Core.ServerCallContext.RequestHeaders
- uid: Grpc.Core.ServerCallContext.CancellationToken*
  commentId: Overload:Grpc.Core.ServerCallContext.CancellationToken
  isExternal: false
  name: CancellationToken
  nameWithType: ServerCallContext.CancellationToken
  fullName: Grpc.Core.ServerCallContext.CancellationToken
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Grpc.Core.ServerCallContext.ResponseTrailers*
  commentId: Overload:Grpc.Core.ServerCallContext.ResponseTrailers
  isExternal: false
  name: ResponseTrailers
  nameWithType: ServerCallContext.ResponseTrailers
  fullName: Grpc.Core.ServerCallContext.ResponseTrailers
- uid: Grpc.Core.ServerCallContext.Status*
  commentId: Overload:Grpc.Core.ServerCallContext.Status
  isExternal: false
  name: Status
  nameWithType: ServerCallContext.Status
  fullName: Grpc.Core.ServerCallContext.Status
- uid: Grpc.Core.Status
  commentId: T:Grpc.Core.Status
  parent: Grpc.Core
  isExternal: false
  name: Status
  nameWithType: Status
  fullName: Grpc.Core.Status
- uid: Grpc.Core.ServerCallContext.WriteOptions*
  commentId: Overload:Grpc.Core.ServerCallContext.WriteOptions
  isExternal: false
  name: WriteOptions
  nameWithType: ServerCallContext.WriteOptions
  fullName: Grpc.Core.ServerCallContext.WriteOptions
- uid: Grpc.Core.WriteOptions
  commentId: T:Grpc.Core.WriteOptions
  parent: Grpc.Core
  isExternal: false
  name: WriteOptions
  nameWithType: WriteOptions
  fullName: Grpc.Core.WriteOptions
- uid: Grpc.Core.ServerCallContext.AuthContext*
  commentId: Overload:Grpc.Core.ServerCallContext.AuthContext
  isExternal: false
  name: AuthContext
  nameWithType: ServerCallContext.AuthContext
  fullName: Grpc.Core.ServerCallContext.AuthContext
- uid: Grpc.Core.AuthContext
  commentId: T:Grpc.Core.AuthContext
  parent: Grpc.Core
  isExternal: false
  name: AuthContext
  nameWithType: AuthContext
  fullName: Grpc.Core.AuthContext
