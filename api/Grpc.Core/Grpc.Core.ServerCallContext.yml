### YamlMime:ManagedReference
items:
- uid: Grpc.Core.ServerCallContext
  commentId: T:Grpc.Core.ServerCallContext
  id: ServerCallContext
  parent: Grpc.Core
  children:
  - Grpc.Core.ServerCallContext.#ctor
  - Grpc.Core.ServerCallContext.AuthContext
  - Grpc.Core.ServerCallContext.AuthContextCore
  - Grpc.Core.ServerCallContext.CancellationToken
  - Grpc.Core.ServerCallContext.CancellationTokenCore
  - Grpc.Core.ServerCallContext.CreatePropagationToken(Grpc.Core.ContextPropagationOptions)
  - Grpc.Core.ServerCallContext.CreatePropagationTokenCore(Grpc.Core.ContextPropagationOptions)
  - Grpc.Core.ServerCallContext.Deadline
  - Grpc.Core.ServerCallContext.DeadlineCore
  - Grpc.Core.ServerCallContext.Host
  - Grpc.Core.ServerCallContext.HostCore
  - Grpc.Core.ServerCallContext.Method
  - Grpc.Core.ServerCallContext.MethodCore
  - Grpc.Core.ServerCallContext.Peer
  - Grpc.Core.ServerCallContext.PeerCore
  - Grpc.Core.ServerCallContext.RequestHeaders
  - Grpc.Core.ServerCallContext.RequestHeadersCore
  - Grpc.Core.ServerCallContext.ResponseTrailers
  - Grpc.Core.ServerCallContext.ResponseTrailersCore
  - Grpc.Core.ServerCallContext.Status
  - Grpc.Core.ServerCallContext.StatusCore
  - Grpc.Core.ServerCallContext.UserState
  - Grpc.Core.ServerCallContext.UserStateCore
  - Grpc.Core.ServerCallContext.WriteOptions
  - Grpc.Core.ServerCallContext.WriteOptionsCore
  - Grpc.Core.ServerCallContext.WriteResponseHeadersAsync(Grpc.Core.Metadata)
  - Grpc.Core.ServerCallContext.WriteResponseHeadersAsyncCore(Grpc.Core.Metadata)
  langs:
  - csharp
  - vb
  name: ServerCallContext
  nameWithType: ServerCallContext
  fullName: Grpc.Core.ServerCallContext
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: ServerCallContext
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 28
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nContext for a server-side call.\n"
  example: []
  syntax:
    content: public abstract class ServerCallContext
    content.vb: Public MustInherit Class ServerCallContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Grpc.Core.ServerCallContext.#ctor
  commentId: M:Grpc.Core.ServerCallContext.#ctor
  id: '#ctor'
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: ServerCallContext()
  nameWithType: ServerCallContext.ServerCallContext()
  fullName: Grpc.Core.ServerCallContext.ServerCallContext()
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 35
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nCreates a new instance of <code>ServerCallContext</code>.\n"
  example: []
  syntax:
    content: protected ServerCallContext()
    content.vb: Protected Sub New
  overload: Grpc.Core.ServerCallContext.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Grpc.Core.ServerCallContext.WriteResponseHeadersAsync(Grpc.Core.Metadata)
  commentId: M:Grpc.Core.ServerCallContext.WriteResponseHeadersAsync(Grpc.Core.Metadata)
  id: WriteResponseHeadersAsync(Grpc.Core.Metadata)
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: WriteResponseHeadersAsync(Metadata)
  nameWithType: ServerCallContext.WriteResponseHeadersAsync(Metadata)
  fullName: Grpc.Core.ServerCallContext.WriteResponseHeadersAsync(Grpc.Core.Metadata)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: WriteResponseHeadersAsync
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 46
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nAsynchronously sends response headers for the current call to the client. This method may only be invoked once for each call and needs to be invoked\nbefore any response messages are written. Writing the first response message implicitly sends empty response headers if <code>WriteResponseHeadersAsync</code> haven&apos;t\nbeen called yet.\n"
  example: []
  syntax:
    content: public Task WriteResponseHeadersAsync(Metadata responseHeaders)
    parameters:
    - id: responseHeaders
      type: Grpc.Core.Metadata
      description: The response headers to send.
    return:
      type: System.Threading.Tasks.Task
      description: The task that finished once response headers have been written.
    content.vb: Public Function WriteResponseHeadersAsync(responseHeaders As Metadata) As Task
  overload: Grpc.Core.ServerCallContext.WriteResponseHeadersAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.ServerCallContext.CreatePropagationToken(Grpc.Core.ContextPropagationOptions)
  commentId: M:Grpc.Core.ServerCallContext.CreatePropagationToken(Grpc.Core.ContextPropagationOptions)
  id: CreatePropagationToken(Grpc.Core.ContextPropagationOptions)
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: CreatePropagationToken(ContextPropagationOptions)
  nameWithType: ServerCallContext.CreatePropagationToken(ContextPropagationOptions)
  fullName: Grpc.Core.ServerCallContext.CreatePropagationToken(Grpc.Core.ContextPropagationOptions)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: CreatePropagationToken
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 54
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nCreates a propagation token to be used to propagate call context to a child call.\n"
  example: []
  syntax:
    content: public ContextPropagationToken CreatePropagationToken(ContextPropagationOptions options = null)
    parameters:
    - id: options
      type: Grpc.Core.ContextPropagationOptions
    return:
      type: Grpc.Core.ContextPropagationToken
    content.vb: Public Function CreatePropagationToken(options As ContextPropagationOptions = Nothing) As ContextPropagationToken
  overload: Grpc.Core.ServerCallContext.CreatePropagationToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.ServerCallContext.Method
  commentId: P:Grpc.Core.ServerCallContext.Method
  id: Method
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: ServerCallContext.Method
  fullName: Grpc.Core.ServerCallContext.Method
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: Method
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 60
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Name of method called in this RPC.
  example: []
  syntax:
    content: public string Method { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Method As String
  overload: Grpc.Core.ServerCallContext.Method*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.Host
  commentId: P:Grpc.Core.ServerCallContext.Host
  id: Host
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: ServerCallContext.Host
  fullName: Grpc.Core.ServerCallContext.Host
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: Host
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 63
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Name of host called in this RPC.
  example: []
  syntax:
    content: public string Host { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Host As String
  overload: Grpc.Core.ServerCallContext.Host*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.Peer
  commentId: P:Grpc.Core.ServerCallContext.Peer
  id: Peer
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: Peer
  nameWithType: ServerCallContext.Peer
  fullName: Grpc.Core.ServerCallContext.Peer
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: Peer
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 66
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Address of the remote endpoint in URI format.
  example: []
  syntax:
    content: public string Peer { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Peer As String
  overload: Grpc.Core.ServerCallContext.Peer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.Deadline
  commentId: P:Grpc.Core.ServerCallContext.Deadline
  id: Deadline
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: Deadline
  nameWithType: ServerCallContext.Deadline
  fullName: Grpc.Core.ServerCallContext.Deadline
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: Deadline
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 69
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Deadline for this RPC. The call will be automatically cancelled once the deadline is exceeded.
  example: []
  syntax:
    content: public DateTime Deadline { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property Deadline As Date
  overload: Grpc.Core.ServerCallContext.Deadline*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.RequestHeaders
  commentId: P:Grpc.Core.ServerCallContext.RequestHeaders
  id: RequestHeaders
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: RequestHeaders
  nameWithType: ServerCallContext.RequestHeaders
  fullName: Grpc.Core.ServerCallContext.RequestHeaders
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: RequestHeaders
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 72
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Initial metadata sent by client.
  example: []
  syntax:
    content: public Metadata RequestHeaders { get; }
    parameters: []
    return:
      type: Grpc.Core.Metadata
    content.vb: Public ReadOnly Property RequestHeaders As Metadata
  overload: Grpc.Core.ServerCallContext.RequestHeaders*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.CancellationToken
  commentId: P:Grpc.Core.ServerCallContext.CancellationToken
  id: CancellationToken
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: CancellationToken
  nameWithType: ServerCallContext.CancellationToken
  fullName: Grpc.Core.ServerCallContext.CancellationToken
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: CancellationToken
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 75
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Cancellation token signals when call is cancelled. It is also triggered when the deadline is exceeeded or there was some other error (e.g. network problem).
  example: []
  syntax:
    content: public CancellationToken CancellationToken { get; }
    parameters: []
    return:
      type: System.Threading.CancellationToken
    content.vb: Public ReadOnly Property CancellationToken As CancellationToken
  overload: Grpc.Core.ServerCallContext.CancellationToken*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.ResponseTrailers
  commentId: P:Grpc.Core.ServerCallContext.ResponseTrailers
  id: ResponseTrailers
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: ResponseTrailers
  nameWithType: ServerCallContext.ResponseTrailers
  fullName: Grpc.Core.ServerCallContext.ResponseTrailers
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: ResponseTrailers
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 78
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Trailers to send back to client after RPC finishes.
  example: []
  syntax:
    content: public Metadata ResponseTrailers { get; }
    parameters: []
    return:
      type: Grpc.Core.Metadata
    content.vb: Public ReadOnly Property ResponseTrailers As Metadata
  overload: Grpc.Core.ServerCallContext.ResponseTrailers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.Status
  commentId: P:Grpc.Core.ServerCallContext.Status
  id: Status
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ServerCallContext.Status
  fullName: Grpc.Core.ServerCallContext.Status
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: Status
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 81
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Status to send back to client after RPC finishes.
  example: []
  syntax:
    content: public Status Status { get; set; }
    parameters: []
    return:
      type: Grpc.Core.Status
    content.vb: Public Property Status As Status
  overload: Grpc.Core.ServerCallContext.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Grpc.Core.ServerCallContext.WriteOptions
  commentId: P:Grpc.Core.ServerCallContext.WriteOptions
  id: WriteOptions
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: WriteOptions
  nameWithType: ServerCallContext.WriteOptions
  fullName: Grpc.Core.ServerCallContext.WriteOptions
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: WriteOptions
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 99
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nAllows setting write options for the following write.\nFor streaming response calls, this property is also exposed as on IServerStreamWriter for convenience.\nBoth properties are backed by the same underlying value.\n"
  example: []
  syntax:
    content: public WriteOptions WriteOptions { get; set; }
    parameters: []
    return:
      type: Grpc.Core.WriteOptions
    content.vb: Public Property WriteOptions As WriteOptions
  overload: Grpc.Core.ServerCallContext.WriteOptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Grpc.Core.ServerCallContext.AuthContext
  commentId: P:Grpc.Core.ServerCallContext.AuthContext
  id: AuthContext
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: AuthContext
  nameWithType: ServerCallContext.AuthContext
  fullName: Grpc.Core.ServerCallContext.AuthContext
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: AuthContext
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 116
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nGets the <code>AuthContext</code> associated with this call.\nNote: Access to AuthContext is an experimental API that can change without any prior notice.\n"
  example: []
  syntax:
    content: public AuthContext AuthContext { get; }
    parameters: []
    return:
      type: Grpc.Core.AuthContext
    content.vb: Public ReadOnly Property AuthContext As AuthContext
  overload: Grpc.Core.ServerCallContext.AuthContext*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.UserState
  commentId: P:Grpc.Core.ServerCallContext.UserState
  id: UserState
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: UserState
  nameWithType: ServerCallContext.UserState
  fullName: Grpc.Core.ServerCallContext.UserState
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: UserState
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 122
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nGets a dictionary that can be used by the various interceptors and handlers of this\ncall to store arbitrary state.\n"
  example: []
  syntax:
    content: public IDictionary<object, object> UserState { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
    content.vb: Public ReadOnly Property UserState As IDictionary(Of Object, Object)
  overload: Grpc.Core.ServerCallContext.UserState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.WriteResponseHeadersAsyncCore(Grpc.Core.Metadata)
  commentId: M:Grpc.Core.ServerCallContext.WriteResponseHeadersAsyncCore(Grpc.Core.Metadata)
  id: WriteResponseHeadersAsyncCore(Grpc.Core.Metadata)
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: WriteResponseHeadersAsyncCore(Metadata)
  nameWithType: ServerCallContext.WriteResponseHeadersAsyncCore(Metadata)
  fullName: Grpc.Core.ServerCallContext.WriteResponseHeadersAsyncCore(Grpc.Core.Metadata)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: WriteResponseHeadersAsyncCore
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 125
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Provides implementation of a non-virtual public member.
  example: []
  syntax:
    content: protected abstract Task WriteResponseHeadersAsyncCore(Metadata responseHeaders)
    parameters:
    - id: responseHeaders
      type: Grpc.Core.Metadata
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected MustOverride Function WriteResponseHeadersAsyncCore(responseHeaders As Metadata) As Task
  overload: Grpc.Core.ServerCallContext.WriteResponseHeadersAsyncCore*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Grpc.Core.ServerCallContext.CreatePropagationTokenCore(Grpc.Core.ContextPropagationOptions)
  commentId: M:Grpc.Core.ServerCallContext.CreatePropagationTokenCore(Grpc.Core.ContextPropagationOptions)
  id: CreatePropagationTokenCore(Grpc.Core.ContextPropagationOptions)
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: CreatePropagationTokenCore(ContextPropagationOptions)
  nameWithType: ServerCallContext.CreatePropagationTokenCore(ContextPropagationOptions)
  fullName: Grpc.Core.ServerCallContext.CreatePropagationTokenCore(Grpc.Core.ContextPropagationOptions)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: CreatePropagationTokenCore
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 127
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Provides implementation of a non-virtual public member.
  example: []
  syntax:
    content: protected abstract ContextPropagationToken CreatePropagationTokenCore(ContextPropagationOptions options)
    parameters:
    - id: options
      type: Grpc.Core.ContextPropagationOptions
    return:
      type: Grpc.Core.ContextPropagationToken
    content.vb: Protected MustOverride Function CreatePropagationTokenCore(options As ContextPropagationOptions) As ContextPropagationToken
  overload: Grpc.Core.ServerCallContext.CreatePropagationTokenCore*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Grpc.Core.ServerCallContext.MethodCore
  commentId: P:Grpc.Core.ServerCallContext.MethodCore
  id: MethodCore
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: MethodCore
  nameWithType: ServerCallContext.MethodCore
  fullName: Grpc.Core.ServerCallContext.MethodCore
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: MethodCore
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 129
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Provides implementation of a non-virtual public member.
  example: []
  syntax:
    content: protected abstract string MethodCore { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected MustOverride ReadOnly Property MethodCore As String
  overload: Grpc.Core.ServerCallContext.MethodCore*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.HostCore
  commentId: P:Grpc.Core.ServerCallContext.HostCore
  id: HostCore
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: HostCore
  nameWithType: ServerCallContext.HostCore
  fullName: Grpc.Core.ServerCallContext.HostCore
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: HostCore
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 131
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Provides implementation of a non-virtual public member.
  example: []
  syntax:
    content: protected abstract string HostCore { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected MustOverride ReadOnly Property HostCore As String
  overload: Grpc.Core.ServerCallContext.HostCore*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.PeerCore
  commentId: P:Grpc.Core.ServerCallContext.PeerCore
  id: PeerCore
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: PeerCore
  nameWithType: ServerCallContext.PeerCore
  fullName: Grpc.Core.ServerCallContext.PeerCore
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: PeerCore
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 133
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Provides implementation of a non-virtual public member.
  example: []
  syntax:
    content: protected abstract string PeerCore { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected MustOverride ReadOnly Property PeerCore As String
  overload: Grpc.Core.ServerCallContext.PeerCore*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.DeadlineCore
  commentId: P:Grpc.Core.ServerCallContext.DeadlineCore
  id: DeadlineCore
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: DeadlineCore
  nameWithType: ServerCallContext.DeadlineCore
  fullName: Grpc.Core.ServerCallContext.DeadlineCore
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: DeadlineCore
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 135
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Provides implementation of a non-virtual public member.
  example: []
  syntax:
    content: protected abstract DateTime DeadlineCore { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Protected MustOverride ReadOnly Property DeadlineCore As Date
  overload: Grpc.Core.ServerCallContext.DeadlineCore*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.RequestHeadersCore
  commentId: P:Grpc.Core.ServerCallContext.RequestHeadersCore
  id: RequestHeadersCore
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: RequestHeadersCore
  nameWithType: ServerCallContext.RequestHeadersCore
  fullName: Grpc.Core.ServerCallContext.RequestHeadersCore
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: RequestHeadersCore
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 137
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Provides implementation of a non-virtual public member.
  example: []
  syntax:
    content: protected abstract Metadata RequestHeadersCore { get; }
    parameters: []
    return:
      type: Grpc.Core.Metadata
    content.vb: Protected MustOverride ReadOnly Property RequestHeadersCore As Metadata
  overload: Grpc.Core.ServerCallContext.RequestHeadersCore*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.CancellationTokenCore
  commentId: P:Grpc.Core.ServerCallContext.CancellationTokenCore
  id: CancellationTokenCore
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: CancellationTokenCore
  nameWithType: ServerCallContext.CancellationTokenCore
  fullName: Grpc.Core.ServerCallContext.CancellationTokenCore
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: CancellationTokenCore
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 139
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Provides implementation of a non-virtual public member.
  example: []
  syntax:
    content: protected abstract CancellationToken CancellationTokenCore { get; }
    parameters: []
    return:
      type: System.Threading.CancellationToken
    content.vb: Protected MustOverride ReadOnly Property CancellationTokenCore As CancellationToken
  overload: Grpc.Core.ServerCallContext.CancellationTokenCore*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.ResponseTrailersCore
  commentId: P:Grpc.Core.ServerCallContext.ResponseTrailersCore
  id: ResponseTrailersCore
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: ResponseTrailersCore
  nameWithType: ServerCallContext.ResponseTrailersCore
  fullName: Grpc.Core.ServerCallContext.ResponseTrailersCore
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: ResponseTrailersCore
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 141
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Provides implementation of a non-virtual public member.
  example: []
  syntax:
    content: protected abstract Metadata ResponseTrailersCore { get; }
    parameters: []
    return:
      type: Grpc.Core.Metadata
    content.vb: Protected MustOverride ReadOnly Property ResponseTrailersCore As Metadata
  overload: Grpc.Core.ServerCallContext.ResponseTrailersCore*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.StatusCore
  commentId: P:Grpc.Core.ServerCallContext.StatusCore
  id: StatusCore
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: StatusCore
  nameWithType: ServerCallContext.StatusCore
  fullName: Grpc.Core.ServerCallContext.StatusCore
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: StatusCore
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 143
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Provides implementation of a non-virtual public member.
  example: []
  syntax:
    content: protected abstract Status StatusCore { get; set; }
    parameters: []
    return:
      type: Grpc.Core.Status
    content.vb: Protected MustOverride Property StatusCore As Status
  overload: Grpc.Core.ServerCallContext.StatusCore*
  modifiers.csharp:
  - protected
  - abstract
  - get
  - set
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Grpc.Core.ServerCallContext.WriteOptionsCore
  commentId: P:Grpc.Core.ServerCallContext.WriteOptionsCore
  id: WriteOptionsCore
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: WriteOptionsCore
  nameWithType: ServerCallContext.WriteOptionsCore
  fullName: Grpc.Core.ServerCallContext.WriteOptionsCore
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: WriteOptionsCore
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 145
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Provides implementation of a non-virtual public member.
  example: []
  syntax:
    content: protected abstract WriteOptions WriteOptionsCore { get; set; }
    parameters: []
    return:
      type: Grpc.Core.WriteOptions
    content.vb: Protected MustOverride Property WriteOptionsCore As WriteOptions
  overload: Grpc.Core.ServerCallContext.WriteOptionsCore*
  modifiers.csharp:
  - protected
  - abstract
  - get
  - set
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Grpc.Core.ServerCallContext.AuthContextCore
  commentId: P:Grpc.Core.ServerCallContext.AuthContextCore
  id: AuthContextCore
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: AuthContextCore
  nameWithType: ServerCallContext.AuthContextCore
  fullName: Grpc.Core.ServerCallContext.AuthContextCore
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: AuthContextCore
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 147
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Provides implementation of a non-virtual public member.
  example: []
  syntax:
    content: protected abstract AuthContext AuthContextCore { get; }
    parameters: []
    return:
      type: Grpc.Core.AuthContext
    content.vb: Protected MustOverride ReadOnly Property AuthContextCore As AuthContext
  overload: Grpc.Core.ServerCallContext.AuthContextCore*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Grpc.Core.ServerCallContext.UserStateCore
  commentId: P:Grpc.Core.ServerCallContext.UserStateCore
  id: UserStateCore
  parent: Grpc.Core.ServerCallContext
  langs:
  - csharp
  - vb
  name: UserStateCore
  nameWithType: ServerCallContext.UserStateCore
  fullName: Grpc.Core.ServerCallContext.UserStateCore
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: UserStateCore
    path: src/csharp/Grpc.Core.Api/ServerCallContext.cs
    startLine: 149
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Provides implementation of a non-virtual public member.
  example: []
  syntax:
    content: protected virtual IDictionary<object, object> UserStateCore { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
    content.vb: Protected Overridable ReadOnly Property UserStateCore As IDictionary(Of Object, Object)
  overload: Grpc.Core.ServerCallContext.UserStateCore*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
references:
- uid: Grpc.Core
  commentId: N:Grpc.Core
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.ServerCallContext.#ctor*
  commentId: Overload:Grpc.Core.ServerCallContext.#ctor
  name: ServerCallContext
  nameWithType: ServerCallContext.ServerCallContext
  fullName: Grpc.Core.ServerCallContext.ServerCallContext
- uid: Grpc.Core.ServerCallContext.WriteResponseHeadersAsync*
  commentId: Overload:Grpc.Core.ServerCallContext.WriteResponseHeadersAsync
  name: WriteResponseHeadersAsync
  nameWithType: ServerCallContext.WriteResponseHeadersAsync
  fullName: Grpc.Core.ServerCallContext.WriteResponseHeadersAsync
- uid: Grpc.Core.Metadata
  commentId: T:Grpc.Core.Metadata
  parent: Grpc.Core
  name: Metadata
  nameWithType: Metadata
  fullName: Grpc.Core.Metadata
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Grpc.Core.ServerCallContext.CreatePropagationToken*
  commentId: Overload:Grpc.Core.ServerCallContext.CreatePropagationToken
  name: CreatePropagationToken
  nameWithType: ServerCallContext.CreatePropagationToken
  fullName: Grpc.Core.ServerCallContext.CreatePropagationToken
- uid: Grpc.Core.ContextPropagationOptions
  commentId: T:Grpc.Core.ContextPropagationOptions
  parent: Grpc.Core
  name: ContextPropagationOptions
  nameWithType: ContextPropagationOptions
  fullName: Grpc.Core.ContextPropagationOptions
- uid: Grpc.Core.ContextPropagationToken
  commentId: T:Grpc.Core.ContextPropagationToken
  parent: Grpc.Core
  name: ContextPropagationToken
  nameWithType: ContextPropagationToken
  fullName: Grpc.Core.ContextPropagationToken
- uid: Grpc.Core.ServerCallContext.Method*
  commentId: Overload:Grpc.Core.ServerCallContext.Method
  name: Method
  nameWithType: ServerCallContext.Method
  fullName: Grpc.Core.ServerCallContext.Method
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Grpc.Core.ServerCallContext.Host*
  commentId: Overload:Grpc.Core.ServerCallContext.Host
  name: Host
  nameWithType: ServerCallContext.Host
  fullName: Grpc.Core.ServerCallContext.Host
- uid: Grpc.Core.ServerCallContext.Peer*
  commentId: Overload:Grpc.Core.ServerCallContext.Peer
  name: Peer
  nameWithType: ServerCallContext.Peer
  fullName: Grpc.Core.ServerCallContext.Peer
- uid: Grpc.Core.ServerCallContext.Deadline*
  commentId: Overload:Grpc.Core.ServerCallContext.Deadline
  name: Deadline
  nameWithType: ServerCallContext.Deadline
  fullName: Grpc.Core.ServerCallContext.Deadline
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Grpc.Core.ServerCallContext.RequestHeaders*
  commentId: Overload:Grpc.Core.ServerCallContext.RequestHeaders
  name: RequestHeaders
  nameWithType: ServerCallContext.RequestHeaders
  fullName: Grpc.Core.ServerCallContext.RequestHeaders
- uid: Grpc.Core.ServerCallContext.CancellationToken*
  commentId: Overload:Grpc.Core.ServerCallContext.CancellationToken
  name: CancellationToken
  nameWithType: ServerCallContext.CancellationToken
  fullName: Grpc.Core.ServerCallContext.CancellationToken
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Grpc.Core.ServerCallContext.ResponseTrailers*
  commentId: Overload:Grpc.Core.ServerCallContext.ResponseTrailers
  name: ResponseTrailers
  nameWithType: ServerCallContext.ResponseTrailers
  fullName: Grpc.Core.ServerCallContext.ResponseTrailers
- uid: Grpc.Core.ServerCallContext.Status*
  commentId: Overload:Grpc.Core.ServerCallContext.Status
  name: Status
  nameWithType: ServerCallContext.Status
  fullName: Grpc.Core.ServerCallContext.Status
- uid: Grpc.Core.Status
  commentId: T:Grpc.Core.Status
  parent: Grpc.Core
  name: Status
  nameWithType: Status
  fullName: Grpc.Core.Status
- uid: Grpc.Core.ServerCallContext.WriteOptions*
  commentId: Overload:Grpc.Core.ServerCallContext.WriteOptions
  name: WriteOptions
  nameWithType: ServerCallContext.WriteOptions
  fullName: Grpc.Core.ServerCallContext.WriteOptions
- uid: Grpc.Core.WriteOptions
  commentId: T:Grpc.Core.WriteOptions
  parent: Grpc.Core
  name: WriteOptions
  nameWithType: WriteOptions
  fullName: Grpc.Core.WriteOptions
- uid: Grpc.Core.ServerCallContext.AuthContext*
  commentId: Overload:Grpc.Core.ServerCallContext.AuthContext
  name: AuthContext
  nameWithType: ServerCallContext.AuthContext
  fullName: Grpc.Core.ServerCallContext.AuthContext
- uid: Grpc.Core.AuthContext
  commentId: T:Grpc.Core.AuthContext
  parent: Grpc.Core
  name: AuthContext
  nameWithType: AuthContext
  fullName: Grpc.Core.AuthContext
- uid: Grpc.Core.ServerCallContext.UserState*
  commentId: Overload:Grpc.Core.ServerCallContext.UserState
  name: UserState
  nameWithType: ServerCallContext.UserState
  fullName: Grpc.Core.ServerCallContext.UserState
- uid: System.Collections.Generic.IDictionary{System.Object,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.Object,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Object, Object>
  nameWithType: IDictionary<Object, Object>
  fullName: System.Collections.Generic.IDictionary<System.Object, System.Object>
  nameWithType.vb: IDictionary(Of Object, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Object, System.Object)
  name.vb: IDictionary(Of Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Grpc.Core.ServerCallContext.WriteResponseHeadersAsyncCore*
  commentId: Overload:Grpc.Core.ServerCallContext.WriteResponseHeadersAsyncCore
  name: WriteResponseHeadersAsyncCore
  nameWithType: ServerCallContext.WriteResponseHeadersAsyncCore
  fullName: Grpc.Core.ServerCallContext.WriteResponseHeadersAsyncCore
- uid: Grpc.Core.ServerCallContext.CreatePropagationTokenCore*
  commentId: Overload:Grpc.Core.ServerCallContext.CreatePropagationTokenCore
  name: CreatePropagationTokenCore
  nameWithType: ServerCallContext.CreatePropagationTokenCore
  fullName: Grpc.Core.ServerCallContext.CreatePropagationTokenCore
- uid: Grpc.Core.ServerCallContext.MethodCore*
  commentId: Overload:Grpc.Core.ServerCallContext.MethodCore
  name: MethodCore
  nameWithType: ServerCallContext.MethodCore
  fullName: Grpc.Core.ServerCallContext.MethodCore
- uid: Grpc.Core.ServerCallContext.HostCore*
  commentId: Overload:Grpc.Core.ServerCallContext.HostCore
  name: HostCore
  nameWithType: ServerCallContext.HostCore
  fullName: Grpc.Core.ServerCallContext.HostCore
- uid: Grpc.Core.ServerCallContext.PeerCore*
  commentId: Overload:Grpc.Core.ServerCallContext.PeerCore
  name: PeerCore
  nameWithType: ServerCallContext.PeerCore
  fullName: Grpc.Core.ServerCallContext.PeerCore
- uid: Grpc.Core.ServerCallContext.DeadlineCore*
  commentId: Overload:Grpc.Core.ServerCallContext.DeadlineCore
  name: DeadlineCore
  nameWithType: ServerCallContext.DeadlineCore
  fullName: Grpc.Core.ServerCallContext.DeadlineCore
- uid: Grpc.Core.ServerCallContext.RequestHeadersCore*
  commentId: Overload:Grpc.Core.ServerCallContext.RequestHeadersCore
  name: RequestHeadersCore
  nameWithType: ServerCallContext.RequestHeadersCore
  fullName: Grpc.Core.ServerCallContext.RequestHeadersCore
- uid: Grpc.Core.ServerCallContext.CancellationTokenCore*
  commentId: Overload:Grpc.Core.ServerCallContext.CancellationTokenCore
  name: CancellationTokenCore
  nameWithType: ServerCallContext.CancellationTokenCore
  fullName: Grpc.Core.ServerCallContext.CancellationTokenCore
- uid: Grpc.Core.ServerCallContext.ResponseTrailersCore*
  commentId: Overload:Grpc.Core.ServerCallContext.ResponseTrailersCore
  name: ResponseTrailersCore
  nameWithType: ServerCallContext.ResponseTrailersCore
  fullName: Grpc.Core.ServerCallContext.ResponseTrailersCore
- uid: Grpc.Core.ServerCallContext.StatusCore*
  commentId: Overload:Grpc.Core.ServerCallContext.StatusCore
  name: StatusCore
  nameWithType: ServerCallContext.StatusCore
  fullName: Grpc.Core.ServerCallContext.StatusCore
- uid: Grpc.Core.ServerCallContext.WriteOptionsCore*
  commentId: Overload:Grpc.Core.ServerCallContext.WriteOptionsCore
  name: WriteOptionsCore
  nameWithType: ServerCallContext.WriteOptionsCore
  fullName: Grpc.Core.ServerCallContext.WriteOptionsCore
- uid: Grpc.Core.ServerCallContext.AuthContextCore*
  commentId: Overload:Grpc.Core.ServerCallContext.AuthContextCore
  name: AuthContextCore
  nameWithType: ServerCallContext.AuthContextCore
  fullName: Grpc.Core.ServerCallContext.AuthContextCore
- uid: Grpc.Core.ServerCallContext.UserStateCore*
  commentId: Overload:Grpc.Core.ServerCallContext.UserStateCore
  name: UserStateCore
  nameWithType: ServerCallContext.UserStateCore
  fullName: Grpc.Core.ServerCallContext.UserStateCore
