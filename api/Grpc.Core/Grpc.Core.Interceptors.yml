### YamlMime:ManagedReference
items:
- uid: Grpc.Core.Interceptors
  commentId: N:Grpc.Core.Interceptors
  id: Grpc.Core.Interceptors
  children:
  - Grpc.Core.Interceptors.CallInvokerExtensions
  - Grpc.Core.Interceptors.ChannelExtensions
  - Grpc.Core.Interceptors.ClientInterceptorContext`2
  - Grpc.Core.Interceptors.Interceptor
  - Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation`2
  - Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation`2
  - Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation`2
  - Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation`2
  - Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation`2
  - Grpc.Core.Interceptors.ServerServiceDefinitionExtensions
  langs:
  - csharp
  - vb
  name: Grpc.Core.Interceptors
  nameWithType: Grpc.Core.Interceptors
  fullName: Grpc.Core.Interceptors
  type: Namespace
  assemblies:
  - Grpc.Core
references:
- uid: Grpc.Core.Interceptors.CallInvokerExtensions
  commentId: T:Grpc.Core.Interceptors.CallInvokerExtensions
  parent: Grpc.Core.Interceptors
  isExternal: false
  name: CallInvokerExtensions
  nameWithType: CallInvokerExtensions
  fullName: Grpc.Core.Interceptors.CallInvokerExtensions
- uid: Grpc.Core.Interceptors.ChannelExtensions
  commentId: T:Grpc.Core.Interceptors.ChannelExtensions
  parent: Grpc.Core.Interceptors
  isExternal: false
  name: ChannelExtensions
  nameWithType: ChannelExtensions
  fullName: Grpc.Core.Interceptors.ChannelExtensions
- uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
  commentId: T:Grpc.Core.Interceptors.ClientInterceptorContext`2
  isExternal: false
  name: ClientInterceptorContext<TRequest, TResponse>
  nameWithType: ClientInterceptorContext<TRequest, TResponse>
  fullName: Grpc.Core.Interceptors.ClientInterceptorContext<TRequest, TResponse>
  nameWithType.vb: ClientInterceptorContext(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.Interceptors.ClientInterceptorContext(Of TRequest, TResponse)
  name.vb: ClientInterceptorContext(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.Interceptors.ClientInterceptorContext`2
    name: ClientInterceptorContext
    nameWithType: ClientInterceptorContext
    fullName: Grpc.Core.Interceptors.ClientInterceptorContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor
  commentId: T:Grpc.Core.Interceptors.Interceptor
  parent: Grpc.Core.Interceptors
  isExternal: false
  name: Interceptor
  nameWithType: Interceptor
  fullName: Grpc.Core.Interceptors.Interceptor
- uid: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation`2
  commentId: T:Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation`2
  isExternal: false
  name: Interceptor.BlockingUnaryCallContinuation<TRequest, TResponse>
  nameWithType: Interceptor.BlockingUnaryCallContinuation<TRequest, TResponse>
  fullName: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation<TRequest, TResponse>
  nameWithType.vb: Interceptor.BlockingUnaryCallContinuation(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation(Of TRequest, TResponse)
  name.vb: Interceptor.BlockingUnaryCallContinuation(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation`2
    name: Interceptor.BlockingUnaryCallContinuation
    nameWithType: Interceptor.BlockingUnaryCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation`2
    name: Interceptor.BlockingUnaryCallContinuation
    nameWithType: Interceptor.BlockingUnaryCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.BlockingUnaryCallContinuation
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation`2
  commentId: T:Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation`2
  isExternal: false
  name: Interceptor.AsyncUnaryCallContinuation<TRequest, TResponse>
  nameWithType: Interceptor.AsyncUnaryCallContinuation<TRequest, TResponse>
  fullName: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation<TRequest, TResponse>
  nameWithType.vb: Interceptor.AsyncUnaryCallContinuation(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation(Of TRequest, TResponse)
  name.vb: Interceptor.AsyncUnaryCallContinuation(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation`2
    name: Interceptor.AsyncUnaryCallContinuation
    nameWithType: Interceptor.AsyncUnaryCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation`2
    name: Interceptor.AsyncUnaryCallContinuation
    nameWithType: Interceptor.AsyncUnaryCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncUnaryCallContinuation
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation`2
  commentId: T:Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation`2
  isExternal: false
  name: Interceptor.AsyncServerStreamingCallContinuation<TRequest, TResponse>
  nameWithType: Interceptor.AsyncServerStreamingCallContinuation<TRequest, TResponse>
  fullName: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation<TRequest, TResponse>
  nameWithType.vb: Interceptor.AsyncServerStreamingCallContinuation(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation(Of TRequest, TResponse)
  name.vb: Interceptor.AsyncServerStreamingCallContinuation(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation`2
    name: Interceptor.AsyncServerStreamingCallContinuation
    nameWithType: Interceptor.AsyncServerStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation`2
    name: Interceptor.AsyncServerStreamingCallContinuation
    nameWithType: Interceptor.AsyncServerStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncServerStreamingCallContinuation
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation`2
  commentId: T:Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation`2
  isExternal: false
  name: Interceptor.AsyncClientStreamingCallContinuation<TRequest, TResponse>
  nameWithType: Interceptor.AsyncClientStreamingCallContinuation<TRequest, TResponse>
  fullName: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation<TRequest, TResponse>
  nameWithType.vb: Interceptor.AsyncClientStreamingCallContinuation(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation(Of TRequest, TResponse)
  name.vb: Interceptor.AsyncClientStreamingCallContinuation(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation`2
    name: Interceptor.AsyncClientStreamingCallContinuation
    nameWithType: Interceptor.AsyncClientStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation`2
    name: Interceptor.AsyncClientStreamingCallContinuation
    nameWithType: Interceptor.AsyncClientStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncClientStreamingCallContinuation
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation`2
  commentId: T:Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation`2
  isExternal: false
  name: Interceptor.AsyncDuplexStreamingCallContinuation<TRequest, TResponse>
  nameWithType: Interceptor.AsyncDuplexStreamingCallContinuation<TRequest, TResponse>
  fullName: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation<TRequest, TResponse>
  nameWithType.vb: Interceptor.AsyncDuplexStreamingCallContinuation(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation(Of TRequest, TResponse)
  name.vb: Interceptor.AsyncDuplexStreamingCallContinuation(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation`2
    name: Interceptor.AsyncDuplexStreamingCallContinuation
    nameWithType: Interceptor.AsyncDuplexStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation`2
    name: Interceptor.AsyncDuplexStreamingCallContinuation
    nameWithType: Interceptor.AsyncDuplexStreamingCallContinuation
    fullName: Grpc.Core.Interceptors.Interceptor.AsyncDuplexStreamingCallContinuation
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.ServerServiceDefinitionExtensions
  commentId: T:Grpc.Core.Interceptors.ServerServiceDefinitionExtensions
  parent: Grpc.Core.Interceptors
  isExternal: false
  name: ServerServiceDefinitionExtensions
  nameWithType: ServerServiceDefinitionExtensions
  fullName: Grpc.Core.Interceptors.ServerServiceDefinitionExtensions
- uid: Grpc.Core.Interceptors
  commentId: N:Grpc.Core.Interceptors
  isExternal: false
  name: Grpc.Core.Interceptors
  nameWithType: Grpc.Core.Interceptors
  fullName: Grpc.Core.Interceptors
