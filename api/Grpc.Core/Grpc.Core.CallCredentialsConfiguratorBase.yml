### YamlMime:ManagedReference
items:
- uid: Grpc.Core.CallCredentialsConfiguratorBase
  commentId: T:Grpc.Core.CallCredentialsConfiguratorBase
  id: CallCredentialsConfiguratorBase
  parent: Grpc.Core
  children:
  - Grpc.Core.CallCredentialsConfiguratorBase.SetAsyncAuthInterceptorCredentials(System.Object,Grpc.Core.AsyncAuthInterceptor)
  - Grpc.Core.CallCredentialsConfiguratorBase.SetCompositeCredentials(System.Object,System.Collections.Generic.IReadOnlyList{Grpc.Core.CallCredentials})
  langs:
  - csharp
  - vb
  name: CallCredentialsConfiguratorBase
  nameWithType: CallCredentialsConfiguratorBase
  fullName: Grpc.Core.CallCredentialsConfiguratorBase
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/CallCredentialsConfiguratorBase.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: CallCredentialsConfiguratorBase
    path: src/csharp/Grpc.Core.Api/CallCredentialsConfiguratorBase.cs
    startLine: 26
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nBase class for objects that can consume configuration from <code>CallCredentials</code> objects.\nNote: experimental API that can change or be removed without any prior notice.\n"
  example: []
  syntax:
    content: public abstract class CallCredentialsConfiguratorBase
    content.vb: Public MustInherit Class CallCredentialsConfiguratorBase
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Grpc.Core.CallCredentialsConfiguratorBase.SetCompositeCredentials(System.Object,System.Collections.Generic.IReadOnlyList{Grpc.Core.CallCredentials})
  commentId: M:Grpc.Core.CallCredentialsConfiguratorBase.SetCompositeCredentials(System.Object,System.Collections.Generic.IReadOnlyList{Grpc.Core.CallCredentials})
  id: SetCompositeCredentials(System.Object,System.Collections.Generic.IReadOnlyList{Grpc.Core.CallCredentials})
  parent: Grpc.Core.CallCredentialsConfiguratorBase
  langs:
  - csharp
  - vb
  name: SetCompositeCredentials(Object, IReadOnlyList<CallCredentials>)
  nameWithType: CallCredentialsConfiguratorBase.SetCompositeCredentials(Object, IReadOnlyList<CallCredentials>)
  fullName: Grpc.Core.CallCredentialsConfiguratorBase.SetCompositeCredentials(System.Object, System.Collections.Generic.IReadOnlyList<Grpc.Core.CallCredentials>)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/CallCredentialsConfiguratorBase.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: SetCompositeCredentials
    path: src/csharp/Grpc.Core.Api/CallCredentialsConfiguratorBase.cs
    startLine: 31
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nConsumes configuration for composite call credentials.\n"
  example: []
  syntax:
    content: public abstract void SetCompositeCredentials(object state, IReadOnlyList<CallCredentials> credentials)
    parameters:
    - id: state
      type: System.Object
    - id: credentials
      type: System.Collections.Generic.IReadOnlyList{Grpc.Core.CallCredentials}
    content.vb: Public MustOverride Sub SetCompositeCredentials(state As Object, credentials As IReadOnlyList(Of CallCredentials))
  overload: Grpc.Core.CallCredentialsConfiguratorBase.SetCompositeCredentials*
  nameWithType.vb: CallCredentialsConfiguratorBase.SetCompositeCredentials(Object, IReadOnlyList(Of CallCredentials))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Grpc.Core.CallCredentialsConfiguratorBase.SetCompositeCredentials(System.Object, System.Collections.Generic.IReadOnlyList(Of Grpc.Core.CallCredentials))
  name.vb: SetCompositeCredentials(Object, IReadOnlyList(Of CallCredentials))
- uid: Grpc.Core.CallCredentialsConfiguratorBase.SetAsyncAuthInterceptorCredentials(System.Object,Grpc.Core.AsyncAuthInterceptor)
  commentId: M:Grpc.Core.CallCredentialsConfiguratorBase.SetAsyncAuthInterceptorCredentials(System.Object,Grpc.Core.AsyncAuthInterceptor)
  id: SetAsyncAuthInterceptorCredentials(System.Object,Grpc.Core.AsyncAuthInterceptor)
  parent: Grpc.Core.CallCredentialsConfiguratorBase
  langs:
  - csharp
  - vb
  name: SetAsyncAuthInterceptorCredentials(Object, AsyncAuthInterceptor)
  nameWithType: CallCredentialsConfiguratorBase.SetAsyncAuthInterceptorCredentials(Object, AsyncAuthInterceptor)
  fullName: Grpc.Core.CallCredentialsConfiguratorBase.SetAsyncAuthInterceptorCredentials(System.Object, Grpc.Core.AsyncAuthInterceptor)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/CallCredentialsConfiguratorBase.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: SetAsyncAuthInterceptorCredentials
    path: src/csharp/Grpc.Core.Api/CallCredentialsConfiguratorBase.cs
    startLine: 36
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nConsumes configuration for call credentials created from <code>AsyncAuthInterceptor</code>\n"
  example: []
  syntax:
    content: public abstract void SetAsyncAuthInterceptorCredentials(object state, AsyncAuthInterceptor interceptor)
    parameters:
    - id: state
      type: System.Object
    - id: interceptor
      type: Grpc.Core.AsyncAuthInterceptor
    content.vb: Public MustOverride Sub SetAsyncAuthInterceptorCredentials(state As Object, interceptor As AsyncAuthInterceptor)
  overload: Grpc.Core.CallCredentialsConfiguratorBase.SetAsyncAuthInterceptorCredentials*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Grpc.Core
  commentId: N:Grpc.Core
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.CallCredentialsConfiguratorBase.SetCompositeCredentials*
  commentId: Overload:Grpc.Core.CallCredentialsConfiguratorBase.SetCompositeCredentials
  name: SetCompositeCredentials
  nameWithType: CallCredentialsConfiguratorBase.SetCompositeCredentials
  fullName: Grpc.Core.CallCredentialsConfiguratorBase.SetCompositeCredentials
- uid: System.Collections.Generic.IReadOnlyList{Grpc.Core.CallCredentials}
  commentId: T:System.Collections.Generic.IReadOnlyList{Grpc.Core.CallCredentials}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<CallCredentials>
  nameWithType: IReadOnlyList<CallCredentials>
  fullName: System.Collections.Generic.IReadOnlyList<Grpc.Core.CallCredentials>
  nameWithType.vb: IReadOnlyList(Of CallCredentials)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Grpc.Core.CallCredentials)
  name.vb: IReadOnlyList(Of CallCredentials)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Grpc.Core.CallCredentials
    name: CallCredentials
    nameWithType: CallCredentials
    fullName: Grpc.Core.CallCredentials
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Grpc.Core.CallCredentials
    name: CallCredentials
    nameWithType: CallCredentials
    fullName: Grpc.Core.CallCredentials
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Grpc.Core.CallCredentialsConfiguratorBase.SetAsyncAuthInterceptorCredentials*
  commentId: Overload:Grpc.Core.CallCredentialsConfiguratorBase.SetAsyncAuthInterceptorCredentials
  name: SetAsyncAuthInterceptorCredentials
  nameWithType: CallCredentialsConfiguratorBase.SetAsyncAuthInterceptorCredentials
  fullName: Grpc.Core.CallCredentialsConfiguratorBase.SetAsyncAuthInterceptorCredentials
- uid: Grpc.Core.AsyncAuthInterceptor
  commentId: T:Grpc.Core.AsyncAuthInterceptor
  parent: Grpc.Core
  name: AsyncAuthInterceptor
  nameWithType: AsyncAuthInterceptor
  fullName: Grpc.Core.AsyncAuthInterceptor
