### YamlMime:ManagedReference
items:
- uid: Grpc.Core.LiteClientBase
  commentId: T:Grpc.Core.LiteClientBase
  id: LiteClientBase
  parent: Grpc.Core
  children:
  - Grpc.Core.LiteClientBase.#ctor
  - Grpc.Core.LiteClientBase.#ctor(Grpc.Core.CallInvoker)
  - Grpc.Core.LiteClientBase.CallInvoker
  langs:
  - csharp
  - vb
  name: LiteClientBase
  nameWithType: LiteClientBase
  fullName: Grpc.Core.LiteClientBase
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/LiteClientBase.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: LiteClientBase
    path: src/csharp/Grpc.Core.Api/LiteClientBase.cs
    startLine: 30
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nBase class for lightweight client-side stubs.\nAll calls are invoked via a <code>CallInvoker</code>.\nLite client stubs have no configuration knobs, all configuration\nis provided by decorating the call invoker.\nNote: experimental API that can change or be removed without any prior notice.\n"
  example: []
  syntax:
    content: public abstract class LiteClientBase
    content.vb: Public MustInherit Class LiteClientBase
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Grpc.Core.LiteClientBase.#ctor
  commentId: M:Grpc.Core.LiteClientBase.#ctor
  id: '#ctor'
  parent: Grpc.Core.LiteClientBase
  langs:
  - csharp
  - vb
  name: LiteClientBase()
  nameWithType: LiteClientBase.LiteClientBase()
  fullName: Grpc.Core.LiteClientBase.LiteClientBase()
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/LiteClientBase.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core.Api/LiteClientBase.cs
    startLine: 40
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nInitializes a new instance of <code>LiteClientBase</code> class that\nthrows <code>NotImplementedException</code> upon invocation of any RPC.\nThis constructor is only provided to allow creation of test doubles\nfor client classes (e.g. mocking requires a parameterless constructor).\n"
  example: []
  syntax:
    content: protected LiteClientBase()
    content.vb: Protected Sub New
  overload: Grpc.Core.LiteClientBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Grpc.Core.LiteClientBase.#ctor(Grpc.Core.CallInvoker)
  commentId: M:Grpc.Core.LiteClientBase.#ctor(Grpc.Core.CallInvoker)
  id: '#ctor(Grpc.Core.CallInvoker)'
  parent: Grpc.Core.LiteClientBase
  langs:
  - csharp
  - vb
  name: LiteClientBase(CallInvoker)
  nameWithType: LiteClientBase.LiteClientBase(CallInvoker)
  fullName: Grpc.Core.LiteClientBase.LiteClientBase(Grpc.Core.CallInvoker)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/LiteClientBase.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core.Api/LiteClientBase.cs
    startLine: 48
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nInitializes a new instance of <code>ClientBase</code> class.\n"
  example: []
  syntax:
    content: public LiteClientBase(CallInvoker callInvoker)
    parameters:
    - id: callInvoker
      type: Grpc.Core.CallInvoker
      description: The <code>CallInvoker</code> for remote call invocation.
    content.vb: Public Sub New(callInvoker As CallInvoker)
  overload: Grpc.Core.LiteClientBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.LiteClientBase.CallInvoker
  commentId: P:Grpc.Core.LiteClientBase.CallInvoker
  id: CallInvoker
  parent: Grpc.Core.LiteClientBase
  langs:
  - csharp
  - vb
  name: CallInvoker
  nameWithType: LiteClientBase.CallInvoker
  fullName: Grpc.Core.LiteClientBase.CallInvoker
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/LiteClientBase.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: CallInvoker
    path: src/csharp/Grpc.Core.Api/LiteClientBase.cs
    startLine: 56
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nGets the call invoker.\n"
  example: []
  syntax:
    content: protected CallInvoker CallInvoker { get; }
    parameters: []
    return:
      type: Grpc.Core.CallInvoker
    content.vb: Protected ReadOnly Property CallInvoker As CallInvoker
  overload: Grpc.Core.LiteClientBase.CallInvoker*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
references:
- uid: Grpc.Core
  commentId: N:Grpc.Core
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.LiteClientBase.#ctor*
  commentId: Overload:Grpc.Core.LiteClientBase.#ctor
  name: LiteClientBase
  nameWithType: LiteClientBase.LiteClientBase
  fullName: Grpc.Core.LiteClientBase.LiteClientBase
- uid: Grpc.Core.CallInvoker
  commentId: T:Grpc.Core.CallInvoker
  parent: Grpc.Core
  name: CallInvoker
  nameWithType: CallInvoker
  fullName: Grpc.Core.CallInvoker
- uid: Grpc.Core.LiteClientBase.CallInvoker*
  commentId: Overload:Grpc.Core.LiteClientBase.CallInvoker
  name: CallInvoker
  nameWithType: LiteClientBase.CallInvoker
  fullName: Grpc.Core.LiteClientBase.CallInvoker
