### YamlMime:ManagedReference
items:
- uid: Grpc.Core.AuthProperty
  commentId: T:Grpc.Core.AuthProperty
  id: AuthProperty
  parent: Grpc.Core
  children:
  - Grpc.Core.AuthProperty.Create(System.String,System.Byte[])
  - Grpc.Core.AuthProperty.Name
  - Grpc.Core.AuthProperty.Value
  - Grpc.Core.AuthProperty.ValueBytes
  langs:
  - csharp
  - vb
  name: AuthProperty
  nameWithType: AuthProperty
  fullName: Grpc.Core.AuthProperty
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core/AuthProperty.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: AuthProperty
    path: src/csharp/Grpc.Core/AuthProperty.cs
    startLine: 45
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nA property of an <xref href=\"Grpc.Core.AuthContext\" data-throw-if-not-resolved=\"false\"></xref>.\nNote: experimental API that can change or be removed without any prior notice.\n"
  example: []
  syntax:
    content: public class AuthProperty
    content.vb: Public Class AuthProperty
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Grpc.Core.AuthProperty.Name
  commentId: P:Grpc.Core.AuthProperty.Name
  id: Name
  parent: Grpc.Core.AuthProperty
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AuthProperty.Name
  fullName: Grpc.Core.AuthProperty.Name
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/AuthProperty.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: Name
    path: src/csharp/Grpc.Core/AuthProperty.cs
    startLine: 61
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGets the name of the property.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Grpc.Core.AuthProperty.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.AuthProperty.Value
  commentId: P:Grpc.Core.AuthProperty.Value
  id: Value
  parent: Grpc.Core.AuthProperty
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: AuthProperty.Value
  fullName: Grpc.Core.AuthProperty.Value
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/AuthProperty.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: Value
    path: src/csharp/Grpc.Core/AuthProperty.cs
    startLine: 72
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGets the string value of the property.\n"
  example: []
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: Grpc.Core.AuthProperty.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.AuthProperty.ValueBytes
  commentId: P:Grpc.Core.AuthProperty.ValueBytes
  id: ValueBytes
  parent: Grpc.Core.AuthProperty
  langs:
  - csharp
  - vb
  name: ValueBytes
  nameWithType: AuthProperty.ValueBytes
  fullName: Grpc.Core.AuthProperty.ValueBytes
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/AuthProperty.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: ValueBytes
    path: src/csharp/Grpc.Core/AuthProperty.cs
    startLine: 83
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGets the binary value of the property.\n"
  example: []
  syntax:
    content: public byte[] ValueBytes { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property ValueBytes As Byte()
  overload: Grpc.Core.AuthProperty.ValueBytes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.AuthProperty.Create(System.String,System.Byte[])
  commentId: M:Grpc.Core.AuthProperty.Create(System.String,System.Byte[])
  id: Create(System.String,System.Byte[])
  parent: Grpc.Core.AuthProperty
  langs:
  - csharp
  - vb
  name: Create(String, Byte[])
  nameWithType: AuthProperty.Create(String, Byte[])
  fullName: Grpc.Core.AuthProperty.Create(System.String, System.Byte[])
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/AuthProperty.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: Create
    path: src/csharp/Grpc.Core/AuthProperty.cs
    startLine: 98
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nCreates an instance of <code>AuthProperty</code>.\n"
  example: []
  syntax:
    content: public static AuthProperty Create(string name, byte[] valueBytes)
    parameters:
    - id: name
      type: System.String
      description: the name
    - id: valueBytes
      type: System.Byte[]
      description: the binary value of the property
    return:
      type: Grpc.Core.AuthProperty
    content.vb: Public Shared Function Create(name As String, valueBytes As Byte()) As AuthProperty
  overload: Grpc.Core.AuthProperty.Create*
  nameWithType.vb: AuthProperty.Create(String, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Grpc.Core.AuthProperty.Create(System.String, System.Byte())
  name.vb: Create(String, Byte())
references:
- uid: Grpc.Core.AuthContext
  commentId: T:Grpc.Core.AuthContext
  parent: Grpc.Core
  isExternal: false
  name: AuthContext
  nameWithType: AuthContext
  fullName: Grpc.Core.AuthContext
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: false
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.AuthProperty.Name*
  commentId: Overload:Grpc.Core.AuthProperty.Name
  isExternal: false
  name: Name
  nameWithType: AuthProperty.Name
  fullName: Grpc.Core.AuthProperty.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Grpc.Core.AuthProperty.Value*
  commentId: Overload:Grpc.Core.AuthProperty.Value
  isExternal: false
  name: Value
  nameWithType: AuthProperty.Value
  fullName: Grpc.Core.AuthProperty.Value
- uid: Grpc.Core.AuthProperty.ValueBytes*
  commentId: Overload:Grpc.Core.AuthProperty.ValueBytes
  isExternal: false
  name: ValueBytes
  nameWithType: AuthProperty.ValueBytes
  fullName: Grpc.Core.AuthProperty.ValueBytes
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Grpc.Core.AuthProperty.Create*
  commentId: Overload:Grpc.Core.AuthProperty.Create
  isExternal: false
  name: Create
  nameWithType: AuthProperty.Create
  fullName: Grpc.Core.AuthProperty.Create
- uid: Grpc.Core.AuthProperty
  commentId: T:Grpc.Core.AuthProperty
  parent: Grpc.Core
  isExternal: false
  name: AuthProperty
  nameWithType: AuthProperty
  fullName: Grpc.Core.AuthProperty
