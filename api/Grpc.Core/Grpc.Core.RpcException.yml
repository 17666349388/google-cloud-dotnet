### YamlMime:ManagedReference
items:
- uid: Grpc.Core.RpcException
  commentId: T:Grpc.Core.RpcException
  id: RpcException
  parent: Grpc.Core
  children:
  - Grpc.Core.RpcException.#ctor(Grpc.Core.Status)
  - Grpc.Core.RpcException.#ctor(Grpc.Core.Status,Grpc.Core.Metadata)
  - Grpc.Core.RpcException.#ctor(Grpc.Core.Status,Grpc.Core.Metadata,System.String)
  - Grpc.Core.RpcException.#ctor(Grpc.Core.Status,System.String)
  - Grpc.Core.RpcException.Status
  - Grpc.Core.RpcException.StatusCode
  - Grpc.Core.RpcException.Trailers
  langs:
  - csharp
  - vb
  name: RpcException
  nameWithType: RpcException
  fullName: Grpc.Core.RpcException
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/RpcException.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: RpcException
    path: src/csharp/Grpc.Core.Api/RpcException.cs
    startLine: 26
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nThrown when remote procedure call fails. Every <code>RpcException</code> is associated with a resulting <xref href=\"Grpc.Core.RpcException.Status\" data-throw-if-not-resolved=\"false\"></xref> of the call.\n"
  example: []
  syntax:
    content: 'public class RpcException : Exception, ISerializable, _Exception'
    content.vb: >-
      Public Class RpcException
          Inherits Exception
          Implements ISerializable, _Exception
  inheritance:
  - System.Object
  - System.Exception
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Message
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Grpc.Core.RpcException.#ctor(Grpc.Core.Status)
  commentId: M:Grpc.Core.RpcException.#ctor(Grpc.Core.Status)
  id: '#ctor(Grpc.Core.Status)'
  parent: Grpc.Core.RpcException
  langs:
  - csharp
  - vb
  name: RpcException(Status)
  nameWithType: RpcException.RpcException(Status)
  fullName: Grpc.Core.RpcException.RpcException(Grpc.Core.Status)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/RpcException.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core.Api/RpcException.cs
    startLine: 35
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nCreates a new <code>RpcException</code> associated with given status.\n"
  example: []
  syntax:
    content: public RpcException(Status status)
    parameters:
    - id: status
      type: Grpc.Core.Status
      description: Resulting status of a call.
    content.vb: Public Sub New(status As Status)
  overload: Grpc.Core.RpcException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.RpcException.#ctor(Grpc.Core.Status,System.String)
  commentId: M:Grpc.Core.RpcException.#ctor(Grpc.Core.Status,System.String)
  id: '#ctor(Grpc.Core.Status,System.String)'
  parent: Grpc.Core.RpcException
  langs:
  - csharp
  - vb
  name: RpcException(Status, String)
  nameWithType: RpcException.RpcException(Status, String)
  fullName: Grpc.Core.RpcException.RpcException(Grpc.Core.Status, System.String)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/RpcException.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core.Api/RpcException.cs
    startLine: 44
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nCreates a new <code>RpcException</code> associated with given status and message.\n"
  example: []
  syntax:
    content: public RpcException(Status status, string message)
    parameters:
    - id: status
      type: Grpc.Core.Status
      description: Resulting status of a call.
    - id: message
      type: System.String
      description: The exception message.
    content.vb: Public Sub New(status As Status, message As String)
  overload: Grpc.Core.RpcException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.RpcException.#ctor(Grpc.Core.Status,Grpc.Core.Metadata)
  commentId: M:Grpc.Core.RpcException.#ctor(Grpc.Core.Status,Grpc.Core.Metadata)
  id: '#ctor(Grpc.Core.Status,Grpc.Core.Metadata)'
  parent: Grpc.Core.RpcException
  langs:
  - csharp
  - vb
  name: RpcException(Status, Metadata)
  nameWithType: RpcException.RpcException(Status, Metadata)
  fullName: Grpc.Core.RpcException.RpcException(Grpc.Core.Status, Grpc.Core.Metadata)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/RpcException.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core.Api/RpcException.cs
    startLine: 53
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nCreates a new <code>RpcException</code> associated with given status and trailing response metadata.\n"
  example: []
  syntax:
    content: public RpcException(Status status, Metadata trailers)
    parameters:
    - id: status
      type: Grpc.Core.Status
      description: Resulting status of a call.
    - id: trailers
      type: Grpc.Core.Metadata
      description: Response trailing metadata.
    content.vb: Public Sub New(status As Status, trailers As Metadata)
  overload: Grpc.Core.RpcException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.RpcException.#ctor(Grpc.Core.Status,Grpc.Core.Metadata,System.String)
  commentId: M:Grpc.Core.RpcException.#ctor(Grpc.Core.Status,Grpc.Core.Metadata,System.String)
  id: '#ctor(Grpc.Core.Status,Grpc.Core.Metadata,System.String)'
  parent: Grpc.Core.RpcException
  langs:
  - csharp
  - vb
  name: RpcException(Status, Metadata, String)
  nameWithType: RpcException.RpcException(Status, Metadata, String)
  fullName: Grpc.Core.RpcException.RpcException(Grpc.Core.Status, Grpc.Core.Metadata, System.String)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/RpcException.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core.Api/RpcException.cs
    startLine: 63
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nCreates a new <code>RpcException</code> associated with given status, message and trailing response metadata.\n"
  example: []
  syntax:
    content: public RpcException(Status status, Metadata trailers, string message)
    parameters:
    - id: status
      type: Grpc.Core.Status
      description: Resulting status of a call.
    - id: trailers
      type: Grpc.Core.Metadata
      description: Response trailing metadata.
    - id: message
      type: System.String
      description: The exception message.
    content.vb: Public Sub New(status As Status, trailers As Metadata, message As String)
  overload: Grpc.Core.RpcException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.RpcException.Status
  commentId: P:Grpc.Core.RpcException.Status
  id: Status
  parent: Grpc.Core.RpcException
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: RpcException.Status
  fullName: Grpc.Core.RpcException.Status
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/RpcException.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Status
    path: src/csharp/Grpc.Core.Api/RpcException.cs
    startLine: 72
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nResulting status of the call.\n"
  example: []
  syntax:
    content: public Status Status { get; }
    parameters: []
    return:
      type: Grpc.Core.Status
    content.vb: Public ReadOnly Property Status As Status
  overload: Grpc.Core.RpcException.Status*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.RpcException.StatusCode
  commentId: P:Grpc.Core.RpcException.StatusCode
  id: StatusCode
  parent: Grpc.Core.RpcException
  langs:
  - csharp
  - vb
  name: StatusCode
  nameWithType: RpcException.StatusCode
  fullName: Grpc.Core.RpcException.StatusCode
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/RpcException.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: StatusCode
    path: src/csharp/Grpc.Core.Api/RpcException.cs
    startLine: 83
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nReturns the status code of the call, as a convenient alternative to <xref href=\"Grpc.Core.RpcException.StatusCode\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public StatusCode StatusCode { get; }
    parameters: []
    return:
      type: Grpc.Core.StatusCode
    content.vb: Public ReadOnly Property StatusCode As StatusCode
  overload: Grpc.Core.RpcException.StatusCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.RpcException.Trailers
  commentId: P:Grpc.Core.RpcException.Trailers
  id: Trailers
  parent: Grpc.Core.RpcException
  langs:
  - csharp
  - vb
  name: Trailers
  nameWithType: RpcException.Trailers
  fullName: Grpc.Core.RpcException.Trailers
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/RpcException.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Trailers
    path: src/csharp/Grpc.Core.Api/RpcException.cs
    startLine: 96
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nGets the call trailing metadata.\nTrailers only have meaningful content for client-side calls (in which case they represent the trailing metadata sent by the server when closing the call).\nInstances of <code>RpcException</code> thrown by the server-side part of the stack will have trailers always set to empty.\n"
  example: []
  syntax:
    content: public Metadata Trailers { get; }
    parameters: []
    return:
      type: Grpc.Core.Metadata
    content.vb: Public ReadOnly Property Trailers As Metadata
  overload: Grpc.Core.RpcException.Trailers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Grpc.Core.RpcException.Status
  commentId: P:Grpc.Core.RpcException.Status
  isExternal: true
- uid: Grpc.Core
  commentId: N:Grpc.Core
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Runtime.InteropServices._Exception
  commentId: T:System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  nameWithType: _Exception
  fullName: System.Runtime.InteropServices._Exception
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  isExternal: true
  name: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: Grpc.Core.RpcException.#ctor*
  commentId: Overload:Grpc.Core.RpcException.#ctor
  name: RpcException
  nameWithType: RpcException.RpcException
  fullName: Grpc.Core.RpcException.RpcException
- uid: Grpc.Core.Status
  commentId: T:Grpc.Core.Status
  parent: Grpc.Core
  name: Status
  nameWithType: Status
  fullName: Grpc.Core.Status
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Grpc.Core.Metadata
  commentId: T:Grpc.Core.Metadata
  parent: Grpc.Core
  name: Metadata
  nameWithType: Metadata
  fullName: Grpc.Core.Metadata
- uid: Grpc.Core.RpcException.Status*
  commentId: Overload:Grpc.Core.RpcException.Status
  name: Status
  nameWithType: RpcException.Status
  fullName: Grpc.Core.RpcException.Status
- uid: Grpc.Core.RpcException.StatusCode
  commentId: P:Grpc.Core.RpcException.StatusCode
  isExternal: true
- uid: Grpc.Core.RpcException.StatusCode*
  commentId: Overload:Grpc.Core.RpcException.StatusCode
  name: StatusCode
  nameWithType: RpcException.StatusCode
  fullName: Grpc.Core.RpcException.StatusCode
- uid: Grpc.Core.StatusCode
  commentId: T:Grpc.Core.StatusCode
  parent: Grpc.Core
  name: StatusCode
  nameWithType: StatusCode
  fullName: Grpc.Core.StatusCode
- uid: Grpc.Core.RpcException.Trailers*
  commentId: Overload:Grpc.Core.RpcException.Trailers
  name: Trailers
  nameWithType: RpcException.Trailers
  fullName: Grpc.Core.RpcException.Trailers
