### YamlMime:ManagedReference
items:
- uid: Grpc.Core.KeyCertificatePair
  commentId: T:Grpc.Core.KeyCertificatePair
  id: KeyCertificatePair
  parent: Grpc.Core
  children:
  - Grpc.Core.KeyCertificatePair.#ctor(System.String,System.String)
  - Grpc.Core.KeyCertificatePair.CertificateChain
  - Grpc.Core.KeyCertificatePair.PrivateKey
  langs:
  - csharp
  - vb
  name: KeyCertificatePair
  nameWithType: KeyCertificatePair
  fullName: Grpc.Core.KeyCertificatePair
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core/KeyCertificatePair.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: KeyCertificatePair
    path: src/csharp/Grpc.Core/KeyCertificatePair.cs
    startLine: 44
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nKey certificate pair (in PEM encoding).\n"
  example: []
  syntax:
    content: public sealed class KeyCertificatePair
    content.vb: Public NotInheritable Class KeyCertificatePair
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Grpc.Core.KeyCertificatePair.#ctor(System.String,System.String)
  commentId: M:Grpc.Core.KeyCertificatePair.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Grpc.Core.KeyCertificatePair
  langs:
  - csharp
  - vb
  name: KeyCertificatePair(String, String)
  nameWithType: KeyCertificatePair.KeyCertificatePair(String, String)
  fullName: Grpc.Core.KeyCertificatePair.KeyCertificatePair(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core/KeyCertificatePair.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core/KeyCertificatePair.cs
    startLine: 54
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nCreates a new certificate chain - private key pair.\n"
  example: []
  syntax:
    content: public KeyCertificatePair(string certificateChain, string privateKey)
    parameters:
    - id: certificateChain
      type: System.String
      description: PEM encoded certificate chain.
    - id: privateKey
      type: System.String
      description: PEM encoded private key.
    content.vb: Public Sub New(certificateChain As String, privateKey As String)
  overload: Grpc.Core.KeyCertificatePair.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.KeyCertificatePair.CertificateChain
  commentId: P:Grpc.Core.KeyCertificatePair.CertificateChain
  id: CertificateChain
  parent: Grpc.Core.KeyCertificatePair
  langs:
  - csharp
  - vb
  name: CertificateChain
  nameWithType: KeyCertificatePair.CertificateChain
  fullName: Grpc.Core.KeyCertificatePair.CertificateChain
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/KeyCertificatePair.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: CertificateChain
    path: src/csharp/Grpc.Core/KeyCertificatePair.cs
    startLine: 63
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nPEM encoded certificate chain.\n"
  example: []
  syntax:
    content: public string CertificateChain { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CertificateChain As String
  overload: Grpc.Core.KeyCertificatePair.CertificateChain*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.KeyCertificatePair.PrivateKey
  commentId: P:Grpc.Core.KeyCertificatePair.PrivateKey
  id: PrivateKey
  parent: Grpc.Core.KeyCertificatePair
  langs:
  - csharp
  - vb
  name: PrivateKey
  nameWithType: KeyCertificatePair.PrivateKey
  fullName: Grpc.Core.KeyCertificatePair.PrivateKey
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/KeyCertificatePair.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: PrivateKey
    path: src/csharp/Grpc.Core/KeyCertificatePair.cs
    startLine: 74
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nPEM encoded private key.\n"
  example: []
  syntax:
    content: public string PrivateKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PrivateKey As String
  overload: Grpc.Core.KeyCertificatePair.PrivateKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: false
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.KeyCertificatePair.#ctor*
  commentId: Overload:Grpc.Core.KeyCertificatePair.#ctor
  isExternal: false
  name: KeyCertificatePair
  nameWithType: KeyCertificatePair.KeyCertificatePair
  fullName: Grpc.Core.KeyCertificatePair.KeyCertificatePair
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Grpc.Core.KeyCertificatePair.CertificateChain*
  commentId: Overload:Grpc.Core.KeyCertificatePair.CertificateChain
  isExternal: false
  name: CertificateChain
  nameWithType: KeyCertificatePair.CertificateChain
  fullName: Grpc.Core.KeyCertificatePair.CertificateChain
- uid: Grpc.Core.KeyCertificatePair.PrivateKey*
  commentId: Overload:Grpc.Core.KeyCertificatePair.PrivateKey
  isExternal: false
  name: PrivateKey
  nameWithType: KeyCertificatePair.PrivateKey
  fullName: Grpc.Core.KeyCertificatePair.PrivateKey
