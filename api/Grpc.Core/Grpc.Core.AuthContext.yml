### YamlMime:ManagedReference
items:
- uid: Grpc.Core.AuthContext
  commentId: T:Grpc.Core.AuthContext
  id: AuthContext
  parent: Grpc.Core
  children:
  - Grpc.Core.AuthContext.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Grpc.Core.AuthProperty}})
  - Grpc.Core.AuthContext.FindPropertiesByName(System.String)
  - Grpc.Core.AuthContext.IsPeerAuthenticated
  - Grpc.Core.AuthContext.PeerIdentity
  - Grpc.Core.AuthContext.PeerIdentityPropertyName
  - Grpc.Core.AuthContext.Properties
  langs:
  - csharp
  - vb
  name: AuthContext
  nameWithType: AuthContext
  fullName: Grpc.Core.AuthContext
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/AuthContext.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: AuthContext
    path: src/csharp/Grpc.Core.Api/AuthContext.cs
    startLine: 31
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nAuthentication context for a call.\nAuthContext is the only reliable source of truth when it comes to authenticating calls.\nUsing any other call/context properties for authentication purposes is wrong and inherently unsafe.\nNote: experimental API that can change or be removed without any prior notice.\n"
  example: []
  syntax:
    content: public class AuthContext
    content.vb: Public Class AuthContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Grpc.Core.AuthContext.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Grpc.Core.AuthProperty}})
  commentId: M:Grpc.Core.AuthContext.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Grpc.Core.AuthProperty}})
  id: '#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Grpc.Core.AuthProperty}})'
  parent: Grpc.Core.AuthContext
  langs:
  - csharp
  - vb
  name: AuthContext(String, Dictionary<String, List<AuthProperty>>)
  nameWithType: AuthContext.AuthContext(String, Dictionary<String, List<AuthProperty>>)
  fullName: Grpc.Core.AuthContext.AuthContext(System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<Grpc.Core.AuthProperty>>)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/AuthContext.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core.Api/AuthContext.cs
    startLine: 41
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nInitializes a new instance of the <xref href=\"Grpc.Core.AuthContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AuthContext(string peerIdentityPropertyName, Dictionary<string, List<AuthProperty>> properties)
    parameters:
    - id: peerIdentityPropertyName
      type: System.String
      description: Peer identity property name.
    - id: properties
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Grpc.Core.AuthProperty}}
      description: Multimap of auth properties by name.
    content.vb: Public Sub New(peerIdentityPropertyName As String, properties As Dictionary(Of String, List(Of AuthProperty)))
  overload: Grpc.Core.AuthContext.#ctor*
  nameWithType.vb: AuthContext.AuthContext(String, Dictionary(Of String, List(Of AuthProperty)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Grpc.Core.AuthContext.AuthContext(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of Grpc.Core.AuthProperty)))
  name.vb: AuthContext(String, Dictionary(Of String, List(Of AuthProperty)))
- uid: Grpc.Core.AuthContext.IsPeerAuthenticated
  commentId: P:Grpc.Core.AuthContext.IsPeerAuthenticated
  id: IsPeerAuthenticated
  parent: Grpc.Core.AuthContext
  langs:
  - csharp
  - vb
  name: IsPeerAuthenticated
  nameWithType: AuthContext.IsPeerAuthenticated
  fullName: Grpc.Core.AuthContext.IsPeerAuthenticated
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/AuthContext.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: IsPeerAuthenticated
    path: src/csharp/Grpc.Core.Api/AuthContext.cs
    startLine: 50
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nReturns <code>true</code> if the peer is authenticated.\n"
  example: []
  syntax:
    content: public bool IsPeerAuthenticated { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPeerAuthenticated As Boolean
  overload: Grpc.Core.AuthContext.IsPeerAuthenticated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.AuthContext.PeerIdentityPropertyName
  commentId: P:Grpc.Core.AuthContext.PeerIdentityPropertyName
  id: PeerIdentityPropertyName
  parent: Grpc.Core.AuthContext
  langs:
  - csharp
  - vb
  name: PeerIdentityPropertyName
  nameWithType: AuthContext.PeerIdentityPropertyName
  fullName: Grpc.Core.AuthContext.PeerIdentityPropertyName
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/AuthContext.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: PeerIdentityPropertyName
    path: src/csharp/Grpc.Core.Api/AuthContext.cs
    startLine: 62
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nGets the name of the property that indicates the peer identity. Returns <code>null</code>\nif the peer is not authenticated.\n"
  example: []
  syntax:
    content: public string PeerIdentityPropertyName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PeerIdentityPropertyName As String
  overload: Grpc.Core.AuthContext.PeerIdentityPropertyName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.AuthContext.PeerIdentity
  commentId: P:Grpc.Core.AuthContext.PeerIdentity
  id: PeerIdentity
  parent: Grpc.Core.AuthContext
  langs:
  - csharp
  - vb
  name: PeerIdentity
  nameWithType: AuthContext.PeerIdentity
  fullName: Grpc.Core.AuthContext.PeerIdentity
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/AuthContext.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: PeerIdentity
    path: src/csharp/Grpc.Core.Api/AuthContext.cs
    startLine: 74
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nGets properties that represent the peer identity (there can be more than one). Returns an empty collection\nif the peer is not authenticated.\n"
  example: []
  syntax:
    content: public IEnumerable<AuthProperty> PeerIdentity { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Grpc.Core.AuthProperty}
    content.vb: Public ReadOnly Property PeerIdentity As IEnumerable(Of AuthProperty)
  overload: Grpc.Core.AuthContext.PeerIdentity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.AuthContext.Properties
  commentId: P:Grpc.Core.AuthContext.Properties
  id: Properties
  parent: Grpc.Core.AuthContext
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: AuthContext.Properties
  fullName: Grpc.Core.AuthContext.Properties
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/AuthContext.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Properties
    path: src/csharp/Grpc.Core.Api/AuthContext.cs
    startLine: 89
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nGets the auth properties of this context.\n"
  example: []
  syntax:
    content: public IEnumerable<AuthProperty> Properties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Grpc.Core.AuthProperty}
    content.vb: Public ReadOnly Property Properties As IEnumerable(Of AuthProperty)
  overload: Grpc.Core.AuthContext.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.AuthContext.FindPropertiesByName(System.String)
  commentId: M:Grpc.Core.AuthContext.FindPropertiesByName(System.String)
  id: FindPropertiesByName(System.String)
  parent: Grpc.Core.AuthContext
  langs:
  - csharp
  - vb
  name: FindPropertiesByName(String)
  nameWithType: AuthContext.FindPropertiesByName(String)
  fullName: Grpc.Core.AuthContext.FindPropertiesByName(System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/AuthContext.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: FindPropertiesByName
    path: src/csharp/Grpc.Core.Api/AuthContext.cs
    startLine: 101
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nReturns the auth properties with given name (there can be more than one).\nIf no properties of given name exist, an empty collection will be returned.\n"
  example: []
  syntax:
    content: public IEnumerable<AuthProperty> FindPropertiesByName(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{Grpc.Core.AuthProperty}
    content.vb: Public Function FindPropertiesByName(propertyName As String) As IEnumerable(Of AuthProperty)
  overload: Grpc.Core.AuthContext.FindPropertiesByName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Grpc.Core
  commentId: N:Grpc.Core
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.AuthContext
  commentId: T:Grpc.Core.AuthContext
  parent: Grpc.Core
  name: AuthContext
  nameWithType: AuthContext
  fullName: Grpc.Core.AuthContext
- uid: Grpc.Core.AuthContext.#ctor*
  commentId: Overload:Grpc.Core.AuthContext.#ctor
  name: AuthContext
  nameWithType: AuthContext.AuthContext
  fullName: Grpc.Core.AuthContext.AuthContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Grpc.Core.AuthProperty}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Grpc.Core.AuthProperty}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, List<AuthProperty>>
  nameWithType: Dictionary<String, List<AuthProperty>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<Grpc.Core.AuthProperty>>
  nameWithType.vb: Dictionary(Of String, List(Of AuthProperty))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of Grpc.Core.AuthProperty))
  name.vb: Dictionary(Of String, List(Of AuthProperty))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Grpc.Core.AuthProperty
    name: AuthProperty
    nameWithType: AuthProperty
    fullName: Grpc.Core.AuthProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Grpc.Core.AuthProperty
    name: AuthProperty
    nameWithType: AuthProperty
    fullName: Grpc.Core.AuthProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Grpc.Core.AuthContext.IsPeerAuthenticated*
  commentId: Overload:Grpc.Core.AuthContext.IsPeerAuthenticated
  name: IsPeerAuthenticated
  nameWithType: AuthContext.IsPeerAuthenticated
  fullName: Grpc.Core.AuthContext.IsPeerAuthenticated
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Grpc.Core.AuthContext.PeerIdentityPropertyName*
  commentId: Overload:Grpc.Core.AuthContext.PeerIdentityPropertyName
  name: PeerIdentityPropertyName
  nameWithType: AuthContext.PeerIdentityPropertyName
  fullName: Grpc.Core.AuthContext.PeerIdentityPropertyName
- uid: Grpc.Core.AuthContext.PeerIdentity*
  commentId: Overload:Grpc.Core.AuthContext.PeerIdentity
  name: PeerIdentity
  nameWithType: AuthContext.PeerIdentity
  fullName: Grpc.Core.AuthContext.PeerIdentity
- uid: System.Collections.Generic.IEnumerable{Grpc.Core.AuthProperty}
  commentId: T:System.Collections.Generic.IEnumerable{Grpc.Core.AuthProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AuthProperty>
  nameWithType: IEnumerable<AuthProperty>
  fullName: System.Collections.Generic.IEnumerable<Grpc.Core.AuthProperty>
  nameWithType.vb: IEnumerable(Of AuthProperty)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Grpc.Core.AuthProperty)
  name.vb: IEnumerable(Of AuthProperty)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Grpc.Core.AuthProperty
    name: AuthProperty
    nameWithType: AuthProperty
    fullName: Grpc.Core.AuthProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Grpc.Core.AuthProperty
    name: AuthProperty
    nameWithType: AuthProperty
    fullName: Grpc.Core.AuthProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.AuthContext.Properties*
  commentId: Overload:Grpc.Core.AuthContext.Properties
  name: Properties
  nameWithType: AuthContext.Properties
  fullName: Grpc.Core.AuthContext.Properties
- uid: Grpc.Core.AuthContext.FindPropertiesByName*
  commentId: Overload:Grpc.Core.AuthContext.FindPropertiesByName
  name: FindPropertiesByName
  nameWithType: AuthContext.FindPropertiesByName
  fullName: Grpc.Core.AuthContext.FindPropertiesByName
