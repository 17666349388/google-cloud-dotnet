### YamlMime:ManagedReference
items:
- uid: Grpc.Core.AuthInterceptorContext
  commentId: T:Grpc.Core.AuthInterceptorContext
  id: AuthInterceptorContext
  parent: Grpc.Core
  children:
  - Grpc.Core.AuthInterceptorContext.#ctor(System.String,System.String)
  - Grpc.Core.AuthInterceptorContext.MethodName
  - Grpc.Core.AuthInterceptorContext.ServiceUrl
  langs:
  - csharp
  - vb
  name: AuthInterceptorContext
  nameWithType: AuthInterceptorContext
  fullName: Grpc.Core.AuthInterceptorContext
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core/AsyncAuthInterceptor.cs
      branch: v1.4.x
      repo: https://github.com/grpc/grpc
    id: AuthInterceptorContext
    path: src/csharp/Grpc.Core/AsyncAuthInterceptor.cs
    startLine: 53
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nContext for an RPC being intercepted by <xref href=\"Grpc.Core.AsyncAuthInterceptor\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class AuthInterceptorContext
    content.vb: Public Class AuthInterceptorContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Grpc.Core.AuthInterceptorContext.#ctor(System.String,System.String)
  commentId: M:Grpc.Core.AuthInterceptorContext.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Grpc.Core.AuthInterceptorContext
  langs:
  - csharp
  - vb
  name: AuthInterceptorContext(String, String)
  nameWithType: AuthInterceptorContext.AuthInterceptorContext(String, String)
  fullName: Grpc.Core.AuthInterceptorContext.AuthInterceptorContext(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core/AsyncAuthInterceptor.cs
      branch: v1.4.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core/AsyncAuthInterceptor.cs
    startLine: 61
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nInitializes a new instance of <code>AuthInterceptorContext</code>.\n"
  example: []
  syntax:
    content: public AuthInterceptorContext(string serviceUrl, string methodName)
    parameters:
    - id: serviceUrl
      type: System.String
    - id: methodName
      type: System.String
    content.vb: Public Sub New(serviceUrl As String, methodName As String)
  overload: Grpc.Core.AuthInterceptorContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.AuthInterceptorContext.ServiceUrl
  commentId: P:Grpc.Core.AuthInterceptorContext.ServiceUrl
  id: ServiceUrl
  parent: Grpc.Core.AuthInterceptorContext
  langs:
  - csharp
  - vb
  name: ServiceUrl
  nameWithType: AuthInterceptorContext.ServiceUrl
  fullName: Grpc.Core.AuthInterceptorContext.ServiceUrl
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/AsyncAuthInterceptor.cs
      branch: v1.4.x
      repo: https://github.com/grpc/grpc
    id: ServiceUrl
    path: src/csharp/Grpc.Core/AsyncAuthInterceptor.cs
    startLine: 70
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nThe fully qualified service URL for the RPC being called.\n"
  example: []
  syntax:
    content: public string ServiceUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ServiceUrl As String
  overload: Grpc.Core.AuthInterceptorContext.ServiceUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.AuthInterceptorContext.MethodName
  commentId: P:Grpc.Core.AuthInterceptorContext.MethodName
  id: MethodName
  parent: Grpc.Core.AuthInterceptorContext
  langs:
  - csharp
  - vb
  name: MethodName
  nameWithType: AuthInterceptorContext.MethodName
  fullName: Grpc.Core.AuthInterceptorContext.MethodName
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/AsyncAuthInterceptor.cs
      branch: v1.4.x
      repo: https://github.com/grpc/grpc
    id: MethodName
    path: src/csharp/Grpc.Core/AsyncAuthInterceptor.cs
    startLine: 78
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nThe method name of the RPC being called.\n"
  example: []
  syntax:
    content: public string MethodName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property MethodName As String
  overload: Grpc.Core.AuthInterceptorContext.MethodName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Grpc.Core.AsyncAuthInterceptor
  commentId: T:Grpc.Core.AsyncAuthInterceptor
  parent: Grpc.Core
  isExternal: false
  name: AsyncAuthInterceptor
  nameWithType: AsyncAuthInterceptor
  fullName: Grpc.Core.AsyncAuthInterceptor
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: false
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.AuthInterceptorContext.#ctor*
  commentId: Overload:Grpc.Core.AuthInterceptorContext.#ctor
  isExternal: false
  name: AuthInterceptorContext
  nameWithType: AuthInterceptorContext.AuthInterceptorContext
  fullName: Grpc.Core.AuthInterceptorContext.AuthInterceptorContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Grpc.Core.AuthInterceptorContext.ServiceUrl*
  commentId: Overload:Grpc.Core.AuthInterceptorContext.ServiceUrl
  isExternal: false
  name: ServiceUrl
  nameWithType: AuthInterceptorContext.ServiceUrl
  fullName: Grpc.Core.AuthInterceptorContext.ServiceUrl
- uid: Grpc.Core.AuthInterceptorContext.MethodName*
  commentId: Overload:Grpc.Core.AuthInterceptorContext.MethodName
  isExternal: false
  name: MethodName
  nameWithType: AuthInterceptorContext.MethodName
  fullName: Grpc.Core.AuthInterceptorContext.MethodName
