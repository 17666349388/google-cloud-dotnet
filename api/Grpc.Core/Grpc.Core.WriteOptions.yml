### YamlMime:ManagedReference
items:
- uid: Grpc.Core.WriteOptions
  commentId: T:Grpc.Core.WriteOptions
  id: WriteOptions
  parent: Grpc.Core
  children:
  - Grpc.Core.WriteOptions.#ctor(Grpc.Core.WriteFlags)
  - Grpc.Core.WriteOptions.Default
  - Grpc.Core.WriteOptions.Flags
  langs:
  - csharp
  - vb
  name: WriteOptions
  nameWithType: WriteOptions
  fullName: Grpc.Core.WriteOptions
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/WriteOptions.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: WriteOptions
    path: src/csharp/Grpc.Core.Api/WriteOptions.cs
    startLine: 44
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nOptions for write operations.\n"
  example: []
  syntax:
    content: public class WriteOptions
    content.vb: Public Class WriteOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Grpc.Core.WriteOptions.Default
  commentId: F:Grpc.Core.WriteOptions.Default
  id: Default
  parent: Grpc.Core.WriteOptions
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: WriteOptions.Default
  fullName: Grpc.Core.WriteOptions.Default
  type: Field
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/WriteOptions.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: Default
    path: src/csharp/Grpc.Core.Api/WriteOptions.cs
    startLine: 49
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nDefault write options.\n"
  example: []
  syntax:
    content: public static readonly WriteOptions Default
    return:
      type: Grpc.Core.WriteOptions
    content.vb: Public Shared ReadOnly Default As WriteOptions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Grpc.Core.WriteOptions.#ctor(Grpc.Core.WriteFlags)
  commentId: M:Grpc.Core.WriteOptions.#ctor(Grpc.Core.WriteFlags)
  id: '#ctor(Grpc.Core.WriteFlags)'
  parent: Grpc.Core.WriteOptions
  langs:
  - csharp
  - vb
  name: WriteOptions(WriteFlags)
  nameWithType: WriteOptions.WriteOptions(WriteFlags)
  fullName: Grpc.Core.WriteOptions.WriteOptions(Grpc.Core.WriteFlags)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/WriteOptions.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core.Api/WriteOptions.cs
    startLine: 57
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nInitializes a new instance of <code>WriteOptions</code> class.\n"
  example: []
  syntax:
    content: public WriteOptions(WriteFlags flags = (WriteFlags)0)
    parameters:
    - id: flags
      type: Grpc.Core.WriteFlags
      description: The write flags.
    content.vb: Public Sub New(flags As WriteFlags = CType(0, WriteFlags))
  overload: Grpc.Core.WriteOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.WriteOptions.Flags
  commentId: P:Grpc.Core.WriteOptions.Flags
  id: Flags
  parent: Grpc.Core.WriteOptions
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: WriteOptions.Flags
  fullName: Grpc.Core.WriteOptions.Flags
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/WriteOptions.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: Flags
    path: src/csharp/Grpc.Core.Api/WriteOptions.cs
    startLine: 65
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nGets the write flags.\n"
  example: []
  syntax:
    content: public WriteFlags Flags { get; }
    parameters: []
    return:
      type: Grpc.Core.WriteFlags
    content.vb: Public ReadOnly Property Flags As WriteFlags
  overload: Grpc.Core.WriteOptions.Flags*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Grpc.Core
  commentId: N:Grpc.Core
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.WriteOptions
  commentId: T:Grpc.Core.WriteOptions
  parent: Grpc.Core
  name: WriteOptions
  nameWithType: WriteOptions
  fullName: Grpc.Core.WriteOptions
- uid: Grpc.Core.WriteOptions.#ctor*
  commentId: Overload:Grpc.Core.WriteOptions.#ctor
  name: WriteOptions
  nameWithType: WriteOptions.WriteOptions
  fullName: Grpc.Core.WriteOptions.WriteOptions
- uid: Grpc.Core.WriteFlags
  commentId: T:Grpc.Core.WriteFlags
  parent: Grpc.Core
  name: WriteFlags
  nameWithType: WriteFlags
  fullName: Grpc.Core.WriteFlags
- uid: Grpc.Core.WriteOptions.Flags*
  commentId: Overload:Grpc.Core.WriteOptions.Flags
  name: Flags
  nameWithType: WriteOptions.Flags
  fullName: Grpc.Core.WriteOptions.Flags
