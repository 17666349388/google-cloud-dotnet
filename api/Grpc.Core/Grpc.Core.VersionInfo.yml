### YamlMime:ManagedReference
items:
- uid: Grpc.Core.VersionInfo
  commentId: T:Grpc.Core.VersionInfo
  id: VersionInfo
  parent: Grpc.Core
  children:
  - Grpc.Core.VersionInfo.CurrentAssemblyFileVersion
  - Grpc.Core.VersionInfo.CurrentAssemblyVersion
  - Grpc.Core.VersionInfo.CurrentVersion
  langs:
  - csharp
  - vb
  name: VersionInfo
  nameWithType: VersionInfo
  fullName: Grpc.Core.VersionInfo
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core/VersionInfo.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: VersionInfo
    path: src/csharp/Grpc.Core/VersionInfo.cs
    startLine: 25
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nProvides info about current version of gRPC.\nSee https://codingforsmarties.wordpress.com/2016/01/21/how-to-version-assemblies-destined-for-nuget/\nfor rationale about assembly versioning.\n"
  example: []
  syntax:
    content: public static class VersionInfo
    content.vb: Public Module VersionInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Grpc.Core.VersionInfo.CurrentAssemblyVersion
  commentId: F:Grpc.Core.VersionInfo.CurrentAssemblyVersion
  id: CurrentAssemblyVersion
  parent: Grpc.Core.VersionInfo
  langs:
  - csharp
  - vb
  name: CurrentAssemblyVersion
  nameWithType: VersionInfo.CurrentAssemblyVersion
  fullName: Grpc.Core.VersionInfo.CurrentAssemblyVersion
  type: Field
  source:
    remote:
      path: src/csharp/Grpc.Core/VersionInfo.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: CurrentAssemblyVersion
    path: src/csharp/Grpc.Core/VersionInfo.cs
    startLine: 30
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nCurrent <code>AssemblyVersion</code> attribute of gRPC C# assemblies\n"
  example: []
  syntax:
    content: public const string CurrentAssemblyVersion = "1.0.0.0"
    return:
      type: System.String
    content.vb: Public Const CurrentAssemblyVersion As String = "1.0.0.0"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Grpc.Core.VersionInfo.CurrentAssemblyFileVersion
  commentId: F:Grpc.Core.VersionInfo.CurrentAssemblyFileVersion
  id: CurrentAssemblyFileVersion
  parent: Grpc.Core.VersionInfo
  langs:
  - csharp
  - vb
  name: CurrentAssemblyFileVersion
  nameWithType: VersionInfo.CurrentAssemblyFileVersion
  fullName: Grpc.Core.VersionInfo.CurrentAssemblyFileVersion
  type: Field
  source:
    remote:
      path: src/csharp/Grpc.Core/VersionInfo.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: CurrentAssemblyFileVersion
    path: src/csharp/Grpc.Core/VersionInfo.cs
    startLine: 35
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nCurrent <code>AssemblyFileVersion</code> of gRPC C# assemblies\n"
  example: []
  syntax:
    content: public const string CurrentAssemblyFileVersion = "1.6.1.0"
    return:
      type: System.String
    content.vb: Public Const CurrentAssemblyFileVersion As String = "1.6.1.0"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Grpc.Core.VersionInfo.CurrentVersion
  commentId: F:Grpc.Core.VersionInfo.CurrentVersion
  id: CurrentVersion
  parent: Grpc.Core.VersionInfo
  langs:
  - csharp
  - vb
  name: CurrentVersion
  nameWithType: VersionInfo.CurrentVersion
  fullName: Grpc.Core.VersionInfo.CurrentVersion
  type: Field
  source:
    remote:
      path: src/csharp/Grpc.Core/VersionInfo.cs
      branch: v1.6.x
      repo: https://github.com/grpc/grpc
    id: CurrentVersion
    path: src/csharp/Grpc.Core/VersionInfo.cs
    startLine: 40
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nCurrent version of gRPC C#\n"
  example: []
  syntax:
    content: public const string CurrentVersion = "1.6.1"
    return:
      type: System.String
    content.vb: Public Const CurrentVersion As String = "1.6.1"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: false
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
