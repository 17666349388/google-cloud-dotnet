### YamlMime:ManagedReference
items:
- uid: Grpc.Core.Logging.ILogger
  commentId: T:Grpc.Core.Logging.ILogger
  id: ILogger
  parent: Grpc.Core.Logging
  children:
  - Grpc.Core.Logging.ILogger.Debug(System.String)
  - Grpc.Core.Logging.ILogger.Debug(System.String,System.Object[])
  - Grpc.Core.Logging.ILogger.Error(System.Exception,System.String)
  - Grpc.Core.Logging.ILogger.Error(System.String)
  - Grpc.Core.Logging.ILogger.Error(System.String,System.Object[])
  - Grpc.Core.Logging.ILogger.ForType``1
  - Grpc.Core.Logging.ILogger.Info(System.String)
  - Grpc.Core.Logging.ILogger.Info(System.String,System.Object[])
  - Grpc.Core.Logging.ILogger.Warning(System.Exception,System.String)
  - Grpc.Core.Logging.ILogger.Warning(System.String)
  - Grpc.Core.Logging.ILogger.Warning(System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: ILogger
  nameWithType: ILogger
  fullName: Grpc.Core.Logging.ILogger
  type: Interface
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/ILogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: ILogger
    path: src/csharp/Grpc.Core/Logging/ILogger.cs
    startLine: 24
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: For logging messages.
  example: []
  syntax:
    content: public interface ILogger
    content.vb: Public Interface ILogger
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Grpc.Core.Logging.ILogger.ForType``1
  commentId: M:Grpc.Core.Logging.ILogger.ForType``1
  id: ForType``1
  parent: Grpc.Core.Logging.ILogger
  langs:
  - csharp
  - vb
  name: ForType<T>()
  nameWithType: ILogger.ForType<T>()
  fullName: Grpc.Core.Logging.ILogger.ForType<T>()
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/ILogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: ForType
    path: src/csharp/Grpc.Core/Logging/ILogger.cs
    startLine: 27
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Returns a logger associated with the specified type.
  example: []
  syntax:
    content: ILogger ForType<T>()
    typeParameters:
    - id: T
    return:
      type: Grpc.Core.Logging.ILogger
    content.vb: Function ForType(Of T) As ILogger
  overload: Grpc.Core.Logging.ILogger.ForType*
  nameWithType.vb: ILogger.ForType(Of T)()
  fullName.vb: Grpc.Core.Logging.ILogger.ForType(Of T)()
  name.vb: ForType(Of T)()
- uid: Grpc.Core.Logging.ILogger.Debug(System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Debug(System.String)
  id: Debug(System.String)
  parent: Grpc.Core.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Debug(String)
  nameWithType: ILogger.Debug(String)
  fullName: Grpc.Core.Logging.ILogger.Debug(System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/ILogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Debug
    path: src/csharp/Grpc.Core/Logging/ILogger.cs
    startLine: 30
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a message with severity Debug.
  example: []
  syntax:
    content: void Debug(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Sub Debug(message As String)
  overload: Grpc.Core.Logging.ILogger.Debug*
- uid: Grpc.Core.Logging.ILogger.Debug(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.ILogger.Debug(System.String,System.Object[])
  id: Debug(System.String,System.Object[])
  parent: Grpc.Core.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Debug(String, Object[])
  nameWithType: ILogger.Debug(String, Object[])
  fullName: Grpc.Core.Logging.ILogger.Debug(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/ILogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Debug
    path: src/csharp/Grpc.Core/Logging/ILogger.cs
    startLine: 33
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a formatted message with severity Debug.
  example: []
  syntax:
    content: void Debug(string format, params object[] formatArgs)
    parameters:
    - id: format
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Sub Debug(format As String, ParamArray formatArgs As Object())
  overload: Grpc.Core.Logging.ILogger.Debug*
  nameWithType.vb: ILogger.Debug(String, Object())
  fullName.vb: Grpc.Core.Logging.ILogger.Debug(System.String, System.Object())
  name.vb: Debug(String, Object())
- uid: Grpc.Core.Logging.ILogger.Info(System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Info(System.String)
  id: Info(System.String)
  parent: Grpc.Core.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Info(String)
  nameWithType: ILogger.Info(String)
  fullName: Grpc.Core.Logging.ILogger.Info(System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/ILogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Info
    path: src/csharp/Grpc.Core/Logging/ILogger.cs
    startLine: 36
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a message with severity Info.
  example: []
  syntax:
    content: void Info(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Sub Info(message As String)
  overload: Grpc.Core.Logging.ILogger.Info*
- uid: Grpc.Core.Logging.ILogger.Info(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.ILogger.Info(System.String,System.Object[])
  id: Info(System.String,System.Object[])
  parent: Grpc.Core.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Info(String, Object[])
  nameWithType: ILogger.Info(String, Object[])
  fullName: Grpc.Core.Logging.ILogger.Info(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/ILogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Info
    path: src/csharp/Grpc.Core/Logging/ILogger.cs
    startLine: 39
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a formatted message with severity Info.
  example: []
  syntax:
    content: void Info(string format, params object[] formatArgs)
    parameters:
    - id: format
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Sub Info(format As String, ParamArray formatArgs As Object())
  overload: Grpc.Core.Logging.ILogger.Info*
  nameWithType.vb: ILogger.Info(String, Object())
  fullName.vb: Grpc.Core.Logging.ILogger.Info(System.String, System.Object())
  name.vb: Info(String, Object())
- uid: Grpc.Core.Logging.ILogger.Warning(System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Warning(System.String)
  id: Warning(System.String)
  parent: Grpc.Core.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Warning(String)
  nameWithType: ILogger.Warning(String)
  fullName: Grpc.Core.Logging.ILogger.Warning(System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/ILogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Warning
    path: src/csharp/Grpc.Core/Logging/ILogger.cs
    startLine: 42
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a message with severity Warning.
  example: []
  syntax:
    content: void Warning(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Sub Warning(message As String)
  overload: Grpc.Core.Logging.ILogger.Warning*
- uid: Grpc.Core.Logging.ILogger.Warning(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.ILogger.Warning(System.String,System.Object[])
  id: Warning(System.String,System.Object[])
  parent: Grpc.Core.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Warning(String, Object[])
  nameWithType: ILogger.Warning(String, Object[])
  fullName: Grpc.Core.Logging.ILogger.Warning(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/ILogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Warning
    path: src/csharp/Grpc.Core/Logging/ILogger.cs
    startLine: 45
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a formatted message with severity Warning.
  example: []
  syntax:
    content: void Warning(string format, params object[] formatArgs)
    parameters:
    - id: format
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Sub Warning(format As String, ParamArray formatArgs As Object())
  overload: Grpc.Core.Logging.ILogger.Warning*
  nameWithType.vb: ILogger.Warning(String, Object())
  fullName.vb: Grpc.Core.Logging.ILogger.Warning(System.String, System.Object())
  name.vb: Warning(String, Object())
- uid: Grpc.Core.Logging.ILogger.Warning(System.Exception,System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Warning(System.Exception,System.String)
  id: Warning(System.Exception,System.String)
  parent: Grpc.Core.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Warning(Exception, String)
  nameWithType: ILogger.Warning(Exception, String)
  fullName: Grpc.Core.Logging.ILogger.Warning(System.Exception, System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/ILogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Warning
    path: src/csharp/Grpc.Core/Logging/ILogger.cs
    startLine: 48
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a message and an associated exception with severity Warning.
  example: []
  syntax:
    content: void Warning(Exception exception, string message)
    parameters:
    - id: exception
      type: System.Exception
    - id: message
      type: System.String
    content.vb: Sub Warning(exception As Exception, message As String)
  overload: Grpc.Core.Logging.ILogger.Warning*
- uid: Grpc.Core.Logging.ILogger.Error(System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Error(System.String)
  id: Error(System.String)
  parent: Grpc.Core.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Error(String)
  nameWithType: ILogger.Error(String)
  fullName: Grpc.Core.Logging.ILogger.Error(System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/ILogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Error
    path: src/csharp/Grpc.Core/Logging/ILogger.cs
    startLine: 51
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a message with severity Error.
  example: []
  syntax:
    content: void Error(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Sub Error(message As String)
  overload: Grpc.Core.Logging.ILogger.Error*
- uid: Grpc.Core.Logging.ILogger.Error(System.String,System.Object[])
  commentId: M:Grpc.Core.Logging.ILogger.Error(System.String,System.Object[])
  id: Error(System.String,System.Object[])
  parent: Grpc.Core.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Error(String, Object[])
  nameWithType: ILogger.Error(String, Object[])
  fullName: Grpc.Core.Logging.ILogger.Error(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/ILogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Error
    path: src/csharp/Grpc.Core/Logging/ILogger.cs
    startLine: 54
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a formatted message with severity Error.
  example: []
  syntax:
    content: void Error(string format, params object[] formatArgs)
    parameters:
    - id: format
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Sub Error(format As String, ParamArray formatArgs As Object())
  overload: Grpc.Core.Logging.ILogger.Error*
  nameWithType.vb: ILogger.Error(String, Object())
  fullName.vb: Grpc.Core.Logging.ILogger.Error(System.String, System.Object())
  name.vb: Error(String, Object())
- uid: Grpc.Core.Logging.ILogger.Error(System.Exception,System.String)
  commentId: M:Grpc.Core.Logging.ILogger.Error(System.Exception,System.String)
  id: Error(System.Exception,System.String)
  parent: Grpc.Core.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Error(Exception, String)
  nameWithType: ILogger.Error(Exception, String)
  fullName: Grpc.Core.Logging.ILogger.Error(System.Exception, System.String)
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Logging/ILogger.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: Error
    path: src/csharp/Grpc.Core/Logging/ILogger.cs
    startLine: 57
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core.Logging
  summary: Logs a message and an associated exception with severity Error.
  example: []
  syntax:
    content: void Error(Exception exception, string message)
    parameters:
    - id: exception
      type: System.Exception
    - id: message
      type: System.String
    content.vb: Sub Error(exception As Exception, message As String)
  overload: Grpc.Core.Logging.ILogger.Error*
references:
- uid: Grpc.Core.Logging
  commentId: N:Grpc.Core.Logging
  name: Grpc.Core.Logging
  nameWithType: Grpc.Core.Logging
  fullName: Grpc.Core.Logging
- uid: Grpc.Core.Logging.ILogger.ForType*
  commentId: Overload:Grpc.Core.Logging.ILogger.ForType
  name: ForType
  nameWithType: ILogger.ForType
  fullName: Grpc.Core.Logging.ILogger.ForType
- uid: Grpc.Core.Logging.ILogger
  commentId: T:Grpc.Core.Logging.ILogger
  parent: Grpc.Core.Logging
  name: ILogger
  nameWithType: ILogger
  fullName: Grpc.Core.Logging.ILogger
- uid: Grpc.Core.Logging.ILogger.Debug*
  commentId: Overload:Grpc.Core.Logging.ILogger.Debug
  name: Debug
  nameWithType: ILogger.Debug
  fullName: Grpc.Core.Logging.ILogger.Debug
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Grpc.Core.Logging.ILogger.Info*
  commentId: Overload:Grpc.Core.Logging.ILogger.Info
  name: Info
  nameWithType: ILogger.Info
  fullName: Grpc.Core.Logging.ILogger.Info
- uid: Grpc.Core.Logging.ILogger.Warning*
  commentId: Overload:Grpc.Core.Logging.ILogger.Warning
  name: Warning
  nameWithType: ILogger.Warning
  fullName: Grpc.Core.Logging.ILogger.Warning
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Grpc.Core.Logging.ILogger.Error*
  commentId: Overload:Grpc.Core.Logging.ILogger.Error
  name: Error
  nameWithType: ILogger.Error
  fullName: Grpc.Core.Logging.ILogger.Error
