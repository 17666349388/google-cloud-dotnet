### YamlMime:ManagedReference
items:
- uid: Grpc.Core.ContextPropagationOptions
  commentId: T:Grpc.Core.ContextPropagationOptions
  id: ContextPropagationOptions
  parent: Grpc.Core
  children:
  - Grpc.Core.ContextPropagationOptions.#ctor(System.Boolean,System.Boolean)
  - Grpc.Core.ContextPropagationOptions.Default
  - Grpc.Core.ContextPropagationOptions.IsPropagateCancellation
  - Grpc.Core.ContextPropagationOptions.IsPropagateDeadline
  langs:
  - csharp
  - vb
  name: ContextPropagationOptions
  nameWithType: ContextPropagationOptions
  fullName: Grpc.Core.ContextPropagationOptions
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core/ContextPropagationToken.cs
      branch: v1.2.x
      repo: https://github.com/grpc/grpc
    id: ContextPropagationOptions
    path: src/csharp/Grpc.Core/ContextPropagationToken.cs
    startLine: 124
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nOptions for <xref href=\"Grpc.Core.ContextPropagationToken\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class ContextPropagationOptions
    content.vb: Public Class ContextPropagationOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Grpc.Core.ContextPropagationOptions.Default
  commentId: F:Grpc.Core.ContextPropagationOptions.Default
  id: Default
  parent: Grpc.Core.ContextPropagationOptions
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: ContextPropagationOptions.Default
  fullName: Grpc.Core.ContextPropagationOptions.Default
  type: Field
  source:
    remote:
      path: src/csharp/Grpc.Core/ContextPropagationToken.cs
      branch: v1.2.x
      repo: https://github.com/grpc/grpc
    id: Default
    path: src/csharp/Grpc.Core/ContextPropagationToken.cs
    startLine: 129
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nThe context propagation options that will be used by default.\n"
  example: []
  syntax:
    content: public static readonly ContextPropagationOptions Default
    return:
      type: Grpc.Core.ContextPropagationOptions
    content.vb: Public Shared ReadOnly Default As ContextPropagationOptions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Grpc.Core.ContextPropagationOptions.#ctor(System.Boolean,System.Boolean)
  commentId: M:Grpc.Core.ContextPropagationOptions.#ctor(System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean)'
  parent: Grpc.Core.ContextPropagationOptions
  langs:
  - csharp
  - vb
  name: ContextPropagationOptions(Boolean, Boolean)
  nameWithType: ContextPropagationOptions.ContextPropagationOptions(Boolean, Boolean)
  fullName: Grpc.Core.ContextPropagationOptions.ContextPropagationOptions(System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core/ContextPropagationToken.cs
      branch: v1.2.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core/ContextPropagationToken.cs
    startLine: 139
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nCreates new context propagation options.\n"
  example: []
  syntax:
    content: public ContextPropagationOptions(bool propagateDeadline = true, bool propagateCancellation = true)
    parameters:
    - id: propagateDeadline
      type: System.Boolean
      description: If set to <code>true</code> parent call's deadline will be propagated to the child call.
    - id: propagateCancellation
      type: System.Boolean
      description: If set to <code>true</code> parent call's cancellation token will be propagated to the child call.
    content.vb: Public Sub New(propagateDeadline As Boolean = True, propagateCancellation As Boolean = True)
  overload: Grpc.Core.ContextPropagationOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.ContextPropagationOptions.IsPropagateDeadline
  commentId: P:Grpc.Core.ContextPropagationOptions.IsPropagateDeadline
  id: IsPropagateDeadline
  parent: Grpc.Core.ContextPropagationOptions
  langs:
  - csharp
  - vb
  name: IsPropagateDeadline
  nameWithType: ContextPropagationOptions.IsPropagateDeadline
  fullName: Grpc.Core.ContextPropagationOptions.IsPropagateDeadline
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/ContextPropagationToken.cs
      branch: v1.2.x
      repo: https://github.com/grpc/grpc
    id: IsPropagateDeadline
    path: src/csharp/Grpc.Core/ContextPropagationToken.cs
    startLine: 146
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: <code>true</code> if parent call's deadline should be propagated to the child call.
  example: []
  syntax:
    content: public bool IsPropagateDeadline { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPropagateDeadline As Boolean
  overload: Grpc.Core.ContextPropagationOptions.IsPropagateDeadline*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ContextPropagationOptions.IsPropagateCancellation
  commentId: P:Grpc.Core.ContextPropagationOptions.IsPropagateCancellation
  id: IsPropagateCancellation
  parent: Grpc.Core.ContextPropagationOptions
  langs:
  - csharp
  - vb
  name: IsPropagateCancellation
  nameWithType: ContextPropagationOptions.IsPropagateCancellation
  fullName: Grpc.Core.ContextPropagationOptions.IsPropagateCancellation
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/ContextPropagationToken.cs
      branch: v1.2.x
      repo: https://github.com/grpc/grpc
    id: IsPropagateCancellation
    path: src/csharp/Grpc.Core/ContextPropagationToken.cs
    startLine: 152
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: <code>true</code> if parent call's cancellation token should be propagated to the child call.
  example: []
  syntax:
    content: public bool IsPropagateCancellation { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPropagateCancellation As Boolean
  overload: Grpc.Core.ContextPropagationOptions.IsPropagateCancellation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Grpc.Core.ContextPropagationToken
  commentId: T:Grpc.Core.ContextPropagationToken
  parent: Grpc.Core
  isExternal: false
  name: ContextPropagationToken
  nameWithType: ContextPropagationToken
  fullName: Grpc.Core.ContextPropagationToken
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: false
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.ContextPropagationOptions
  commentId: T:Grpc.Core.ContextPropagationOptions
  parent: Grpc.Core
  isExternal: false
  name: ContextPropagationOptions
  nameWithType: ContextPropagationOptions
  fullName: Grpc.Core.ContextPropagationOptions
- uid: Grpc.Core.ContextPropagationOptions.#ctor*
  commentId: Overload:Grpc.Core.ContextPropagationOptions.#ctor
  isExternal: false
  name: ContextPropagationOptions
  nameWithType: ContextPropagationOptions.ContextPropagationOptions
  fullName: Grpc.Core.ContextPropagationOptions.ContextPropagationOptions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Grpc.Core.ContextPropagationOptions.IsPropagateDeadline*
  commentId: Overload:Grpc.Core.ContextPropagationOptions.IsPropagateDeadline
  isExternal: false
  name: IsPropagateDeadline
  nameWithType: ContextPropagationOptions.IsPropagateDeadline
  fullName: Grpc.Core.ContextPropagationOptions.IsPropagateDeadline
- uid: Grpc.Core.ContextPropagationOptions.IsPropagateCancellation*
  commentId: Overload:Grpc.Core.ContextPropagationOptions.IsPropagateCancellation
  isExternal: false
  name: IsPropagateCancellation
  nameWithType: ContextPropagationOptions.IsPropagateCancellation
  fullName: Grpc.Core.ContextPropagationOptions.IsPropagateCancellation
