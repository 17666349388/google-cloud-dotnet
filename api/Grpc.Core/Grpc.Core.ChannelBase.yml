### YamlMime:ManagedReference
items:
- uid: Grpc.Core.ChannelBase
  commentId: T:Grpc.Core.ChannelBase
  id: ChannelBase
  parent: Grpc.Core
  children:
  - Grpc.Core.ChannelBase.#ctor(System.String)
  - Grpc.Core.ChannelBase.CreateCallInvoker
  - Grpc.Core.ChannelBase.ShutdownAsync
  - Grpc.Core.ChannelBase.ShutdownAsyncCore
  - Grpc.Core.ChannelBase.Target
  langs:
  - csharp
  - vb
  name: ChannelBase
  nameWithType: ChannelBase
  fullName: Grpc.Core.ChannelBase
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ChannelBase.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: ChannelBase
    path: src/csharp/Grpc.Core.Api/ChannelBase.cs
    startLine: 27
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nBase class for gRPC channel. Channels are an abstraction of long-lived connections to remote servers.\n"
  example: []
  syntax:
    content: public abstract class ChannelBase
    content.vb: Public MustInherit Class ChannelBase
  inheritance:
  - System.Object
  derivedClasses:
  - Grpc.Core.Channel
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Grpc.Core.ChannelBase.Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.Interceptors.Interceptor)
  - Grpc.Core.ChannelBase.Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.Interceptors.Interceptor[])
  - Grpc.Core.ChannelBase.Grpc.Core.Interceptors.ChannelExtensions.Intercept(System.Func{Grpc.Core.Metadata,Grpc.Core.Metadata})
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Grpc.Core.ChannelBase.#ctor(System.String)
  commentId: M:Grpc.Core.ChannelBase.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Grpc.Core.ChannelBase
  langs:
  - csharp
  - vb
  name: ChannelBase(String)
  nameWithType: ChannelBase.ChannelBase(String)
  fullName: Grpc.Core.ChannelBase.ChannelBase(System.String)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ChannelBase.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core.Api/ChannelBase.cs
    startLine: 35
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nInitializes a new instance of <xref href=\"Grpc.Core.ChannelBase\" data-throw-if-not-resolved=\"false\"></xref> class that connects to a specific host.\n"
  example: []
  syntax:
    content: protected ChannelBase(string target)
    parameters:
    - id: target
      type: System.String
      description: Target of the channel.
    content.vb: Protected Sub New(target As String)
  overload: Grpc.Core.ChannelBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Grpc.Core.ChannelBase.Target
  commentId: P:Grpc.Core.ChannelBase.Target
  id: Target
  parent: Grpc.Core.ChannelBase
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: ChannelBase.Target
  fullName: Grpc.Core.ChannelBase.Target
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ChannelBase.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: Target
    path: src/csharp/Grpc.Core.Api/ChannelBase.cs
    startLine: 41
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: The original target used to create the channel.
  example: []
  syntax:
    content: public string Target { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Target As String
  overload: Grpc.Core.ChannelBase.Target*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.ChannelBase.CreateCallInvoker
  commentId: M:Grpc.Core.ChannelBase.CreateCallInvoker
  id: CreateCallInvoker
  parent: Grpc.Core.ChannelBase
  langs:
  - csharp
  - vb
  name: CreateCallInvoker()
  nameWithType: ChannelBase.CreateCallInvoker()
  fullName: Grpc.Core.ChannelBase.CreateCallInvoker()
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ChannelBase.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: CreateCallInvoker
    path: src/csharp/Grpc.Core.Api/ChannelBase.cs
    startLine: 50
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nCreate a new <xref href=\"Grpc.Core.CallInvoker\" data-throw-if-not-resolved=\"false\"></xref> for the channel.\n"
  example: []
  syntax:
    content: public abstract CallInvoker CreateCallInvoker()
    return:
      type: Grpc.Core.CallInvoker
      description: A new <xref href="Grpc.Core.CallInvoker" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public MustOverride Function CreateCallInvoker As CallInvoker
  overload: Grpc.Core.ChannelBase.CreateCallInvoker*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Grpc.Core.ChannelBase.ShutdownAsync
  commentId: M:Grpc.Core.ChannelBase.ShutdownAsync
  id: ShutdownAsync
  parent: Grpc.Core.ChannelBase
  langs:
  - csharp
  - vb
  name: ShutdownAsync()
  nameWithType: ChannelBase.ShutdownAsync()
  fullName: Grpc.Core.ChannelBase.ShutdownAsync()
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ChannelBase.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: ShutdownAsync
    path: src/csharp/Grpc.Core.Api/ChannelBase.cs
    startLine: 64
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: "\nShuts down the channel cleanly. It is strongly recommended to shutdown\nthe channel once you stopped using it.\n"
  remarks: "\nGuidance for implementors:\nThis method doesn&apos;t wait for all calls on this channel to finish (nor does\nit have to explicitly cancel all outstanding calls). It is user&apos;s responsibility to make sure\nall the calls on this channel have finished (successfully or with an error)\nbefore shutting down the channel to ensure channel shutdown won&apos;t impact\nthe outcome of those remote calls.\n"
  example: []
  syntax:
    content: public Task ShutdownAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ShutdownAsync As Task
  overload: Grpc.Core.ChannelBase.ShutdownAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.ChannelBase.ShutdownAsyncCore
  commentId: M:Grpc.Core.ChannelBase.ShutdownAsyncCore
  id: ShutdownAsyncCore
  parent: Grpc.Core.ChannelBase
  langs:
  - csharp
  - vb
  name: ShutdownAsyncCore()
  nameWithType: ChannelBase.ShutdownAsyncCore()
  fullName: Grpc.Core.ChannelBase.ShutdownAsyncCore()
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core.Api/ChannelBase.cs
      branch: v1.27.x
      repo: https://github.com/grpc/grpc
    id: ShutdownAsyncCore
    path: src/csharp/Grpc.Core.Api/ChannelBase.cs
    startLine: 71
  assemblies:
  - Grpc.Core.Api
  namespace: Grpc.Core
  summary: Provides implementation of a non-virtual public member.
  example: []
  syntax:
    content: protected virtual Task ShutdownAsyncCore()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overridable Function ShutdownAsyncCore As Task
  overload: Grpc.Core.ChannelBase.ShutdownAsyncCore*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Grpc.Core
  commentId: N:Grpc.Core
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.ChannelBase.Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.Interceptors.Interceptor)
  commentId: M:Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,Grpc.Core.Interceptors.Interceptor)
  parent: Grpc.Core.Interceptors.ChannelExtensions
  definition: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,Grpc.Core.Interceptors.Interceptor)
  name: Intercept(Interceptor)
  nameWithType: ChannelExtensions.Intercept(Interceptor)
  fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.Interceptors.Interceptor)
  spec.csharp:
  - uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.Interceptors.Interceptor)
    name: Intercept
    nameWithType: ChannelExtensions.Intercept
    fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.Interceptors.Interceptor
    name: Interceptor
    nameWithType: Interceptor
    fullName: Grpc.Core.Interceptors.Interceptor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.Interceptors.Interceptor)
    name: Intercept
    nameWithType: ChannelExtensions.Intercept
    fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.Interceptors.Interceptor
    name: Interceptor
    nameWithType: Interceptor
    fullName: Grpc.Core.Interceptors.Interceptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.ChannelBase.Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.Interceptors.Interceptor[])
  commentId: M:Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,Grpc.Core.Interceptors.Interceptor[])
  parent: Grpc.Core.Interceptors.ChannelExtensions
  definition: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,Grpc.Core.Interceptors.Interceptor[])
  name: Intercept(Interceptor[])
  nameWithType: ChannelExtensions.Intercept(Interceptor[])
  fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.Interceptors.Interceptor[])
  nameWithType.vb: ChannelExtensions.Intercept(Interceptor())
  fullName.vb: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.Interceptors.Interceptor())
  name.vb: Intercept(Interceptor())
  spec.csharp:
  - uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.Interceptors.Interceptor[])
    name: Intercept
    nameWithType: ChannelExtensions.Intercept
    fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.Interceptors.Interceptor
    name: Interceptor
    nameWithType: Interceptor
    fullName: Grpc.Core.Interceptors.Interceptor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.Interceptors.Interceptor[])
    name: Intercept
    nameWithType: ChannelExtensions.Intercept
    fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.Interceptors.Interceptor
    name: Interceptor
    nameWithType: Interceptor
    fullName: Grpc.Core.Interceptors.Interceptor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.ChannelBase.Grpc.Core.Interceptors.ChannelExtensions.Intercept(System.Func{Grpc.Core.Metadata,Grpc.Core.Metadata})
  commentId: M:Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,System.Func{Grpc.Core.Metadata,Grpc.Core.Metadata})
  parent: Grpc.Core.Interceptors.ChannelExtensions
  definition: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,System.Func{Grpc.Core.Metadata,Grpc.Core.Metadata})
  name: Intercept(Func<Metadata, Metadata>)
  nameWithType: ChannelExtensions.Intercept(Func<Metadata, Metadata>)
  fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept(System.Func<Grpc.Core.Metadata, Grpc.Core.Metadata>)
  nameWithType.vb: ChannelExtensions.Intercept(Func(Of Metadata, Metadata))
  fullName.vb: Grpc.Core.Interceptors.ChannelExtensions.Intercept(System.Func(Of Grpc.Core.Metadata, Grpc.Core.Metadata))
  name.vb: Intercept(Func(Of Metadata, Metadata))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(System.Func{Grpc.Core.Metadata,Grpc.Core.Metadata})
    name: Intercept
    nameWithType: ChannelExtensions.Intercept
    fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Grpc.Core.Metadata
    name: Metadata
    nameWithType: Metadata
    fullName: Grpc.Core.Metadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Metadata
    name: Metadata
    nameWithType: Metadata
    fullName: Grpc.Core.Metadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(System.Func{Grpc.Core.Metadata,Grpc.Core.Metadata})
    name: Intercept
    nameWithType: ChannelExtensions.Intercept
    fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Grpc.Core.Metadata
    name: Metadata
    nameWithType: Metadata
    fullName: Grpc.Core.Metadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Metadata
    name: Metadata
    nameWithType: Metadata
    fullName: Grpc.Core.Metadata
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,Grpc.Core.Interceptors.Interceptor)
  commentId: M:Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,Grpc.Core.Interceptors.Interceptor)
  name: Intercept(ChannelBase, Interceptor)
  nameWithType: ChannelExtensions.Intercept(ChannelBase, Interceptor)
  fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase, Grpc.Core.Interceptors.Interceptor)
  spec.csharp:
  - uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,Grpc.Core.Interceptors.Interceptor)
    name: Intercept
    nameWithType: ChannelExtensions.Intercept
    fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.ChannelBase
    name: ChannelBase
    nameWithType: ChannelBase
    fullName: Grpc.Core.ChannelBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor
    name: Interceptor
    nameWithType: Interceptor
    fullName: Grpc.Core.Interceptors.Interceptor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,Grpc.Core.Interceptors.Interceptor)
    name: Intercept
    nameWithType: ChannelExtensions.Intercept
    fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.ChannelBase
    name: ChannelBase
    nameWithType: ChannelBase
    fullName: Grpc.Core.ChannelBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor
    name: Interceptor
    nameWithType: Interceptor
    fullName: Grpc.Core.Interceptors.Interceptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.ChannelExtensions
  commentId: T:Grpc.Core.Interceptors.ChannelExtensions
  parent: Grpc.Core.Interceptors
  name: ChannelExtensions
  nameWithType: ChannelExtensions
  fullName: Grpc.Core.Interceptors.ChannelExtensions
- uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,Grpc.Core.Interceptors.Interceptor[])
  commentId: M:Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,Grpc.Core.Interceptors.Interceptor[])
  name: Intercept(ChannelBase, Interceptor[])
  nameWithType: ChannelExtensions.Intercept(ChannelBase, Interceptor[])
  fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase, Grpc.Core.Interceptors.Interceptor[])
  nameWithType.vb: ChannelExtensions.Intercept(ChannelBase, Interceptor())
  fullName.vb: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase, Grpc.Core.Interceptors.Interceptor())
  name.vb: Intercept(ChannelBase, Interceptor())
  spec.csharp:
  - uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,Grpc.Core.Interceptors.Interceptor[])
    name: Intercept
    nameWithType: ChannelExtensions.Intercept
    fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.ChannelBase
    name: ChannelBase
    nameWithType: ChannelBase
    fullName: Grpc.Core.ChannelBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor
    name: Interceptor
    nameWithType: Interceptor
    fullName: Grpc.Core.Interceptors.Interceptor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,Grpc.Core.Interceptors.Interceptor[])
    name: Intercept
    nameWithType: ChannelExtensions.Intercept
    fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.ChannelBase
    name: ChannelBase
    nameWithType: ChannelBase
    fullName: Grpc.Core.ChannelBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Interceptors.Interceptor
    name: Interceptor
    nameWithType: Interceptor
    fullName: Grpc.Core.Interceptors.Interceptor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,System.Func{Grpc.Core.Metadata,Grpc.Core.Metadata})
  commentId: M:Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,System.Func{Grpc.Core.Metadata,Grpc.Core.Metadata})
  isExternal: true
  name: Intercept(ChannelBase, Func<Metadata, Metadata>)
  nameWithType: ChannelExtensions.Intercept(ChannelBase, Func<Metadata, Metadata>)
  fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase, System.Func<Grpc.Core.Metadata, Grpc.Core.Metadata>)
  nameWithType.vb: ChannelExtensions.Intercept(ChannelBase, Func(Of Metadata, Metadata))
  fullName.vb: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase, System.Func(Of Grpc.Core.Metadata, Grpc.Core.Metadata))
  name.vb: Intercept(ChannelBase, Func(Of Metadata, Metadata))
  spec.csharp:
  - uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,System.Func{Grpc.Core.Metadata,Grpc.Core.Metadata})
    name: Intercept
    nameWithType: ChannelExtensions.Intercept
    fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.ChannelBase
    name: ChannelBase
    nameWithType: ChannelBase
    fullName: Grpc.Core.ChannelBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Grpc.Core.Metadata
    name: Metadata
    nameWithType: Metadata
    fullName: Grpc.Core.Metadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Metadata
    name: Metadata
    nameWithType: Metadata
    fullName: Grpc.Core.Metadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.Interceptors.ChannelExtensions.Intercept(Grpc.Core.ChannelBase,System.Func{Grpc.Core.Metadata,Grpc.Core.Metadata})
    name: Intercept
    nameWithType: ChannelExtensions.Intercept
    fullName: Grpc.Core.Interceptors.ChannelExtensions.Intercept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.ChannelBase
    name: ChannelBase
    nameWithType: ChannelBase
    fullName: Grpc.Core.ChannelBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Grpc.Core.Metadata
    name: Metadata
    nameWithType: Metadata
    fullName: Grpc.Core.Metadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.Metadata
    name: Metadata
    nameWithType: Metadata
    fullName: Grpc.Core.Metadata
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Interceptors
  commentId: N:Grpc.Core.Interceptors
  name: Grpc.Core.Interceptors
  nameWithType: Grpc.Core.Interceptors
  fullName: Grpc.Core.Interceptors
- uid: Grpc.Core.ChannelBase
  commentId: T:Grpc.Core.ChannelBase
  parent: Grpc.Core
  name: ChannelBase
  nameWithType: ChannelBase
  fullName: Grpc.Core.ChannelBase
- uid: Grpc.Core.ChannelBase.#ctor*
  commentId: Overload:Grpc.Core.ChannelBase.#ctor
  name: ChannelBase
  nameWithType: ChannelBase.ChannelBase
  fullName: Grpc.Core.ChannelBase.ChannelBase
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Grpc.Core.ChannelBase.Target*
  commentId: Overload:Grpc.Core.ChannelBase.Target
  name: Target
  nameWithType: ChannelBase.Target
  fullName: Grpc.Core.ChannelBase.Target
- uid: Grpc.Core.CallInvoker
  commentId: T:Grpc.Core.CallInvoker
  parent: Grpc.Core
  name: CallInvoker
  nameWithType: CallInvoker
  fullName: Grpc.Core.CallInvoker
- uid: Grpc.Core.ChannelBase.CreateCallInvoker*
  commentId: Overload:Grpc.Core.ChannelBase.CreateCallInvoker
  name: CreateCallInvoker
  nameWithType: ChannelBase.CreateCallInvoker
  fullName: Grpc.Core.ChannelBase.CreateCallInvoker
- uid: Grpc.Core.ChannelBase.ShutdownAsync*
  commentId: Overload:Grpc.Core.ChannelBase.ShutdownAsync
  name: ShutdownAsync
  nameWithType: ChannelBase.ShutdownAsync
  fullName: Grpc.Core.ChannelBase.ShutdownAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Grpc.Core.ChannelBase.ShutdownAsyncCore*
  commentId: Overload:Grpc.Core.ChannelBase.ShutdownAsyncCore
  name: ShutdownAsyncCore
  nameWithType: ChannelBase.ShutdownAsyncCore
  fullName: Grpc.Core.ChannelBase.ShutdownAsyncCore
