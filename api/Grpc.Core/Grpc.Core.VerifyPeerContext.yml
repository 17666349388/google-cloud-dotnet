### YamlMime:ManagedReference
items:
- uid: Grpc.Core.VerifyPeerContext
  commentId: T:Grpc.Core.VerifyPeerContext
  id: VerifyPeerContext
  parent: Grpc.Core
  children:
  - Grpc.Core.VerifyPeerContext.PeerPem
  - Grpc.Core.VerifyPeerContext.TargetName
  langs:
  - csharp
  - vb
  name: VerifyPeerContext
  nameWithType: VerifyPeerContext
  fullName: Grpc.Core.VerifyPeerContext
  type: Class
  source:
    remote:
      path: src/csharp/Grpc.Core/VerifyPeerContext.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: VerifyPeerContext
    path: src/csharp/Grpc.Core/VerifyPeerContext.cs
    startLine: 24
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nVerification context for VerifyPeerCallback.\nNote: experimental API that can change or be removed without any prior notice.\n"
  example: []
  syntax:
    content: public class VerifyPeerContext
    content.vb: Public Class VerifyPeerContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Grpc.Core.VerifyPeerContext.TargetName
  commentId: P:Grpc.Core.VerifyPeerContext.TargetName
  id: TargetName
  parent: Grpc.Core.VerifyPeerContext
  langs:
  - csharp
  - vb
  name: TargetName
  nameWithType: VerifyPeerContext.TargetName
  fullName: Grpc.Core.VerifyPeerContext.TargetName
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/VerifyPeerContext.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: TargetName
    path: src/csharp/Grpc.Core/VerifyPeerContext.cs
    startLine: 40
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nThe target name of the peer.\n"
  example: []
  syntax:
    content: public string TargetName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TargetName As String
  overload: Grpc.Core.VerifyPeerContext.TargetName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.VerifyPeerContext.PeerPem
  commentId: P:Grpc.Core.VerifyPeerContext.PeerPem
  id: PeerPem
  parent: Grpc.Core.VerifyPeerContext
  langs:
  - csharp
  - vb
  name: PeerPem
  nameWithType: VerifyPeerContext.PeerPem
  fullName: Grpc.Core.VerifyPeerContext.PeerPem
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/VerifyPeerContext.cs
      branch: v1.22.x
      repo: https://github.com/grpc/grpc
    id: PeerPem
    path: src/csharp/Grpc.Core/VerifyPeerContext.cs
    startLine: 45
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nThe PEM encoded certificate of the peer.\n"
  example: []
  syntax:
    content: public string PeerPem { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PeerPem As String
  overload: Grpc.Core.VerifyPeerContext.PeerPem*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Grpc.Core
  commentId: N:Grpc.Core
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.VerifyPeerContext.TargetName*
  commentId: Overload:Grpc.Core.VerifyPeerContext.TargetName
  name: TargetName
  nameWithType: VerifyPeerContext.TargetName
  fullName: Grpc.Core.VerifyPeerContext.TargetName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Grpc.Core.VerifyPeerContext.PeerPem*
  commentId: Overload:Grpc.Core.VerifyPeerContext.PeerPem
  name: PeerPem
  nameWithType: VerifyPeerContext.PeerPem
  fullName: Grpc.Core.VerifyPeerContext.PeerPem
