### YamlMime:ManagedReference
items:
- uid: Grpc.Core.Status
  commentId: T:Grpc.Core.Status
  id: Status
  parent: Grpc.Core
  children:
  - Grpc.Core.Status.#ctor(Grpc.Core.StatusCode,System.String)
  - Grpc.Core.Status.DefaultCancelled
  - Grpc.Core.Status.DefaultSuccess
  - Grpc.Core.Status.Detail
  - Grpc.Core.Status.StatusCode
  - Grpc.Core.Status.ToString
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Status
  fullName: Grpc.Core.Status
  type: Struct
  source:
    remote:
      path: src/csharp/Grpc.Core/Status.cs
      branch: v1.4.x
      repo: https://github.com/grpc/grpc
    id: Status
    path: src/csharp/Grpc.Core/Status.cs
    startLine: 38
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nRepresents RPC result, which consists of <xref href=\"Grpc.Core.Status.StatusCode\" data-throw-if-not-resolved=\"false\"></xref> and an optional detail string. \n"
  example: []
  syntax:
    content: public struct Status
    content.vb: Public Structure Status
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Grpc.Core.Status.DefaultSuccess
  commentId: F:Grpc.Core.Status.DefaultSuccess
  id: DefaultSuccess
  parent: Grpc.Core.Status
  langs:
  - csharp
  - vb
  name: DefaultSuccess
  nameWithType: Status.DefaultSuccess
  fullName: Grpc.Core.Status.DefaultSuccess
  type: Field
  source:
    remote:
      path: src/csharp/Grpc.Core/Status.cs
      branch: v1.4.x
      repo: https://github.com/grpc/grpc
    id: DefaultSuccess
    path: src/csharp/Grpc.Core/Status.cs
    startLine: 43
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nDefault result of a successful RPC. StatusCode=OK, empty details message.\n"
  example: []
  syntax:
    content: public static readonly Status DefaultSuccess
    return:
      type: Grpc.Core.Status
    content.vb: Public Shared ReadOnly DefaultSuccess As Status
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Grpc.Core.Status.DefaultCancelled
  commentId: F:Grpc.Core.Status.DefaultCancelled
  id: DefaultCancelled
  parent: Grpc.Core.Status
  langs:
  - csharp
  - vb
  name: DefaultCancelled
  nameWithType: Status.DefaultCancelled
  fullName: Grpc.Core.Status.DefaultCancelled
  type: Field
  source:
    remote:
      path: src/csharp/Grpc.Core/Status.cs
      branch: v1.4.x
      repo: https://github.com/grpc/grpc
    id: DefaultCancelled
    path: src/csharp/Grpc.Core/Status.cs
    startLine: 48
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nDefault result of a cancelled RPC. StatusCode=Cancelled, empty details message.\n"
  example: []
  syntax:
    content: public static readonly Status DefaultCancelled
    return:
      type: Grpc.Core.Status
    content.vb: Public Shared ReadOnly DefaultCancelled As Status
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Grpc.Core.Status.#ctor(Grpc.Core.StatusCode,System.String)
  commentId: M:Grpc.Core.Status.#ctor(Grpc.Core.StatusCode,System.String)
  id: '#ctor(Grpc.Core.StatusCode,System.String)'
  parent: Grpc.Core.Status
  langs:
  - csharp
  - vb
  name: Status(StatusCode, String)
  nameWithType: Status.Status(StatusCode, String)
  fullName: Grpc.Core.Status.Status(Grpc.Core.StatusCode, System.String)
  type: Constructor
  source:
    remote:
      path: src/csharp/Grpc.Core/Status.cs
      branch: v1.4.x
      repo: https://github.com/grpc/grpc
    id: .ctor
    path: src/csharp/Grpc.Core/Status.cs
    startLine: 58
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nCreates a new instance of <code>Status</code>.\n"
  example: []
  syntax:
    content: public Status(StatusCode statusCode, string detail)
    parameters:
    - id: statusCode
      type: Grpc.Core.StatusCode
      description: Status code.
    - id: detail
      type: System.String
      description: Detail.
    content.vb: Public Sub New(statusCode As StatusCode, detail As String)
  overload: Grpc.Core.Status.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Grpc.Core.Status.StatusCode
  commentId: P:Grpc.Core.Status.StatusCode
  id: StatusCode
  parent: Grpc.Core.Status
  langs:
  - csharp
  - vb
  name: StatusCode
  nameWithType: Status.StatusCode
  fullName: Grpc.Core.Status.StatusCode
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/Status.cs
      branch: v1.4.x
      repo: https://github.com/grpc/grpc
    id: StatusCode
    path: src/csharp/Grpc.Core/Status.cs
    startLine: 67
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGets the gRPC status code. OK indicates success, all other values indicate an error.\n"
  example: []
  syntax:
    content: public StatusCode StatusCode { get; }
    parameters: []
    return:
      type: Grpc.Core.StatusCode
    content.vb: Public ReadOnly Property StatusCode As StatusCode
  overload: Grpc.Core.Status.StatusCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.Status.Detail
  commentId: P:Grpc.Core.Status.Detail
  id: Detail
  parent: Grpc.Core.Status
  langs:
  - csharp
  - vb
  name: Detail
  nameWithType: Status.Detail
  fullName: Grpc.Core.Status.Detail
  type: Property
  source:
    remote:
      path: src/csharp/Grpc.Core/Status.cs
      branch: v1.4.x
      repo: https://github.com/grpc/grpc
    id: Detail
    path: src/csharp/Grpc.Core/Status.cs
    startLine: 78
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nGets the detail.\n"
  example: []
  syntax:
    content: public string Detail { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Detail As String
  overload: Grpc.Core.Status.Detail*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Grpc.Core.Status.ToString
  commentId: M:Grpc.Core.Status.ToString
  id: ToString
  parent: Grpc.Core.Status
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Status.ToString()
  fullName: Grpc.Core.Status.ToString()
  type: Method
  source:
    remote:
      path: src/csharp/Grpc.Core/Status.cs
      branch: v1.4.x
      repo: https://github.com/grpc/grpc
    id: ToString
    path: src/csharp/Grpc.Core/Status.cs
    startLine: 89
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"Grpc.Core.Status\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Grpc.Core.Status.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Grpc.Core.Status.StatusCode
  commentId: P:Grpc.Core.Status.StatusCode
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: false
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core.Status
  commentId: T:Grpc.Core.Status
  parent: Grpc.Core
  isExternal: false
  name: Status
  nameWithType: Status
  fullName: Grpc.Core.Status
- uid: Grpc.Core.Status.#ctor*
  commentId: Overload:Grpc.Core.Status.#ctor
  isExternal: false
  name: Status
  nameWithType: Status.Status
  fullName: Grpc.Core.Status.Status
- uid: Grpc.Core.StatusCode
  commentId: T:Grpc.Core.StatusCode
  parent: Grpc.Core
  isExternal: false
  name: StatusCode
  nameWithType: StatusCode
  fullName: Grpc.Core.StatusCode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Grpc.Core.Status.StatusCode*
  commentId: Overload:Grpc.Core.Status.StatusCode
  isExternal: false
  name: StatusCode
  nameWithType: Status.StatusCode
  fullName: Grpc.Core.Status.StatusCode
- uid: Grpc.Core.Status.Detail*
  commentId: Overload:Grpc.Core.Status.Detail
  isExternal: false
  name: Detail
  nameWithType: Status.Detail
  fullName: Grpc.Core.Status.Detail
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.Status.ToString*
  commentId: Overload:Grpc.Core.Status.ToString
  isExternal: false
  name: ToString
  nameWithType: Status.ToString
  fullName: Grpc.Core.Status.ToString
