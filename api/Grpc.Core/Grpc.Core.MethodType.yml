### YamlMime:ManagedReference
items:
- uid: Grpc.Core.MethodType
  commentId: T:Grpc.Core.MethodType
  id: MethodType
  parent: Grpc.Core
  children:
  - Grpc.Core.MethodType.ClientStreaming
  - Grpc.Core.MethodType.DuplexStreaming
  - Grpc.Core.MethodType.ServerStreaming
  - Grpc.Core.MethodType.Unary
  langs:
  - csharp
  - vb
  name: MethodType
  nameWithType: MethodType
  fullName: Grpc.Core.MethodType
  type: Enum
  source:
    remote:
      path: src/csharp/Grpc.Core/Method.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: MethodType
    path: src/csharp/Grpc.Core/Method.cs
    startLine: 41
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: "\nMethod types supported by gRPC.\n"
  example: []
  syntax:
    content: public enum MethodType
    content.vb: Public Enum MethodType
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Grpc.Core.MethodType.Unary
  commentId: F:Grpc.Core.MethodType.Unary
  id: Unary
  parent: Grpc.Core.MethodType
  langs:
  - csharp
  - vb
  name: Unary
  nameWithType: MethodType.Unary
  fullName: Grpc.Core.MethodType.Unary
  type: Field
  source:
    remote:
      path: src/csharp/Grpc.Core/Method.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: Unary
    path: src/csharp/Grpc.Core/Method.cs
    startLine: 44
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: Single request sent from client, single response received from server.
  example: []
  syntax:
    content: Unary = 0
    return:
      type: Grpc.Core.MethodType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Grpc.Core.MethodType.ClientStreaming
  commentId: F:Grpc.Core.MethodType.ClientStreaming
  id: ClientStreaming
  parent: Grpc.Core.MethodType
  langs:
  - csharp
  - vb
  name: ClientStreaming
  nameWithType: MethodType.ClientStreaming
  fullName: Grpc.Core.MethodType.ClientStreaming
  type: Field
  source:
    remote:
      path: src/csharp/Grpc.Core/Method.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: ClientStreaming
    path: src/csharp/Grpc.Core/Method.cs
    startLine: 47
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: Stream of request sent from client, single response received from server.
  example: []
  syntax:
    content: ClientStreaming = 1
    return:
      type: Grpc.Core.MethodType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Grpc.Core.MethodType.ServerStreaming
  commentId: F:Grpc.Core.MethodType.ServerStreaming
  id: ServerStreaming
  parent: Grpc.Core.MethodType
  langs:
  - csharp
  - vb
  name: ServerStreaming
  nameWithType: MethodType.ServerStreaming
  fullName: Grpc.Core.MethodType.ServerStreaming
  type: Field
  source:
    remote:
      path: src/csharp/Grpc.Core/Method.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: ServerStreaming
    path: src/csharp/Grpc.Core/Method.cs
    startLine: 50
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: Single request sent from client, stream of responses received from server.
  example: []
  syntax:
    content: ServerStreaming = 2
    return:
      type: Grpc.Core.MethodType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Grpc.Core.MethodType.DuplexStreaming
  commentId: F:Grpc.Core.MethodType.DuplexStreaming
  id: DuplexStreaming
  parent: Grpc.Core.MethodType
  langs:
  - csharp
  - vb
  name: DuplexStreaming
  nameWithType: MethodType.DuplexStreaming
  fullName: Grpc.Core.MethodType.DuplexStreaming
  type: Field
  source:
    remote:
      path: src/csharp/Grpc.Core/Method.cs
      branch: v1.3.x
      repo: https://github.com/grpc/grpc
    id: DuplexStreaming
    path: src/csharp/Grpc.Core/Method.cs
    startLine: 53
  assemblies:
  - Grpc.Core
  namespace: Grpc.Core
  summary: Both server and client can stream arbitrary number of requests and responses simultaneously.
  example: []
  syntax:
    content: DuplexStreaming = 3
    return:
      type: Grpc.Core.MethodType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: false
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: Grpc.Core.MethodType
  commentId: T:Grpc.Core.MethodType
  parent: Grpc.Core
  isExternal: false
  name: MethodType
  nameWithType: MethodType
  fullName: Grpc.Core.MethodType
