### YamlMime:ManagedReference
items:
- uid: Google.Apis.Http.IHttpExecuteInterceptor
  commentId: T:Google.Apis.Http.IHttpExecuteInterceptor
  id: IHttpExecuteInterceptor
  parent: Google.Apis.Http
  children:
  - Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IHttpExecuteInterceptor
  nameWithType: IHttpExecuteInterceptor
  fullName: Google.Apis.Http.IHttpExecuteInterceptor
  type: Interface
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/IHttpExecuteInterceptor.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IHttpExecuteInterceptor
    path: Src/Support/Google.Apis.Core/Http/IHttpExecuteInterceptor.cs
    startLine: 26
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nHTTP request execute interceptor to intercept a <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> before it has\nbeen sent. Sample usage is attaching \"Authorization\" header to a request.\n"
  example: []
  syntax:
    content: public interface IHttpExecuteInterceptor
    content.vb: Public Interface IHttpExecuteInterceptor
  extensionMethods:
  - Google.Apis.Http.IHttpExecuteInterceptor.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: InterceptAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: Google.Apis.Http.IHttpExecuteInterceptor
  langs:
  - csharp
  - vb
  name: InterceptAsync(HttpRequestMessage, CancellationToken)
  nameWithType: IHttpExecuteInterceptor.InterceptAsync(HttpRequestMessage, CancellationToken)
  fullName: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/IHttpExecuteInterceptor.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: InterceptAsync
    path: Src/Support/Google.Apis.Core/Http/IHttpExecuteInterceptor.cs
    startLine: 33
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\n<summary>Invoked before the request is being sent.</summary>\n"
  example: []
  syntax:
    content: Task InterceptAsync(HttpRequestMessage request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The HTTP request message.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function InterceptAsync(request As HttpRequestMessage, cancellationToken As CancellationToken) As Task
  overload: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync*
references:
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: Google.Apis.Http
  commentId: N:Google.Apis.Http
  isExternal: false
  name: Google.Apis.Http
  nameWithType: Google.Apis.Http
  fullName: Google.Apis.Http
- uid: Google.Apis.Http.IHttpExecuteInterceptor.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<IHttpExecuteInterceptor>(String)
  nameWithType: Utilities.ThrowIfNull<IHttpExecuteInterceptor>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Http.IHttpExecuteInterceptor>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of IHttpExecuteInterceptor)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Http.IHttpExecuteInterceptor)(System.String)
  name.vb: ThrowIfNull(Of IHttpExecuteInterceptor)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<IHttpExecuteInterceptor>
    nameWithType: Utilities.ThrowIfNull<IHttpExecuteInterceptor>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Http.IHttpExecuteInterceptor>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of IHttpExecuteInterceptor)
    nameWithType: Utilities.ThrowIfNull(Of IHttpExecuteInterceptor)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Http.IHttpExecuteInterceptor)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  isExternal: false
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync*
  commentId: Overload:Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync
  isExternal: false
  name: InterceptAsync
  nameWithType: IHttpExecuteInterceptor.InterceptAsync
  fullName: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
