### YamlMime:ManagedReference
items:
- uid: Google.Apis.Util.IClock
  commentId: T:Google.Apis.Util.IClock
  id: IClock
  parent: Google.Apis.Util
  children:
  - Google.Apis.Util.IClock.Now
  - Google.Apis.Util.IClock.UtcNow
  langs:
  - csharp
  - vb
  name: IClock
  nameWithType: IClock
  fullName: Google.Apis.Util.IClock
  type: Interface
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/IClock.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IClock
    path: Src/Support/Google.Apis.Core/Util/IClock.cs
    startLine: 21
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: Clock wrapper for getting the current time.
  example: []
  syntax:
    content: public interface IClock
    content.vb: Public Interface IClock
  extensionMethods:
  - Google.Apis.Util.IClock.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Google.Apis.Util.IClock.Now
  commentId: P:Google.Apis.Util.IClock.Now
  id: Now
  parent: Google.Apis.Util.IClock
  langs:
  - csharp
  - vb
  name: Now
  nameWithType: IClock.Now
  fullName: Google.Apis.Util.IClock.Now
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/IClock.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Now
    path: Src/Support/Google.Apis.Core/Util/IClock.cs
    startLine: 27
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: "\nGets a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object that is set to the current date and time on this computer, \nexpressed as the local time.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("System local time is almost always inappropriate to use. If you really need this, call UtcNow and then call ToLocalTime on the result")]

      DateTime Now { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <Obsolete("System local time is almost always inappropriate to use. If you really need this, call UtcNow and then call ToLocalTime on the result")>

      ReadOnly Property Now As Date
  overload: Google.Apis.Util.IClock.Now*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: System local time is almost always inappropriate to use. If you really need this, call UtcNow and then call ToLocalTime on the result
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Util.IClock.UtcNow
  commentId: P:Google.Apis.Util.IClock.UtcNow
  id: UtcNow
  parent: Google.Apis.Util.IClock
  langs:
  - csharp
  - vb
  name: UtcNow
  nameWithType: IClock.UtcNow
  fullName: Google.Apis.Util.IClock.UtcNow
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/IClock.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UtcNow
    path: Src/Support/Google.Apis.Core/Util/IClock.cs
    startLine: 34
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: "\nGets a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object that is set to the current date and time on this computer, \nexpressed as UTC time.\n"
  example: []
  syntax:
    content: DateTime UtcNow { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: ReadOnly Property UtcNow As Date
  overload: Google.Apis.Util.IClock.UtcNow*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Util.IClock.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<IClock>(String)
  nameWithType: Utilities.ThrowIfNull<IClock>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Util.IClock>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of IClock)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Util.IClock)(System.String)
  name.vb: ThrowIfNull(Of IClock)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<IClock>
    nameWithType: Utilities.ThrowIfNull<IClock>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Util.IClock>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of IClock)
    nameWithType: Utilities.ThrowIfNull(Of IClock)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Util.IClock)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Google.Apis.Util.IClock.Now*
  commentId: Overload:Google.Apis.Util.IClock.Now
  name: Now
  nameWithType: IClock.Now
  fullName: Google.Apis.Util.IClock.Now
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Util.IClock.UtcNow*
  commentId: Overload:Google.Apis.Util.IClock.UtcNow
  name: UtcNow
  nameWithType: IClock.UtcNow
  fullName: Google.Apis.Util.IClock.UtcNow
