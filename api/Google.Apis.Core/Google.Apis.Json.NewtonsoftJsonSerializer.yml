### YamlMime:ManagedReference
items:
- uid: Google.Apis.Json.NewtonsoftJsonSerializer
  commentId: T:Google.Apis.Json.NewtonsoftJsonSerializer
  id: NewtonsoftJsonSerializer
  parent: Google.Apis.Json
  children:
  - Google.Apis.Json.NewtonsoftJsonSerializer.#ctor
  - Google.Apis.Json.NewtonsoftJsonSerializer.#ctor(Newtonsoft.Json.JsonSerializerSettings)
  - Google.Apis.Json.NewtonsoftJsonSerializer.CreateDefaultSettings
  - Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize(System.String,System.Type)
  - Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize``1(System.IO.Stream)
  - Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize``1(System.String)
  - Google.Apis.Json.NewtonsoftJsonSerializer.Format
  - Google.Apis.Json.NewtonsoftJsonSerializer.Instance
  - Google.Apis.Json.NewtonsoftJsonSerializer.Serialize(System.Object)
  - Google.Apis.Json.NewtonsoftJsonSerializer.Serialize(System.Object,System.IO.Stream)
  langs:
  - csharp
  - vb
  name: NewtonsoftJsonSerializer
  nameWithType: NewtonsoftJsonSerializer
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NewtonsoftJsonSerializer
    path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
    startLine: 74
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Json
  summary: Class for serialization and deserialization of JSON documents using the Newtonsoft Library.
  example: []
  syntax:
    content: 'public class NewtonsoftJsonSerializer : IJsonSerializer, ISerializer'
    content.vb: >-
      Public Class NewtonsoftJsonSerializer
          Implements IJsonSerializer, ISerializer
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Json.IJsonSerializer
  - Google.Apis.ISerializer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Google.Apis.Json.NewtonsoftJsonSerializer.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.Instance
  commentId: P:Google.Apis.Json.NewtonsoftJsonSerializer.Instance
  id: Instance
  parent: Google.Apis.Json.NewtonsoftJsonSerializer
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: NewtonsoftJsonSerializer.Instance
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.Instance
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Instance
    path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
    startLine: 80
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Json
  summary: The default instance of the Newtonsoft JSON Serializer, with default settings.
  example: []
  syntax:
    content: public static NewtonsoftJsonSerializer Instance { get; }
    parameters: []
    return:
      type: Google.Apis.Json.NewtonsoftJsonSerializer
    content.vb: Public Shared ReadOnly Property Instance As NewtonsoftJsonSerializer
  overload: Google.Apis.Json.NewtonsoftJsonSerializer.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.#ctor
  commentId: M:Google.Apis.Json.NewtonsoftJsonSerializer.#ctor
  id: '#ctor'
  parent: Google.Apis.Json.NewtonsoftJsonSerializer
  langs:
  - csharp
  - vb
  name: NewtonsoftJsonSerializer()
  nameWithType: NewtonsoftJsonSerializer.NewtonsoftJsonSerializer()
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.NewtonsoftJsonSerializer()
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
    startLine: 85
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Json
  summary: "\nConstructs a new instance with the default serialization settings, equivalent to <xref href=\"Google.Apis.Json.NewtonsoftJsonSerializer.Instance\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public NewtonsoftJsonSerializer()
    content.vb: Public Sub New
  overload: Google.Apis.Json.NewtonsoftJsonSerializer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.#ctor(Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:Google.Apis.Json.NewtonsoftJsonSerializer.#ctor(Newtonsoft.Json.JsonSerializerSettings)
  id: '#ctor(Newtonsoft.Json.JsonSerializerSettings)'
  parent: Google.Apis.Json.NewtonsoftJsonSerializer
  langs:
  - csharp
  - vb
  name: NewtonsoftJsonSerializer(JsonSerializerSettings)
  nameWithType: NewtonsoftJsonSerializer.NewtonsoftJsonSerializer(JsonSerializerSettings)
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.NewtonsoftJsonSerializer(Newtonsoft.Json.JsonSerializerSettings)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
    startLine: 93
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Json
  summary: "\nConstructs a new instance with the given settings.\n"
  example: []
  syntax:
    content: public NewtonsoftJsonSerializer(JsonSerializerSettings settings)
    parameters:
    - id: settings
      type: Newtonsoft.Json.JsonSerializerSettings
      description: The settings to apply when serializing and deserializing. Must not be null.
    content.vb: Public Sub New(settings As JsonSerializerSettings)
  overload: Google.Apis.Json.NewtonsoftJsonSerializer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.CreateDefaultSettings
  commentId: M:Google.Apis.Json.NewtonsoftJsonSerializer.CreateDefaultSettings
  id: CreateDefaultSettings
  parent: Google.Apis.Json.NewtonsoftJsonSerializer
  langs:
  - csharp
  - vb
  name: CreateDefaultSettings()
  nameWithType: NewtonsoftJsonSerializer.CreateDefaultSettings()
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.CreateDefaultSettings()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CreateDefaultSettings
    path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
    startLine: 106
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Json
  summary: "\nCreates a new instance of <xref href=\"Newtonsoft.Json.JsonSerializerSettings\" data-throw-if-not-resolved=\"false\"></xref> with the same behavior\nas the ones used in <xref href=\"Google.Apis.Json.NewtonsoftJsonSerializer.Instance\" data-throw-if-not-resolved=\"false\"></xref>. This method is expected to be used to construct\nsettings which are then passed to <xref href=\"Google.Apis.Json.NewtonsoftJsonSerializer.%23ctor(Newtonsoft.Json.JsonSerializerSettings)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static JsonSerializerSettings CreateDefaultSettings()
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
      description: A new set of default settings.
    content.vb: Public Shared Function CreateDefaultSettings As JsonSerializerSettings
  overload: Google.Apis.Json.NewtonsoftJsonSerializer.CreateDefaultSettings*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.Format
  commentId: P:Google.Apis.Json.NewtonsoftJsonSerializer.Format
  id: Format
  parent: Google.Apis.Json.NewtonsoftJsonSerializer
  langs:
  - csharp
  - vb
  name: Format
  nameWithType: NewtonsoftJsonSerializer.Format
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.Format
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Format
    path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
    startLine: 114
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Json
  syntax:
    content: public string Format { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Format As String
  overload: Google.Apis.Json.NewtonsoftJsonSerializer.Format*
  implements:
  - Google.Apis.ISerializer.Format
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.Serialize(System.Object,System.IO.Stream)
  commentId: M:Google.Apis.Json.NewtonsoftJsonSerializer.Serialize(System.Object,System.IO.Stream)
  id: Serialize(System.Object,System.IO.Stream)
  parent: Google.Apis.Json.NewtonsoftJsonSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Object, Stream)
  nameWithType: NewtonsoftJsonSerializer.Serialize(Object, Stream)
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.Serialize(System.Object, System.IO.Stream)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Serialize
    path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
    startLine: 116
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Json
  syntax:
    content: public void Serialize(object obj, Stream target)
    parameters:
    - id: obj
      type: System.Object
    - id: target
      type: System.IO.Stream
    content.vb: Public Sub Serialize(obj As Object, target As Stream)
  overload: Google.Apis.Json.NewtonsoftJsonSerializer.Serialize*
  implements:
  - Google.Apis.ISerializer.Serialize(System.Object,System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.Serialize(System.Object)
  commentId: M:Google.Apis.Json.NewtonsoftJsonSerializer.Serialize(System.Object)
  id: Serialize(System.Object)
  parent: Google.Apis.Json.NewtonsoftJsonSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Object)
  nameWithType: NewtonsoftJsonSerializer.Serialize(Object)
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.Serialize(System.Object)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Serialize
    path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
    startLine: 128
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Json
  syntax:
    content: public string Serialize(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.String
    content.vb: Public Function Serialize(obj As Object) As String
  overload: Google.Apis.Json.NewtonsoftJsonSerializer.Serialize*
  implements:
  - Google.Apis.ISerializer.Serialize(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize``1(System.String)
  commentId: M:Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize``1(System.String)
  id: Deserialize``1(System.String)
  parent: Google.Apis.Json.NewtonsoftJsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<T>(String)
  nameWithType: NewtonsoftJsonSerializer.Deserialize<T>(String)
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize<T>(System.String)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Deserialize
    path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
    startLine: 141
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Json
  syntax:
    content: public T Deserialize<T>(string input)
    parameters:
    - id: input
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Deserialize(Of T)(input As String) As T
  overload: Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize*
  implements:
  - Google.Apis.ISerializer.Deserialize``1(System.String)
  nameWithType.vb: NewtonsoftJsonSerializer.Deserialize(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize(Of T)(System.String)
  name.vb: Deserialize(Of T)(String)
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize(System.String,System.Type)
  commentId: M:Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize(System.String,System.Type)
  id: Deserialize(System.String,System.Type)
  parent: Google.Apis.Json.NewtonsoftJsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(String, Type)
  nameWithType: NewtonsoftJsonSerializer.Deserialize(String, Type)
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize(System.String, System.Type)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Deserialize
    path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
    startLine: 150
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Json
  syntax:
    content: public object Deserialize(string input, Type type)
    parameters:
    - id: input
      type: System.String
    - id: type
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Function Deserialize(input As String, type As Type) As Object
  overload: Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize*
  implements:
  - Google.Apis.ISerializer.Deserialize(System.String,System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize``1(System.IO.Stream)
  commentId: M:Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize``1(System.IO.Stream)
  id: Deserialize``1(System.IO.Stream)
  parent: Google.Apis.Json.NewtonsoftJsonSerializer
  langs:
  - csharp
  - vb
  name: Deserialize<T>(Stream)
  nameWithType: NewtonsoftJsonSerializer.Deserialize<T>(Stream)
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize<T>(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Deserialize
    path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
    startLine: 159
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Json
  syntax:
    content: public T Deserialize<T>(Stream input)
    parameters:
    - id: input
      type: System.IO.Stream
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Deserialize(Of T)(input As Stream) As T
  overload: Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize*
  implements:
  - Google.Apis.ISerializer.Deserialize``1(System.IO.Stream)
  nameWithType.vb: NewtonsoftJsonSerializer.Deserialize(Of T)(Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize(Of T)(System.IO.Stream)
  name.vb: Deserialize(Of T)(Stream)
references:
- uid: Google.Apis.Json
  commentId: N:Google.Apis.Json
  isExternal: false
  name: Google.Apis.Json
  nameWithType: Google.Apis.Json
  fullName: Google.Apis.Json
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Json.IJsonSerializer
  commentId: T:Google.Apis.Json.IJsonSerializer
  parent: Google.Apis.Json
  isExternal: false
  name: IJsonSerializer
  nameWithType: IJsonSerializer
  fullName: Google.Apis.Json.IJsonSerializer
- uid: Google.Apis.ISerializer
  commentId: T:Google.Apis.ISerializer
  parent: Google.Apis
  isExternal: false
  name: ISerializer
  nameWithType: ISerializer
  fullName: Google.Apis.ISerializer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<NewtonsoftJsonSerializer>(String)
  nameWithType: Utilities.ThrowIfNull<NewtonsoftJsonSerializer>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Json.NewtonsoftJsonSerializer>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of NewtonsoftJsonSerializer)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Json.NewtonsoftJsonSerializer)(System.String)
  name.vb: ThrowIfNull(Of NewtonsoftJsonSerializer)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<NewtonsoftJsonSerializer>
    nameWithType: Utilities.ThrowIfNull<NewtonsoftJsonSerializer>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Json.NewtonsoftJsonSerializer>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of NewtonsoftJsonSerializer)
    nameWithType: Utilities.ThrowIfNull(Of NewtonsoftJsonSerializer)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Json.NewtonsoftJsonSerializer)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis
  commentId: N:Google.Apis
  isExternal: false
  name: Google.Apis
  nameWithType: Google.Apis
  fullName: Google.Apis
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  isExternal: false
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.Instance*
  commentId: Overload:Google.Apis.Json.NewtonsoftJsonSerializer.Instance
  isExternal: false
  name: Instance
  nameWithType: NewtonsoftJsonSerializer.Instance
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.Instance
- uid: Google.Apis.Json.NewtonsoftJsonSerializer
  commentId: T:Google.Apis.Json.NewtonsoftJsonSerializer
  parent: Google.Apis.Json
  isExternal: false
  name: NewtonsoftJsonSerializer
  nameWithType: NewtonsoftJsonSerializer
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.Instance
  commentId: P:Google.Apis.Json.NewtonsoftJsonSerializer.Instance
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.#ctor*
  commentId: Overload:Google.Apis.Json.NewtonsoftJsonSerializer.#ctor
  isExternal: false
  name: NewtonsoftJsonSerializer
  nameWithType: NewtonsoftJsonSerializer.NewtonsoftJsonSerializer
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.NewtonsoftJsonSerializer
- uid: Newtonsoft.Json.JsonSerializerSettings
  commentId: T:Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: false
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.#ctor(Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:Google.Apis.Json.NewtonsoftJsonSerializer.#ctor(Newtonsoft.Json.JsonSerializerSettings)
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.CreateDefaultSettings*
  commentId: Overload:Google.Apis.Json.NewtonsoftJsonSerializer.CreateDefaultSettings
  isExternal: false
  name: CreateDefaultSettings
  nameWithType: NewtonsoftJsonSerializer.CreateDefaultSettings
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.CreateDefaultSettings
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.Format*
  commentId: Overload:Google.Apis.Json.NewtonsoftJsonSerializer.Format
  isExternal: false
  name: Format
  nameWithType: NewtonsoftJsonSerializer.Format
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.Format
- uid: Google.Apis.ISerializer.Format
  commentId: P:Google.Apis.ISerializer.Format
  parent: Google.Apis.ISerializer
  isExternal: false
  name: Format
  nameWithType: ISerializer.Format
  fullName: Google.Apis.ISerializer.Format
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.Serialize*
  commentId: Overload:Google.Apis.Json.NewtonsoftJsonSerializer.Serialize
  isExternal: false
  name: Serialize
  nameWithType: NewtonsoftJsonSerializer.Serialize
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.Serialize
- uid: Google.Apis.ISerializer.Serialize(System.Object,System.IO.Stream)
  commentId: M:Google.Apis.ISerializer.Serialize(System.Object,System.IO.Stream)
  parent: Google.Apis.ISerializer
  isExternal: true
  name: Serialize(Object, Stream)
  nameWithType: ISerializer.Serialize(Object, Stream)
  fullName: Google.Apis.ISerializer.Serialize(System.Object, System.IO.Stream)
  spec.csharp:
  - uid: Google.Apis.ISerializer.Serialize(System.Object,System.IO.Stream)
    name: Serialize
    nameWithType: ISerializer.Serialize
    fullName: Google.Apis.ISerializer.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.ISerializer.Serialize(System.Object,System.IO.Stream)
    name: Serialize
    nameWithType: ISerializer.Serialize
    fullName: Google.Apis.ISerializer.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Google.Apis.ISerializer.Serialize(System.Object)
  commentId: M:Google.Apis.ISerializer.Serialize(System.Object)
  parent: Google.Apis.ISerializer
  isExternal: true
  name: Serialize(Object)
  nameWithType: ISerializer.Serialize(Object)
  fullName: Google.Apis.ISerializer.Serialize(System.Object)
  spec.csharp:
  - uid: Google.Apis.ISerializer.Serialize(System.Object)
    name: Serialize
    nameWithType: ISerializer.Serialize
    fullName: Google.Apis.ISerializer.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.ISerializer.Serialize(System.Object)
    name: Serialize
    nameWithType: ISerializer.Serialize
    fullName: Google.Apis.ISerializer.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize*
  commentId: Overload:Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize
  isExternal: false
  name: Deserialize
  nameWithType: NewtonsoftJsonSerializer.Deserialize
  fullName: Google.Apis.Json.NewtonsoftJsonSerializer.Deserialize
- uid: Google.Apis.ISerializer.Deserialize``1(System.String)
  commentId: M:Google.Apis.ISerializer.Deserialize``1(System.String)
  parent: Google.Apis.ISerializer
  isExternal: true
  name: Deserialize<T>(String)
  nameWithType: ISerializer.Deserialize<T>(String)
  fullName: Google.Apis.ISerializer.Deserialize<T>(System.String)
  nameWithType.vb: ISerializer.Deserialize(Of T)(String)
  fullName.vb: Google.Apis.ISerializer.Deserialize(Of T)(System.String)
  name.vb: Deserialize(Of T)(String)
  spec.csharp:
  - uid: Google.Apis.ISerializer.Deserialize``1(System.String)
    name: Deserialize<T>
    nameWithType: ISerializer.Deserialize<T>
    fullName: Google.Apis.ISerializer.Deserialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.ISerializer.Deserialize``1(System.String)
    name: Deserialize(Of T)
    nameWithType: ISerializer.Deserialize(Of T)
    fullName: Google.Apis.ISerializer.Deserialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Google.Apis.ISerializer.Deserialize(System.String,System.Type)
  commentId: M:Google.Apis.ISerializer.Deserialize(System.String,System.Type)
  parent: Google.Apis.ISerializer
  isExternal: true
  name: Deserialize(String, Type)
  nameWithType: ISerializer.Deserialize(String, Type)
  fullName: Google.Apis.ISerializer.Deserialize(System.String, System.Type)
  spec.csharp:
  - uid: Google.Apis.ISerializer.Deserialize(System.String,System.Type)
    name: Deserialize
    nameWithType: ISerializer.Deserialize
    fullName: Google.Apis.ISerializer.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.ISerializer.Deserialize(System.String,System.Type)
    name: Deserialize
    nameWithType: ISerializer.Deserialize
    fullName: Google.Apis.ISerializer.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Google.Apis.ISerializer.Deserialize``1(System.IO.Stream)
  commentId: M:Google.Apis.ISerializer.Deserialize``1(System.IO.Stream)
  parent: Google.Apis.ISerializer
  isExternal: true
  name: Deserialize<T>(Stream)
  nameWithType: ISerializer.Deserialize<T>(Stream)
  fullName: Google.Apis.ISerializer.Deserialize<T>(System.IO.Stream)
  nameWithType.vb: ISerializer.Deserialize(Of T)(Stream)
  fullName.vb: Google.Apis.ISerializer.Deserialize(Of T)(System.IO.Stream)
  name.vb: Deserialize(Of T)(Stream)
  spec.csharp:
  - uid: Google.Apis.ISerializer.Deserialize``1(System.IO.Stream)
    name: Deserialize<T>
    nameWithType: ISerializer.Deserialize<T>
    fullName: Google.Apis.ISerializer.Deserialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.ISerializer.Deserialize``1(System.IO.Stream)
    name: Deserialize(Of T)
    nameWithType: ISerializer.Deserialize(Of T)
    fullName: Google.Apis.ISerializer.Deserialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
