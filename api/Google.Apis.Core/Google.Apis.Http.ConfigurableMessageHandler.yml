### YamlMime:ManagedReference
items:
- uid: Google.Apis.Http.ConfigurableMessageHandler
  commentId: T:Google.Apis.Http.ConfigurableMessageHandler
  id: ConfigurableMessageHandler
  parent: Google.Apis.Http
  children:
  - Google.Apis.Http.ConfigurableMessageHandler.#ctor(System.Net.Http.HttpMessageHandler)
  - Google.Apis.Http.ConfigurableMessageHandler.AddExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  - Google.Apis.Http.ConfigurableMessageHandler.AddExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  - Google.Apis.Http.ConfigurableMessageHandler.AddUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  - Google.Apis.Http.ConfigurableMessageHandler.ApplicationName
  - Google.Apis.Http.ConfigurableMessageHandler.ExceptionHandlerKey
  - Google.Apis.Http.ConfigurableMessageHandler.ExceptionHandlers
  - Google.Apis.Http.ConfigurableMessageHandler.ExecuteInterceptorKey
  - Google.Apis.Http.ConfigurableMessageHandler.ExecuteInterceptors
  - Google.Apis.Http.ConfigurableMessageHandler.FollowRedirect
  - Google.Apis.Http.ConfigurableMessageHandler.GoogleApiClientHeader
  - Google.Apis.Http.ConfigurableMessageHandler.IsLoggingEnabled
  - Google.Apis.Http.ConfigurableMessageHandler.LogEvents
  - Google.Apis.Http.ConfigurableMessageHandler.MaxAllowedNumTries
  - Google.Apis.Http.ConfigurableMessageHandler.NumRedirects
  - Google.Apis.Http.ConfigurableMessageHandler.NumTries
  - Google.Apis.Http.ConfigurableMessageHandler.RemoveExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  - Google.Apis.Http.ConfigurableMessageHandler.RemoveExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  - Google.Apis.Http.ConfigurableMessageHandler.RemoveUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  - Google.Apis.Http.ConfigurableMessageHandler.ResponseStreamInterceptorProviderKey
  - Google.Apis.Http.ConfigurableMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - Google.Apis.Http.ConfigurableMessageHandler.UnsuccessfulResponseHandlerKey
  - Google.Apis.Http.ConfigurableMessageHandler.UnsuccessfulResponseHandlers
  langs:
  - csharp
  - vb
  name: ConfigurableMessageHandler
  nameWithType: ConfigurableMessageHandler
  fullName: Google.Apis.Http.ConfigurableMessageHandler
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ConfigurableMessageHandler
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 38
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nA message handler which contains the main logic of our HTTP requests. It contains a list of \n<xref href=\"Google.Apis.Http.IHttpUnsuccessfulResponseHandler\" data-throw-if-not-resolved=\"false\"></xref>s for handling abnormal responses, a list of \n<xref href=\"Google.Apis.Http.IHttpExceptionHandler\" data-throw-if-not-resolved=\"false\"></xref>s for handling exception in a request and a list of \n<xref href=\"Google.Apis.Http.IHttpExecuteInterceptor\" data-throw-if-not-resolved=\"false\"></xref>s for intercepting a request before it has been sent to the server.\nIt also contains important properties like number of tries, follow redirect, etc.\n"
  example: []
  syntax:
    content: 'public class ConfigurableMessageHandler : DelegatingHandler, IDisposable'
    content.vb: >-
      Public Class ConfigurableMessageHandler
          Inherits DelegatingHandler
          Implements IDisposable
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageHandler
  - System.Net.Http.DelegatingHandler
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  - System.Net.Http.DelegatingHandler.InnerHandler
  - System.Net.Http.HttpMessageHandler.Dispose
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Google.Apis.Http.ConfigurableMessageHandler.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Http.ConfigurableMessageHandler.MaxAllowedNumTries
  commentId: F:Google.Apis.Http.ConfigurableMessageHandler.MaxAllowedNumTries
  id: MaxAllowedNumTries
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: MaxAllowedNumTries
  nameWithType: ConfigurableMessageHandler.MaxAllowedNumTries
  fullName: Google.Apis.Http.ConfigurableMessageHandler.MaxAllowedNumTries
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MaxAllowedNumTries
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 45
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Maximum allowed number of tries.
  example: []
  syntax:
    content: public const int MaxAllowedNumTries = 20
    return:
      type: System.Int32
    content.vb: Public Const MaxAllowedNumTries As Integer = 20
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Http.ConfigurableMessageHandler.UnsuccessfulResponseHandlerKey
  commentId: F:Google.Apis.Http.ConfigurableMessageHandler.UnsuccessfulResponseHandlerKey
  id: UnsuccessfulResponseHandlerKey
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: UnsuccessfulResponseHandlerKey
  nameWithType: ConfigurableMessageHandler.UnsuccessfulResponseHandlerKey
  fullName: Google.Apis.Http.ConfigurableMessageHandler.UnsuccessfulResponseHandlerKey
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UnsuccessfulResponseHandlerKey
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 50
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nKey for unsuccessful response handlers in an <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> properties.\n"
  example: []
  syntax:
    content: public const string UnsuccessfulResponseHandlerKey = "__UnsuccessfulResponseHandlerKey"
    return:
      type: System.String
    content.vb: Public Const UnsuccessfulResponseHandlerKey As String = "__UnsuccessfulResponseHandlerKey"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Http.ConfigurableMessageHandler.ExceptionHandlerKey
  commentId: F:Google.Apis.Http.ConfigurableMessageHandler.ExceptionHandlerKey
  id: ExceptionHandlerKey
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: ExceptionHandlerKey
  nameWithType: ConfigurableMessageHandler.ExceptionHandlerKey
  fullName: Google.Apis.Http.ConfigurableMessageHandler.ExceptionHandlerKey
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExceptionHandlerKey
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 55
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nKey for exception handlers in an <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> properties.\n"
  example: []
  syntax:
    content: public const string ExceptionHandlerKey = "__ExceptionHandlerKey"
    return:
      type: System.String
    content.vb: Public Const ExceptionHandlerKey As String = "__ExceptionHandlerKey"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Http.ConfigurableMessageHandler.ExecuteInterceptorKey
  commentId: F:Google.Apis.Http.ConfigurableMessageHandler.ExecuteInterceptorKey
  id: ExecuteInterceptorKey
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: ExecuteInterceptorKey
  nameWithType: ConfigurableMessageHandler.ExecuteInterceptorKey
  fullName: Google.Apis.Http.ConfigurableMessageHandler.ExecuteInterceptorKey
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteInterceptorKey
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 60
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nKey for execute handlers in an <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> properties.\n"
  example: []
  syntax:
    content: public const string ExecuteInterceptorKey = "__ExecuteInterceptorKey"
    return:
      type: System.String
    content.vb: Public Const ExecuteInterceptorKey As String = "__ExecuteInterceptorKey"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Http.ConfigurableMessageHandler.ResponseStreamInterceptorProviderKey
  commentId: F:Google.Apis.Http.ConfigurableMessageHandler.ResponseStreamInterceptorProviderKey
  id: ResponseStreamInterceptorProviderKey
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: ResponseStreamInterceptorProviderKey
  nameWithType: ConfigurableMessageHandler.ResponseStreamInterceptorProviderKey
  fullName: Google.Apis.Http.ConfigurableMessageHandler.ResponseStreamInterceptorProviderKey
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ResponseStreamInterceptorProviderKey
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 65
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nKey for a stream response interceptor provider in an <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> properties.\n"
  example: []
  syntax:
    content: public const string ResponseStreamInterceptorProviderKey = "__ResponseStreamInterceptorProviderKey"
    return:
      type: System.String
    content.vb: Public Const ResponseStreamInterceptorProviderKey As String = "__ResponseStreamInterceptorProviderKey"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Http.ConfigurableMessageHandler.UnsuccessfulResponseHandlers
  commentId: P:Google.Apis.Http.ConfigurableMessageHandler.UnsuccessfulResponseHandlers
  id: UnsuccessfulResponseHandlers
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: UnsuccessfulResponseHandlers
  nameWithType: ConfigurableMessageHandler.UnsuccessfulResponseHandlers
  fullName: Google.Apis.Http.ConfigurableMessageHandler.UnsuccessfulResponseHandlers
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: UnsuccessfulResponseHandlers
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 106
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nGets a list of <xref href=\"Google.Apis.Http.IHttpUnsuccessfulResponseHandler\" data-throw-if-not-resolved=\"false\"></xref>s.\n<remarks>\nSince version 1.10, <xref href=\"Google.Apis.Http.ConfigurableMessageHandler.AddUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"Google.Apis.Http.ConfigurableMessageHandler.RemoveUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)\" data-throw-if-not-resolved=\"false\"></xref> were added in order to keep this class thread-safe.\nMore information is available on\n<a href=\"https://github.com/google/google-api-dotnet-client/issues/592\">#592</a>.\n</remarks>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use AddUnsuccessfulResponseHandler or RemoveUnsuccessfulResponseHandler instead.")]

      public IList<IHttpUnsuccessfulResponseHandler> UnsuccessfulResponseHandlers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Http.IHttpUnsuccessfulResponseHandler}
    content.vb: >-
      <Obsolete("Use AddUnsuccessfulResponseHandler or RemoveUnsuccessfulResponseHandler instead.")>

      Public ReadOnly Property UnsuccessfulResponseHandlers As IList(Of IHttpUnsuccessfulResponseHandler)
  overload: Google.Apis.Http.ConfigurableMessageHandler.UnsuccessfulResponseHandlers*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AddUnsuccessfulResponseHandler or RemoveUnsuccessfulResponseHandler instead.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Http.ConfigurableMessageHandler.AddUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  commentId: M:Google.Apis.Http.ConfigurableMessageHandler.AddUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  id: AddUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: AddUnsuccessfulResponseHandler(IHttpUnsuccessfulResponseHandler)
  nameWithType: ConfigurableMessageHandler.AddUnsuccessfulResponseHandler(IHttpUnsuccessfulResponseHandler)
  fullName: Google.Apis.Http.ConfigurableMessageHandler.AddUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AddUnsuccessfulResponseHandler
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 113
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Adds the specified handler to the list of unsuccessful response handlers.
  example: []
  syntax:
    content: public void AddUnsuccessfulResponseHandler(IHttpUnsuccessfulResponseHandler handler)
    parameters:
    - id: handler
      type: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
    content.vb: Public Sub AddUnsuccessfulResponseHandler(handler As IHttpUnsuccessfulResponseHandler)
  overload: Google.Apis.Http.ConfigurableMessageHandler.AddUnsuccessfulResponseHandler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.ConfigurableMessageHandler.RemoveUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  commentId: M:Google.Apis.Http.ConfigurableMessageHandler.RemoveUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  id: RemoveUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: RemoveUnsuccessfulResponseHandler(IHttpUnsuccessfulResponseHandler)
  nameWithType: ConfigurableMessageHandler.RemoveUnsuccessfulResponseHandler(IHttpUnsuccessfulResponseHandler)
  fullName: Google.Apis.Http.ConfigurableMessageHandler.RemoveUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RemoveUnsuccessfulResponseHandler
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 122
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Removes the specified handler from the list of unsuccessful response handlers.
  example: []
  syntax:
    content: public void RemoveUnsuccessfulResponseHandler(IHttpUnsuccessfulResponseHandler handler)
    parameters:
    - id: handler
      type: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
    content.vb: Public Sub RemoveUnsuccessfulResponseHandler(handler As IHttpUnsuccessfulResponseHandler)
  overload: Google.Apis.Http.ConfigurableMessageHandler.RemoveUnsuccessfulResponseHandler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.ConfigurableMessageHandler.ExceptionHandlers
  commentId: P:Google.Apis.Http.ConfigurableMessageHandler.ExceptionHandlers
  id: ExceptionHandlers
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: ExceptionHandlers
  nameWithType: ConfigurableMessageHandler.ExceptionHandlers
  fullName: Google.Apis.Http.ConfigurableMessageHandler.ExceptionHandlers
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExceptionHandlers
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 138
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nGets a list of <xref href=\"Google.Apis.Http.IHttpExceptionHandler\" data-throw-if-not-resolved=\"false\"></xref>s.\n<remarks>\nSince version 1.10, <xref href=\"Google.Apis.Http.ConfigurableMessageHandler.AddExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Google.Apis.Http.ConfigurableMessageHandler.RemoveExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)\" data-throw-if-not-resolved=\"false\"></xref> were added\nin order to keep this class thread-safe.  More information is available on\n<a href=\"https://github.com/google/google-api-dotnet-client/issues/592\">#592</a>.\n</remarks>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use AddExceptionHandler or RemoveExceptionHandler instead.")]

      public IList<IHttpExceptionHandler> ExceptionHandlers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Http.IHttpExceptionHandler}
    content.vb: >-
      <Obsolete("Use AddExceptionHandler or RemoveExceptionHandler instead.")>

      Public ReadOnly Property ExceptionHandlers As IList(Of IHttpExceptionHandler)
  overload: Google.Apis.Http.ConfigurableMessageHandler.ExceptionHandlers*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AddExceptionHandler or RemoveExceptionHandler instead.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Http.ConfigurableMessageHandler.AddExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  commentId: M:Google.Apis.Http.ConfigurableMessageHandler.AddExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  id: AddExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: AddExceptionHandler(IHttpExceptionHandler)
  nameWithType: ConfigurableMessageHandler.AddExceptionHandler(IHttpExceptionHandler)
  fullName: Google.Apis.Http.ConfigurableMessageHandler.AddExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AddExceptionHandler
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 145
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Adds the specified handler to the list of exception handlers.
  example: []
  syntax:
    content: public void AddExceptionHandler(IHttpExceptionHandler handler)
    parameters:
    - id: handler
      type: Google.Apis.Http.IHttpExceptionHandler
    content.vb: Public Sub AddExceptionHandler(handler As IHttpExceptionHandler)
  overload: Google.Apis.Http.ConfigurableMessageHandler.AddExceptionHandler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.ConfigurableMessageHandler.RemoveExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  commentId: M:Google.Apis.Http.ConfigurableMessageHandler.RemoveExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  id: RemoveExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: RemoveExceptionHandler(IHttpExceptionHandler)
  nameWithType: ConfigurableMessageHandler.RemoveExceptionHandler(IHttpExceptionHandler)
  fullName: Google.Apis.Http.ConfigurableMessageHandler.RemoveExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RemoveExceptionHandler
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 154
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Removes the specified handler from the list of exception handlers.
  example: []
  syntax:
    content: public void RemoveExceptionHandler(IHttpExceptionHandler handler)
    parameters:
    - id: handler
      type: Google.Apis.Http.IHttpExceptionHandler
    content.vb: Public Sub RemoveExceptionHandler(handler As IHttpExceptionHandler)
  overload: Google.Apis.Http.ConfigurableMessageHandler.RemoveExceptionHandler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.ConfigurableMessageHandler.ExecuteInterceptors
  commentId: P:Google.Apis.Http.ConfigurableMessageHandler.ExecuteInterceptors
  id: ExecuteInterceptors
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: ExecuteInterceptors
  nameWithType: ConfigurableMessageHandler.ExecuteInterceptors
  fullName: Google.Apis.Http.ConfigurableMessageHandler.ExecuteInterceptors
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteInterceptors
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 170
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nGets a list of <xref href=\"Google.Apis.Http.IHttpExecuteInterceptor\" data-throw-if-not-resolved=\"false\"></xref>s.\n<remarks>\nSince version 1.10, <xref href=\"Google.Apis.Http.ConfigurableMessageHandler.AddExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Google.Apis.Http.ConfigurableMessageHandler.RemoveExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)\" data-throw-if-not-resolved=\"false\"></xref> were\nadded in order to keep this class thread-safe.  More information is available on\n<a href=\"https://github.com/google/google-api-dotnet-client/issues/592\">#592</a>.\n</remarks>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use AddExecuteInterceptor or RemoveExecuteInterceptor instead.")]

      public IList<IHttpExecuteInterceptor> ExecuteInterceptors { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Apis.Http.IHttpExecuteInterceptor}
    content.vb: >-
      <Obsolete("Use AddExecuteInterceptor or RemoveExecuteInterceptor instead.")>

      Public ReadOnly Property ExecuteInterceptors As IList(Of IHttpExecuteInterceptor)
  overload: Google.Apis.Http.ConfigurableMessageHandler.ExecuteInterceptors*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AddExecuteInterceptor or RemoveExecuteInterceptor instead.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Http.ConfigurableMessageHandler.AddExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  commentId: M:Google.Apis.Http.ConfigurableMessageHandler.AddExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  id: AddExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: AddExecuteInterceptor(IHttpExecuteInterceptor)
  nameWithType: ConfigurableMessageHandler.AddExecuteInterceptor(IHttpExecuteInterceptor)
  fullName: Google.Apis.Http.ConfigurableMessageHandler.AddExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AddExecuteInterceptor
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 177
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Adds the specified interceptor to the list of execute interceptors.
  example: []
  syntax:
    content: public void AddExecuteInterceptor(IHttpExecuteInterceptor interceptor)
    parameters:
    - id: interceptor
      type: Google.Apis.Http.IHttpExecuteInterceptor
    content.vb: Public Sub AddExecuteInterceptor(interceptor As IHttpExecuteInterceptor)
  overload: Google.Apis.Http.ConfigurableMessageHandler.AddExecuteInterceptor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.ConfigurableMessageHandler.RemoveExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  commentId: M:Google.Apis.Http.ConfigurableMessageHandler.RemoveExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  id: RemoveExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: RemoveExecuteInterceptor(IHttpExecuteInterceptor)
  nameWithType: ConfigurableMessageHandler.RemoveExecuteInterceptor(IHttpExecuteInterceptor)
  fullName: Google.Apis.Http.ConfigurableMessageHandler.RemoveExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RemoveExecuteInterceptor
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 186
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Removes the specified interceptor from the list of execute interceptors.
  example: []
  syntax:
    content: public void RemoveExecuteInterceptor(IHttpExecuteInterceptor interceptor)
    parameters:
    - id: interceptor
      type: Google.Apis.Http.IHttpExecuteInterceptor
    content.vb: Public Sub RemoveExecuteInterceptor(interceptor As IHttpExecuteInterceptor)
  overload: Google.Apis.Http.ConfigurableMessageHandler.RemoveExecuteInterceptor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.ConfigurableMessageHandler.NumTries
  commentId: P:Google.Apis.Http.ConfigurableMessageHandler.NumTries
  id: NumTries
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: NumTries
  nameWithType: ConfigurableMessageHandler.NumTries
  fullName: Google.Apis.Http.ConfigurableMessageHandler.NumTries
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NumTries
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 225
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nGets or sets the number of tries that will be allowed to execute. Retries occur as a result of either\n<xref href=\"Google.Apis.Http.IHttpUnsuccessfulResponseHandler\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Google.Apis.Http.IHttpExceptionHandler\" data-throw-if-not-resolved=\"false\"></xref> which handles the\nabnormal HTTP response or exception before being terminated. \nSet <code>1</code> for not retrying requests. The default value is <code>3</code>.\n<remarks>\nThe number of allowed redirects (3xx) is defined by <xref href=\"Google.Apis.Http.ConfigurableMessageHandler.NumRedirects\" data-throw-if-not-resolved=\"false\"></xref>. This property defines\nonly the allowed tries for >=400 responses, or when an exception is thrown. For example if you set \n<xref href=\"Google.Apis.Http.ConfigurableMessageHandler.NumTries\" data-throw-if-not-resolved=\"false\"></xref> to 1 and <xref href=\"Google.Apis.Http.ConfigurableMessageHandler.NumRedirects\" data-throw-if-not-resolved=\"false\"></xref> to 5, the library will send up to five redirect\nrequests, but will not send any retry requests due to an error HTTP status code.\n</remarks>\n"
  example: []
  syntax:
    content: public int NumTries { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property NumTries As Integer
  overload: Google.Apis.Http.ConfigurableMessageHandler.NumTries*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.ConfigurableMessageHandler.NumRedirects
  commentId: P:Google.Apis.Http.ConfigurableMessageHandler.NumRedirects
  id: NumRedirects
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: NumRedirects
  nameWithType: ConfigurableMessageHandler.NumRedirects
  fullName: Google.Apis.Http.ConfigurableMessageHandler.NumRedirects
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NumRedirects
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 245
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nGets or sets the number of redirects that will be allowed to execute. The default value is <code>10</code>.\nSee <xref href=\"Google.Apis.Http.ConfigurableMessageHandler.NumTries\" data-throw-if-not-resolved=\"false\"></xref> for more information.\n"
  example: []
  syntax:
    content: public int NumRedirects { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property NumRedirects As Integer
  overload: Google.Apis.Http.ConfigurableMessageHandler.NumRedirects*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.ConfigurableMessageHandler.FollowRedirect
  commentId: P:Google.Apis.Http.ConfigurableMessageHandler.FollowRedirect
  id: FollowRedirect
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: FollowRedirect
  nameWithType: ConfigurableMessageHandler.FollowRedirect
  fullName: Google.Apis.Http.ConfigurableMessageHandler.FollowRedirect
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: FollowRedirect
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 262
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nGets or sets whether the handler should follow a redirect when a redirect response is received. Default \nvalue is <code>true</code>.\n"
  example: []
  syntax:
    content: public bool FollowRedirect { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property FollowRedirect As Boolean
  overload: Google.Apis.Http.ConfigurableMessageHandler.FollowRedirect*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.ConfigurableMessageHandler.IsLoggingEnabled
  commentId: P:Google.Apis.Http.ConfigurableMessageHandler.IsLoggingEnabled
  id: IsLoggingEnabled
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: IsLoggingEnabled
  nameWithType: ConfigurableMessageHandler.IsLoggingEnabled
  fullName: Google.Apis.Http.ConfigurableMessageHandler.IsLoggingEnabled
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IsLoggingEnabled
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 265
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Gets or sets whether logging is enabled. Default value is <code>true</code>.
  example: []
  syntax:
    content: public bool IsLoggingEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsLoggingEnabled As Boolean
  overload: Google.Apis.Http.ConfigurableMessageHandler.IsLoggingEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.ConfigurableMessageHandler.LogEvents
  commentId: P:Google.Apis.Http.ConfigurableMessageHandler.LogEvents
  id: LogEvents
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: LogEvents
  nameWithType: ConfigurableMessageHandler.LogEvents
  fullName: Google.Apis.Http.ConfigurableMessageHandler.LogEvents
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LogEvents
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 319
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nThe request/response types to log.\n"
  example: []
  syntax:
    content: public ConfigurableMessageHandler.LogEventType LogEvents { get; set; }
    parameters: []
    return:
      type: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
    content.vb: Public Property LogEvents As ConfigurableMessageHandler.LogEventType
  overload: Google.Apis.Http.ConfigurableMessageHandler.LogEvents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.ConfigurableMessageHandler.ApplicationName
  commentId: P:Google.Apis.Http.ConfigurableMessageHandler.ApplicationName
  id: ApplicationName
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: ConfigurableMessageHandler.ApplicationName
  fullName: Google.Apis.Http.ConfigurableMessageHandler.ApplicationName
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ApplicationName
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 322
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Gets or sets the application name which will be used on the User-Agent header.
  example: []
  syntax:
    content: public string ApplicationName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApplicationName As String
  overload: Google.Apis.Http.ConfigurableMessageHandler.ApplicationName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.ConfigurableMessageHandler.GoogleApiClientHeader
  commentId: P:Google.Apis.Http.ConfigurableMessageHandler.GoogleApiClientHeader
  id: GoogleApiClientHeader
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: GoogleApiClientHeader
  nameWithType: ConfigurableMessageHandler.GoogleApiClientHeader
  fullName: Google.Apis.Http.ConfigurableMessageHandler.GoogleApiClientHeader
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GoogleApiClientHeader
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 325
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Gets or sets the value set for the x-goog-api-client header.
  example: []
  syntax:
    content: public string GoogleApiClientHeader { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GoogleApiClientHeader As String
  overload: Google.Apis.Http.ConfigurableMessageHandler.GoogleApiClientHeader*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.ConfigurableMessageHandler.#ctor(System.Net.Http.HttpMessageHandler)
  commentId: M:Google.Apis.Http.ConfigurableMessageHandler.#ctor(System.Net.Http.HttpMessageHandler)
  id: '#ctor(System.Net.Http.HttpMessageHandler)'
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: ConfigurableMessageHandler(HttpMessageHandler)
  nameWithType: ConfigurableMessageHandler.ConfigurableMessageHandler(HttpMessageHandler)
  fullName: Google.Apis.Http.ConfigurableMessageHandler.ConfigurableMessageHandler(System.Net.Http.HttpMessageHandler)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 328
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Constructs a new configurable message handler.
  example: []
  syntax:
    content: public ConfigurableMessageHandler(HttpMessageHandler httpMessageHandler)
    parameters:
    - id: httpMessageHandler
      type: System.Net.Http.HttpMessageHandler
    content.vb: Public Sub New(httpMessageHandler As HttpMessageHandler)
  overload: Google.Apis.Http.ConfigurableMessageHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.ConfigurableMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Http.ConfigurableMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: Google.Apis.Http.ConfigurableMessageHandler
  langs:
  - csharp
  - vb
  name: SendAsync(HttpRequestMessage, CancellationToken)
  nameWithType: ConfigurableMessageHandler.SendAsync(HttpRequestMessage, CancellationToken)
  fullName: Google.Apis.Http.ConfigurableMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: SendAsync
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 373
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nThe main logic of sending a request to the server. This send method adds the User-Agent header to a request\nwith <xref href=\"Google.Apis.Http.ConfigurableMessageHandler.ApplicationName\" data-throw-if-not-resolved=\"false\"></xref> and the library version. It also calls interceptors before each attempt,\nand unsuccessful response handler or exception handlers when abnormal response or exception occurred.\n"
  example: []
  syntax:
    content: protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Protected Overrides Function SendAsync(request As HttpRequestMessage, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)
  overridden: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  overload: Google.Apis.Http.ConfigurableMessageHandler.SendAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  commentId: T:Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  parent: Google.Apis.Http
  name: IHttpUnsuccessfulResponseHandler
  nameWithType: IHttpUnsuccessfulResponseHandler
  fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
- uid: Google.Apis.Http.IHttpExceptionHandler
  commentId: T:Google.Apis.Http.IHttpExceptionHandler
  parent: Google.Apis.Http
  name: IHttpExceptionHandler
  nameWithType: IHttpExceptionHandler
  fullName: Google.Apis.Http.IHttpExceptionHandler
- uid: Google.Apis.Http.IHttpExecuteInterceptor
  commentId: T:Google.Apis.Http.IHttpExecuteInterceptor
  parent: Google.Apis.Http
  name: IHttpExecuteInterceptor
  nameWithType: IHttpExecuteInterceptor
  fullName: Google.Apis.Http.IHttpExecuteInterceptor
- uid: Google.Apis.Http
  commentId: N:Google.Apis.Http
  name: Google.Apis.Http
  nameWithType: Google.Apis.Http
  fullName: Google.Apis.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Http.HttpMessageHandler
  commentId: T:System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: true
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Net.Http.DelegatingHandler
  commentId: T:System.Net.Http.DelegatingHandler
  parent: System.Net.Http
  isExternal: true
  name: DelegatingHandler
  nameWithType: DelegatingHandler
  fullName: System.Net.Http.DelegatingHandler
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  commentId: M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  parent: System.Net.Http.DelegatingHandler
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DelegatingHandler.Dispose(Boolean)
  fullName: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DelegatingHandler.Dispose
    fullName: System.Net.Http.DelegatingHandler.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DelegatingHandler.Dispose
    fullName: System.Net.Http.DelegatingHandler.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.DelegatingHandler.InnerHandler
  commentId: P:System.Net.Http.DelegatingHandler.InnerHandler
  parent: System.Net.Http.DelegatingHandler
  isExternal: true
  name: InnerHandler
  nameWithType: DelegatingHandler.InnerHandler
  fullName: System.Net.Http.DelegatingHandler.InnerHandler
- uid: System.Net.Http.HttpMessageHandler.Dispose
  commentId: M:System.Net.Http.HttpMessageHandler.Dispose
  parent: System.Net.Http.HttpMessageHandler
  isExternal: true
  name: Dispose()
  nameWithType: HttpMessageHandler.Dispose()
  fullName: System.Net.Http.HttpMessageHandler.Dispose()
  spec.csharp:
  - uid: System.Net.Http.HttpMessageHandler.Dispose
    name: Dispose
    nameWithType: HttpMessageHandler.Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpMessageHandler.Dispose
    name: Dispose
    nameWithType: HttpMessageHandler.Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Http.ConfigurableMessageHandler.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<ConfigurableMessageHandler>(String)
  nameWithType: Utilities.ThrowIfNull<ConfigurableMessageHandler>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Http.ConfigurableMessageHandler>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of ConfigurableMessageHandler)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Http.ConfigurableMessageHandler)(System.String)
  name.vb: ThrowIfNull(Of ConfigurableMessageHandler)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<ConfigurableMessageHandler>
    nameWithType: Utilities.ThrowIfNull<ConfigurableMessageHandler>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Http.ConfigurableMessageHandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of ConfigurableMessageHandler)
    nameWithType: Utilities.ThrowIfNull(Of ConfigurableMessageHandler)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Http.ConfigurableMessageHandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Http.ConfigurableMessageHandler.AddUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  commentId: M:Google.Apis.Http.ConfigurableMessageHandler.AddUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  isExternal: true
- uid: Google.Apis.Http.ConfigurableMessageHandler.RemoveUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  commentId: M:Google.Apis.Http.ConfigurableMessageHandler.RemoveUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  isExternal: true
- uid: Google.Apis.Http.ConfigurableMessageHandler.UnsuccessfulResponseHandlers*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.UnsuccessfulResponseHandlers
  name: UnsuccessfulResponseHandlers
  nameWithType: ConfigurableMessageHandler.UnsuccessfulResponseHandlers
  fullName: Google.Apis.Http.ConfigurableMessageHandler.UnsuccessfulResponseHandlers
- uid: System.Collections.Generic.IList{Google.Apis.Http.IHttpUnsuccessfulResponseHandler}
  commentId: T:System.Collections.Generic.IList{Google.Apis.Http.IHttpUnsuccessfulResponseHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IHttpUnsuccessfulResponseHandler>
  nameWithType: IList<IHttpUnsuccessfulResponseHandler>
  fullName: System.Collections.Generic.IList<Google.Apis.Http.IHttpUnsuccessfulResponseHandler>
  nameWithType.vb: IList(Of IHttpUnsuccessfulResponseHandler)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  name.vb: IList(Of IHttpUnsuccessfulResponseHandler)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
    name: IHttpUnsuccessfulResponseHandler
    nameWithType: IHttpUnsuccessfulResponseHandler
    fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
    name: IHttpUnsuccessfulResponseHandler
    nameWithType: IHttpUnsuccessfulResponseHandler
    fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Http.ConfigurableMessageHandler.AddUnsuccessfulResponseHandler*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.AddUnsuccessfulResponseHandler
  name: AddUnsuccessfulResponseHandler
  nameWithType: ConfigurableMessageHandler.AddUnsuccessfulResponseHandler
  fullName: Google.Apis.Http.ConfigurableMessageHandler.AddUnsuccessfulResponseHandler
- uid: Google.Apis.Http.ConfigurableMessageHandler.RemoveUnsuccessfulResponseHandler*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.RemoveUnsuccessfulResponseHandler
  name: RemoveUnsuccessfulResponseHandler
  nameWithType: ConfigurableMessageHandler.RemoveUnsuccessfulResponseHandler
  fullName: Google.Apis.Http.ConfigurableMessageHandler.RemoveUnsuccessfulResponseHandler
- uid: Google.Apis.Http.ConfigurableMessageHandler.AddExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  commentId: M:Google.Apis.Http.ConfigurableMessageHandler.AddExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  isExternal: true
- uid: Google.Apis.Http.ConfigurableMessageHandler.RemoveExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  commentId: M:Google.Apis.Http.ConfigurableMessageHandler.RemoveExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  isExternal: true
- uid: Google.Apis.Http.ConfigurableMessageHandler.ExceptionHandlers*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.ExceptionHandlers
  name: ExceptionHandlers
  nameWithType: ConfigurableMessageHandler.ExceptionHandlers
  fullName: Google.Apis.Http.ConfigurableMessageHandler.ExceptionHandlers
- uid: System.Collections.Generic.IList{Google.Apis.Http.IHttpExceptionHandler}
  commentId: T:System.Collections.Generic.IList{Google.Apis.Http.IHttpExceptionHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IHttpExceptionHandler>
  nameWithType: IList<IHttpExceptionHandler>
  fullName: System.Collections.Generic.IList<Google.Apis.Http.IHttpExceptionHandler>
  nameWithType.vb: IList(Of IHttpExceptionHandler)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Http.IHttpExceptionHandler)
  name.vb: IList(Of IHttpExceptionHandler)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Http.IHttpExceptionHandler
    name: IHttpExceptionHandler
    nameWithType: IHttpExceptionHandler
    fullName: Google.Apis.Http.IHttpExceptionHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Http.IHttpExceptionHandler
    name: IHttpExceptionHandler
    nameWithType: IHttpExceptionHandler
    fullName: Google.Apis.Http.IHttpExceptionHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Http.ConfigurableMessageHandler.AddExceptionHandler*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.AddExceptionHandler
  name: AddExceptionHandler
  nameWithType: ConfigurableMessageHandler.AddExceptionHandler
  fullName: Google.Apis.Http.ConfigurableMessageHandler.AddExceptionHandler
- uid: Google.Apis.Http.ConfigurableMessageHandler.RemoveExceptionHandler*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.RemoveExceptionHandler
  name: RemoveExceptionHandler
  nameWithType: ConfigurableMessageHandler.RemoveExceptionHandler
  fullName: Google.Apis.Http.ConfigurableMessageHandler.RemoveExceptionHandler
- uid: Google.Apis.Http.ConfigurableMessageHandler.AddExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  commentId: M:Google.Apis.Http.ConfigurableMessageHandler.AddExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  isExternal: true
- uid: Google.Apis.Http.ConfigurableMessageHandler.RemoveExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  commentId: M:Google.Apis.Http.ConfigurableMessageHandler.RemoveExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  isExternal: true
- uid: Google.Apis.Http.ConfigurableMessageHandler.ExecuteInterceptors*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.ExecuteInterceptors
  name: ExecuteInterceptors
  nameWithType: ConfigurableMessageHandler.ExecuteInterceptors
  fullName: Google.Apis.Http.ConfigurableMessageHandler.ExecuteInterceptors
- uid: System.Collections.Generic.IList{Google.Apis.Http.IHttpExecuteInterceptor}
  commentId: T:System.Collections.Generic.IList{Google.Apis.Http.IHttpExecuteInterceptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IHttpExecuteInterceptor>
  nameWithType: IList<IHttpExecuteInterceptor>
  fullName: System.Collections.Generic.IList<Google.Apis.Http.IHttpExecuteInterceptor>
  nameWithType.vb: IList(Of IHttpExecuteInterceptor)
  fullName.vb: System.Collections.Generic.IList(Of Google.Apis.Http.IHttpExecuteInterceptor)
  name.vb: IList(Of IHttpExecuteInterceptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Http.IHttpExecuteInterceptor
    name: IHttpExecuteInterceptor
    nameWithType: IHttpExecuteInterceptor
    fullName: Google.Apis.Http.IHttpExecuteInterceptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Http.IHttpExecuteInterceptor
    name: IHttpExecuteInterceptor
    nameWithType: IHttpExecuteInterceptor
    fullName: Google.Apis.Http.IHttpExecuteInterceptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Http.ConfigurableMessageHandler.AddExecuteInterceptor*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.AddExecuteInterceptor
  name: AddExecuteInterceptor
  nameWithType: ConfigurableMessageHandler.AddExecuteInterceptor
  fullName: Google.Apis.Http.ConfigurableMessageHandler.AddExecuteInterceptor
- uid: Google.Apis.Http.ConfigurableMessageHandler.RemoveExecuteInterceptor*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.RemoveExecuteInterceptor
  name: RemoveExecuteInterceptor
  nameWithType: ConfigurableMessageHandler.RemoveExecuteInterceptor
  fullName: Google.Apis.Http.ConfigurableMessageHandler.RemoveExecuteInterceptor
- uid: Google.Apis.Http.ConfigurableMessageHandler.NumRedirects
  commentId: P:Google.Apis.Http.ConfigurableMessageHandler.NumRedirects
  isExternal: true
- uid: Google.Apis.Http.ConfigurableMessageHandler.NumTries
  commentId: P:Google.Apis.Http.ConfigurableMessageHandler.NumTries
  isExternal: true
- uid: Google.Apis.Http.ConfigurableMessageHandler.NumTries*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.NumTries
  name: NumTries
  nameWithType: ConfigurableMessageHandler.NumTries
  fullName: Google.Apis.Http.ConfigurableMessageHandler.NumTries
- uid: Google.Apis.Http.ConfigurableMessageHandler.NumRedirects*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.NumRedirects
  name: NumRedirects
  nameWithType: ConfigurableMessageHandler.NumRedirects
  fullName: Google.Apis.Http.ConfigurableMessageHandler.NumRedirects
- uid: Google.Apis.Http.ConfigurableMessageHandler.FollowRedirect*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.FollowRedirect
  name: FollowRedirect
  nameWithType: ConfigurableMessageHandler.FollowRedirect
  fullName: Google.Apis.Http.ConfigurableMessageHandler.FollowRedirect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Apis.Http.ConfigurableMessageHandler.IsLoggingEnabled*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.IsLoggingEnabled
  name: IsLoggingEnabled
  nameWithType: ConfigurableMessageHandler.IsLoggingEnabled
  fullName: Google.Apis.Http.ConfigurableMessageHandler.IsLoggingEnabled
- uid: Google.Apis.Http.ConfigurableMessageHandler.LogEvents*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.LogEvents
  name: LogEvents
  nameWithType: ConfigurableMessageHandler.LogEvents
  fullName: Google.Apis.Http.ConfigurableMessageHandler.LogEvents
- uid: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  commentId: T:Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  parent: Google.Apis.Http
  name: ConfigurableMessageHandler.LogEventType
  nameWithType: ConfigurableMessageHandler.LogEventType
  fullName: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
- uid: Google.Apis.Http.ConfigurableMessageHandler.ApplicationName*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.ApplicationName
  name: ApplicationName
  nameWithType: ConfigurableMessageHandler.ApplicationName
  fullName: Google.Apis.Http.ConfigurableMessageHandler.ApplicationName
- uid: Google.Apis.Http.ConfigurableMessageHandler.GoogleApiClientHeader*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.GoogleApiClientHeader
  name: GoogleApiClientHeader
  nameWithType: ConfigurableMessageHandler.GoogleApiClientHeader
  fullName: Google.Apis.Http.ConfigurableMessageHandler.GoogleApiClientHeader
- uid: Google.Apis.Http.ConfigurableMessageHandler.#ctor*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.#ctor
  name: ConfigurableMessageHandler
  nameWithType: ConfigurableMessageHandler.ConfigurableMessageHandler
  fullName: Google.Apis.Http.ConfigurableMessageHandler.ConfigurableMessageHandler
- uid: Google.Apis.Http.ConfigurableMessageHandler.ApplicationName
  commentId: P:Google.Apis.Http.ConfigurableMessageHandler.ApplicationName
  isExternal: true
- uid: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.DelegatingHandler
  isExternal: true
  name: SendAsync(HttpRequestMessage, CancellationToken)
  nameWithType: DelegatingHandler.SendAsync(HttpRequestMessage, CancellationToken)
  fullName: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: DelegatingHandler.SendAsync
    fullName: System.Net.Http.DelegatingHandler.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: DelegatingHandler.SendAsync
    fullName: System.Net.Http.DelegatingHandler.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Http.ConfigurableMessageHandler.SendAsync*
  commentId: Overload:Google.Apis.Http.ConfigurableMessageHandler.SendAsync
  name: SendAsync
  nameWithType: ConfigurableMessageHandler.SendAsync
  fullName: Google.Apis.Http.ConfigurableMessageHandler.SendAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: Task(Of HttpResponseMessage)
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  name.vb: Task(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
