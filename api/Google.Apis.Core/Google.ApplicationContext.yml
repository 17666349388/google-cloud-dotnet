### YamlMime:ManagedReference
items:
- uid: Google.ApplicationContext
  commentId: T:Google.ApplicationContext
  id: ApplicationContext
  parent: Google
  children:
  - Google.ApplicationContext.Logger
  - Google.ApplicationContext.RegisterLogger(Google.Apis.Logging.ILogger)
  langs:
  - csharp
  - vb
  name: ApplicationContext
  nameWithType: ApplicationContext
  fullName: Google.ApplicationContext
  type: Class
  source:
    remote:
      path: Src/Support/GoogleApis.Core/ApplicationContext.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ApplicationContext
    path: Src/Support/GoogleApis.Core/ApplicationContext.cs
    startLine: 24
  assemblies:
  - Google.Apis.Core
  namespace: Google
  summary: Defines the context in which this library runs. It allows setting up custom loggers.
  example: []
  syntax:
    content: public static class ApplicationContext
    content.vb: Public Module ApplicationContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Google.ApplicationContext.Logger
  commentId: P:Google.ApplicationContext.Logger
  id: Logger
  parent: Google.ApplicationContext
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: ApplicationContext.Logger
  fullName: Google.ApplicationContext.Logger
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Core/ApplicationContext.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Logger
    path: Src/Support/GoogleApis.Core/ApplicationContext.cs
    startLine: 30
  assemblies:
  - Google.Apis.Core
  namespace: Google
  summary: Returns the logger used within this application context.
  remarks: It creates a <xref href="Google.Apis.Logging.NullLogger" data-throw-if-not-resolved="false"></xref> if no logger was registered previously
  example: []
  syntax:
    content: public static ILogger Logger { get; }
    parameters: []
    return:
      type: Google.Apis.Logging.ILogger
    content.vb: Public Shared ReadOnly Property Logger As ILogger
  overload: Google.ApplicationContext.Logger*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.ApplicationContext.RegisterLogger(Google.Apis.Logging.ILogger)
  commentId: M:Google.ApplicationContext.RegisterLogger(Google.Apis.Logging.ILogger)
  id: RegisterLogger(Google.Apis.Logging.ILogger)
  parent: Google.ApplicationContext
  langs:
  - csharp
  - vb
  name: RegisterLogger(ILogger)
  nameWithType: ApplicationContext.RegisterLogger(ILogger)
  fullName: Google.ApplicationContext.RegisterLogger(Google.Apis.Logging.ILogger)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/ApplicationContext.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RegisterLogger
    path: Src/Support/GoogleApis.Core/ApplicationContext.cs
    startLine: 41
  assemblies:
  - Google.Apis.Core
  namespace: Google
  summary: Registers a logger with this application context.
  example: []
  syntax:
    content: public static void RegisterLogger(ILogger loggerToRegister)
    parameters:
    - id: loggerToRegister
      type: Google.Apis.Logging.ILogger
    content.vb: Public Shared Sub RegisterLogger(loggerToRegister As ILogger)
  overload: Google.ApplicationContext.RegisterLogger*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if a logger was already registered.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Google
  commentId: N:Google
  isExternal: false
  name: Google
  nameWithType: Google
  fullName: Google
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Logging.NullLogger
  commentId: T:Google.Apis.Logging.NullLogger
  isExternal: false
  name: NullLogger
  nameWithType: NullLogger
  fullName: Google.Apis.Logging.NullLogger
- uid: Google.ApplicationContext.Logger*
  commentId: Overload:Google.ApplicationContext.Logger
  isExternal: false
  name: Logger
  nameWithType: ApplicationContext.Logger
  fullName: Google.ApplicationContext.Logger
- uid: Google.Apis.Logging.ILogger
  commentId: T:Google.Apis.Logging.ILogger
  parent: Google.Apis.Logging
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Google.Apis.Logging.ILogger
- uid: Google.Apis.Logging
  commentId: N:Google.Apis.Logging
  isExternal: false
  name: Google.Apis.Logging
  nameWithType: Google.Apis.Logging
  fullName: Google.Apis.Logging
- uid: Google.ApplicationContext.RegisterLogger*
  commentId: Overload:Google.ApplicationContext.RegisterLogger
  isExternal: false
  name: RegisterLogger
  nameWithType: ApplicationContext.RegisterLogger
  fullName: Google.ApplicationContext.RegisterLogger
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
