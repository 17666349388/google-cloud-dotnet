### YamlMime:ManagedReference
items:
- uid: Google.Apis.Http.HandleExceptionArgs
  commentId: T:Google.Apis.Http.HandleExceptionArgs
  id: HandleExceptionArgs
  parent: Google.Apis.Http
  children:
  - Google.Apis.Http.HandleExceptionArgs.CancellationToken
  - Google.Apis.Http.HandleExceptionArgs.CurrentFailedTry
  - Google.Apis.Http.HandleExceptionArgs.Exception
  - Google.Apis.Http.HandleExceptionArgs.Request
  - Google.Apis.Http.HandleExceptionArgs.SupportsRetry
  - Google.Apis.Http.HandleExceptionArgs.TotalTries
  langs:
  - csharp
  - vb
  name: HandleExceptionArgs
  nameWithType: HandleExceptionArgs
  fullName: Google.Apis.Http.HandleExceptionArgs
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/IHttpExceptionHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: HandleExceptionArgs
    path: Src/Support/Google.Apis.Core/Http/IHttpExceptionHandler.cs
    startLine: 24
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Argument class to <xref href="Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync(Google.Apis.Http.HandleExceptionArgs)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public class HandleExceptionArgs
    content.vb: Public Class HandleExceptionArgs
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Google.Apis.Http.HandleExceptionArgs.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Http.HandleExceptionArgs.Request
  commentId: P:Google.Apis.Http.HandleExceptionArgs.Request
  id: Request
  parent: Google.Apis.Http.HandleExceptionArgs
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: HandleExceptionArgs.Request
  fullName: Google.Apis.Http.HandleExceptionArgs.Request
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/IHttpExceptionHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Request
    path: Src/Support/Google.Apis.Core/Http/IHttpExceptionHandler.cs
    startLine: 27
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Gets or sets the sent request.
  example: []
  syntax:
    content: public HttpRequestMessage Request { get; set; }
    parameters: []
    return:
      type: System.Net.Http.HttpRequestMessage
    content.vb: Public Property Request As HttpRequestMessage
  overload: Google.Apis.Http.HandleExceptionArgs.Request*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.HandleExceptionArgs.Exception
  commentId: P:Google.Apis.Http.HandleExceptionArgs.Exception
  id: Exception
  parent: Google.Apis.Http.HandleExceptionArgs
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: HandleExceptionArgs.Exception
  fullName: Google.Apis.Http.HandleExceptionArgs.Exception
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/IHttpExceptionHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Exception
    path: Src/Support/Google.Apis.Core/Http/IHttpExceptionHandler.cs
    startLine: 30
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Gets or sets the exception which occurred during sending the request.
  example: []
  syntax:
    content: public Exception Exception { get; set; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public Property Exception As Exception
  overload: Google.Apis.Http.HandleExceptionArgs.Exception*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.HandleExceptionArgs.TotalTries
  commentId: P:Google.Apis.Http.HandleExceptionArgs.TotalTries
  id: TotalTries
  parent: Google.Apis.Http.HandleExceptionArgs
  langs:
  - csharp
  - vb
  name: TotalTries
  nameWithType: HandleExceptionArgs.TotalTries
  fullName: Google.Apis.Http.HandleExceptionArgs.TotalTries
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/IHttpExceptionHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: TotalTries
    path: Src/Support/Google.Apis.Core/Http/IHttpExceptionHandler.cs
    startLine: 33
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Gets or sets the total number of tries to send the request.
  example: []
  syntax:
    content: public int TotalTries { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TotalTries As Integer
  overload: Google.Apis.Http.HandleExceptionArgs.TotalTries*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.HandleExceptionArgs.CurrentFailedTry
  commentId: P:Google.Apis.Http.HandleExceptionArgs.CurrentFailedTry
  id: CurrentFailedTry
  parent: Google.Apis.Http.HandleExceptionArgs
  langs:
  - csharp
  - vb
  name: CurrentFailedTry
  nameWithType: HandleExceptionArgs.CurrentFailedTry
  fullName: Google.Apis.Http.HandleExceptionArgs.CurrentFailedTry
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/IHttpExceptionHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CurrentFailedTry
    path: Src/Support/Google.Apis.Core/Http/IHttpExceptionHandler.cs
    startLine: 36
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Gets or sets the current failed try.
  example: []
  syntax:
    content: public int CurrentFailedTry { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CurrentFailedTry As Integer
  overload: Google.Apis.Http.HandleExceptionArgs.CurrentFailedTry*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.HandleExceptionArgs.SupportsRetry
  commentId: P:Google.Apis.Http.HandleExceptionArgs.SupportsRetry
  id: SupportsRetry
  parent: Google.Apis.Http.HandleExceptionArgs
  langs:
  - csharp
  - vb
  name: SupportsRetry
  nameWithType: HandleExceptionArgs.SupportsRetry
  fullName: Google.Apis.Http.HandleExceptionArgs.SupportsRetry
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/IHttpExceptionHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: SupportsRetry
    path: Src/Support/Google.Apis.Core/Http/IHttpExceptionHandler.cs
    startLine: 39
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Gets an indication whether a retry will occur if the handler returns <code>true</code>.
  example: []
  syntax:
    content: public bool SupportsRetry { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property SupportsRetry As Boolean
  overload: Google.Apis.Http.HandleExceptionArgs.SupportsRetry*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Http.HandleExceptionArgs.CancellationToken
  commentId: P:Google.Apis.Http.HandleExceptionArgs.CancellationToken
  id: CancellationToken
  parent: Google.Apis.Http.HandleExceptionArgs
  langs:
  - csharp
  - vb
  name: CancellationToken
  nameWithType: HandleExceptionArgs.CancellationToken
  fullName: Google.Apis.Http.HandleExceptionArgs.CancellationToken
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/IHttpExceptionHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CancellationToken
    path: Src/Support/Google.Apis.Core/Http/IHttpExceptionHandler.cs
    startLine: 45
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Gets or sets the request&apos;s cancellation token.
  example: []
  syntax:
    content: public CancellationToken CancellationToken { get; set; }
    parameters: []
    return:
      type: System.Threading.CancellationToken
    content.vb: Public Property CancellationToken As CancellationToken
  overload: Google.Apis.Http.HandleExceptionArgs.CancellationToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync(Google.Apis.Http.HandleExceptionArgs)
  commentId: M:Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync(Google.Apis.Http.HandleExceptionArgs)
  parent: Google.Apis.Http.IHttpExceptionHandler
  isExternal: false
  name: HandleExceptionAsync(HandleExceptionArgs)
  nameWithType: IHttpExceptionHandler.HandleExceptionAsync(HandleExceptionArgs)
  fullName: Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync(Google.Apis.Http.HandleExceptionArgs)
  spec.csharp:
  - uid: Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync(Google.Apis.Http.HandleExceptionArgs)
    name: HandleExceptionAsync
    nameWithType: IHttpExceptionHandler.HandleExceptionAsync
    fullName: Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.HandleExceptionArgs
    name: HandleExceptionArgs
    nameWithType: HandleExceptionArgs
    fullName: Google.Apis.Http.HandleExceptionArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync(Google.Apis.Http.HandleExceptionArgs)
    name: HandleExceptionAsync
    nameWithType: IHttpExceptionHandler.HandleExceptionAsync
    fullName: Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Http.HandleExceptionArgs
    name: HandleExceptionArgs
    nameWithType: HandleExceptionArgs
    fullName: Google.Apis.Http.HandleExceptionArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Http
  commentId: N:Google.Apis.Http
  isExternal: false
  name: Google.Apis.Http
  nameWithType: Google.Apis.Http
  fullName: Google.Apis.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Http.HandleExceptionArgs.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<HandleExceptionArgs>(String)
  nameWithType: Utilities.ThrowIfNull<HandleExceptionArgs>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Http.HandleExceptionArgs>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of HandleExceptionArgs)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Http.HandleExceptionArgs)(System.String)
  name.vb: ThrowIfNull(Of HandleExceptionArgs)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<HandleExceptionArgs>
    nameWithType: Utilities.ThrowIfNull<HandleExceptionArgs>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Http.HandleExceptionArgs>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of HandleExceptionArgs)
    nameWithType: Utilities.ThrowIfNull(Of HandleExceptionArgs)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Http.HandleExceptionArgs)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Http.IHttpExceptionHandler
  commentId: T:Google.Apis.Http.IHttpExceptionHandler
  parent: Google.Apis.Http
  isExternal: false
  name: IHttpExceptionHandler
  nameWithType: IHttpExceptionHandler
  fullName: Google.Apis.Http.IHttpExceptionHandler
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  isExternal: false
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Http.HandleExceptionArgs.Request*
  commentId: Overload:Google.Apis.Http.HandleExceptionArgs.Request
  isExternal: false
  name: Request
  nameWithType: HandleExceptionArgs.Request
  fullName: Google.Apis.Http.HandleExceptionArgs.Request
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Google.Apis.Http.HandleExceptionArgs.Exception*
  commentId: Overload:Google.Apis.Http.HandleExceptionArgs.Exception
  isExternal: false
  name: Exception
  nameWithType: HandleExceptionArgs.Exception
  fullName: Google.Apis.Http.HandleExceptionArgs.Exception
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Google.Apis.Http.HandleExceptionArgs.TotalTries*
  commentId: Overload:Google.Apis.Http.HandleExceptionArgs.TotalTries
  isExternal: false
  name: TotalTries
  nameWithType: HandleExceptionArgs.TotalTries
  fullName: Google.Apis.Http.HandleExceptionArgs.TotalTries
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Apis.Http.HandleExceptionArgs.CurrentFailedTry*
  commentId: Overload:Google.Apis.Http.HandleExceptionArgs.CurrentFailedTry
  isExternal: false
  name: CurrentFailedTry
  nameWithType: HandleExceptionArgs.CurrentFailedTry
  fullName: Google.Apis.Http.HandleExceptionArgs.CurrentFailedTry
- uid: Google.Apis.Http.HandleExceptionArgs.SupportsRetry*
  commentId: Overload:Google.Apis.Http.HandleExceptionArgs.SupportsRetry
  isExternal: false
  name: SupportsRetry
  nameWithType: HandleExceptionArgs.SupportsRetry
  fullName: Google.Apis.Http.HandleExceptionArgs.SupportsRetry
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Apis.Http.HandleExceptionArgs.CancellationToken*
  commentId: Overload:Google.Apis.Http.HandleExceptionArgs.CancellationToken
  isExternal: false
  name: CancellationToken
  nameWithType: HandleExceptionArgs.CancellationToken
  fullName: Google.Apis.Http.HandleExceptionArgs.CancellationToken
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
