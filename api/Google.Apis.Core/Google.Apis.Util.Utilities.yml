### YamlMime:ManagedReference
items:
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  id: Utilities
  parent: Google.Apis.Util
  children:
  - Google.Apis.Util.Utilities.ConvertToString(System.Object)
  - Google.Apis.Util.Utilities.GetCustomAttribute``1(System.Reflection.MemberInfo)
  - Google.Apis.Util.Utilities.GetDateTimeFromString(System.String)
  - Google.Apis.Util.Utilities.GetEnumStringValue(System.Enum)
  - Google.Apis.Util.Utilities.GetLibraryVersion
  - Google.Apis.Util.Utilities.GetStringFromDateTime(System.Nullable{System.DateTime})
  - Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  - Google.Apis.Util.Utilities.ThrowIfNullOrEmpty(System.String,System.String)
  langs:
  - csharp
  - vb
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/Utilities.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Utilities
    path: Src/Support/Google.Apis.Core/Util/Utilities.cs
    startLine: 27
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: A utility class which contains helper methods and extension methods.
  example: []
  syntax:
    content: public static class Utilities
    content.vb: Public Module Utilities
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Google.Apis.Util.Utilities.GetLibraryVersion
  commentId: M:Google.Apis.Util.Utilities.GetLibraryVersion
  id: GetLibraryVersion
  parent: Google.Apis.Util.Utilities
  langs:
  - csharp
  - vb
  name: GetLibraryVersion()
  nameWithType: Utilities.GetLibraryVersion()
  fullName: Google.Apis.Util.Utilities.GetLibraryVersion()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/Utilities.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GetLibraryVersion
    path: Src/Support/Google.Apis.Core/Util/Utilities.cs
    startLine: 30
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: Returns the version of the core library.
  example: []
  syntax:
    content: public static string GetLibraryVersion()
    return:
      type: System.String
    content.vb: Public Shared Function GetLibraryVersion As String
  overload: Google.Apis.Util.Utilities.GetLibraryVersion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  id: ThrowIfNull``1(``0,System.String)
  isExtensionMethod: true
  parent: Google.Apis.Util.Utilities
  langs:
  - csharp
  - vb
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/Utilities.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ThrowIfNull
    path: Src/Support/Google.Apis.Core/Util/Utilities.cs
    startLine: 40
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: "\nA Google.Apis utility method for throwing an <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> if the object is\n<code>null</code>.\n"
  example: []
  syntax:
    content: public static T ThrowIfNull<T>(this T obj, string paramName)
    parameters:
    - id: obj
      type: '{T}'
    - id: paramName
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ThrowIfNull(Of T)(obj As T, paramName As String) As T
  overload: Google.Apis.Util.Utilities.ThrowIfNull*
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
- uid: Google.Apis.Util.Utilities.ThrowIfNullOrEmpty(System.String,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNullOrEmpty(System.String,System.String)
  id: ThrowIfNullOrEmpty(System.String,System.String)
  isExtensionMethod: true
  parent: Google.Apis.Util.Utilities
  langs:
  - csharp
  - vb
  name: ThrowIfNullOrEmpty(String, String)
  nameWithType: Utilities.ThrowIfNullOrEmpty(String, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNullOrEmpty(System.String, System.String)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/Utilities.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ThrowIfNullOrEmpty
    path: Src/Support/Google.Apis.Core/Util/Utilities.cs
    startLine: 55
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: "\nA Google.Apis utility method for throwing an <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> if the string is\n<code>null</code> or empty.\n"
  example: []
  syntax:
    content: public static string ThrowIfNullOrEmpty(this string str, string paramName)
    parameters:
    - id: str
      type: System.String
    - id: paramName
      type: System.String
    return:
      type: System.String
      description: The original string.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ThrowIfNullOrEmpty(str As String, paramName As String) As String
  overload: Google.Apis.Util.Utilities.ThrowIfNullOrEmpty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Apis.Util.Utilities.GetCustomAttribute``1(System.Reflection.MemberInfo)
  commentId: M:Google.Apis.Util.Utilities.GetCustomAttribute``1(System.Reflection.MemberInfo)
  id: GetCustomAttribute``1(System.Reflection.MemberInfo)
  isExtensionMethod: true
  parent: Google.Apis.Util.Utilities
  langs:
  - csharp
  - vb
  name: GetCustomAttribute<T>(MemberInfo)
  nameWithType: Utilities.GetCustomAttribute<T>(MemberInfo)
  fullName: Google.Apis.Util.Utilities.GetCustomAttribute<T>(System.Reflection.MemberInfo)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/Utilities.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GetCustomAttribute
    path: Src/Support/Google.Apis.Core/Util/Utilities.cs
    startLine: 73
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: "\nA Google.Apis utility method for returning the first matching custom attribute (or <code>null</code>) of the specified member.\n"
  example: []
  syntax:
    content: 'public static T GetCustomAttribute<T>(this MemberInfo info)where T : Attribute'
    parameters:
    - id: info
      type: System.Reflection.MemberInfo
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetCustomAttribute(Of T As Attribute)(info As MemberInfo) As T
  overload: Google.Apis.Util.Utilities.GetCustomAttribute*
  nameWithType.vb: Utilities.GetCustomAttribute(Of T)(MemberInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Apis.Util.Utilities.GetCustomAttribute(Of T)(System.Reflection.MemberInfo)
  name.vb: GetCustomAttribute(Of T)(MemberInfo)
- uid: Google.Apis.Util.Utilities.GetEnumStringValue(System.Enum)
  commentId: M:Google.Apis.Util.Utilities.GetEnumStringValue(System.Enum)
  id: GetEnumStringValue(System.Enum)
  parent: Google.Apis.Util.Utilities
  langs:
  - csharp
  - vb
  name: GetEnumStringValue(Enum)
  nameWithType: Utilities.GetEnumStringValue(Enum)
  fullName: Google.Apis.Util.Utilities.GetEnumStringValue(System.Enum)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/Utilities.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GetEnumStringValue
    path: Src/Support/Google.Apis.Core/Util/Utilities.cs
    startLine: 100
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: "\nReturns the defined string value of an Enum. Use for test purposes or in other Google.Apis projects.\n"
  example: []
  syntax:
    content: public static string GetEnumStringValue(Enum value)
    parameters:
    - id: value
      type: System.Enum
    return:
      type: System.String
    content.vb: Public Shared Function GetEnumStringValue(value As  Enum) As String
  overload: Google.Apis.Util.Utilities.GetEnumStringValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Apis.Util.Utilities.ConvertToString(System.Object)
  commentId: M:Google.Apis.Util.Utilities.ConvertToString(System.Object)
  id: ConvertToString(System.Object)
  parent: Google.Apis.Util.Utilities
  langs:
  - csharp
  - vb
  name: ConvertToString(Object)
  nameWithType: Utilities.ConvertToString(Object)
  fullName: Google.Apis.Util.Utilities.ConvertToString(System.Object)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/Utilities.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ConvertToString
    path: Src/Support/Google.Apis.Core/Util/Utilities.cs
    startLine: 109
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: "\nTries to convert the specified object to a string. Uses custom type converters if available.\nReturns null for a null object.\n"
  example: []
  syntax:
    content: public static string ConvertToString(object o)
    parameters:
    - id: o
      type: System.Object
    return:
      type: System.String
    content.vb: Public Shared Function ConvertToString(o As Object) As String
  overload: Google.Apis.Util.Utilities.ConvertToString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Apis.Util.Utilities.GetDateTimeFromString(System.String)
  commentId: M:Google.Apis.Util.Utilities.GetDateTimeFromString(System.String)
  id: GetDateTimeFromString(System.String)
  parent: Google.Apis.Util.Utilities
  langs:
  - csharp
  - vb
  name: GetDateTimeFromString(String)
  nameWithType: Utilities.GetDateTimeFromString(String)
  fullName: Google.Apis.Util.Utilities.GetDateTimeFromString(System.String)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/Utilities.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GetDateTimeFromString
    path: Src/Support/Google.Apis.Core/Util/Utilities.cs
    startLine: 154
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: "\nParses the input string and returns <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> if the input is a valid \nrepresentation of a date. Otherwise it returns <code>null</code>.\n"
  example: []
  syntax:
    content: public static DateTime? GetDateTimeFromString(string raw)
    parameters:
    - id: raw
      type: System.String
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Shared Function GetDateTimeFromString(raw As String) As Date?
  overload: Google.Apis.Util.Utilities.GetDateTimeFromString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Apis.Util.Utilities.GetStringFromDateTime(System.Nullable{System.DateTime})
  commentId: M:Google.Apis.Util.Utilities.GetStringFromDateTime(System.Nullable{System.DateTime})
  id: GetStringFromDateTime(System.Nullable{System.DateTime})
  parent: Google.Apis.Util.Utilities
  langs:
  - csharp
  - vb
  name: GetStringFromDateTime(Nullable<DateTime>)
  nameWithType: Utilities.GetStringFromDateTime(Nullable<DateTime>)
  fullName: Google.Apis.Util.Utilities.GetStringFromDateTime(System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/Utilities.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GetStringFromDateTime
    path: Src/Support/Google.Apis.Core/Util/Utilities.cs
    startLine: 165
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: Returns a string (by RFC3339) form the input <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public static string GetStringFromDateTime(DateTime? date)
    parameters:
    - id: date
      type: System.Nullable{System.DateTime}
    return:
      type: System.String
    content.vb: Public Shared Function GetStringFromDateTime(date As Date?) As String
  overload: Google.Apis.Util.Utilities.GetStringFromDateTime*
  nameWithType.vb: Utilities.GetStringFromDateTime(Nullable(Of DateTime))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Apis.Util.Utilities.GetStringFromDateTime(System.Nullable(Of System.DateTime))
  name.vb: GetStringFromDateTime(Nullable(Of DateTime))
references:
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Util.Utilities.GetLibraryVersion*
  commentId: Overload:Google.Apis.Util.Utilities.GetLibraryVersion
  isExternal: false
  name: GetLibraryVersion
  nameWithType: Utilities.GetLibraryVersion
  fullName: Google.Apis.Util.Utilities.GetLibraryVersion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Google.Apis.Util.Utilities.ThrowIfNull*
  commentId: Overload:Google.Apis.Util.Utilities.ThrowIfNull
  isExternal: false
  name: ThrowIfNull
  nameWithType: Utilities.ThrowIfNull
  fullName: Google.Apis.Util.Utilities.ThrowIfNull
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Google.Apis.Util.Utilities.ThrowIfNullOrEmpty*
  commentId: Overload:Google.Apis.Util.Utilities.ThrowIfNullOrEmpty
  isExternal: false
  name: ThrowIfNullOrEmpty
  nameWithType: Utilities.ThrowIfNullOrEmpty
  fullName: Google.Apis.Util.Utilities.ThrowIfNullOrEmpty
- uid: Google.Apis.Util.Utilities.GetCustomAttribute*
  commentId: Overload:Google.Apis.Util.Utilities.GetCustomAttribute
  isExternal: false
  name: GetCustomAttribute
  nameWithType: Utilities.GetCustomAttribute
  fullName: Google.Apis.Util.Utilities.GetCustomAttribute
- uid: System.Reflection.MemberInfo
  commentId: T:System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Google.Apis.Util.Utilities.GetEnumStringValue*
  commentId: Overload:Google.Apis.Util.Utilities.GetEnumStringValue
  isExternal: false
  name: GetEnumStringValue
  nameWithType: Utilities.GetEnumStringValue
  fullName: Google.Apis.Util.Utilities.GetEnumStringValue
- uid: System.Enum
  commentId: T:System.Enum
  parent: System
  isExternal: true
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: Google.Apis.Util.Utilities.ConvertToString*
  commentId: Overload:Google.Apis.Util.Utilities.ConvertToString
  isExternal: false
  name: ConvertToString
  nameWithType: Utilities.ConvertToString
  fullName: Google.Apis.Util.Utilities.ConvertToString
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Google.Apis.Util.Utilities.GetDateTimeFromString*
  commentId: Overload:Google.Apis.Util.Utilities.GetDateTimeFromString
  isExternal: false
  name: GetDateTimeFromString
  nameWithType: Utilities.GetDateTimeFromString
  fullName: Google.Apis.Util.Utilities.GetDateTimeFromString
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities.GetStringFromDateTime*
  commentId: Overload:Google.Apis.Util.Utilities.GetStringFromDateTime
  isExternal: false
  name: GetStringFromDateTime
  nameWithType: Utilities.GetStringFromDateTime
  fullName: Google.Apis.Util.Utilities.GetStringFromDateTime
