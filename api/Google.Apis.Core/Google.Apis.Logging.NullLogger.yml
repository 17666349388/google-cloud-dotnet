### YamlMime:ManagedReference
items:
- uid: Google.Apis.Logging.NullLogger
  commentId: T:Google.Apis.Logging.NullLogger
  id: NullLogger
  parent: Google.Apis.Logging
  children:
  - Google.Apis.Logging.NullLogger.Debug(System.String,System.Object[])
  - Google.Apis.Logging.NullLogger.Error(System.Exception,System.String,System.Object[])
  - Google.Apis.Logging.NullLogger.Error(System.String,System.Object[])
  - Google.Apis.Logging.NullLogger.ForType(System.Type)
  - Google.Apis.Logging.NullLogger.ForType``1
  - Google.Apis.Logging.NullLogger.Info(System.String,System.Object[])
  - Google.Apis.Logging.NullLogger.IsDebugEnabled
  - Google.Apis.Logging.NullLogger.Warning(System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: NullLogger
  nameWithType: NullLogger
  fullName: Google.Apis.Logging.NullLogger
  type: Class
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NullLogger
    path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
    startLine: 23
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nRepresents a NullLogger which does not do any logging.\n"
  example: []
  syntax:
    content: 'public class NullLogger : ILogger'
    content.vb: >-
      Public Class NullLogger
          Implements ILogger
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Logging.ILogger
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Google.Apis.Logging.NullLogger.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Logging.NullLogger.IsDebugEnabled
  commentId: P:Google.Apis.Logging.NullLogger.IsDebugEnabled
  id: IsDebugEnabled
  parent: Google.Apis.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: IsDebugEnabled
  nameWithType: NullLogger.IsDebugEnabled
  fullName: Google.Apis.Logging.NullLogger.IsDebugEnabled
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IsDebugEnabled
    path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
    startLine: 27
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  syntax:
    content: public bool IsDebugEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDebugEnabled As Boolean
  overload: Google.Apis.Logging.NullLogger.IsDebugEnabled*
  implements:
  - Google.Apis.Logging.ILogger.IsDebugEnabled
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Logging.NullLogger.ForType(System.Type)
  commentId: M:Google.Apis.Logging.NullLogger.ForType(System.Type)
  id: ForType(System.Type)
  parent: Google.Apis.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: ForType(Type)
  nameWithType: NullLogger.ForType(Type)
  fullName: Google.Apis.Logging.NullLogger.ForType(System.Type)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ForType
    path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
    startLine: 32
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  syntax:
    content: public ILogger ForType(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: Google.Apis.Logging.ILogger
    content.vb: Public Function ForType(type As Type) As ILogger
  overload: Google.Apis.Logging.NullLogger.ForType*
  implements:
  - Google.Apis.Logging.ILogger.ForType(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Logging.NullLogger.ForType``1
  commentId: M:Google.Apis.Logging.NullLogger.ForType``1
  id: ForType``1
  parent: Google.Apis.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: ForType<T>()
  nameWithType: NullLogger.ForType<T>()
  fullName: Google.Apis.Logging.NullLogger.ForType<T>()
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ForType
    path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
    startLine: 37
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  syntax:
    content: public ILogger ForType<T>()
    typeParameters:
    - id: T
    return:
      type: Google.Apis.Logging.ILogger
    content.vb: Public Function ForType(Of T) As ILogger
  overload: Google.Apis.Logging.NullLogger.ForType*
  implements:
  - Google.Apis.Logging.ILogger.ForType``1
  nameWithType.vb: NullLogger.ForType(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Logging.NullLogger.ForType(Of T)()
  name.vb: ForType(Of T)()
- uid: Google.Apis.Logging.NullLogger.Info(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.NullLogger.Info(System.String,System.Object[])
  id: Info(System.String,System.Object[])
  parent: Google.Apis.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Info(String, Object[])
  nameWithType: NullLogger.Info(String, Object[])
  fullName: Google.Apis.Logging.NullLogger.Info(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Info
    path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
    startLine: 42
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  syntax:
    content: public void Info(string message, params object[] formatArgs)
    parameters:
    - id: message
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Public Sub Info(message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.NullLogger.Info*
  implements:
  - Google.Apis.Logging.ILogger.Info(System.String,System.Object[])
  nameWithType.vb: NullLogger.Info(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Logging.NullLogger.Info(System.String, System.Object())
  name.vb: Info(String, Object())
- uid: Google.Apis.Logging.NullLogger.Warning(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.NullLogger.Warning(System.String,System.Object[])
  id: Warning(System.String,System.Object[])
  parent: Google.Apis.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Warning(String, Object[])
  nameWithType: NullLogger.Warning(String, Object[])
  fullName: Google.Apis.Logging.NullLogger.Warning(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Warning
    path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
    startLine: 44
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  syntax:
    content: public void Warning(string message, params object[] formatArgs)
    parameters:
    - id: message
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Public Sub Warning(message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.NullLogger.Warning*
  implements:
  - Google.Apis.Logging.ILogger.Warning(System.String,System.Object[])
  nameWithType.vb: NullLogger.Warning(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Logging.NullLogger.Warning(System.String, System.Object())
  name.vb: Warning(String, Object())
- uid: Google.Apis.Logging.NullLogger.Debug(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.NullLogger.Debug(System.String,System.Object[])
  id: Debug(System.String,System.Object[])
  parent: Google.Apis.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Debug(String, Object[])
  nameWithType: NullLogger.Debug(String, Object[])
  fullName: Google.Apis.Logging.NullLogger.Debug(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Debug
    path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
    startLine: 46
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  syntax:
    content: public void Debug(string message, params object[] formatArgs)
    parameters:
    - id: message
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Public Sub Debug(message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.NullLogger.Debug*
  implements:
  - Google.Apis.Logging.ILogger.Debug(System.String,System.Object[])
  nameWithType.vb: NullLogger.Debug(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Logging.NullLogger.Debug(System.String, System.Object())
  name.vb: Debug(String, Object())
- uid: Google.Apis.Logging.NullLogger.Error(System.Exception,System.String,System.Object[])
  commentId: M:Google.Apis.Logging.NullLogger.Error(System.Exception,System.String,System.Object[])
  id: Error(System.Exception,System.String,System.Object[])
  parent: Google.Apis.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Error(Exception, String, Object[])
  nameWithType: NullLogger.Error(Exception, String, Object[])
  fullName: Google.Apis.Logging.NullLogger.Error(System.Exception, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Error
    path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
    startLine: 48
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  syntax:
    content: public void Error(Exception exception, string message, params object[] formatArgs)
    parameters:
    - id: exception
      type: System.Exception
    - id: message
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Public Sub Error(exception As Exception, message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.NullLogger.Error*
  implements:
  - Google.Apis.Logging.ILogger.Error(System.Exception,System.String,System.Object[])
  nameWithType.vb: NullLogger.Error(Exception, String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Logging.NullLogger.Error(System.Exception, System.String, System.Object())
  name.vb: Error(Exception, String, Object())
- uid: Google.Apis.Logging.NullLogger.Error(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.NullLogger.Error(System.String,System.Object[])
  id: Error(System.String,System.Object[])
  parent: Google.Apis.Logging.NullLogger
  langs:
  - csharp
  - vb
  name: Error(String, Object[])
  nameWithType: NullLogger.Error(String, Object[])
  fullName: Google.Apis.Logging.NullLogger.Error(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Error
    path: Src/Support/GoogleApis.Core/Apis/Logging/NullLogger.cs
    startLine: 50
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  syntax:
    content: public void Error(string message, params object[] formatArgs)
    parameters:
    - id: message
      type: System.String
    - id: formatArgs
      type: System.Object[]
    content.vb: Public Sub Error(message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.NullLogger.Error*
  implements:
  - Google.Apis.Logging.ILogger.Error(System.String,System.Object[])
  nameWithType.vb: NullLogger.Error(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Logging.NullLogger.Error(System.String, System.Object())
  name.vb: Error(String, Object())
references:
- uid: Google.Apis.Logging
  commentId: N:Google.Apis.Logging
  isExternal: false
  name: Google.Apis.Logging
  nameWithType: Google.Apis.Logging
  fullName: Google.Apis.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Logging.ILogger
  commentId: T:Google.Apis.Logging.ILogger
  parent: Google.Apis.Logging
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Google.Apis.Logging.ILogger
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.NullLogger.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<NullLogger>(String)
  nameWithType: Utilities.ThrowIfNull<NullLogger>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Logging.NullLogger>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of NullLogger)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Logging.NullLogger)(System.String)
  name.vb: ThrowIfNull(Of NullLogger)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<NullLogger>
    nameWithType: Utilities.ThrowIfNull<NullLogger>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Logging.NullLogger>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of NullLogger)
    nameWithType: Utilities.ThrowIfNull(Of NullLogger)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Logging.NullLogger)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  isExternal: false
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Logging.NullLogger.IsDebugEnabled*
  commentId: Overload:Google.Apis.Logging.NullLogger.IsDebugEnabled
  isExternal: false
  name: IsDebugEnabled
  nameWithType: NullLogger.IsDebugEnabled
  fullName: Google.Apis.Logging.NullLogger.IsDebugEnabled
- uid: Google.Apis.Logging.ILogger.IsDebugEnabled
  commentId: P:Google.Apis.Logging.ILogger.IsDebugEnabled
  parent: Google.Apis.Logging.ILogger
  isExternal: false
  name: IsDebugEnabled
  nameWithType: ILogger.IsDebugEnabled
  fullName: Google.Apis.Logging.ILogger.IsDebugEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Apis.Logging.NullLogger.ForType*
  commentId: Overload:Google.Apis.Logging.NullLogger.ForType
  isExternal: false
  name: ForType
  nameWithType: NullLogger.ForType
  fullName: Google.Apis.Logging.NullLogger.ForType
- uid: Google.Apis.Logging.ILogger.ForType(System.Type)
  commentId: M:Google.Apis.Logging.ILogger.ForType(System.Type)
  parent: Google.Apis.Logging.ILogger
  isExternal: true
  name: ForType(Type)
  nameWithType: ILogger.ForType(Type)
  fullName: Google.Apis.Logging.ILogger.ForType(System.Type)
  spec.csharp:
  - uid: Google.Apis.Logging.ILogger.ForType(System.Type)
    name: ForType
    nameWithType: ILogger.ForType
    fullName: Google.Apis.Logging.ILogger.ForType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.ILogger.ForType(System.Type)
    name: ForType
    nameWithType: ILogger.ForType
    fullName: Google.Apis.Logging.ILogger.ForType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Google.Apis.Logging.ILogger.ForType``1
  commentId: M:Google.Apis.Logging.ILogger.ForType``1
  parent: Google.Apis.Logging.ILogger
  isExternal: false
  name: ForType<T>()
  nameWithType: ILogger.ForType<T>()
  fullName: Google.Apis.Logging.ILogger.ForType<T>()
  nameWithType.vb: ILogger.ForType(Of T)()
  fullName.vb: Google.Apis.Logging.ILogger.ForType(Of T)()
  name.vb: ForType(Of T)()
  spec.csharp:
  - uid: Google.Apis.Logging.ILogger.ForType``1
    name: ForType<T>
    nameWithType: ILogger.ForType<T>
    fullName: Google.Apis.Logging.ILogger.ForType<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.ILogger.ForType``1
    name: ForType(Of T)
    nameWithType: ILogger.ForType(Of T)
    fullName: Google.Apis.Logging.ILogger.ForType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.NullLogger.Info*
  commentId: Overload:Google.Apis.Logging.NullLogger.Info
  isExternal: false
  name: Info
  nameWithType: NullLogger.Info
  fullName: Google.Apis.Logging.NullLogger.Info
- uid: Google.Apis.Logging.ILogger.Info(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Info(System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  isExternal: true
  name: Info(String, Object[])
  nameWithType: ILogger.Info(String, Object[])
  fullName: Google.Apis.Logging.ILogger.Info(System.String, System.Object[])
  nameWithType.vb: ILogger.Info(String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Info(System.String, System.Object())
  name.vb: Info(String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.ILogger.Info(System.String,System.Object[])
    name: Info
    nameWithType: ILogger.Info
    fullName: Google.Apis.Logging.ILogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.ILogger.Info(System.String,System.Object[])
    name: Info
    nameWithType: ILogger.Info
    fullName: Google.Apis.Logging.ILogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Google.Apis.Logging.NullLogger.Warning*
  commentId: Overload:Google.Apis.Logging.NullLogger.Warning
  isExternal: false
  name: Warning
  nameWithType: NullLogger.Warning
  fullName: Google.Apis.Logging.NullLogger.Warning
- uid: Google.Apis.Logging.ILogger.Warning(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Warning(System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  isExternal: true
  name: Warning(String, Object[])
  nameWithType: ILogger.Warning(String, Object[])
  fullName: Google.Apis.Logging.ILogger.Warning(System.String, System.Object[])
  nameWithType.vb: ILogger.Warning(String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Warning(System.String, System.Object())
  name.vb: Warning(String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.ILogger.Warning(System.String,System.Object[])
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Google.Apis.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.ILogger.Warning(System.String,System.Object[])
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Google.Apis.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.NullLogger.Debug*
  commentId: Overload:Google.Apis.Logging.NullLogger.Debug
  isExternal: false
  name: Debug
  nameWithType: NullLogger.Debug
  fullName: Google.Apis.Logging.NullLogger.Debug
- uid: Google.Apis.Logging.ILogger.Debug(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Debug(System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  isExternal: true
  name: Debug(String, Object[])
  nameWithType: ILogger.Debug(String, Object[])
  fullName: Google.Apis.Logging.ILogger.Debug(System.String, System.Object[])
  nameWithType.vb: ILogger.Debug(String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Debug(System.String, System.Object())
  name.vb: Debug(String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.ILogger.Debug(System.String,System.Object[])
    name: Debug
    nameWithType: ILogger.Debug
    fullName: Google.Apis.Logging.ILogger.Debug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.ILogger.Debug(System.String,System.Object[])
    name: Debug
    nameWithType: ILogger.Debug
    fullName: Google.Apis.Logging.ILogger.Debug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.NullLogger.Error*
  commentId: Overload:Google.Apis.Logging.NullLogger.Error
  isExternal: false
  name: Error
  nameWithType: NullLogger.Error
  fullName: Google.Apis.Logging.NullLogger.Error
- uid: Google.Apis.Logging.ILogger.Error(System.Exception,System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Error(System.Exception,System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  isExternal: true
  name: Error(Exception, String, Object[])
  nameWithType: ILogger.Error(Exception, String, Object[])
  fullName: Google.Apis.Logging.ILogger.Error(System.Exception, System.String, System.Object[])
  nameWithType.vb: ILogger.Error(Exception, String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Error(System.Exception, System.String, System.Object())
  name.vb: Error(Exception, String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.ILogger.Error(System.Exception,System.String,System.Object[])
    name: Error
    nameWithType: ILogger.Error
    fullName: Google.Apis.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.ILogger.Error(System.Exception,System.String,System.Object[])
    name: Error
    nameWithType: ILogger.Error
    fullName: Google.Apis.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Google.Apis.Logging.ILogger.Error(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Error(System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  isExternal: true
  name: Error(String, Object[])
  nameWithType: ILogger.Error(String, Object[])
  fullName: Google.Apis.Logging.ILogger.Error(System.String, System.Object[])
  nameWithType.vb: ILogger.Error(String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Error(System.String, System.Object())
  name.vb: Error(String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.ILogger.Error(System.String,System.Object[])
    name: Error
    nameWithType: ILogger.Error
    fullName: Google.Apis.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.ILogger.Error(System.String,System.Object[])
    name: Error
    nameWithType: ILogger.Error
    fullName: Google.Apis.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
