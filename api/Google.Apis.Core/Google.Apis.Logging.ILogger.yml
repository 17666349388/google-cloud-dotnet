### YamlMime:ManagedReference
items:
- uid: Google.Apis.Logging.ILogger
  commentId: T:Google.Apis.Logging.ILogger
  id: ILogger
  parent: Google.Apis.Logging
  children:
  - Google.Apis.Logging.ILogger.Debug(System.String,System.Object[])
  - Google.Apis.Logging.ILogger.Error(System.Exception,System.String,System.Object[])
  - Google.Apis.Logging.ILogger.Error(System.String,System.Object[])
  - Google.Apis.Logging.ILogger.ForType(System.Type)
  - Google.Apis.Logging.ILogger.ForType``1
  - Google.Apis.Logging.ILogger.Info(System.String,System.Object[])
  - Google.Apis.Logging.ILogger.IsDebugEnabled
  - Google.Apis.Logging.ILogger.Warning(System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: ILogger
  nameWithType: ILogger
  fullName: Google.Apis.Logging.ILogger
  type: Interface
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ILogger
    path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
    startLine: 21
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Describes a logging interface which is used for outputting messages.
  example: []
  syntax:
    content: public interface ILogger
    content.vb: Public Interface ILogger
  extensionMethods:
  - Google.Apis.Logging.ILogger.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Google.Apis.Logging.ILogger.IsDebugEnabled
  commentId: P:Google.Apis.Logging.ILogger.IsDebugEnabled
  id: IsDebugEnabled
  parent: Google.Apis.Logging.ILogger
  langs:
  - csharp
  - vb
  name: IsDebugEnabled
  nameWithType: ILogger.IsDebugEnabled
  fullName: Google.Apis.Logging.ILogger.IsDebugEnabled
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IsDebugEnabled
    path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
    startLine: 24
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Gets an indication whether debug output is logged or not.
  example: []
  syntax:
    content: bool IsDebugEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsDebugEnabled As Boolean
  overload: Google.Apis.Logging.ILogger.IsDebugEnabled*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Logging.ILogger.ForType(System.Type)
  commentId: M:Google.Apis.Logging.ILogger.ForType(System.Type)
  id: ForType(System.Type)
  parent: Google.Apis.Logging.ILogger
  langs:
  - csharp
  - vb
  name: ForType(Type)
  nameWithType: ILogger.ForType(Type)
  fullName: Google.Apis.Logging.ILogger.ForType(System.Type)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ForType
    path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
    startLine: 29
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Returns a logger which will be associated with the specified type.
  example: []
  syntax:
    content: ILogger ForType(Type type)
    parameters:
    - id: type
      type: System.Type
      description: Type to which this logger belongs.
    return:
      type: Google.Apis.Logging.ILogger
      description: A type-associated logger.
    content.vb: Function ForType(type As Type) As ILogger
  overload: Google.Apis.Logging.ILogger.ForType*
- uid: Google.Apis.Logging.ILogger.ForType``1
  commentId: M:Google.Apis.Logging.ILogger.ForType``1
  id: ForType``1
  parent: Google.Apis.Logging.ILogger
  langs:
  - csharp
  - vb
  name: ForType<T>()
  nameWithType: ILogger.ForType<T>()
  fullName: Google.Apis.Logging.ILogger.ForType<T>()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ForType
    path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
    startLine: 33
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Returns a logger which will be associated with the specified type.
  example: []
  syntax:
    content: ILogger ForType<T>()
    typeParameters:
    - id: T
    return:
      type: Google.Apis.Logging.ILogger
      description: A type-associated logger.
    content.vb: Function ForType(Of T) As ILogger
  overload: Google.Apis.Logging.ILogger.ForType*
  nameWithType.vb: ILogger.ForType(Of T)()
  fullName.vb: Google.Apis.Logging.ILogger.ForType(Of T)()
  name.vb: ForType(Of T)()
- uid: Google.Apis.Logging.ILogger.Debug(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Debug(System.String,System.Object[])
  id: Debug(System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Debug(String, Object[])
  nameWithType: ILogger.Debug(String, Object[])
  fullName: Google.Apis.Logging.ILogger.Debug(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Debug
    path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
    startLine: 38
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Logs a debug message.
  example: []
  syntax:
    content: void Debug(string message, params object[] formatArgs)
    parameters:
    - id: message
      type: System.String
      description: The message to log.
    - id: formatArgs
      type: System.Object[]
      description: String.Format arguments (if applicable).
    content.vb: Sub Debug(message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.ILogger.Debug*
  nameWithType.vb: ILogger.Debug(String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Debug(System.String, System.Object())
  name.vb: Debug(String, Object())
- uid: Google.Apis.Logging.ILogger.Info(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Info(System.String,System.Object[])
  id: Info(System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Info(String, Object[])
  nameWithType: ILogger.Info(String, Object[])
  fullName: Google.Apis.Logging.ILogger.Info(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Info
    path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
    startLine: 43
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Logs an info message.
  example: []
  syntax:
    content: void Info(string message, params object[] formatArgs)
    parameters:
    - id: message
      type: System.String
      description: The message to log.
    - id: formatArgs
      type: System.Object[]
      description: String.Format arguments (if applicable).
    content.vb: Sub Info(message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.ILogger.Info*
  nameWithType.vb: ILogger.Info(String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Info(System.String, System.Object())
  name.vb: Info(String, Object())
- uid: Google.Apis.Logging.ILogger.Warning(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Warning(System.String,System.Object[])
  id: Warning(System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Warning(String, Object[])
  nameWithType: ILogger.Warning(String, Object[])
  fullName: Google.Apis.Logging.ILogger.Warning(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Warning
    path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
    startLine: 48
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Logs a warning.
  example: []
  syntax:
    content: void Warning(string message, params object[] formatArgs)
    parameters:
    - id: message
      type: System.String
      description: The message to log.
    - id: formatArgs
      type: System.Object[]
      description: String.Format arguments (if applicable).
    content.vb: Sub Warning(message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.ILogger.Warning*
  nameWithType.vb: ILogger.Warning(String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Warning(System.String, System.Object())
  name.vb: Warning(String, Object())
- uid: Google.Apis.Logging.ILogger.Error(System.Exception,System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Error(System.Exception,System.String,System.Object[])
  id: Error(System.Exception,System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Error(Exception, String, Object[])
  nameWithType: ILogger.Error(Exception, String, Object[])
  fullName: Google.Apis.Logging.ILogger.Error(System.Exception, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Error
    path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
    startLine: 54
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Logs an error message resulting from an exception.
  example: []
  syntax:
    content: void Error(Exception exception, string message, params object[] formatArgs)
    parameters:
    - id: exception
      type: System.Exception
      description: ''
    - id: message
      type: System.String
      description: The message to log.
    - id: formatArgs
      type: System.Object[]
      description: String.Format arguments (if applicable).
    content.vb: Sub Error(exception As Exception, message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.ILogger.Error*
  nameWithType.vb: ILogger.Error(Exception, String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Error(System.Exception, System.String, System.Object())
  name.vb: Error(Exception, String, Object())
- uid: Google.Apis.Logging.ILogger.Error(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Error(System.String,System.Object[])
  id: Error(System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Error(String, Object[])
  nameWithType: ILogger.Error(String, Object[])
  fullName: Google.Apis.Logging.ILogger.Error(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Error
    path: Src/Support/Google.Apis.Core/Logging/ILogger.cs
    startLine: 59
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Logs an error message.
  example: []
  syntax:
    content: void Error(string message, params object[] formatArgs)
    parameters:
    - id: message
      type: System.String
      description: The message to log.
    - id: formatArgs
      type: System.Object[]
      description: String.Format arguments (if applicable).
    content.vb: Sub Error(message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.ILogger.Error*
  nameWithType.vb: ILogger.Error(String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Error(System.String, System.Object())
  name.vb: Error(String, Object())
references:
- uid: Google.Apis.Logging
  commentId: N:Google.Apis.Logging
  name: Google.Apis.Logging
  nameWithType: Google.Apis.Logging
  fullName: Google.Apis.Logging
- uid: Google.Apis.Logging.ILogger.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<ILogger>(String)
  nameWithType: Utilities.ThrowIfNull<ILogger>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Logging.ILogger>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of ILogger)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Logging.ILogger)(System.String)
  name.vb: ThrowIfNull(Of ILogger)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<ILogger>
    nameWithType: Utilities.ThrowIfNull<ILogger>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Logging.ILogger>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of ILogger)
    nameWithType: Utilities.ThrowIfNull(Of ILogger)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Logging.ILogger)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Logging.ILogger.IsDebugEnabled*
  commentId: Overload:Google.Apis.Logging.ILogger.IsDebugEnabled
  name: IsDebugEnabled
  nameWithType: ILogger.IsDebugEnabled
  fullName: Google.Apis.Logging.ILogger.IsDebugEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Logging.ILogger.ForType*
  commentId: Overload:Google.Apis.Logging.ILogger.ForType
  name: ForType
  nameWithType: ILogger.ForType
  fullName: Google.Apis.Logging.ILogger.ForType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Google.Apis.Logging.ILogger
  commentId: T:Google.Apis.Logging.ILogger
  parent: Google.Apis.Logging
  name: ILogger
  nameWithType: ILogger
  fullName: Google.Apis.Logging.ILogger
- uid: Google.Apis.Logging.ILogger.Debug*
  commentId: Overload:Google.Apis.Logging.ILogger.Debug
  name: Debug
  nameWithType: ILogger.Debug
  fullName: Google.Apis.Logging.ILogger.Debug
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Google.Apis.Logging.ILogger.Info*
  commentId: Overload:Google.Apis.Logging.ILogger.Info
  name: Info
  nameWithType: ILogger.Info
  fullName: Google.Apis.Logging.ILogger.Info
- uid: Google.Apis.Logging.ILogger.Warning*
  commentId: Overload:Google.Apis.Logging.ILogger.Warning
  name: Warning
  nameWithType: ILogger.Warning
  fullName: Google.Apis.Logging.ILogger.Warning
- uid: Google.Apis.Logging.ILogger.Error*
  commentId: Overload:Google.Apis.Logging.ILogger.Error
  name: Error
  nameWithType: ILogger.Error
  fullName: Google.Apis.Logging.ILogger.Error
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
