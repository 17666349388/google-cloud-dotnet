### YamlMime:ManagedReference
items:
- uid: Google.Apis.Util.ExponentialBackOff
  commentId: T:Google.Apis.Util.ExponentialBackOff
  id: ExponentialBackOff
  parent: Google.Apis.Util
  children:
  - Google.Apis.Util.ExponentialBackOff.#ctor
  - Google.Apis.Util.ExponentialBackOff.#ctor(System.TimeSpan,System.Int32)
  - Google.Apis.Util.ExponentialBackOff.DeltaBackOff
  - Google.Apis.Util.ExponentialBackOff.GetNextBackOff(System.Int32)
  - Google.Apis.Util.ExponentialBackOff.MaxNumOfRetries
  langs:
  - csharp
  - vb
  name: ExponentialBackOff
  nameWithType: ExponentialBackOff
  fullName: Google.Apis.Util.ExponentialBackOff
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/ExponentialBackOff.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExponentialBackOff
    path: Src/Support/Google.Apis.Core/Util/ExponentialBackOff.cs
    startLine: 25
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: "\nImplementation of <xref href=\"Google.Apis.Util.IBackOff\" data-throw-if-not-resolved=\"false\"></xref> that increases the back-off period for each retry attempt using a \nrandomization function that grows exponentially. In addition, it also adds a randomize number of milliseconds \nfor each attempt.\n"
  example: []
  syntax:
    content: 'public class ExponentialBackOff : IBackOff'
    content.vb: >-
      Public Class ExponentialBackOff
          Implements IBackOff
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Util.IBackOff
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Google.Apis.Util.ExponentialBackOff.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Util.ExponentialBackOff.DeltaBackOff
  commentId: P:Google.Apis.Util.ExponentialBackOff.DeltaBackOff
  id: DeltaBackOff
  parent: Google.Apis.Util.ExponentialBackOff
  langs:
  - csharp
  - vb
  name: DeltaBackOff
  nameWithType: ExponentialBackOff.DeltaBackOff
  fullName: Google.Apis.Util.ExponentialBackOff.DeltaBackOff
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/ExponentialBackOff.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DeltaBackOff
    path: Src/Support/Google.Apis.Core/Util/ExponentialBackOff.cs
    startLine: 37
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: "\nGets the delta time span used to generate a random milliseconds to add to the next back-off.\nIf the value is <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref> then the generated back-off will be exactly 1, 2, 4,\n8, 16, etc. seconds. A valid value is between zero and one second. The default value is 250ms, which means\nthat the generated back-off will be [0.75-1.25]sec, [1.75-2.25]sec, [3.75-4.25]sec, and so on.\n"
  example: []
  syntax:
    content: public TimeSpan DeltaBackOff { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property DeltaBackOff As TimeSpan
  overload: Google.Apis.Util.ExponentialBackOff.DeltaBackOff*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Util.ExponentialBackOff.MaxNumOfRetries
  commentId: P:Google.Apis.Util.ExponentialBackOff.MaxNumOfRetries
  id: MaxNumOfRetries
  parent: Google.Apis.Util.ExponentialBackOff
  langs:
  - csharp
  - vb
  name: MaxNumOfRetries
  nameWithType: ExponentialBackOff.MaxNumOfRetries
  fullName: Google.Apis.Util.ExponentialBackOff.MaxNumOfRetries
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/ExponentialBackOff.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MaxNumOfRetries
    path: Src/Support/Google.Apis.Core/Util/ExponentialBackOff.cs
    startLine: 44
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: Gets the maximum number of retries. Default value is <code>10</code>.
  example: []
  syntax:
    content: public int MaxNumOfRetries { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxNumOfRetries As Integer
  overload: Google.Apis.Util.ExponentialBackOff.MaxNumOfRetries*
  implements:
  - Google.Apis.Util.IBackOff.MaxNumOfRetries
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Util.ExponentialBackOff.#ctor
  commentId: M:Google.Apis.Util.ExponentialBackOff.#ctor
  id: '#ctor'
  parent: Google.Apis.Util.ExponentialBackOff
  langs:
  - csharp
  - vb
  name: ExponentialBackOff()
  nameWithType: ExponentialBackOff.ExponentialBackOff()
  fullName: Google.Apis.Util.ExponentialBackOff.ExponentialBackOff()
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/ExponentialBackOff.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis.Core/Util/ExponentialBackOff.cs
    startLine: 53
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: Constructs a new exponential back-off with default values.
  example: []
  syntax:
    content: public ExponentialBackOff()
    content.vb: Public Sub New
  overload: Google.Apis.Util.ExponentialBackOff.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Util.ExponentialBackOff.#ctor(System.TimeSpan,System.Int32)
  commentId: M:Google.Apis.Util.ExponentialBackOff.#ctor(System.TimeSpan,System.Int32)
  id: '#ctor(System.TimeSpan,System.Int32)'
  parent: Google.Apis.Util.ExponentialBackOff
  langs:
  - csharp
  - vb
  name: ExponentialBackOff(TimeSpan, Int32)
  nameWithType: ExponentialBackOff.ExponentialBackOff(TimeSpan, Int32)
  fullName: Google.Apis.Util.ExponentialBackOff.ExponentialBackOff(System.TimeSpan, System.Int32)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/ExponentialBackOff.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis.Core/Util/ExponentialBackOff.cs
    startLine: 59
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: Constructs a new exponential back-off with the given delta and maximum retries.
  example: []
  syntax:
    content: public ExponentialBackOff(TimeSpan deltaBackOff, int maximumNumOfRetries = 10)
    parameters:
    - id: deltaBackOff
      type: System.TimeSpan
    - id: maximumNumOfRetries
      type: System.Int32
    content.vb: Public Sub New(deltaBackOff As TimeSpan, maximumNumOfRetries As Integer = 10)
  overload: Google.Apis.Util.ExponentialBackOff.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Util.ExponentialBackOff.GetNextBackOff(System.Int32)
  commentId: M:Google.Apis.Util.ExponentialBackOff.GetNextBackOff(System.Int32)
  id: GetNextBackOff(System.Int32)
  parent: Google.Apis.Util.ExponentialBackOff
  langs:
  - csharp
  - vb
  name: GetNextBackOff(Int32)
  nameWithType: ExponentialBackOff.GetNextBackOff(Int32)
  fullName: Google.Apis.Util.ExponentialBackOff.GetNextBackOff(System.Int32)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/ExponentialBackOff.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GetNextBackOff
    path: Src/Support/Google.Apis.Core/Util/ExponentialBackOff.cs
    startLine: 77
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util
  summary: "\nGets the a time span to wait before next retry. If the current retry reached the maximum number of retries,\nthe returned value is <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TimeSpan GetNextBackOff(int currentRetry)
    parameters:
    - id: currentRetry
      type: System.Int32
    return:
      type: System.TimeSpan
    content.vb: Public Function GetNextBackOff(currentRetry As Integer) As TimeSpan
  overload: Google.Apis.Util.ExponentialBackOff.GetNextBackOff*
  implements:
  - Google.Apis.Util.IBackOff.GetNextBackOff(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Apis.Util.IBackOff
  commentId: T:Google.Apis.Util.IBackOff
  parent: Google.Apis.Util
  name: IBackOff
  nameWithType: IBackOff
  fullName: Google.Apis.Util.IBackOff
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.ExponentialBackOff.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<ExponentialBackOff>(String)
  nameWithType: Utilities.ThrowIfNull<ExponentialBackOff>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Util.ExponentialBackOff>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of ExponentialBackOff)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Util.ExponentialBackOff)(System.String)
  name.vb: ThrowIfNull(Of ExponentialBackOff)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<ExponentialBackOff>
    nameWithType: Utilities.ThrowIfNull<ExponentialBackOff>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Util.ExponentialBackOff>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of ExponentialBackOff)
    nameWithType: Utilities.ThrowIfNull(Of ExponentialBackOff)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Util.ExponentialBackOff)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: System.TimeSpan.Zero
  commentId: F:System.TimeSpan.Zero
  isExternal: true
- uid: Google.Apis.Util.ExponentialBackOff.DeltaBackOff*
  commentId: Overload:Google.Apis.Util.ExponentialBackOff.DeltaBackOff
  name: DeltaBackOff
  nameWithType: ExponentialBackOff.DeltaBackOff
  fullName: Google.Apis.Util.ExponentialBackOff.DeltaBackOff
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Google.Apis.Util.ExponentialBackOff.MaxNumOfRetries*
  commentId: Overload:Google.Apis.Util.ExponentialBackOff.MaxNumOfRetries
  name: MaxNumOfRetries
  nameWithType: ExponentialBackOff.MaxNumOfRetries
  fullName: Google.Apis.Util.ExponentialBackOff.MaxNumOfRetries
- uid: Google.Apis.Util.IBackOff.MaxNumOfRetries
  commentId: P:Google.Apis.Util.IBackOff.MaxNumOfRetries
  parent: Google.Apis.Util.IBackOff
  name: MaxNumOfRetries
  nameWithType: IBackOff.MaxNumOfRetries
  fullName: Google.Apis.Util.IBackOff.MaxNumOfRetries
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Apis.Util.ExponentialBackOff.#ctor*
  commentId: Overload:Google.Apis.Util.ExponentialBackOff.#ctor
  name: ExponentialBackOff
  nameWithType: ExponentialBackOff.ExponentialBackOff
  fullName: Google.Apis.Util.ExponentialBackOff.ExponentialBackOff
- uid: Google.Apis.Util.ExponentialBackOff.GetNextBackOff*
  commentId: Overload:Google.Apis.Util.ExponentialBackOff.GetNextBackOff
  name: GetNextBackOff
  nameWithType: ExponentialBackOff.GetNextBackOff
  fullName: Google.Apis.Util.ExponentialBackOff.GetNextBackOff
- uid: Google.Apis.Util.IBackOff.GetNextBackOff(System.Int32)
  commentId: M:Google.Apis.Util.IBackOff.GetNextBackOff(System.Int32)
  parent: Google.Apis.Util.IBackOff
  isExternal: true
  name: GetNextBackOff(Int32)
  nameWithType: IBackOff.GetNextBackOff(Int32)
  fullName: Google.Apis.Util.IBackOff.GetNextBackOff(System.Int32)
  spec.csharp:
  - uid: Google.Apis.Util.IBackOff.GetNextBackOff(System.Int32)
    name: GetNextBackOff
    nameWithType: IBackOff.GetNextBackOff
    fullName: Google.Apis.Util.IBackOff.GetNextBackOff
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.IBackOff.GetNextBackOff(System.Int32)
    name: GetNextBackOff
    nameWithType: IBackOff.GetNextBackOff
    fullName: Google.Apis.Util.IBackOff.GetNextBackOff
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
