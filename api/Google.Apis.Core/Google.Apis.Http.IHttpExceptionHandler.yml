### YamlMime:ManagedReference
items:
- uid: Google.Apis.Http.IHttpExceptionHandler
  commentId: T:Google.Apis.Http.IHttpExceptionHandler
  id: IHttpExceptionHandler
  parent: Google.Apis.Http
  children:
  - Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync(Google.Apis.Http.HandleExceptionArgs)
  langs:
  - csharp
  - vb
  name: IHttpExceptionHandler
  nameWithType: IHttpExceptionHandler
  fullName: Google.Apis.Http.IHttpExceptionHandler
  type: Interface
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Http/IHttpExceptionHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IHttpExceptionHandler
    path: Src/Support/GoogleApis.Core/Apis/Http/IHttpExceptionHandler.cs
    startLine: 49
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Exception handler is invoked when an exception is thrown during a HTTP request.
  example: []
  syntax:
    content: public interface IHttpExceptionHandler
    content.vb: Public Interface IHttpExceptionHandler
  extensionMethods:
  - Google.Apis.Http.IHttpExceptionHandler.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync(Google.Apis.Http.HandleExceptionArgs)
  commentId: M:Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync(Google.Apis.Http.HandleExceptionArgs)
  id: HandleExceptionAsync(Google.Apis.Http.HandleExceptionArgs)
  parent: Google.Apis.Http.IHttpExceptionHandler
  langs:
  - csharp
  - vb
  name: HandleExceptionAsync(HandleExceptionArgs)
  nameWithType: IHttpExceptionHandler.HandleExceptionAsync(HandleExceptionArgs)
  fullName: Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync(Google.Apis.Http.HandleExceptionArgs)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Http/IHttpExceptionHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: HandleExceptionAsync
    path: Src/Support/GoogleApis.Core/Apis/Http/IHttpExceptionHandler.cs
    startLine: 60
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nHandles an exception thrown when sending a HTTP request. \nA simple rule must be followed, if you modify the request object in a way that the exception can be \nresolved, you must return <code>true</code>.\n"
  example: []
  syntax:
    content: Task<bool> HandleExceptionAsync(HandleExceptionArgs args)
    parameters:
    - id: args
      type: Google.Apis.Http.HandleExceptionArgs
      description: "\nHandle exception argument which properties such as the request, exception, current failed try.\n"
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Whether this handler has made a change that requires the request to be resent.
    content.vb: Function HandleExceptionAsync(args As HandleExceptionArgs) As Task(Of Boolean)
  overload: Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync*
references:
- uid: Google.Apis.Http
  commentId: N:Google.Apis.Http
  isExternal: false
  name: Google.Apis.Http
  nameWithType: Google.Apis.Http
  fullName: Google.Apis.Http
- uid: Google.Apis.Http.IHttpExceptionHandler.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<IHttpExceptionHandler>(String)
  nameWithType: Utilities.ThrowIfNull<IHttpExceptionHandler>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Http.IHttpExceptionHandler>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of IHttpExceptionHandler)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Http.IHttpExceptionHandler)(System.String)
  name.vb: ThrowIfNull(Of IHttpExceptionHandler)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<IHttpExceptionHandler>
    nameWithType: Utilities.ThrowIfNull<IHttpExceptionHandler>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Http.IHttpExceptionHandler>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of IHttpExceptionHandler)
    nameWithType: Utilities.ThrowIfNull(Of IHttpExceptionHandler)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Http.IHttpExceptionHandler)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  isExternal: false
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync*
  commentId: Overload:Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync
  isExternal: false
  name: HandleExceptionAsync
  nameWithType: IHttpExceptionHandler.HandleExceptionAsync
  fullName: Google.Apis.Http.IHttpExceptionHandler.HandleExceptionAsync
- uid: Google.Apis.Http.HandleExceptionArgs
  commentId: T:Google.Apis.Http.HandleExceptionArgs
  parent: Google.Apis.Http
  isExternal: false
  name: HandleExceptionArgs
  nameWithType: HandleExceptionArgs
  fullName: Google.Apis.Http.HandleExceptionArgs
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
