### YamlMime:ManagedReference
items:
- uid: Google.Apis.Logging.ConsoleLogger
  commentId: T:Google.Apis.Logging.ConsoleLogger
  id: ConsoleLogger
  parent: Google.Apis.Logging
  children:
  - Google.Apis.Logging.ConsoleLogger.#ctor(Google.Apis.Logging.LogLevel,System.Boolean,Google.Apis.Util.IClock)
  - Google.Apis.Logging.ConsoleLogger.BuildNewLogger(System.Type)
  - Google.Apis.Logging.ConsoleLogger.Log(Google.Apis.Logging.LogLevel,System.String)
  - Google.Apis.Logging.ConsoleLogger.LogToStdOut
  langs:
  - csharp
  - vb
  name: ConsoleLogger
  nameWithType: ConsoleLogger
  fullName: Google.Apis.Logging.ConsoleLogger
  type: Class
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/ConsoleLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ConsoleLogger
    path: Src/Support/GoogleApis.Core/Apis/Logging/ConsoleLogger.cs
    startLine: 27
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nA logger than logs to StdError or StdOut.\n"
  example: []
  syntax:
    content: 'public sealed class ConsoleLogger : BaseLogger, ILogger'
    content.vb: >-
      Public NotInheritable Class ConsoleLogger
          Inherits BaseLogger
          Implements ILogger
  inheritance:
  - System.Object
  - Google.Apis.Logging.BaseLogger
  implements:
  - Google.Apis.Logging.ILogger
  inheritedMembers:
  - Google.Apis.Logging.BaseLogger.Clock
  - Google.Apis.Logging.BaseLogger.LoggerForType
  - Google.Apis.Logging.BaseLogger.MinimumLogLevel
  - Google.Apis.Logging.BaseLogger.IsDebugEnabled
  - Google.Apis.Logging.BaseLogger.IsInfoEnabled
  - Google.Apis.Logging.BaseLogger.IsWarningEnabled
  - Google.Apis.Logging.BaseLogger.IsErrorEnabled
  - Google.Apis.Logging.BaseLogger.ForType``1
  - Google.Apis.Logging.BaseLogger.ForType(System.Type)
  - Google.Apis.Logging.BaseLogger.Debug(System.String,System.Object[])
  - Google.Apis.Logging.BaseLogger.Info(System.String,System.Object[])
  - Google.Apis.Logging.BaseLogger.Warning(System.String,System.Object[])
  - Google.Apis.Logging.BaseLogger.Error(System.Exception,System.String,System.Object[])
  - Google.Apis.Logging.BaseLogger.Error(System.String,System.Object[])
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Google.Apis.Logging.ConsoleLogger.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Apis.Logging.ConsoleLogger.#ctor(Google.Apis.Logging.LogLevel,System.Boolean,Google.Apis.Util.IClock)
  commentId: M:Google.Apis.Logging.ConsoleLogger.#ctor(Google.Apis.Logging.LogLevel,System.Boolean,Google.Apis.Util.IClock)
  id: '#ctor(Google.Apis.Logging.LogLevel,System.Boolean,Google.Apis.Util.IClock)'
  parent: Google.Apis.Logging.ConsoleLogger
  langs:
  - csharp
  - vb
  name: ConsoleLogger(LogLevel, Boolean, IClock)
  nameWithType: ConsoleLogger.ConsoleLogger(LogLevel, Boolean, IClock)
  fullName: Google.Apis.Logging.ConsoleLogger.ConsoleLogger(Google.Apis.Logging.LogLevel, System.Boolean, Google.Apis.Util.IClock)
  type: Constructor
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/ConsoleLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/GoogleApis.Core/Apis/Logging/ConsoleLogger.cs
    startLine: 35
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nConstruct a <xref href=\"Google.Apis.Logging.ConsoleLogger\" data-throw-if-not-resolved=\"false\"></xref>. \n"
  example: []
  syntax:
    content: public ConsoleLogger(LogLevel minimumLogLevel, bool logToStdOut = false, IClock clock = null)
    parameters:
    - id: minimumLogLevel
      type: Google.Apis.Logging.LogLevel
      description: Logging will be enabled at this level and all higher levels.
    - id: logToStdOut
      type: System.Boolean
      description: <code>true</code> to log to StdOut, defaults to logging to StdError.
    - id: clock
      type: Google.Apis.Util.IClock
      description: Optional <xref href="Google.Apis.Util.IClock" data-throw-if-not-resolved="false"></xref>; will use the system clock if <code>null</code>.
    content.vb: Public Sub New(minimumLogLevel As LogLevel, logToStdOut As Boolean = False, clock As IClock = Nothing)
  overload: Google.Apis.Logging.ConsoleLogger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Logging.ConsoleLogger.LogToStdOut
  commentId: P:Google.Apis.Logging.ConsoleLogger.LogToStdOut
  id: LogToStdOut
  parent: Google.Apis.Logging.ConsoleLogger
  langs:
  - csharp
  - vb
  name: LogToStdOut
  nameWithType: ConsoleLogger.LogToStdOut
  fullName: Google.Apis.Logging.ConsoleLogger.LogToStdOut
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/ConsoleLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LogToStdOut
    path: Src/Support/GoogleApis.Core/Apis/Logging/ConsoleLogger.cs
    startLine: 45
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\n<code>false</code> to log to StdError; <code>true</code> to log to StdOut.\n"
  example: []
  syntax:
    content: public bool LogToStdOut { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property LogToStdOut As Boolean
  overload: Google.Apis.Logging.ConsoleLogger.LogToStdOut*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Logging.ConsoleLogger.BuildNewLogger(System.Type)
  commentId: M:Google.Apis.Logging.ConsoleLogger.BuildNewLogger(System.Type)
  id: BuildNewLogger(System.Type)
  parent: Google.Apis.Logging.ConsoleLogger
  langs:
  - csharp
  - vb
  name: BuildNewLogger(Type)
  nameWithType: ConsoleLogger.BuildNewLogger(Type)
  fullName: Google.Apis.Logging.ConsoleLogger.BuildNewLogger(System.Type)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/ConsoleLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BuildNewLogger
    path: Src/Support/GoogleApis.Core/Apis/Logging/ConsoleLogger.cs
    startLine: 48
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nBuild a new logger of the derived concrete type, for use to log from the specified type.\n"
  example: []
  syntax:
    content: protected override ILogger BuildNewLogger(Type type)
    parameters:
    - id: type
      type: System.Type
      description: The type from which entries are being logged.
    return:
      type: Google.Apis.Logging.ILogger
      description: A new <xref href="Google.Apis.Logging.ILogger" data-throw-if-not-resolved="false"></xref> instance, logging from the specified type.
    content.vb: Protected Overrides Function BuildNewLogger(type As Type) As ILogger
  overridden: Google.Apis.Logging.BaseLogger.BuildNewLogger(System.Type)
  overload: Google.Apis.Logging.ConsoleLogger.BuildNewLogger*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Google.Apis.Logging.ConsoleLogger.Log(Google.Apis.Logging.LogLevel,System.String)
  commentId: M:Google.Apis.Logging.ConsoleLogger.Log(Google.Apis.Logging.LogLevel,System.String)
  id: Log(Google.Apis.Logging.LogLevel,System.String)
  parent: Google.Apis.Logging.ConsoleLogger
  langs:
  - csharp
  - vb
  name: Log(LogLevel, String)
  nameWithType: ConsoleLogger.Log(LogLevel, String)
  fullName: Google.Apis.Logging.ConsoleLogger.Log(Google.Apis.Logging.LogLevel, System.String)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/ConsoleLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Log
    path: Src/Support/GoogleApis.Core/Apis/Logging/ConsoleLogger.cs
    startLine: 51
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nPerform the actual logging.\n"
  example: []
  syntax:
    content: protected override void Log(LogLevel logLevel, string formattedMessage)
    parameters:
    - id: logLevel
      type: Google.Apis.Logging.LogLevel
      description: The <xref href="Google.Apis.Logging.LogLevel" data-throw-if-not-resolved="false"></xref> of this log entry.
    - id: formattedMessage
      type: System.String
      description: The fully formatted log message, ready for logging.
    content.vb: Protected Overrides Sub Log(logLevel As LogLevel, formattedMessage As String)
  overridden: Google.Apis.Logging.BaseLogger.Log(Google.Apis.Logging.LogLevel,System.String)
  overload: Google.Apis.Logging.ConsoleLogger.Log*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Google.Apis.Logging
  commentId: N:Google.Apis.Logging
  isExternal: false
  name: Google.Apis.Logging
  nameWithType: Google.Apis.Logging
  fullName: Google.Apis.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Logging.BaseLogger
  commentId: T:Google.Apis.Logging.BaseLogger
  parent: Google.Apis.Logging
  isExternal: false
  name: BaseLogger
  nameWithType: BaseLogger
  fullName: Google.Apis.Logging.BaseLogger
- uid: Google.Apis.Logging.ILogger
  commentId: T:Google.Apis.Logging.ILogger
  parent: Google.Apis.Logging
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Google.Apis.Logging.ILogger
- uid: Google.Apis.Logging.BaseLogger.Clock
  commentId: P:Google.Apis.Logging.BaseLogger.Clock
  parent: Google.Apis.Logging.BaseLogger
  isExternal: false
  name: Clock
  nameWithType: BaseLogger.Clock
  fullName: Google.Apis.Logging.BaseLogger.Clock
- uid: Google.Apis.Logging.BaseLogger.LoggerForType
  commentId: P:Google.Apis.Logging.BaseLogger.LoggerForType
  parent: Google.Apis.Logging.BaseLogger
  isExternal: false
  name: LoggerForType
  nameWithType: BaseLogger.LoggerForType
  fullName: Google.Apis.Logging.BaseLogger.LoggerForType
- uid: Google.Apis.Logging.BaseLogger.MinimumLogLevel
  commentId: P:Google.Apis.Logging.BaseLogger.MinimumLogLevel
  parent: Google.Apis.Logging.BaseLogger
  isExternal: false
  name: MinimumLogLevel
  nameWithType: BaseLogger.MinimumLogLevel
  fullName: Google.Apis.Logging.BaseLogger.MinimumLogLevel
- uid: Google.Apis.Logging.BaseLogger.IsDebugEnabled
  commentId: P:Google.Apis.Logging.BaseLogger.IsDebugEnabled
  parent: Google.Apis.Logging.BaseLogger
  isExternal: false
  name: IsDebugEnabled
  nameWithType: BaseLogger.IsDebugEnabled
  fullName: Google.Apis.Logging.BaseLogger.IsDebugEnabled
- uid: Google.Apis.Logging.BaseLogger.IsInfoEnabled
  commentId: P:Google.Apis.Logging.BaseLogger.IsInfoEnabled
  parent: Google.Apis.Logging.BaseLogger
  isExternal: false
  name: IsInfoEnabled
  nameWithType: BaseLogger.IsInfoEnabled
  fullName: Google.Apis.Logging.BaseLogger.IsInfoEnabled
- uid: Google.Apis.Logging.BaseLogger.IsWarningEnabled
  commentId: P:Google.Apis.Logging.BaseLogger.IsWarningEnabled
  parent: Google.Apis.Logging.BaseLogger
  isExternal: false
  name: IsWarningEnabled
  nameWithType: BaseLogger.IsWarningEnabled
  fullName: Google.Apis.Logging.BaseLogger.IsWarningEnabled
- uid: Google.Apis.Logging.BaseLogger.IsErrorEnabled
  commentId: P:Google.Apis.Logging.BaseLogger.IsErrorEnabled
  parent: Google.Apis.Logging.BaseLogger
  isExternal: false
  name: IsErrorEnabled
  nameWithType: BaseLogger.IsErrorEnabled
  fullName: Google.Apis.Logging.BaseLogger.IsErrorEnabled
- uid: Google.Apis.Logging.BaseLogger.ForType``1
  commentId: M:Google.Apis.Logging.BaseLogger.ForType``1
  parent: Google.Apis.Logging.BaseLogger
  isExternal: false
  name: ForType<T>()
  nameWithType: BaseLogger.ForType<T>()
  fullName: Google.Apis.Logging.BaseLogger.ForType<T>()
  nameWithType.vb: BaseLogger.ForType(Of T)()
  fullName.vb: Google.Apis.Logging.BaseLogger.ForType(Of T)()
  name.vb: ForType(Of T)()
  spec.csharp:
  - uid: Google.Apis.Logging.BaseLogger.ForType``1
    name: ForType<T>
    nameWithType: BaseLogger.ForType<T>
    fullName: Google.Apis.Logging.BaseLogger.ForType<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.BaseLogger.ForType``1
    name: ForType(Of T)
    nameWithType: BaseLogger.ForType(Of T)
    fullName: Google.Apis.Logging.BaseLogger.ForType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.BaseLogger.ForType(System.Type)
  commentId: M:Google.Apis.Logging.BaseLogger.ForType(System.Type)
  parent: Google.Apis.Logging.BaseLogger
  isExternal: true
  name: ForType(Type)
  nameWithType: BaseLogger.ForType(Type)
  fullName: Google.Apis.Logging.BaseLogger.ForType(System.Type)
  spec.csharp:
  - uid: Google.Apis.Logging.BaseLogger.ForType(System.Type)
    name: ForType
    nameWithType: BaseLogger.ForType
    fullName: Google.Apis.Logging.BaseLogger.ForType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.BaseLogger.ForType(System.Type)
    name: ForType
    nameWithType: BaseLogger.ForType
    fullName: Google.Apis.Logging.BaseLogger.ForType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.BaseLogger.Debug(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.BaseLogger.Debug(System.String,System.Object[])
  parent: Google.Apis.Logging.BaseLogger
  isExternal: true
  name: Debug(String, Object[])
  nameWithType: BaseLogger.Debug(String, Object[])
  fullName: Google.Apis.Logging.BaseLogger.Debug(System.String, System.Object[])
  nameWithType.vb: BaseLogger.Debug(String, Object())
  fullName.vb: Google.Apis.Logging.BaseLogger.Debug(System.String, System.Object())
  name.vb: Debug(String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.BaseLogger.Debug(System.String,System.Object[])
    name: Debug
    nameWithType: BaseLogger.Debug
    fullName: Google.Apis.Logging.BaseLogger.Debug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.BaseLogger.Debug(System.String,System.Object[])
    name: Debug
    nameWithType: BaseLogger.Debug
    fullName: Google.Apis.Logging.BaseLogger.Debug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.BaseLogger.Info(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.BaseLogger.Info(System.String,System.Object[])
  parent: Google.Apis.Logging.BaseLogger
  isExternal: true
  name: Info(String, Object[])
  nameWithType: BaseLogger.Info(String, Object[])
  fullName: Google.Apis.Logging.BaseLogger.Info(System.String, System.Object[])
  nameWithType.vb: BaseLogger.Info(String, Object())
  fullName.vb: Google.Apis.Logging.BaseLogger.Info(System.String, System.Object())
  name.vb: Info(String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.BaseLogger.Info(System.String,System.Object[])
    name: Info
    nameWithType: BaseLogger.Info
    fullName: Google.Apis.Logging.BaseLogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.BaseLogger.Info(System.String,System.Object[])
    name: Info
    nameWithType: BaseLogger.Info
    fullName: Google.Apis.Logging.BaseLogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.BaseLogger.Warning(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.BaseLogger.Warning(System.String,System.Object[])
  parent: Google.Apis.Logging.BaseLogger
  isExternal: true
  name: Warning(String, Object[])
  nameWithType: BaseLogger.Warning(String, Object[])
  fullName: Google.Apis.Logging.BaseLogger.Warning(System.String, System.Object[])
  nameWithType.vb: BaseLogger.Warning(String, Object())
  fullName.vb: Google.Apis.Logging.BaseLogger.Warning(System.String, System.Object())
  name.vb: Warning(String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.BaseLogger.Warning(System.String,System.Object[])
    name: Warning
    nameWithType: BaseLogger.Warning
    fullName: Google.Apis.Logging.BaseLogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.BaseLogger.Warning(System.String,System.Object[])
    name: Warning
    nameWithType: BaseLogger.Warning
    fullName: Google.Apis.Logging.BaseLogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.BaseLogger.Error(System.Exception,System.String,System.Object[])
  commentId: M:Google.Apis.Logging.BaseLogger.Error(System.Exception,System.String,System.Object[])
  parent: Google.Apis.Logging.BaseLogger
  isExternal: true
  name: Error(Exception, String, Object[])
  nameWithType: BaseLogger.Error(Exception, String, Object[])
  fullName: Google.Apis.Logging.BaseLogger.Error(System.Exception, System.String, System.Object[])
  nameWithType.vb: BaseLogger.Error(Exception, String, Object())
  fullName.vb: Google.Apis.Logging.BaseLogger.Error(System.Exception, System.String, System.Object())
  name.vb: Error(Exception, String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.BaseLogger.Error(System.Exception,System.String,System.Object[])
    name: Error
    nameWithType: BaseLogger.Error
    fullName: Google.Apis.Logging.BaseLogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.BaseLogger.Error(System.Exception,System.String,System.Object[])
    name: Error
    nameWithType: BaseLogger.Error
    fullName: Google.Apis.Logging.BaseLogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.BaseLogger.Error(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.BaseLogger.Error(System.String,System.Object[])
  parent: Google.Apis.Logging.BaseLogger
  isExternal: true
  name: Error(String, Object[])
  nameWithType: BaseLogger.Error(String, Object[])
  fullName: Google.Apis.Logging.BaseLogger.Error(System.String, System.Object[])
  nameWithType.vb: BaseLogger.Error(String, Object())
  fullName.vb: Google.Apis.Logging.BaseLogger.Error(System.String, System.Object())
  name.vb: Error(String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.BaseLogger.Error(System.String,System.Object[])
    name: Error
    nameWithType: BaseLogger.Error
    fullName: Google.Apis.Logging.BaseLogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.BaseLogger.Error(System.String,System.Object[])
    name: Error
    nameWithType: BaseLogger.Error
    fullName: Google.Apis.Logging.BaseLogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.ConsoleLogger.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<ConsoleLogger>(String)
  nameWithType: Utilities.ThrowIfNull<ConsoleLogger>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Logging.ConsoleLogger>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of ConsoleLogger)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Logging.ConsoleLogger)(System.String)
  name.vb: ThrowIfNull(Of ConsoleLogger)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<ConsoleLogger>
    nameWithType: Utilities.ThrowIfNull<ConsoleLogger>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Logging.ConsoleLogger>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of ConsoleLogger)
    nameWithType: Utilities.ThrowIfNull(Of ConsoleLogger)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Logging.ConsoleLogger)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  isExternal: false
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Logging.ConsoleLogger
  commentId: T:Google.Apis.Logging.ConsoleLogger
  isExternal: false
  name: ConsoleLogger
  nameWithType: ConsoleLogger
  fullName: Google.Apis.Logging.ConsoleLogger
- uid: Google.Apis.Util.IClock
  commentId: T:Google.Apis.Util.IClock
  parent: Google.Apis.Util
  isExternal: false
  name: IClock
  nameWithType: IClock
  fullName: Google.Apis.Util.IClock
- uid: Google.Apis.Logging.ConsoleLogger.#ctor*
  commentId: Overload:Google.Apis.Logging.ConsoleLogger.#ctor
  isExternal: false
  name: ConsoleLogger
  nameWithType: ConsoleLogger.ConsoleLogger
  fullName: Google.Apis.Logging.ConsoleLogger.ConsoleLogger
- uid: Google.Apis.Logging.LogLevel
  commentId: T:Google.Apis.Logging.LogLevel
  parent: Google.Apis.Logging
  isExternal: false
  name: LogLevel
  nameWithType: LogLevel
  fullName: Google.Apis.Logging.LogLevel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Apis.Logging.ConsoleLogger.LogToStdOut*
  commentId: Overload:Google.Apis.Logging.ConsoleLogger.LogToStdOut
  isExternal: false
  name: LogToStdOut
  nameWithType: ConsoleLogger.LogToStdOut
  fullName: Google.Apis.Logging.ConsoleLogger.LogToStdOut
- uid: Google.Apis.Logging.BaseLogger.BuildNewLogger(System.Type)
  commentId: M:Google.Apis.Logging.BaseLogger.BuildNewLogger(System.Type)
  parent: Google.Apis.Logging.BaseLogger
  isExternal: true
  name: BuildNewLogger(Type)
  nameWithType: BaseLogger.BuildNewLogger(Type)
  fullName: Google.Apis.Logging.BaseLogger.BuildNewLogger(System.Type)
  spec.csharp:
  - uid: Google.Apis.Logging.BaseLogger.BuildNewLogger(System.Type)
    name: BuildNewLogger
    nameWithType: BaseLogger.BuildNewLogger
    fullName: Google.Apis.Logging.BaseLogger.BuildNewLogger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.BaseLogger.BuildNewLogger(System.Type)
    name: BuildNewLogger
    nameWithType: BaseLogger.BuildNewLogger
    fullName: Google.Apis.Logging.BaseLogger.BuildNewLogger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.ConsoleLogger.BuildNewLogger*
  commentId: Overload:Google.Apis.Logging.ConsoleLogger.BuildNewLogger
  isExternal: false
  name: BuildNewLogger
  nameWithType: ConsoleLogger.BuildNewLogger
  fullName: Google.Apis.Logging.ConsoleLogger.BuildNewLogger
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Google.Apis.Logging.BaseLogger.Log(Google.Apis.Logging.LogLevel,System.String)
  commentId: M:Google.Apis.Logging.BaseLogger.Log(Google.Apis.Logging.LogLevel,System.String)
  parent: Google.Apis.Logging.BaseLogger
  isExternal: true
  name: Log(LogLevel, String)
  nameWithType: BaseLogger.Log(LogLevel, String)
  fullName: Google.Apis.Logging.BaseLogger.Log(Google.Apis.Logging.LogLevel, System.String)
  spec.csharp:
  - uid: Google.Apis.Logging.BaseLogger.Log(Google.Apis.Logging.LogLevel,System.String)
    name: Log
    nameWithType: BaseLogger.Log
    fullName: Google.Apis.Logging.BaseLogger.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Google.Apis.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.BaseLogger.Log(Google.Apis.Logging.LogLevel,System.String)
    name: Log
    nameWithType: BaseLogger.Log
    fullName: Google.Apis.Logging.BaseLogger.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Apis.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Google.Apis.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.ConsoleLogger.Log*
  commentId: Overload:Google.Apis.Logging.ConsoleLogger.Log
  isExternal: false
  name: Log
  nameWithType: ConsoleLogger.Log
  fullName: Google.Apis.Logging.ConsoleLogger.Log
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
