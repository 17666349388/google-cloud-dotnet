### YamlMime:ManagedReference
items:
- uid: Google.Apis.Logging.BaseLogger
  commentId: T:Google.Apis.Logging.BaseLogger
  id: BaseLogger
  parent: Google.Apis.Logging
  children:
  - Google.Apis.Logging.BaseLogger.#ctor(Google.Apis.Logging.LogLevel,Google.Apis.Util.IClock,System.Type)
  - Google.Apis.Logging.BaseLogger.BuildNewLogger(System.Type)
  - Google.Apis.Logging.BaseLogger.Clock
  - Google.Apis.Logging.BaseLogger.Debug(System.String,System.Object[])
  - Google.Apis.Logging.BaseLogger.Error(System.Exception,System.String,System.Object[])
  - Google.Apis.Logging.BaseLogger.Error(System.String,System.Object[])
  - Google.Apis.Logging.BaseLogger.ForType(System.Type)
  - Google.Apis.Logging.BaseLogger.ForType``1
  - Google.Apis.Logging.BaseLogger.Info(System.String,System.Object[])
  - Google.Apis.Logging.BaseLogger.IsDebugEnabled
  - Google.Apis.Logging.BaseLogger.IsErrorEnabled
  - Google.Apis.Logging.BaseLogger.IsInfoEnabled
  - Google.Apis.Logging.BaseLogger.IsWarningEnabled
  - Google.Apis.Logging.BaseLogger.Log(Google.Apis.Logging.LogLevel,System.String)
  - Google.Apis.Logging.BaseLogger.LoggerForType
  - Google.Apis.Logging.BaseLogger.MinimumLogLevel
  - Google.Apis.Logging.BaseLogger.Warning(System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: BaseLogger
  nameWithType: BaseLogger
  fullName: Google.Apis.Logging.BaseLogger
  type: Class
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BaseLogger
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 25
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nAn abstract base logger, upon which real loggers may be built.\n"
  example: []
  syntax:
    content: 'public abstract class BaseLogger : ILogger'
    content.vb: >-
      Public MustInherit Class BaseLogger
          Implements ILogger
  inheritance:
  - System.Object
  derivedClasses:
  - Google.Apis.Logging.ConsoleLogger
  - Google.Apis.Logging.MemoryLogger
  implements:
  - Google.Apis.Logging.ILogger
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Google.Apis.Logging.BaseLogger.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Google.Apis.Logging.BaseLogger.#ctor(Google.Apis.Logging.LogLevel,Google.Apis.Util.IClock,System.Type)
  commentId: M:Google.Apis.Logging.BaseLogger.#ctor(Google.Apis.Logging.LogLevel,Google.Apis.Util.IClock,System.Type)
  id: '#ctor(Google.Apis.Logging.LogLevel,Google.Apis.Util.IClock,System.Type)'
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: BaseLogger(LogLevel, IClock, Type)
  nameWithType: BaseLogger.BaseLogger(LogLevel, IClock, Type)
  fullName: Google.Apis.Logging.BaseLogger.BaseLogger(Google.Apis.Logging.LogLevel, Google.Apis.Util.IClock, System.Type)
  type: Constructor
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 36
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nConstruct a <xref href=\"Google.Apis.Logging.BaseLogger\" data-throw-if-not-resolved=\"false\"></xref>. \n"
  example: []
  syntax:
    content: protected BaseLogger(LogLevel minimumLogLevel, IClock clock, Type forType)
    parameters:
    - id: minimumLogLevel
      type: Google.Apis.Logging.LogLevel
      description: Logging will be enabled at this level and all higher levels.
    - id: clock
      type: Google.Apis.Util.IClock
      description: The <xref href="Google.Apis.Util.IClock" data-throw-if-not-resolved="false"></xref> to use to timestamp log entries.
    - id: forType
      type: System.Type
      description: The type from which entries are being logged. May be <code>null</code>.
    content.vb: Protected Sub New(minimumLogLevel As LogLevel, clock As IClock, forType As Type)
  overload: Google.Apis.Logging.BaseLogger.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Google.Apis.Logging.BaseLogger.Clock
  commentId: P:Google.Apis.Logging.BaseLogger.Clock
  id: Clock
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: Clock
  nameWithType: BaseLogger.Clock
  fullName: Google.Apis.Logging.BaseLogger.Clock
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Clock
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 65
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nThe <xref href=\"Google.Apis.Util.IClock\" data-throw-if-not-resolved=\"false\"></xref> being used to timestamp log entries. \n"
  example: []
  syntax:
    content: public IClock Clock { get; }
    parameters: []
    return:
      type: Google.Apis.Util.IClock
    content.vb: Public ReadOnly Property Clock As IClock
  overload: Google.Apis.Logging.BaseLogger.Clock*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Logging.BaseLogger.LoggerForType
  commentId: P:Google.Apis.Logging.BaseLogger.LoggerForType
  id: LoggerForType
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: LoggerForType
  nameWithType: BaseLogger.LoggerForType
  fullName: Google.Apis.Logging.BaseLogger.LoggerForType
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LoggerForType
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 70
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nThe type from which entries are being logged. May be <code>null</code>.\n"
  example: []
  syntax:
    content: public Type LoggerForType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property LoggerForType As Type
  overload: Google.Apis.Logging.BaseLogger.LoggerForType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Logging.BaseLogger.MinimumLogLevel
  commentId: P:Google.Apis.Logging.BaseLogger.MinimumLogLevel
  id: MinimumLogLevel
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: MinimumLogLevel
  nameWithType: BaseLogger.MinimumLogLevel
  fullName: Google.Apis.Logging.BaseLogger.MinimumLogLevel
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MinimumLogLevel
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 75
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nLogging is enabled at this level and all higher levels.\n"
  example: []
  syntax:
    content: public LogLevel MinimumLogLevel { get; }
    parameters: []
    return:
      type: Google.Apis.Logging.LogLevel
    content.vb: Public ReadOnly Property MinimumLogLevel As LogLevel
  overload: Google.Apis.Logging.BaseLogger.MinimumLogLevel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Logging.BaseLogger.IsDebugEnabled
  commentId: P:Google.Apis.Logging.BaseLogger.IsDebugEnabled
  id: IsDebugEnabled
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: IsDebugEnabled
  nameWithType: BaseLogger.IsDebugEnabled
  fullName: Google.Apis.Logging.BaseLogger.IsDebugEnabled
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IsDebugEnabled
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 80
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nIs Debug level logging enabled?\n"
  example: []
  syntax:
    content: public bool IsDebugEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDebugEnabled As Boolean
  overload: Google.Apis.Logging.BaseLogger.IsDebugEnabled*
  implements:
  - Google.Apis.Logging.ILogger.IsDebugEnabled
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Logging.BaseLogger.IsInfoEnabled
  commentId: P:Google.Apis.Logging.BaseLogger.IsInfoEnabled
  id: IsInfoEnabled
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: IsInfoEnabled
  nameWithType: BaseLogger.IsInfoEnabled
  fullName: Google.Apis.Logging.BaseLogger.IsInfoEnabled
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IsInfoEnabled
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 85
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nIs info level logging enabled?\n"
  example: []
  syntax:
    content: public bool IsInfoEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInfoEnabled As Boolean
  overload: Google.Apis.Logging.BaseLogger.IsInfoEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Logging.BaseLogger.IsWarningEnabled
  commentId: P:Google.Apis.Logging.BaseLogger.IsWarningEnabled
  id: IsWarningEnabled
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: IsWarningEnabled
  nameWithType: BaseLogger.IsWarningEnabled
  fullName: Google.Apis.Logging.BaseLogger.IsWarningEnabled
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IsWarningEnabled
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 90
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nIs warning level logging enabled?\n"
  example: []
  syntax:
    content: public bool IsWarningEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsWarningEnabled As Boolean
  overload: Google.Apis.Logging.BaseLogger.IsWarningEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Logging.BaseLogger.IsErrorEnabled
  commentId: P:Google.Apis.Logging.BaseLogger.IsErrorEnabled
  id: IsErrorEnabled
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: IsErrorEnabled
  nameWithType: BaseLogger.IsErrorEnabled
  fullName: Google.Apis.Logging.BaseLogger.IsErrorEnabled
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IsErrorEnabled
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 95
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nIs error level logging enabled?\n"
  example: []
  syntax:
    content: public bool IsErrorEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsErrorEnabled As Boolean
  overload: Google.Apis.Logging.BaseLogger.IsErrorEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Logging.BaseLogger.BuildNewLogger(System.Type)
  commentId: M:Google.Apis.Logging.BaseLogger.BuildNewLogger(System.Type)
  id: BuildNewLogger(System.Type)
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: BuildNewLogger(Type)
  nameWithType: BaseLogger.BuildNewLogger(Type)
  fullName: Google.Apis.Logging.BaseLogger.BuildNewLogger(System.Type)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BuildNewLogger
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 102
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nBuild a new logger of the derived concrete type, for use to log from the specified type.\n"
  example: []
  syntax:
    content: protected abstract ILogger BuildNewLogger(Type type)
    parameters:
    - id: type
      type: System.Type
      description: The type from which entries are being logged.
    return:
      type: Google.Apis.Logging.ILogger
      description: A new <xref href="Google.Apis.Logging.ILogger" data-throw-if-not-resolved="false"></xref> instance, logging from the specified type.
    content.vb: Protected MustOverride Function BuildNewLogger(type As Type) As ILogger
  overload: Google.Apis.Logging.BaseLogger.BuildNewLogger*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Google.Apis.Logging.BaseLogger.ForType``1
  commentId: M:Google.Apis.Logging.BaseLogger.ForType``1
  id: ForType``1
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: ForType<T>()
  nameWithType: BaseLogger.ForType<T>()
  fullName: Google.Apis.Logging.BaseLogger.ForType<T>()
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ForType
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 105
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Returns a logger which will be associated with the specified type.
  example: []
  syntax:
    content: public ILogger ForType<T>()
    typeParameters:
    - id: T
    return:
      type: Google.Apis.Logging.ILogger
      description: A type-associated logger.
    content.vb: Public Function ForType(Of T) As ILogger
  overload: Google.Apis.Logging.BaseLogger.ForType*
  implements:
  - Google.Apis.Logging.ILogger.ForType``1
  nameWithType.vb: BaseLogger.ForType(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Logging.BaseLogger.ForType(Of T)()
  name.vb: ForType(Of T)()
- uid: Google.Apis.Logging.BaseLogger.ForType(System.Type)
  commentId: M:Google.Apis.Logging.BaseLogger.ForType(System.Type)
  id: ForType(System.Type)
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: ForType(Type)
  nameWithType: BaseLogger.ForType(Type)
  fullName: Google.Apis.Logging.BaseLogger.ForType(System.Type)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ForType
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 108
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Returns a logger which will be associated with the specified type.
  example: []
  syntax:
    content: public ILogger ForType(Type type)
    parameters:
    - id: type
      type: System.Type
      description: Type to which this logger belongs.
    return:
      type: Google.Apis.Logging.ILogger
      description: A type-associated logger.
    content.vb: Public Function ForType(type As Type) As ILogger
  overload: Google.Apis.Logging.BaseLogger.ForType*
  implements:
  - Google.Apis.Logging.ILogger.ForType(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Logging.BaseLogger.Log(Google.Apis.Logging.LogLevel,System.String)
  commentId: M:Google.Apis.Logging.BaseLogger.Log(Google.Apis.Logging.LogLevel,System.String)
  id: Log(Google.Apis.Logging.LogLevel,System.String)
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: Log(LogLevel, String)
  nameWithType: BaseLogger.Log(LogLevel, String)
  fullName: Google.Apis.Logging.BaseLogger.Log(Google.Apis.Logging.LogLevel, System.String)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Log
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 115
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: "\nPerform the actual logging.\n"
  example: []
  syntax:
    content: protected abstract void Log(LogLevel logLevel, string formattedMessage)
    parameters:
    - id: logLevel
      type: Google.Apis.Logging.LogLevel
      description: The <xref href="Google.Apis.Logging.LogLevel" data-throw-if-not-resolved="false"></xref> of this log entry.
    - id: formattedMessage
      type: System.String
      description: The fully formatted log message, ready for logging.
    content.vb: Protected MustOverride Sub Log(logLevel As LogLevel, formattedMessage As String)
  overload: Google.Apis.Logging.BaseLogger.Log*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Google.Apis.Logging.BaseLogger.Debug(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.BaseLogger.Debug(System.String,System.Object[])
  id: Debug(System.String,System.Object[])
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: Debug(String, Object[])
  nameWithType: BaseLogger.Debug(String, Object[])
  fullName: Google.Apis.Logging.BaseLogger.Debug(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Debug
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 126
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Logs a debug message.
  example: []
  syntax:
    content: public void Debug(string message, params object[] formatArgs)
    parameters:
    - id: message
      type: System.String
      description: The message to log.
    - id: formatArgs
      type: System.Object[]
      description: String.Format arguments (if applicable).
    content.vb: Public Sub Debug(message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.BaseLogger.Debug*
  implements:
  - Google.Apis.Logging.ILogger.Debug(System.String,System.Object[])
  nameWithType.vb: BaseLogger.Debug(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Logging.BaseLogger.Debug(System.String, System.Object())
  name.vb: Debug(String, Object())
- uid: Google.Apis.Logging.BaseLogger.Info(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.BaseLogger.Info(System.String,System.Object[])
  id: Info(System.String,System.Object[])
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: Info(String, Object[])
  nameWithType: BaseLogger.Info(String, Object[])
  fullName: Google.Apis.Logging.BaseLogger.Info(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Info
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 135
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Logs an info message.
  example: []
  syntax:
    content: public void Info(string message, params object[] formatArgs)
    parameters:
    - id: message
      type: System.String
      description: The message to log.
    - id: formatArgs
      type: System.Object[]
      description: String.Format arguments (if applicable).
    content.vb: Public Sub Info(message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.BaseLogger.Info*
  implements:
  - Google.Apis.Logging.ILogger.Info(System.String,System.Object[])
  nameWithType.vb: BaseLogger.Info(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Logging.BaseLogger.Info(System.String, System.Object())
  name.vb: Info(String, Object())
- uid: Google.Apis.Logging.BaseLogger.Warning(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.BaseLogger.Warning(System.String,System.Object[])
  id: Warning(System.String,System.Object[])
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: Warning(String, Object[])
  nameWithType: BaseLogger.Warning(String, Object[])
  fullName: Google.Apis.Logging.BaseLogger.Warning(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Warning
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 144
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Logs a warning.
  example: []
  syntax:
    content: public void Warning(string message, params object[] formatArgs)
    parameters:
    - id: message
      type: System.String
      description: The message to log.
    - id: formatArgs
      type: System.Object[]
      description: String.Format arguments (if applicable).
    content.vb: Public Sub Warning(message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.BaseLogger.Warning*
  implements:
  - Google.Apis.Logging.ILogger.Warning(System.String,System.Object[])
  nameWithType.vb: BaseLogger.Warning(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Logging.BaseLogger.Warning(System.String, System.Object())
  name.vb: Warning(String, Object())
- uid: Google.Apis.Logging.BaseLogger.Error(System.Exception,System.String,System.Object[])
  commentId: M:Google.Apis.Logging.BaseLogger.Error(System.Exception,System.String,System.Object[])
  id: Error(System.Exception,System.String,System.Object[])
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: Error(Exception, String, Object[])
  nameWithType: BaseLogger.Error(Exception, String, Object[])
  fullName: Google.Apis.Logging.BaseLogger.Error(System.Exception, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Error
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 153
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Logs an error message resulting from an exception.
  example: []
  syntax:
    content: public void Error(Exception exception, string message, params object[] formatArgs)
    parameters:
    - id: exception
      type: System.Exception
      description: ''
    - id: message
      type: System.String
      description: The message to log.
    - id: formatArgs
      type: System.Object[]
      description: String.Format arguments (if applicable).
    content.vb: Public Sub Error(exception As Exception, message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.BaseLogger.Error*
  implements:
  - Google.Apis.Logging.ILogger.Error(System.Exception,System.String,System.Object[])
  nameWithType.vb: BaseLogger.Error(Exception, String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Logging.BaseLogger.Error(System.Exception, System.String, System.Object())
  name.vb: Error(Exception, String, Object())
- uid: Google.Apis.Logging.BaseLogger.Error(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.BaseLogger.Error(System.String,System.Object[])
  id: Error(System.String,System.Object[])
  parent: Google.Apis.Logging.BaseLogger
  langs:
  - csharp
  - vb
  name: Error(String, Object[])
  nameWithType: BaseLogger.Error(String, Object[])
  fullName: Google.Apis.Logging.BaseLogger.Error(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Error
    path: Src/Support/GoogleApis.Core/Apis/Logging/BaseLogger.cs
    startLine: 162
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Logging
  summary: Logs an error message.
  example: []
  syntax:
    content: public void Error(string message, params object[] formatArgs)
    parameters:
    - id: message
      type: System.String
      description: The message to log.
    - id: formatArgs
      type: System.Object[]
      description: String.Format arguments (if applicable).
    content.vb: Public Sub Error(message As String, ParamArray formatArgs As Object())
  overload: Google.Apis.Logging.BaseLogger.Error*
  implements:
  - Google.Apis.Logging.ILogger.Error(System.String,System.Object[])
  nameWithType.vb: BaseLogger.Error(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Logging.BaseLogger.Error(System.String, System.Object())
  name.vb: Error(String, Object())
references:
- uid: Google.Apis.Logging
  commentId: N:Google.Apis.Logging
  isExternal: false
  name: Google.Apis.Logging
  nameWithType: Google.Apis.Logging
  fullName: Google.Apis.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Logging.ILogger
  commentId: T:Google.Apis.Logging.ILogger
  parent: Google.Apis.Logging
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Google.Apis.Logging.ILogger
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.BaseLogger.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<BaseLogger>(String)
  nameWithType: Utilities.ThrowIfNull<BaseLogger>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Logging.BaseLogger>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of BaseLogger)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Logging.BaseLogger)(System.String)
  name.vb: ThrowIfNull(Of BaseLogger)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<BaseLogger>
    nameWithType: Utilities.ThrowIfNull<BaseLogger>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Logging.BaseLogger>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of BaseLogger)
    nameWithType: Utilities.ThrowIfNull(Of BaseLogger)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Logging.BaseLogger)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  isExternal: false
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Logging.BaseLogger
  commentId: T:Google.Apis.Logging.BaseLogger
  parent: Google.Apis.Logging
  isExternal: false
  name: BaseLogger
  nameWithType: BaseLogger
  fullName: Google.Apis.Logging.BaseLogger
- uid: Google.Apis.Util.IClock
  commentId: T:Google.Apis.Util.IClock
  parent: Google.Apis.Util
  isExternal: false
  name: IClock
  nameWithType: IClock
  fullName: Google.Apis.Util.IClock
- uid: Google.Apis.Logging.BaseLogger.#ctor*
  commentId: Overload:Google.Apis.Logging.BaseLogger.#ctor
  isExternal: false
  name: BaseLogger
  nameWithType: BaseLogger.BaseLogger
  fullName: Google.Apis.Logging.BaseLogger.BaseLogger
- uid: Google.Apis.Logging.LogLevel
  commentId: T:Google.Apis.Logging.LogLevel
  parent: Google.Apis.Logging
  isExternal: false
  name: LogLevel
  nameWithType: LogLevel
  fullName: Google.Apis.Logging.LogLevel
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Google.Apis.Logging.BaseLogger.Clock*
  commentId: Overload:Google.Apis.Logging.BaseLogger.Clock
  isExternal: false
  name: Clock
  nameWithType: BaseLogger.Clock
  fullName: Google.Apis.Logging.BaseLogger.Clock
- uid: Google.Apis.Logging.BaseLogger.LoggerForType*
  commentId: Overload:Google.Apis.Logging.BaseLogger.LoggerForType
  isExternal: false
  name: LoggerForType
  nameWithType: BaseLogger.LoggerForType
  fullName: Google.Apis.Logging.BaseLogger.LoggerForType
- uid: Google.Apis.Logging.BaseLogger.MinimumLogLevel*
  commentId: Overload:Google.Apis.Logging.BaseLogger.MinimumLogLevel
  isExternal: false
  name: MinimumLogLevel
  nameWithType: BaseLogger.MinimumLogLevel
  fullName: Google.Apis.Logging.BaseLogger.MinimumLogLevel
- uid: Google.Apis.Logging.BaseLogger.IsDebugEnabled*
  commentId: Overload:Google.Apis.Logging.BaseLogger.IsDebugEnabled
  isExternal: false
  name: IsDebugEnabled
  nameWithType: BaseLogger.IsDebugEnabled
  fullName: Google.Apis.Logging.BaseLogger.IsDebugEnabled
- uid: Google.Apis.Logging.ILogger.IsDebugEnabled
  commentId: P:Google.Apis.Logging.ILogger.IsDebugEnabled
  parent: Google.Apis.Logging.ILogger
  isExternal: false
  name: IsDebugEnabled
  nameWithType: ILogger.IsDebugEnabled
  fullName: Google.Apis.Logging.ILogger.IsDebugEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Apis.Logging.BaseLogger.IsInfoEnabled*
  commentId: Overload:Google.Apis.Logging.BaseLogger.IsInfoEnabled
  isExternal: false
  name: IsInfoEnabled
  nameWithType: BaseLogger.IsInfoEnabled
  fullName: Google.Apis.Logging.BaseLogger.IsInfoEnabled
- uid: Google.Apis.Logging.BaseLogger.IsWarningEnabled*
  commentId: Overload:Google.Apis.Logging.BaseLogger.IsWarningEnabled
  isExternal: false
  name: IsWarningEnabled
  nameWithType: BaseLogger.IsWarningEnabled
  fullName: Google.Apis.Logging.BaseLogger.IsWarningEnabled
- uid: Google.Apis.Logging.BaseLogger.IsErrorEnabled*
  commentId: Overload:Google.Apis.Logging.BaseLogger.IsErrorEnabled
  isExternal: false
  name: IsErrorEnabled
  nameWithType: BaseLogger.IsErrorEnabled
  fullName: Google.Apis.Logging.BaseLogger.IsErrorEnabled
- uid: Google.Apis.Logging.BaseLogger.BuildNewLogger*
  commentId: Overload:Google.Apis.Logging.BaseLogger.BuildNewLogger
  isExternal: false
  name: BuildNewLogger
  nameWithType: BaseLogger.BuildNewLogger
  fullName: Google.Apis.Logging.BaseLogger.BuildNewLogger
- uid: Google.Apis.Logging.BaseLogger.ForType*
  commentId: Overload:Google.Apis.Logging.BaseLogger.ForType
  isExternal: false
  name: ForType
  nameWithType: BaseLogger.ForType
  fullName: Google.Apis.Logging.BaseLogger.ForType
- uid: Google.Apis.Logging.ILogger.ForType``1
  commentId: M:Google.Apis.Logging.ILogger.ForType``1
  parent: Google.Apis.Logging.ILogger
  isExternal: false
  name: ForType<T>()
  nameWithType: ILogger.ForType<T>()
  fullName: Google.Apis.Logging.ILogger.ForType<T>()
  nameWithType.vb: ILogger.ForType(Of T)()
  fullName.vb: Google.Apis.Logging.ILogger.ForType(Of T)()
  name.vb: ForType(Of T)()
  spec.csharp:
  - uid: Google.Apis.Logging.ILogger.ForType``1
    name: ForType<T>
    nameWithType: ILogger.ForType<T>
    fullName: Google.Apis.Logging.ILogger.ForType<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.ILogger.ForType``1
    name: ForType(Of T)
    nameWithType: ILogger.ForType(Of T)
    fullName: Google.Apis.Logging.ILogger.ForType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.ILogger.ForType(System.Type)
  commentId: M:Google.Apis.Logging.ILogger.ForType(System.Type)
  parent: Google.Apis.Logging.ILogger
  isExternal: true
  name: ForType(Type)
  nameWithType: ILogger.ForType(Type)
  fullName: Google.Apis.Logging.ILogger.ForType(System.Type)
  spec.csharp:
  - uid: Google.Apis.Logging.ILogger.ForType(System.Type)
    name: ForType
    nameWithType: ILogger.ForType
    fullName: Google.Apis.Logging.ILogger.ForType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.ILogger.ForType(System.Type)
    name: ForType
    nameWithType: ILogger.ForType
    fullName: Google.Apis.Logging.ILogger.ForType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.BaseLogger.Log*
  commentId: Overload:Google.Apis.Logging.BaseLogger.Log
  isExternal: false
  name: Log
  nameWithType: BaseLogger.Log
  fullName: Google.Apis.Logging.BaseLogger.Log
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Logging.BaseLogger.Debug*
  commentId: Overload:Google.Apis.Logging.BaseLogger.Debug
  isExternal: false
  name: Debug
  nameWithType: BaseLogger.Debug
  fullName: Google.Apis.Logging.BaseLogger.Debug
- uid: Google.Apis.Logging.ILogger.Debug(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Debug(System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  isExternal: true
  name: Debug(String, Object[])
  nameWithType: ILogger.Debug(String, Object[])
  fullName: Google.Apis.Logging.ILogger.Debug(System.String, System.Object[])
  nameWithType.vb: ILogger.Debug(String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Debug(System.String, System.Object())
  name.vb: Debug(String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.ILogger.Debug(System.String,System.Object[])
    name: Debug
    nameWithType: ILogger.Debug
    fullName: Google.Apis.Logging.ILogger.Debug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.ILogger.Debug(System.String,System.Object[])
    name: Debug
    nameWithType: ILogger.Debug
    fullName: Google.Apis.Logging.ILogger.Debug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Google.Apis.Logging.BaseLogger.Info*
  commentId: Overload:Google.Apis.Logging.BaseLogger.Info
  isExternal: false
  name: Info
  nameWithType: BaseLogger.Info
  fullName: Google.Apis.Logging.BaseLogger.Info
- uid: Google.Apis.Logging.ILogger.Info(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Info(System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  isExternal: true
  name: Info(String, Object[])
  nameWithType: ILogger.Info(String, Object[])
  fullName: Google.Apis.Logging.ILogger.Info(System.String, System.Object[])
  nameWithType.vb: ILogger.Info(String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Info(System.String, System.Object())
  name.vb: Info(String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.ILogger.Info(System.String,System.Object[])
    name: Info
    nameWithType: ILogger.Info
    fullName: Google.Apis.Logging.ILogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.ILogger.Info(System.String,System.Object[])
    name: Info
    nameWithType: ILogger.Info
    fullName: Google.Apis.Logging.ILogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.BaseLogger.Warning*
  commentId: Overload:Google.Apis.Logging.BaseLogger.Warning
  isExternal: false
  name: Warning
  nameWithType: BaseLogger.Warning
  fullName: Google.Apis.Logging.BaseLogger.Warning
- uid: Google.Apis.Logging.ILogger.Warning(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Warning(System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  isExternal: true
  name: Warning(String, Object[])
  nameWithType: ILogger.Warning(String, Object[])
  fullName: Google.Apis.Logging.ILogger.Warning(System.String, System.Object[])
  nameWithType.vb: ILogger.Warning(String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Warning(System.String, System.Object())
  name.vb: Warning(String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.ILogger.Warning(System.String,System.Object[])
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Google.Apis.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.ILogger.Warning(System.String,System.Object[])
    name: Warning
    nameWithType: ILogger.Warning
    fullName: Google.Apis.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Logging.BaseLogger.Error*
  commentId: Overload:Google.Apis.Logging.BaseLogger.Error
  isExternal: false
  name: Error
  nameWithType: BaseLogger.Error
  fullName: Google.Apis.Logging.BaseLogger.Error
- uid: Google.Apis.Logging.ILogger.Error(System.Exception,System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Error(System.Exception,System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  isExternal: true
  name: Error(Exception, String, Object[])
  nameWithType: ILogger.Error(Exception, String, Object[])
  fullName: Google.Apis.Logging.ILogger.Error(System.Exception, System.String, System.Object[])
  nameWithType.vb: ILogger.Error(Exception, String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Error(System.Exception, System.String, System.Object())
  name.vb: Error(Exception, String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.ILogger.Error(System.Exception,System.String,System.Object[])
    name: Error
    nameWithType: ILogger.Error
    fullName: Google.Apis.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.ILogger.Error(System.Exception,System.String,System.Object[])
    name: Error
    nameWithType: ILogger.Error
    fullName: Google.Apis.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Google.Apis.Logging.ILogger.Error(System.String,System.Object[])
  commentId: M:Google.Apis.Logging.ILogger.Error(System.String,System.Object[])
  parent: Google.Apis.Logging.ILogger
  isExternal: true
  name: Error(String, Object[])
  nameWithType: ILogger.Error(String, Object[])
  fullName: Google.Apis.Logging.ILogger.Error(System.String, System.Object[])
  nameWithType.vb: ILogger.Error(String, Object())
  fullName.vb: Google.Apis.Logging.ILogger.Error(System.String, System.Object())
  name.vb: Error(String, Object())
  spec.csharp:
  - uid: Google.Apis.Logging.ILogger.Error(System.String,System.Object[])
    name: Error
    nameWithType: ILogger.Error
    fullName: Google.Apis.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Logging.ILogger.Error(System.String,System.Object[])
    name: Error
    nameWithType: ILogger.Error
    fullName: Google.Apis.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
