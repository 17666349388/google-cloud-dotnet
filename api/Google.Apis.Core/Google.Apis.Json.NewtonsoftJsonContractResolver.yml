### YamlMime:ManagedReference
items:
- uid: Google.Apis.Json.NewtonsoftJsonContractResolver
  commentId: T:Google.Apis.Json.NewtonsoftJsonContractResolver
  id: NewtonsoftJsonContractResolver
  parent: Google.Apis.Json
  children:
  - Google.Apis.Json.NewtonsoftJsonContractResolver.CreateContract(System.Type)
  langs:
  - csharp
  - vb
  name: NewtonsoftJsonContractResolver
  nameWithType: NewtonsoftJsonContractResolver
  fullName: Google.Apis.Json.NewtonsoftJsonContractResolver
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: NewtonsoftJsonContractResolver
    path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
    startLine: 84
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Json
  summary: "\nA JSON contract resolver to apply <xref href=\"Google.Apis.Json.RFC3339DateTimeConverter\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Google.Apis.Json.NewtonsoftJsonContractResolver.ExplicitNullConverter\" data-throw-if-not-resolved=\"false\"></xref> as necessary.\n"
  remarks: "\nUsing a contract resolver is recommended in the Json.NET performance tips: https://www.newtonsoft.com/json/help/html/Performance.htm#JsonConverters\n"
  example: []
  syntax:
    content: 'public class NewtonsoftJsonContractResolver : DefaultContractResolver'
    content.vb: >-
      Public Class NewtonsoftJsonContractResolver
          Inherits DefaultContractResolver
  inheritance:
  - System.Object
  extensionMethods:
  - Google.Apis.Json.NewtonsoftJsonContractResolver.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Json.NewtonsoftJsonContractResolver.CreateContract(System.Type)
  commentId: M:Google.Apis.Json.NewtonsoftJsonContractResolver.CreateContract(System.Type)
  id: CreateContract(System.Type)
  parent: Google.Apis.Json.NewtonsoftJsonContractResolver
  langs:
  - csharp
  - vb
  name: CreateContract(Type)
  nameWithType: NewtonsoftJsonContractResolver.CreateContract(Type)
  fullName: Google.Apis.Json.NewtonsoftJsonContractResolver.CreateContract(System.Type)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CreateContract
    path: Src/Support/Google.Apis.Core/Json/NewtonsoftJsonSerializer.cs
    startLine: 90
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Json
  example: []
  syntax:
    content: protected override JsonContract CreateContract(Type objectType)
    parameters:
    - id: objectType
      type: System.Type
    return:
      type: JsonContract
    content.vb: Protected Overrides Function CreateContract(objectType As Type) As JsonContract
  overload: Google.Apis.Json.NewtonsoftJsonContractResolver.CreateContract*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Google.Apis.Json.RFC3339DateTimeConverter
  commentId: T:Google.Apis.Json.RFC3339DateTimeConverter
  isExternal: false
  name: RFC3339DateTimeConverter
  nameWithType: RFC3339DateTimeConverter
  fullName: Google.Apis.Json.RFC3339DateTimeConverter
- uid: Google.Apis.Json.NewtonsoftJsonContractResolver.ExplicitNullConverter
  commentId: F:Google.Apis.Json.NewtonsoftJsonContractResolver.ExplicitNullConverter
- uid: Google.Apis.Json
  commentId: N:Google.Apis.Json
  isExternal: false
  name: Google.Apis.Json
  nameWithType: Google.Apis.Json
  fullName: Google.Apis.Json
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Json.NewtonsoftJsonContractResolver.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<NewtonsoftJsonContractResolver>(String)
  nameWithType: Utilities.ThrowIfNull<NewtonsoftJsonContractResolver>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Json.NewtonsoftJsonContractResolver>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of NewtonsoftJsonContractResolver)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Json.NewtonsoftJsonContractResolver)(System.String)
  name.vb: ThrowIfNull(Of NewtonsoftJsonContractResolver)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<NewtonsoftJsonContractResolver>
    nameWithType: Utilities.ThrowIfNull<NewtonsoftJsonContractResolver>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Json.NewtonsoftJsonContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of NewtonsoftJsonContractResolver)
    nameWithType: Utilities.ThrowIfNull(Of NewtonsoftJsonContractResolver)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Json.NewtonsoftJsonContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  isExternal: false
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Json.NewtonsoftJsonContractResolver.CreateContract*
  commentId: Overload:Google.Apis.Json.NewtonsoftJsonContractResolver.CreateContract
  isExternal: false
  name: CreateContract
  nameWithType: NewtonsoftJsonContractResolver.CreateContract
  fullName: Google.Apis.Json.NewtonsoftJsonContractResolver.CreateContract
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: JsonContract
  commentId: '!:JsonContract'
  isExternal: true
  name: JsonContract
  nameWithType: JsonContract
  fullName: JsonContract
