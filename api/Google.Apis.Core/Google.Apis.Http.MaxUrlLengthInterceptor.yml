### YamlMime:ManagedReference
items:
- uid: Google.Apis.Http.MaxUrlLengthInterceptor
  commentId: T:Google.Apis.Http.MaxUrlLengthInterceptor
  id: MaxUrlLengthInterceptor
  parent: Google.Apis.Http
  children:
  - Google.Apis.Http.MaxUrlLengthInterceptor.#ctor(System.UInt32)
  - Google.Apis.Http.MaxUrlLengthInterceptor.InterceptAsync(HttpRequestMessage,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: MaxUrlLengthInterceptor
  nameWithType: MaxUrlLengthInterceptor
  fullName: Google.Apis.Http.MaxUrlLengthInterceptor
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/MaxUrlLengthInterceptor.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MaxUrlLengthInterceptor
    path: Src/Support/Google.Apis.Core/Http/MaxUrlLengthInterceptor.cs
    startLine: 36
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nIntercepts HTTP GET requests with a URLs longer than a specified maximum number of characters.\nThe interceptor will change such requests as follows:\n<ul><li></li><li></li><li></li><li></li></ul>\n"
  example: []
  syntax:
    content: 'public class MaxUrlLengthInterceptor : IHttpExecuteInterceptor'
    content.vb: >-
      Public Class MaxUrlLengthInterceptor
          Implements IHttpExecuteInterceptor
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Http.IHttpExecuteInterceptor
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Google.Apis.Http.MaxUrlLengthInterceptor.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Http.MaxUrlLengthInterceptor.#ctor(System.UInt32)
  commentId: M:Google.Apis.Http.MaxUrlLengthInterceptor.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: Google.Apis.Http.MaxUrlLengthInterceptor
  langs:
  - csharp
  - vb
  name: MaxUrlLengthInterceptor(UInt32)
  nameWithType: MaxUrlLengthInterceptor.MaxUrlLengthInterceptor(UInt32)
  fullName: Google.Apis.Http.MaxUrlLengthInterceptor.MaxUrlLengthInterceptor(System.UInt32)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/MaxUrlLengthInterceptor.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis.Core/Http/MaxUrlLengthInterceptor.cs
    startLine: 42
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: Constructs a new Max URL length interceptor with the given max length.
  example: []
  syntax:
    content: public MaxUrlLengthInterceptor(uint maxUrlLength)
    parameters:
    - id: maxUrlLength
      type: System.UInt32
    content.vb: Public Sub New(maxUrlLength As UInteger)
  overload: Google.Apis.Http.MaxUrlLengthInterceptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Http.MaxUrlLengthInterceptor.InterceptAsync(HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Http.MaxUrlLengthInterceptor.InterceptAsync(HttpRequestMessage,System.Threading.CancellationToken)
  id: InterceptAsync(HttpRequestMessage,System.Threading.CancellationToken)
  parent: Google.Apis.Http.MaxUrlLengthInterceptor
  langs:
  - csharp
  - vb
  name: InterceptAsync(HttpRequestMessage, CancellationToken)
  nameWithType: MaxUrlLengthInterceptor.InterceptAsync(HttpRequestMessage, CancellationToken)
  fullName: Google.Apis.Http.MaxUrlLengthInterceptor.InterceptAsync(HttpRequestMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/MaxUrlLengthInterceptor.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: InterceptAsync
    path: Src/Support/Google.Apis.Core/Http/MaxUrlLengthInterceptor.cs
    startLine: 48
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\n<summary>Invoked before the request is being sent.</summary>\n"
  example: []
  syntax:
    content: public Task InterceptAsync(HttpRequestMessage request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: HttpRequestMessage
      description: The HTTP request message.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function InterceptAsync(request As HttpRequestMessage, cancellationToken As CancellationToken) As Task
  overload: Google.Apis.Http.MaxUrlLengthInterceptor.InterceptAsync*
  implements:
  - Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(HttpRequestMessage,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Apis.Http
  commentId: N:Google.Apis.Http
  isExternal: false
  name: Google.Apis.Http
  nameWithType: Google.Apis.Http
  fullName: Google.Apis.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Http.IHttpExecuteInterceptor
  commentId: T:Google.Apis.Http.IHttpExecuteInterceptor
  parent: Google.Apis.Http
  isExternal: false
  name: IHttpExecuteInterceptor
  nameWithType: IHttpExecuteInterceptor
  fullName: Google.Apis.Http.IHttpExecuteInterceptor
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Http.MaxUrlLengthInterceptor.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<MaxUrlLengthInterceptor>(String)
  nameWithType: Utilities.ThrowIfNull<MaxUrlLengthInterceptor>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Http.MaxUrlLengthInterceptor>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of MaxUrlLengthInterceptor)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Http.MaxUrlLengthInterceptor)(System.String)
  name.vb: ThrowIfNull(Of MaxUrlLengthInterceptor)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<MaxUrlLengthInterceptor>
    nameWithType: Utilities.ThrowIfNull<MaxUrlLengthInterceptor>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Http.MaxUrlLengthInterceptor>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of MaxUrlLengthInterceptor)
    nameWithType: Utilities.ThrowIfNull(Of MaxUrlLengthInterceptor)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Http.MaxUrlLengthInterceptor)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  isExternal: false
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Http.MaxUrlLengthInterceptor.#ctor*
  commentId: Overload:Google.Apis.Http.MaxUrlLengthInterceptor.#ctor
  isExternal: false
  name: MaxUrlLengthInterceptor
  nameWithType: MaxUrlLengthInterceptor.MaxUrlLengthInterceptor
  fullName: Google.Apis.Http.MaxUrlLengthInterceptor.MaxUrlLengthInterceptor
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Google.Apis.Http.MaxUrlLengthInterceptor.InterceptAsync*
  commentId: Overload:Google.Apis.Http.MaxUrlLengthInterceptor.InterceptAsync
  isExternal: false
  name: InterceptAsync
  nameWithType: MaxUrlLengthInterceptor.InterceptAsync
  fullName: Google.Apis.Http.MaxUrlLengthInterceptor.InterceptAsync
- uid: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(HttpRequestMessage,System.Threading.CancellationToken)
  parent: Google.Apis.Http.IHttpExecuteInterceptor
  isExternal: true
  name: InterceptAsync(HttpRequestMessage, CancellationToken)
  nameWithType: IHttpExecuteInterceptor.InterceptAsync(HttpRequestMessage, CancellationToken)
  fullName: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(HttpRequestMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(HttpRequestMessage,System.Threading.CancellationToken)
    name: InterceptAsync
    nameWithType: IHttpExecuteInterceptor.InterceptAsync
    fullName: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync(HttpRequestMessage,System.Threading.CancellationToken)
    name: InterceptAsync
    nameWithType: IHttpExecuteInterceptor.InterceptAsync
    fullName: Google.Apis.Http.IHttpExecuteInterceptor.InterceptAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: HttpRequestMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: HttpRequestMessage
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: HttpRequestMessage
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
