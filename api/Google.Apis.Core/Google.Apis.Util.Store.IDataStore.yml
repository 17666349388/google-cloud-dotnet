### YamlMime:ManagedReference
items:
- uid: Google.Apis.Util.Store.IDataStore
  commentId: T:Google.Apis.Util.Store.IDataStore
  id: IDataStore
  parent: Google.Apis.Util.Store
  children:
  - Google.Apis.Util.Store.IDataStore.ClearAsync
  - Google.Apis.Util.Store.IDataStore.DeleteAsync``1(System.String)
  - Google.Apis.Util.Store.IDataStore.GetAsync``1(System.String)
  - Google.Apis.Util.Store.IDataStore.StoreAsync``1(System.String,``0)
  langs:
  - csharp
  - vb
  name: IDataStore
  nameWithType: IDataStore
  fullName: Google.Apis.Util.Store.IDataStore
  type: Interface
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/Store/IDataStore.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IDataStore
    path: Src/Support/Google.Apis.Core/Util/Store/IDataStore.cs
    startLine: 27
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util.Store
  summary: "\nStores and manages data objects, where the key is a string and the value is an object.\n<p>\n<code>null</code> keys are not allowed.\n</p>\n"
  example: []
  syntax:
    content: public interface IDataStore
    content.vb: Public Interface IDataStore
  extensionMethods:
  - Google.Apis.Util.Store.IDataStore.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Google.Apis.Util.Store.IDataStore.StoreAsync``1(System.String,``0)
  commentId: M:Google.Apis.Util.Store.IDataStore.StoreAsync``1(System.String,``0)
  id: StoreAsync``1(System.String,``0)
  parent: Google.Apis.Util.Store.IDataStore
  langs:
  - csharp
  - vb
  name: StoreAsync<T>(String, T)
  nameWithType: IDataStore.StoreAsync<T>(String, T)
  fullName: Google.Apis.Util.Store.IDataStore.StoreAsync<T>(System.String, T)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/Store/IDataStore.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: StoreAsync
    path: Src/Support/Google.Apis.Core/Util/Store/IDataStore.cs
    startLine: 33
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util.Store
  summary: Asynchronously stores the given value for the given key (replacing any existing value).
  example: []
  syntax:
    content: Task StoreAsync<T>(string key, T value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: '{T}'
      description: The value to store.
    typeParameters:
    - id: T
      description: The type to store in the data store.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function StoreAsync(Of T)(key As String, value As T) As Task
  overload: Google.Apis.Util.Store.IDataStore.StoreAsync*
  nameWithType.vb: IDataStore.StoreAsync(Of T)(String, T)
  fullName.vb: Google.Apis.Util.Store.IDataStore.StoreAsync(Of T)(System.String, T)
  name.vb: StoreAsync(Of T)(String, T)
- uid: Google.Apis.Util.Store.IDataStore.DeleteAsync``1(System.String)
  commentId: M:Google.Apis.Util.Store.IDataStore.DeleteAsync``1(System.String)
  id: DeleteAsync``1(System.String)
  parent: Google.Apis.Util.Store.IDataStore
  langs:
  - csharp
  - vb
  name: DeleteAsync<T>(String)
  nameWithType: IDataStore.DeleteAsync<T>(String)
  fullName: Google.Apis.Util.Store.IDataStore.DeleteAsync<T>(System.String)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/Store/IDataStore.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DeleteAsync
    path: Src/Support/Google.Apis.Core/Util/Store/IDataStore.cs
    startLine: 41
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util.Store
  summary: "\nAsynchronously deletes the given key. The type is provided here as well because the &quot;real&quot; saved key should\ncontain type information as well, so the data store will be able to store the same key for different types.\n"
  example: []
  syntax:
    content: Task DeleteAsync<T>(string key)
    parameters:
    - id: key
      type: System.String
      description: The key to delete.
    typeParameters:
    - id: T
      description: The type to delete from the data store.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteAsync(Of T)(key As String) As Task
  overload: Google.Apis.Util.Store.IDataStore.DeleteAsync*
  nameWithType.vb: IDataStore.DeleteAsync(Of T)(String)
  fullName.vb: Google.Apis.Util.Store.IDataStore.DeleteAsync(Of T)(System.String)
  name.vb: DeleteAsync(Of T)(String)
- uid: Google.Apis.Util.Store.IDataStore.GetAsync``1(System.String)
  commentId: M:Google.Apis.Util.Store.IDataStore.GetAsync``1(System.String)
  id: GetAsync``1(System.String)
  parent: Google.Apis.Util.Store.IDataStore
  langs:
  - csharp
  - vb
  name: GetAsync<T>(String)
  nameWithType: IDataStore.GetAsync<T>(String)
  fullName: Google.Apis.Util.Store.IDataStore.GetAsync<T>(System.String)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/Store/IDataStore.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GetAsync
    path: Src/Support/Google.Apis.Core/Util/Store/IDataStore.cs
    startLine: 47
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util.Store
  summary: Asynchronously returns the stored value for the given key or <code>null</code> if not found.
  example: []
  syntax:
    content: Task<T> GetAsync<T>(string key)
    parameters:
    - id: key
      type: System.String
      description: The key to retrieve its value.
    typeParameters:
    - id: T
      description: The type to retrieve from the data store.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The stored object.
    content.vb: Function GetAsync(Of T)(key As String) As Task(Of T)
  overload: Google.Apis.Util.Store.IDataStore.GetAsync*
  nameWithType.vb: IDataStore.GetAsync(Of T)(String)
  fullName.vb: Google.Apis.Util.Store.IDataStore.GetAsync(Of T)(System.String)
  name.vb: GetAsync(Of T)(String)
- uid: Google.Apis.Util.Store.IDataStore.ClearAsync
  commentId: M:Google.Apis.Util.Store.IDataStore.ClearAsync
  id: ClearAsync
  parent: Google.Apis.Util.Store.IDataStore
  langs:
  - csharp
  - vb
  name: ClearAsync()
  nameWithType: IDataStore.ClearAsync()
  fullName: Google.Apis.Util.Store.IDataStore.ClearAsync()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Util/Store/IDataStore.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ClearAsync
    path: Src/Support/Google.Apis.Core/Util/Store/IDataStore.cs
    startLine: 50
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Util.Store
  summary: Asynchronously clears all values in the data store.
  example: []
  syntax:
    content: Task ClearAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ClearAsync As Task
  overload: Google.Apis.Util.Store.IDataStore.ClearAsync*
references:
- uid: Google.Apis.Util.Store
  commentId: N:Google.Apis.Util.Store
  isExternal: false
  name: Google.Apis.Util.Store
  nameWithType: Google.Apis.Util.Store
  fullName: Google.Apis.Util.Store
- uid: Google.Apis.Util.Store.IDataStore.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<IDataStore>(String)
  nameWithType: Utilities.ThrowIfNull<IDataStore>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Util.Store.IDataStore>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of IDataStore)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Util.Store.IDataStore)(System.String)
  name.vb: ThrowIfNull(Of IDataStore)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<IDataStore>
    nameWithType: Utilities.ThrowIfNull<IDataStore>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Util.Store.IDataStore>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of IDataStore)
    nameWithType: Utilities.ThrowIfNull(Of IDataStore)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Util.Store.IDataStore)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  isExternal: false
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Util.Store.IDataStore.StoreAsync*
  commentId: Overload:Google.Apis.Util.Store.IDataStore.StoreAsync
  isExternal: false
  name: StoreAsync
  nameWithType: IDataStore.StoreAsync
  fullName: Google.Apis.Util.Store.IDataStore.StoreAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Apis.Util.Store.IDataStore.DeleteAsync*
  commentId: Overload:Google.Apis.Util.Store.IDataStore.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: IDataStore.DeleteAsync
  fullName: Google.Apis.Util.Store.IDataStore.DeleteAsync
- uid: Google.Apis.Util.Store.IDataStore.GetAsync*
  commentId: Overload:Google.Apis.Util.Store.IDataStore.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: IDataStore.GetAsync
  fullName: Google.Apis.Util.Store.IDataStore.GetAsync
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Store.IDataStore.ClearAsync*
  commentId: Overload:Google.Apis.Util.Store.IDataStore.ClearAsync
  isExternal: false
  name: ClearAsync
  nameWithType: IDataStore.ClearAsync
  fullName: Google.Apis.Util.Store.IDataStore.ClearAsync
