### YamlMime:ManagedReference
items:
- uid: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  commentId: T:Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  id: ConfigurableMessageHandler.LogEventType
  parent: Google.Apis.Http
  children:
  - Google.Apis.Http.ConfigurableMessageHandler.LogEventType.None
  - Google.Apis.Http.ConfigurableMessageHandler.LogEventType.RequestBody
  - Google.Apis.Http.ConfigurableMessageHandler.LogEventType.RequestHeaders
  - Google.Apis.Http.ConfigurableMessageHandler.LogEventType.RequestUri
  - Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseAbnormal
  - Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseBody
  - Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseHeaders
  - Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseStatus
  langs:
  - csharp
  - vb
  name: ConfigurableMessageHandler.LogEventType
  nameWithType: ConfigurableMessageHandler.LogEventType
  fullName: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  type: Enum
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: LogEventType
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 250
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nSpecifies the type(s) of request/response events to log.\n"
  example: []
  syntax:
    content: >-
      [Flags]

      public enum LogEventType
    content.vb: >-
      <Flags>

      Public Enum LogEventType
  extensionMethods:
  - Google.Apis.Http.ConfigurableMessageHandler.LogEventType.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.None
  commentId: F:Google.Apis.Http.ConfigurableMessageHandler.LogEventType.None
  id: None
  parent: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: ConfigurableMessageHandler.LogEventType.None
  fullName: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.None
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: None
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 256
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nLog no request/response information.\n"
  example: []
  syntax:
    content: None = 0
    return:
      type: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.RequestUri
  commentId: F:Google.Apis.Http.ConfigurableMessageHandler.LogEventType.RequestUri
  id: RequestUri
  parent: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  langs:
  - csharp
  - vb
  name: RequestUri
  nameWithType: ConfigurableMessageHandler.LogEventType.RequestUri
  fullName: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.RequestUri
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RequestUri
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 261
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nLog the request URI.\n"
  example: []
  syntax:
    content: RequestUri = 1
    return:
      type: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.RequestHeaders
  commentId: F:Google.Apis.Http.ConfigurableMessageHandler.LogEventType.RequestHeaders
  id: RequestHeaders
  parent: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  langs:
  - csharp
  - vb
  name: RequestHeaders
  nameWithType: ConfigurableMessageHandler.LogEventType.RequestHeaders
  fullName: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.RequestHeaders
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RequestHeaders
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 266
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nLog the request headers.\n"
  example: []
  syntax:
    content: RequestHeaders = 2
    return:
      type: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.RequestBody
  commentId: F:Google.Apis.Http.ConfigurableMessageHandler.LogEventType.RequestBody
  id: RequestBody
  parent: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  langs:
  - csharp
  - vb
  name: RequestBody
  nameWithType: ConfigurableMessageHandler.LogEventType.RequestBody
  fullName: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.RequestBody
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RequestBody
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 272
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nLog the request body. The body is assumed to be ASCII, and non-printable charaters are replaced by &apos;.&apos;.\nWarning: This causes the body content to be buffered in memory, so use with care for large requests.\n"
  example: []
  syntax:
    content: RequestBody = 4
    return:
      type: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseStatus
  commentId: F:Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseStatus
  id: ResponseStatus
  parent: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  langs:
  - csharp
  - vb
  name: ResponseStatus
  nameWithType: ConfigurableMessageHandler.LogEventType.ResponseStatus
  fullName: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseStatus
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ResponseStatus
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 277
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nLog the response status.\n"
  example: []
  syntax:
    content: ResponseStatus = 8
    return:
      type: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseHeaders
  commentId: F:Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseHeaders
  id: ResponseHeaders
  parent: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  langs:
  - csharp
  - vb
  name: ResponseHeaders
  nameWithType: ConfigurableMessageHandler.LogEventType.ResponseHeaders
  fullName: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseHeaders
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ResponseHeaders
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 282
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nLog the response headers.\n"
  example: []
  syntax:
    content: ResponseHeaders = 16
    return:
      type: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseBody
  commentId: F:Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseBody
  id: ResponseBody
  parent: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  langs:
  - csharp
  - vb
  name: ResponseBody
  nameWithType: ConfigurableMessageHandler.LogEventType.ResponseBody
  fullName: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseBody
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ResponseBody
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 288
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nLog the response body. The body is assumed to be ASCII, and non-printable characters are replaced by &apos;.&apos;.\nWarning: This causes the body content to be buffered in memory, so use with care for large responses.\n"
  example: []
  syntax:
    content: ResponseBody = 32
    return:
      type: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseAbnormal
  commentId: F:Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseAbnormal
  id: ResponseAbnormal
  parent: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  langs:
  - csharp
  - vb
  name: ResponseAbnormal
  nameWithType: ConfigurableMessageHandler.LogEventType.ResponseAbnormal
  fullName: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.ResponseAbnormal
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ResponseAbnormal
    path: Src/Support/Google.Apis.Core/Http/ConfigurableMessageHandler.cs
    startLine: 293
  assemblies:
  - Google.Apis.Core
  namespace: Google.Apis.Http
  summary: "\nLog abnormal response messages.\n"
  example: []
  syntax:
    content: ResponseAbnormal = 64
    return:
      type: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Google.Apis.Http
  commentId: N:Google.Apis.Http
  isExternal: false
  name: Google.Apis.Http
  nameWithType: Google.Apis.Http
  fullName: Google.Apis.Http
- uid: Google.Apis.Http.ConfigurableMessageHandler.LogEventType.Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  parent: Google.Apis.Util.Utilities
  definition: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  name: ThrowIfNull<ConfigurableMessageHandler.LogEventType>(String)
  nameWithType: Utilities.ThrowIfNull<ConfigurableMessageHandler.LogEventType>(String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Http.ConfigurableMessageHandler.LogEventType>(System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of ConfigurableMessageHandler.LogEventType)(String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Http.ConfigurableMessageHandler.LogEventType)(System.String)
  name.vb: ThrowIfNull(Of ConfigurableMessageHandler.LogEventType)(String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull<ConfigurableMessageHandler.LogEventType>
    nameWithType: Utilities.ThrowIfNull<ConfigurableMessageHandler.LogEventType>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<Google.Apis.Http.ConfigurableMessageHandler.LogEventType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(System.String)
    name: ThrowIfNull(Of ConfigurableMessageHandler.LogEventType)
    nameWithType: Utilities.ThrowIfNull(Of ConfigurableMessageHandler.LogEventType)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of Google.Apis.Http.ConfigurableMessageHandler.LogEventType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  commentId: M:Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
  isExternal: true
  name: ThrowIfNull<T>(T, String)
  nameWithType: Utilities.ThrowIfNull<T>(T, String)
  fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>(T, System.String)
  nameWithType.vb: Utilities.ThrowIfNull(Of T)(T, String)
  fullName.vb: Google.Apis.Util.Utilities.ThrowIfNull(Of T)(T, System.String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull<T>
    nameWithType: Utilities.ThrowIfNull<T>
    fullName: Google.Apis.Util.Utilities.ThrowIfNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Util.Utilities.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull(Of T)
    nameWithType: Utilities.ThrowIfNull(Of T)
    fullName: Google.Apis.Util.Utilities.ThrowIfNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Util.Utilities
  commentId: T:Google.Apis.Util.Utilities
  parent: Google.Apis.Util
  isExternal: false
  name: Utilities
  nameWithType: Utilities
  fullName: Google.Apis.Util.Utilities
- uid: Google.Apis.Util
  commentId: N:Google.Apis.Util
  isExternal: false
  name: Google.Apis.Util
  nameWithType: Google.Apis.Util
  fullName: Google.Apis.Util
- uid: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  commentId: T:Google.Apis.Http.ConfigurableMessageHandler.LogEventType
  parent: Google.Apis.Http
  isExternal: false
  name: ConfigurableMessageHandler.LogEventType
  nameWithType: ConfigurableMessageHandler.LogEventType
  fullName: Google.Apis.Http.ConfigurableMessageHandler.LogEventType
