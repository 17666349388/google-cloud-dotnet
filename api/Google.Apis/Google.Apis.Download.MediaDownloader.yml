### YamlMime:ManagedReference
items:
- uid: Google.Apis.Download.MediaDownloader
  commentId: T:Google.Apis.Download.MediaDownloader
  id: MediaDownloader
  parent: Google.Apis.Download
  children:
  - Google.Apis.Download.MediaDownloader.#ctor(Google.Apis.Services.IClientService)
  - Google.Apis.Download.MediaDownloader.ChunkSize
  - Google.Apis.Download.MediaDownloader.Download(System.String,System.IO.Stream)
  - Google.Apis.Download.MediaDownloader.DownloadAsync(System.String,System.IO.Stream)
  - Google.Apis.Download.MediaDownloader.DownloadAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  - Google.Apis.Download.MediaDownloader.MaximumChunkSize
  - Google.Apis.Download.MediaDownloader.ModifyRequest
  - Google.Apis.Download.MediaDownloader.OnDataReceived(System.Byte[],System.Int32)
  - Google.Apis.Download.MediaDownloader.OnDownloadCompleted
  - Google.Apis.Download.MediaDownloader.OnResponseReceived(System.Net.Http.HttpResponseMessage)
  - Google.Apis.Download.MediaDownloader.ProgressChanged
  - Google.Apis.Download.MediaDownloader.Range
  langs:
  - csharp
  - vb
  name: MediaDownloader
  nameWithType: MediaDownloader
  fullName: Google.Apis.Download.MediaDownloader
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis/Download/MediaDownloader.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MediaDownloader
    path: Src/Support/Google.Apis/Download/MediaDownloader.cs
    startLine: 33
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Download
  summary: "\nA media downloader implementation which handles media downloads.\n"
  example: []
  syntax:
    content: 'public class MediaDownloader : IMediaDownloader'
    content.vb: >-
      Public Class MediaDownloader
          Implements IMediaDownloader
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Download.IMediaDownloader
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Apis.Download.MediaDownloader.MaximumChunkSize
  commentId: F:Google.Apis.Download.MediaDownloader.MaximumChunkSize
  id: MaximumChunkSize
  parent: Google.Apis.Download.MediaDownloader
  langs:
  - csharp
  - vb
  name: MaximumChunkSize
  nameWithType: MediaDownloader.MaximumChunkSize
  fullName: Google.Apis.Download.MediaDownloader.MaximumChunkSize
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis/Download/MediaDownloader.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MaximumChunkSize
    path: Src/Support/Google.Apis/Download/MediaDownloader.cs
    startLine: 48
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Download
  summary: Maximum chunk size. Default value is 10*MB.
  example: []
  syntax:
    content: public const int MaximumChunkSize = 10485760
    return:
      type: System.Int32
    content.vb: Public Const MaximumChunkSize As Integer = 10485760
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Apis.Download.MediaDownloader.ChunkSize
  commentId: P:Google.Apis.Download.MediaDownloader.ChunkSize
  id: ChunkSize
  parent: Google.Apis.Download.MediaDownloader
  langs:
  - csharp
  - vb
  name: ChunkSize
  nameWithType: MediaDownloader.ChunkSize
  fullName: Google.Apis.Download.MediaDownloader.ChunkSize
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Download/MediaDownloader.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ChunkSize
    path: Src/Support/Google.Apis/Download/MediaDownloader.cs
    startLine: 57
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Download
  summary: "\nGets or sets the amount of data that will be downloaded before notifying the caller of\nthe download's progress.\nMust not exceed <xref href=\"Google.Apis.Download.MediaDownloader.MaximumChunkSize\" data-throw-if-not-resolved=\"false\"></xref>.\nDefault value is <xref href=\"Google.Apis.Download.MediaDownloader.MaximumChunkSize\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public int ChunkSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ChunkSize As Integer
  overload: Google.Apis.Download.MediaDownloader.ChunkSize*
  implements:
  - Google.Apis.Download.IMediaDownloader.ChunkSize
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Download.MediaDownloader.Range
  commentId: P:Google.Apis.Download.MediaDownloader.Range
  id: Range
  parent: Google.Apis.Download.MediaDownloader
  langs:
  - csharp
  - vb
  name: Range
  nameWithType: MediaDownloader.Range
  fullName: Google.Apis.Download.MediaDownloader.Range
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Download/MediaDownloader.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Range
    path: Src/Support/Google.Apis/Download/MediaDownloader.cs
    startLine: 74
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Download
  summary: "\nThe range header for the request, if any. This can be used to download specific parts\nof the requested media.\n"
  example: []
  syntax:
    content: public RangeHeaderValue Range { get; set; }
    parameters: []
    return:
      type: System.Net.Http.Headers.RangeHeaderValue
    content.vb: Public Property Range As RangeHeaderValue
  overload: Google.Apis.Download.MediaDownloader.Range*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Download.MediaDownloader.#ctor(Google.Apis.Services.IClientService)
  commentId: M:Google.Apis.Download.MediaDownloader.#ctor(Google.Apis.Services.IClientService)
  id: '#ctor(Google.Apis.Services.IClientService)'
  parent: Google.Apis.Download.MediaDownloader
  langs:
  - csharp
  - vb
  name: MediaDownloader(IClientService)
  nameWithType: MediaDownloader.MediaDownloader(IClientService)
  fullName: Google.Apis.Download.MediaDownloader.MediaDownloader(Google.Apis.Services.IClientService)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis/Download/MediaDownloader.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis/Download/MediaDownloader.cs
    startLine: 124
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Download
  summary: Constructs a new downloader with the given client service.
  example: []
  syntax:
    content: public MediaDownloader(IClientService service)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
    content.vb: Public Sub New(service As IClientService)
  overload: Google.Apis.Download.MediaDownloader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Download.MediaDownloader.ModifyRequest
  commentId: P:Google.Apis.Download.MediaDownloader.ModifyRequest
  id: ModifyRequest
  parent: Google.Apis.Download.MediaDownloader
  langs:
  - csharp
  - vb
  name: ModifyRequest
  nameWithType: MediaDownloader.ModifyRequest
  fullName: Google.Apis.Download.MediaDownloader.ModifyRequest
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Download/MediaDownloader.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ModifyRequest
    path: Src/Support/Google.Apis/Download/MediaDownloader.cs
    startLine: 132
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Download
  summary: "\nGets or sets the callback for modifying requests made when downloading.\n"
  example: []
  syntax:
    content: public Action<HttpRequestMessage> ModifyRequest { get; set; }
    parameters: []
    return:
      type: System.Action{System.Net.Http.HttpRequestMessage}
    content.vb: Public Property ModifyRequest As Action(Of HttpRequestMessage)
  overload: Google.Apis.Download.MediaDownloader.ModifyRequest*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Apis.Download.MediaDownloader.ProgressChanged
  commentId: E:Google.Apis.Download.MediaDownloader.ProgressChanged
  id: ProgressChanged
  parent: Google.Apis.Download.MediaDownloader
  langs:
  - csharp
  - vb
  name: ProgressChanged
  nameWithType: MediaDownloader.ProgressChanged
  fullName: Google.Apis.Download.MediaDownloader.ProgressChanged
  type: Event
  source:
    remote:
      path: Src/Support/Google.Apis/Download/MediaDownloader.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ProgressChanged
    path: Src/Support/Google.Apis/Download/MediaDownloader.cs
    startLine: 137
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Download
  summary: An event which notifies when the download status has been changed.
  example: []
  syntax:
    content: public event Action<IDownloadProgress> ProgressChanged
    return:
      type: System.Action{Google.Apis.Download.IDownloadProgress}
    content.vb: Public Event ProgressChanged As Action(Of IDownloadProgress)
  implements:
  - Google.Apis.Download.IMediaDownloader.ProgressChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Download.MediaDownloader.Download(System.String,System.IO.Stream)
  commentId: M:Google.Apis.Download.MediaDownloader.Download(System.String,System.IO.Stream)
  id: Download(System.String,System.IO.Stream)
  parent: Google.Apis.Download.MediaDownloader
  langs:
  - csharp
  - vb
  name: Download(String, Stream)
  nameWithType: MediaDownloader.Download(String, Stream)
  fullName: Google.Apis.Download.MediaDownloader.Download(System.String, System.IO.Stream)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Download/MediaDownloader.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Download
    path: Src/Support/Google.Apis/Download/MediaDownloader.cs
    startLine: 142
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Download
  summary: Downloads synchronously the given URL to the given stream.
  example: []
  syntax:
    content: public IDownloadProgress Download(string url, Stream stream)
    parameters:
    - id: url
      type: System.String
    - id: stream
      type: System.IO.Stream
    return:
      type: Google.Apis.Download.IDownloadProgress
    content.vb: Public Function Download(url As String, stream As Stream) As IDownloadProgress
  overload: Google.Apis.Download.MediaDownloader.Download*
  implements:
  - Google.Apis.Download.IMediaDownloader.Download(System.String,System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Download.MediaDownloader.DownloadAsync(System.String,System.IO.Stream)
  commentId: M:Google.Apis.Download.MediaDownloader.DownloadAsync(System.String,System.IO.Stream)
  id: DownloadAsync(System.String,System.IO.Stream)
  parent: Google.Apis.Download.MediaDownloader
  langs:
  - csharp
  - vb
  name: DownloadAsync(String, Stream)
  nameWithType: MediaDownloader.DownloadAsync(String, Stream)
  fullName: Google.Apis.Download.MediaDownloader.DownloadAsync(System.String, System.IO.Stream)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Download/MediaDownloader.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DownloadAsync
    path: Src/Support/Google.Apis/Download/MediaDownloader.cs
    startLine: 148
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Download
  summary: Downloads asynchronously the given URL to the given stream.
  example: []
  syntax:
    content: public Task<IDownloadProgress> DownloadAsync(string url, Stream stream)
    parameters:
    - id: url
      type: System.String
    - id: stream
      type: System.IO.Stream
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Download.IDownloadProgress}
    content.vb: Public Function DownloadAsync(url As String, stream As Stream) As Task(Of IDownloadProgress)
  overload: Google.Apis.Download.MediaDownloader.DownloadAsync*
  implements:
  - Google.Apis.Download.IMediaDownloader.DownloadAsync(System.String,System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Download.MediaDownloader.DownloadAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Download.MediaDownloader.DownloadAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  id: DownloadAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  parent: Google.Apis.Download.MediaDownloader
  langs:
  - csharp
  - vb
  name: DownloadAsync(String, Stream, CancellationToken)
  nameWithType: MediaDownloader.DownloadAsync(String, Stream, CancellationToken)
  fullName: Google.Apis.Download.MediaDownloader.DownloadAsync(System.String, System.IO.Stream, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Download/MediaDownloader.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DownloadAsync
    path: Src/Support/Google.Apis/Download/MediaDownloader.cs
    startLine: 154
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Download
  summary: "\nDownloads asynchronously the given URL to the given stream. This download method supports a cancellation \ntoken to cancel a request before it was completed.\n"
  remarks: "\nIn case the download fails <xref href=\"Google.Apis.Download.IDownloadProgress.Exception\" data-throw-if-not-resolved=\"false\"></xref> will contain the exception that\ncause the failure. The only exception which will be thrown is \n<xref href=\"System.Threading.Tasks.TaskCanceledException\" data-throw-if-not-resolved=\"false\"></xref> which indicates that the task was canceled.\n"
  example: []
  syntax:
    content: public Task<IDownloadProgress> DownloadAsync(string url, Stream stream, CancellationToken cancellationToken)
    parameters:
    - id: url
      type: System.String
    - id: stream
      type: System.IO.Stream
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Download.IDownloadProgress}
    content.vb: Public Function DownloadAsync(url As String, stream As Stream, cancellationToken As CancellationToken) As Task(Of IDownloadProgress)
  overload: Google.Apis.Download.MediaDownloader.DownloadAsync*
  implements:
  - Google.Apis.Download.IMediaDownloader.DownloadAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Download.MediaDownloader.OnResponseReceived(System.Net.Http.HttpResponseMessage)
  commentId: M:Google.Apis.Download.MediaDownloader.OnResponseReceived(System.Net.Http.HttpResponseMessage)
  id: OnResponseReceived(System.Net.Http.HttpResponseMessage)
  parent: Google.Apis.Download.MediaDownloader
  langs:
  - csharp
  - vb
  name: OnResponseReceived(HttpResponseMessage)
  nameWithType: MediaDownloader.OnResponseReceived(HttpResponseMessage)
  fullName: Google.Apis.Download.MediaDownloader.OnResponseReceived(System.Net.Http.HttpResponseMessage)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Download/MediaDownloader.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: OnResponseReceived
    path: Src/Support/Google.Apis/Download/MediaDownloader.cs
    startLine: 341
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Download
  summary: "\nCalled when a successful HTTP response is received, allowing subclasses to examine headers.\n"
  remarks: "\nFor unsuccessful responses, an appropriate exception is thrown immediately, without this method\nbeing called.\n"
  example: []
  syntax:
    content: protected virtual void OnResponseReceived(HttpResponseMessage response)
    parameters:
    - id: response
      type: System.Net.Http.HttpResponseMessage
      description: HTTP response received.
    content.vb: Protected Overridable Sub OnResponseReceived(response As HttpResponseMessage)
  overload: Google.Apis.Download.MediaDownloader.OnResponseReceived*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Google.Apis.Download.MediaDownloader.OnDataReceived(System.Byte[],System.Int32)
  commentId: M:Google.Apis.Download.MediaDownloader.OnDataReceived(System.Byte[],System.Int32)
  id: OnDataReceived(System.Byte[],System.Int32)
  parent: Google.Apis.Download.MediaDownloader
  langs:
  - csharp
  - vb
  name: OnDataReceived(Byte[], Int32)
  nameWithType: MediaDownloader.OnDataReceived(Byte[], Int32)
  fullName: Google.Apis.Download.MediaDownloader.OnDataReceived(System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Download/MediaDownloader.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: OnDataReceived
    path: Src/Support/Google.Apis/Download/MediaDownloader.cs
    startLine: 352
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Download
  summary: "\nCalled when an HTTP response is received, allowing subclasses to examine data before it's\nwritten to the client stream.\n"
  example: []
  syntax:
    content: protected virtual void OnDataReceived(byte[] data, int length)
    parameters:
    - id: data
      type: System.Byte[]
      description: Byte array containing the data downloaded.
    - id: length
      type: System.Int32
      description: Length of data downloaded in this chunk, in bytes.
    content.vb: Protected Overridable Sub OnDataReceived(data As Byte(), length As Integer)
  overload: Google.Apis.Download.MediaDownloader.OnDataReceived*
  nameWithType.vb: MediaDownloader.OnDataReceived(Byte(), Int32)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Google.Apis.Download.MediaDownloader.OnDataReceived(System.Byte(), System.Int32)
  name.vb: OnDataReceived(Byte(), Int32)
- uid: Google.Apis.Download.MediaDownloader.OnDownloadCompleted
  commentId: M:Google.Apis.Download.MediaDownloader.OnDownloadCompleted
  id: OnDownloadCompleted
  parent: Google.Apis.Download.MediaDownloader
  langs:
  - csharp
  - vb
  name: OnDownloadCompleted()
  nameWithType: MediaDownloader.OnDownloadCompleted()
  fullName: Google.Apis.Download.MediaDownloader.OnDownloadCompleted()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Download/MediaDownloader.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: OnDownloadCompleted
    path: Src/Support/Google.Apis/Download/MediaDownloader.cs
    startLine: 361
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Download
  summary: "\nCalled when a download has completed, allowing subclasses to perform any final validation\nor transformation.\n"
  example: []
  syntax:
    content: protected virtual void OnDownloadCompleted()
    content.vb: Protected Overridable Sub OnDownloadCompleted
  overload: Google.Apis.Download.MediaDownloader.OnDownloadCompleted*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Google.Apis.Download
  commentId: N:Google.Apis.Download
  isExternal: false
  name: Google.Apis.Download
  nameWithType: Google.Apis.Download
  fullName: Google.Apis.Download
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Download.IMediaDownloader
  commentId: T:Google.Apis.Download.IMediaDownloader
  parent: Google.Apis.Download
  isExternal: false
  name: IMediaDownloader
  nameWithType: IMediaDownloader
  fullName: Google.Apis.Download.IMediaDownloader
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Apis.Download.MediaDownloader.MaximumChunkSize
  commentId: F:Google.Apis.Download.MediaDownloader.MaximumChunkSize
- uid: Google.Apis.Download.MediaDownloader.ChunkSize*
  commentId: Overload:Google.Apis.Download.MediaDownloader.ChunkSize
  isExternal: false
  name: ChunkSize
  nameWithType: MediaDownloader.ChunkSize
  fullName: Google.Apis.Download.MediaDownloader.ChunkSize
- uid: Google.Apis.Download.IMediaDownloader.ChunkSize
  commentId: P:Google.Apis.Download.IMediaDownloader.ChunkSize
  parent: Google.Apis.Download.IMediaDownloader
  isExternal: false
  name: ChunkSize
  nameWithType: IMediaDownloader.ChunkSize
  fullName: Google.Apis.Download.IMediaDownloader.ChunkSize
- uid: Google.Apis.Download.MediaDownloader.Range*
  commentId: Overload:Google.Apis.Download.MediaDownloader.Range
  isExternal: false
  name: Range
  nameWithType: MediaDownloader.Range
  fullName: Google.Apis.Download.MediaDownloader.Range
- uid: System.Net.Http.Headers.RangeHeaderValue
  commentId: T:System.Net.Http.Headers.RangeHeaderValue
  parent: System.Net.Http.Headers
  isExternal: true
  name: RangeHeaderValue
  nameWithType: RangeHeaderValue
  fullName: System.Net.Http.Headers.RangeHeaderValue
- uid: System.Net.Http.Headers
  commentId: N:System.Net.Http.Headers
  isExternal: false
  name: System.Net.Http.Headers
  nameWithType: System.Net.Http.Headers
  fullName: System.Net.Http.Headers
- uid: Google.Apis.Download.MediaDownloader.#ctor*
  commentId: Overload:Google.Apis.Download.MediaDownloader.#ctor
  isExternal: false
  name: MediaDownloader
  nameWithType: MediaDownloader.MediaDownloader
  fullName: Google.Apis.Download.MediaDownloader.MediaDownloader
- uid: Google.Apis.Services.IClientService
  commentId: T:Google.Apis.Services.IClientService
  parent: Google.Apis.Services
  isExternal: false
  name: IClientService
  nameWithType: IClientService
  fullName: Google.Apis.Services.IClientService
- uid: Google.Apis.Services
  commentId: N:Google.Apis.Services
  isExternal: false
  name: Google.Apis.Services
  nameWithType: Google.Apis.Services
  fullName: Google.Apis.Services
- uid: Google.Apis.Download.MediaDownloader.ModifyRequest*
  commentId: Overload:Google.Apis.Download.MediaDownloader.ModifyRequest
  isExternal: false
  name: ModifyRequest
  nameWithType: MediaDownloader.ModifyRequest
  fullName: Google.Apis.Download.MediaDownloader.ModifyRequest
- uid: System.Action{System.Net.Http.HttpRequestMessage}
  commentId: T:System.Action{System.Net.Http.HttpRequestMessage}
  parent: System
  definition: System.Action`1
  name: Action<HttpRequestMessage>
  nameWithType: Action<HttpRequestMessage>
  fullName: System.Action<System.Net.Http.HttpRequestMessage>
  nameWithType.vb: Action(Of HttpRequestMessage)
  fullName.vb: System.Action(Of System.Net.Http.HttpRequestMessage)
  name.vb: Action(Of HttpRequestMessage)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Download.IMediaDownloader.ProgressChanged
  commentId: E:Google.Apis.Download.IMediaDownloader.ProgressChanged
  parent: Google.Apis.Download.IMediaDownloader
  isExternal: false
  name: ProgressChanged
  nameWithType: IMediaDownloader.ProgressChanged
  fullName: Google.Apis.Download.IMediaDownloader.ProgressChanged
- uid: System.Action{Google.Apis.Download.IDownloadProgress}
  commentId: T:System.Action{Google.Apis.Download.IDownloadProgress}
  parent: System
  definition: System.Action`1
  name: Action<IDownloadProgress>
  nameWithType: Action<IDownloadProgress>
  fullName: System.Action<Google.Apis.Download.IDownloadProgress>
  nameWithType.vb: Action(Of IDownloadProgress)
  fullName.vb: System.Action(Of Google.Apis.Download.IDownloadProgress)
  name.vb: Action(Of IDownloadProgress)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Download.IDownloadProgress
    name: IDownloadProgress
    nameWithType: IDownloadProgress
    fullName: Google.Apis.Download.IDownloadProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Download.IDownloadProgress
    name: IDownloadProgress
    nameWithType: IDownloadProgress
    fullName: Google.Apis.Download.IDownloadProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Download.MediaDownloader.Download*
  commentId: Overload:Google.Apis.Download.MediaDownloader.Download
  isExternal: false
  name: Download
  nameWithType: MediaDownloader.Download
  fullName: Google.Apis.Download.MediaDownloader.Download
- uid: Google.Apis.Download.IMediaDownloader.Download(System.String,System.IO.Stream)
  commentId: M:Google.Apis.Download.IMediaDownloader.Download(System.String,System.IO.Stream)
  parent: Google.Apis.Download.IMediaDownloader
  isExternal: true
  name: Download(String, Stream)
  nameWithType: IMediaDownloader.Download(String, Stream)
  fullName: Google.Apis.Download.IMediaDownloader.Download(System.String, System.IO.Stream)
  spec.csharp:
  - uid: Google.Apis.Download.IMediaDownloader.Download(System.String,System.IO.Stream)
    name: Download
    nameWithType: IMediaDownloader.Download
    fullName: Google.Apis.Download.IMediaDownloader.Download
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Download.IMediaDownloader.Download(System.String,System.IO.Stream)
    name: Download
    nameWithType: IMediaDownloader.Download
    fullName: Google.Apis.Download.IMediaDownloader.Download
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Google.Apis.Download.IDownloadProgress
  commentId: T:Google.Apis.Download.IDownloadProgress
  parent: Google.Apis.Download
  isExternal: false
  name: IDownloadProgress
  nameWithType: IDownloadProgress
  fullName: Google.Apis.Download.IDownloadProgress
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Google.Apis.Download.MediaDownloader.DownloadAsync*
  commentId: Overload:Google.Apis.Download.MediaDownloader.DownloadAsync
  isExternal: false
  name: DownloadAsync
  nameWithType: MediaDownloader.DownloadAsync
  fullName: Google.Apis.Download.MediaDownloader.DownloadAsync
- uid: Google.Apis.Download.IMediaDownloader.DownloadAsync(System.String,System.IO.Stream)
  commentId: M:Google.Apis.Download.IMediaDownloader.DownloadAsync(System.String,System.IO.Stream)
  parent: Google.Apis.Download.IMediaDownloader
  isExternal: true
  name: DownloadAsync(String, Stream)
  nameWithType: IMediaDownloader.DownloadAsync(String, Stream)
  fullName: Google.Apis.Download.IMediaDownloader.DownloadAsync(System.String, System.IO.Stream)
  spec.csharp:
  - uid: Google.Apis.Download.IMediaDownloader.DownloadAsync(System.String,System.IO.Stream)
    name: DownloadAsync
    nameWithType: IMediaDownloader.DownloadAsync
    fullName: Google.Apis.Download.IMediaDownloader.DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Download.IMediaDownloader.DownloadAsync(System.String,System.IO.Stream)
    name: DownloadAsync
    nameWithType: IMediaDownloader.DownloadAsync
    fullName: Google.Apis.Download.IMediaDownloader.DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Google.Apis.Download.IDownloadProgress}
  commentId: T:System.Threading.Tasks.Task{Google.Apis.Download.IDownloadProgress}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IDownloadProgress>
  nameWithType: Task<IDownloadProgress>
  fullName: System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress>
  nameWithType.vb: Task(Of IDownloadProgress)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Apis.Download.IDownloadProgress)
  name.vb: Task(Of IDownloadProgress)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Download.IDownloadProgress
    name: IDownloadProgress
    nameWithType: IDownloadProgress
    fullName: Google.Apis.Download.IDownloadProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Download.IDownloadProgress
    name: IDownloadProgress
    nameWithType: IDownloadProgress
    fullName: Google.Apis.Download.IDownloadProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Apis.Download.IMediaDownloader.DownloadAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Download.IMediaDownloader.DownloadAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  parent: Google.Apis.Download.IMediaDownloader
  isExternal: true
  name: DownloadAsync(String, Stream, CancellationToken)
  nameWithType: IMediaDownloader.DownloadAsync(String, Stream, CancellationToken)
  fullName: Google.Apis.Download.IMediaDownloader.DownloadAsync(System.String, System.IO.Stream, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Download.IMediaDownloader.DownloadAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
    name: DownloadAsync
    nameWithType: IMediaDownloader.DownloadAsync
    fullName: Google.Apis.Download.IMediaDownloader.DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Download.IMediaDownloader.DownloadAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
    name: DownloadAsync
    nameWithType: IMediaDownloader.DownloadAsync
    fullName: Google.Apis.Download.IMediaDownloader.DownloadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Google.Apis.Download.MediaDownloader.OnResponseReceived*
  commentId: Overload:Google.Apis.Download.MediaDownloader.OnResponseReceived
  isExternal: false
  name: OnResponseReceived
  nameWithType: MediaDownloader.OnResponseReceived
  fullName: Google.Apis.Download.MediaDownloader.OnResponseReceived
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Google.Apis.Download.MediaDownloader.OnDataReceived*
  commentId: Overload:Google.Apis.Download.MediaDownloader.OnDataReceived
  isExternal: false
  name: OnDataReceived
  nameWithType: MediaDownloader.OnDataReceived
  fullName: Google.Apis.Download.MediaDownloader.OnDataReceived
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Google.Apis.Download.MediaDownloader.OnDownloadCompleted*
  commentId: Overload:Google.Apis.Download.MediaDownloader.OnDownloadCompleted
  isExternal: false
  name: OnDownloadCompleted
  nameWithType: MediaDownloader.OnDownloadCompleted
  fullName: Google.Apis.Download.MediaDownloader.OnDownloadCompleted
