### YamlMime:ManagedReference
items:
- uid: Google.Apis.Requests.IClientServiceRequest
  commentId: T:Google.Apis.Requests.IClientServiceRequest
  id: IClientServiceRequest
  parent: Google.Apis.Requests
  children:
  - Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable{System.Boolean})
  - Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
  - Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  - Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  - Google.Apis.Requests.IClientServiceRequest.HttpMethod
  - Google.Apis.Requests.IClientServiceRequest.MethodName
  - Google.Apis.Requests.IClientServiceRequest.RequestParameters
  - Google.Apis.Requests.IClientServiceRequest.RestPath
  - Google.Apis.Requests.IClientServiceRequest.Service
  langs:
  - csharp
  - vb
  name: IClientServiceRequest
  nameWithType: IClientServiceRequest
  fullName: Google.Apis.Requests.IClientServiceRequest
  type: Interface
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IClientServiceRequest
    path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
    startLine: 29
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: A client service request which supports both sync and async execution to get the stream.
  example: []
  syntax:
    content: public interface IClientServiceRequest
    content.vb: Public Interface IClientServiceRequest
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Google.Apis.Requests.IClientServiceRequest.MethodName
  commentId: P:Google.Apis.Requests.IClientServiceRequest.MethodName
  id: MethodName
  parent: Google.Apis.Requests.IClientServiceRequest
  langs:
  - csharp
  - vb
  name: MethodName
  nameWithType: IClientServiceRequest.MethodName
  fullName: Google.Apis.Requests.IClientServiceRequest.MethodName
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MethodName
    path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
    startLine: 32
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Gets the name of the method to which this request belongs.
  example: []
  syntax:
    content: string MethodName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property MethodName As String
  overload: Google.Apis.Requests.IClientServiceRequest.MethodName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Requests.IClientServiceRequest.RestPath
  commentId: P:Google.Apis.Requests.IClientServiceRequest.RestPath
  id: RestPath
  parent: Google.Apis.Requests.IClientServiceRequest
  langs:
  - csharp
  - vb
  name: RestPath
  nameWithType: IClientServiceRequest.RestPath
  fullName: Google.Apis.Requests.IClientServiceRequest.RestPath
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RestPath
    path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
    startLine: 35
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Gets the rest path of this request.
  example: []
  syntax:
    content: string RestPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property RestPath As String
  overload: Google.Apis.Requests.IClientServiceRequest.RestPath*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Requests.IClientServiceRequest.HttpMethod
  commentId: P:Google.Apis.Requests.IClientServiceRequest.HttpMethod
  id: HttpMethod
  parent: Google.Apis.Requests.IClientServiceRequest
  langs:
  - csharp
  - vb
  name: HttpMethod
  nameWithType: IClientServiceRequest.HttpMethod
  fullName: Google.Apis.Requests.IClientServiceRequest.HttpMethod
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: HttpMethod
    path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
    startLine: 38
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Gets the HTTP method of this request.
  example: []
  syntax:
    content: string HttpMethod { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property HttpMethod As String
  overload: Google.Apis.Requests.IClientServiceRequest.HttpMethod*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Requests.IClientServiceRequest.RequestParameters
  commentId: P:Google.Apis.Requests.IClientServiceRequest.RequestParameters
  id: RequestParameters
  parent: Google.Apis.Requests.IClientServiceRequest
  langs:
  - csharp
  - vb
  name: RequestParameters
  nameWithType: IClientServiceRequest.RequestParameters
  fullName: Google.Apis.Requests.IClientServiceRequest.RequestParameters
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RequestParameters
    path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
    startLine: 41
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Gets the parameters information for this specific request.
  example: []
  syntax:
    content: IDictionary<string, IParameter> RequestParameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Google.Apis.Discovery.IParameter}
    content.vb: ReadOnly Property RequestParameters As IDictionary(Of String, IParameter)
  overload: Google.Apis.Requests.IClientServiceRequest.RequestParameters*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Requests.IClientServiceRequest.Service
  commentId: P:Google.Apis.Requests.IClientServiceRequest.Service
  id: Service
  parent: Google.Apis.Requests.IClientServiceRequest
  langs:
  - csharp
  - vb
  name: Service
  nameWithType: IClientServiceRequest.Service
  fullName: Google.Apis.Requests.IClientServiceRequest.Service
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Service
    path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
    startLine: 44
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Gets the service which is related to this request.
  example: []
  syntax:
    content: IClientService Service { get; }
    parameters: []
    return:
      type: Google.Apis.Services.IClientService
    content.vb: ReadOnly Property Service As IClientService
  overload: Google.Apis.Requests.IClientServiceRequest.Service*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable{System.Boolean})
  commentId: M:Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable{System.Boolean})
  id: CreateRequest(System.Nullable{System.Boolean})
  parent: Google.Apis.Requests.IClientServiceRequest
  langs:
  - csharp
  - vb
  name: CreateRequest(Nullable<Boolean>)
  nameWithType: IClientServiceRequest.CreateRequest(Nullable<Boolean>)
  fullName: Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CreateRequest
    path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
    startLine: 50
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Creates a HTTP request message with all path and query parameters, ETag, etc.
  example: []
  syntax:
    content: HttpRequestMessage CreateRequest(bool ? overrideGZipEnabled = null)
    parameters:
    - id: overrideGZipEnabled
      type: System.Nullable{System.Boolean}
      description: "\nIf <code>null</code> use the service default GZip behavior. Otherwise indicates if GZip is enabled or disabled.\n"
    return:
      type: System.Net.Http.HttpRequestMessage
    content.vb: Function CreateRequest(overrideGZipEnabled As Boolean? = Nothing) As HttpRequestMessage
  overload: Google.Apis.Requests.IClientServiceRequest.CreateRequest*
  nameWithType.vb: IClientServiceRequest.CreateRequest(Nullable(Of Boolean))
  fullName.vb: Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable(Of System.Boolean))
  name.vb: CreateRequest(Nullable(Of Boolean))
- uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  commentId: M:Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  id: ExecuteAsStreamAsync
  parent: Google.Apis.Requests.IClientServiceRequest
  langs:
  - csharp
  - vb
  name: ExecuteAsStreamAsync()
  nameWithType: IClientServiceRequest.ExecuteAsStreamAsync()
  fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync()
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteAsStreamAsync
    path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
    startLine: 53
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Executes the request asynchronously and returns the result stream.
  example: []
  syntax:
    content: Task<Stream> ExecuteAsStreamAsync()
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
    content.vb: Function ExecuteAsStreamAsync As Task(Of Stream)
  overload: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync*
- uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  id: ExecuteAsStreamAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Requests.IClientServiceRequest
  langs:
  - csharp
  - vb
  name: ExecuteAsStreamAsync(CancellationToken)
  nameWithType: IClientServiceRequest.ExecuteAsStreamAsync(CancellationToken)
  fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteAsStreamAsync
    path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
    startLine: 57
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Executes the request asynchronously and returns the result stream.
  example: []
  syntax:
    content: Task<Stream> ExecuteAsStreamAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
    content.vb: Function ExecuteAsStreamAsync(cancellationToken As CancellationToken) As Task(Of Stream)
  overload: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync*
- uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
  commentId: M:Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
  id: ExecuteAsStream
  parent: Google.Apis.Requests.IClientServiceRequest
  langs:
  - csharp
  - vb
  name: ExecuteAsStream()
  nameWithType: IClientServiceRequest.ExecuteAsStream()
  fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream()
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteAsStream
    path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
    startLine: 60
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Executes the request and returns the result stream.
  example: []
  syntax:
    content: Stream ExecuteAsStream()
    return:
      type: System.IO.Stream
    content.vb: Function ExecuteAsStream As Stream
  overload: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream*
references:
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: false
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Requests.IClientServiceRequest.MethodName*
  commentId: Overload:Google.Apis.Requests.IClientServiceRequest.MethodName
  isExternal: false
  name: MethodName
  nameWithType: IClientServiceRequest.MethodName
  fullName: Google.Apis.Requests.IClientServiceRequest.MethodName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests.IClientServiceRequest.RestPath*
  commentId: Overload:Google.Apis.Requests.IClientServiceRequest.RestPath
  isExternal: false
  name: RestPath
  nameWithType: IClientServiceRequest.RestPath
  fullName: Google.Apis.Requests.IClientServiceRequest.RestPath
- uid: Google.Apis.Requests.IClientServiceRequest.HttpMethod*
  commentId: Overload:Google.Apis.Requests.IClientServiceRequest.HttpMethod
  isExternal: false
  name: HttpMethod
  nameWithType: IClientServiceRequest.HttpMethod
  fullName: Google.Apis.Requests.IClientServiceRequest.HttpMethod
- uid: Google.Apis.Requests.IClientServiceRequest.RequestParameters*
  commentId: Overload:Google.Apis.Requests.IClientServiceRequest.RequestParameters
  isExternal: false
  name: RequestParameters
  nameWithType: IClientServiceRequest.RequestParameters
  fullName: Google.Apis.Requests.IClientServiceRequest.RequestParameters
- uid: System.Collections.Generic.IDictionary{System.String,Google.Apis.Discovery.IParameter}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Google.Apis.Discovery.IParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IParameter>
  nameWithType: IDictionary<String, IParameter>
  fullName: System.Collections.Generic.IDictionary<System.String, Google.Apis.Discovery.IParameter>
  nameWithType.vb: IDictionary(Of String, IParameter)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Google.Apis.Discovery.IParameter)
  name.vb: IDictionary(Of String, IParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Discovery.IParameter
    name: IParameter
    nameWithType: IParameter
    fullName: Google.Apis.Discovery.IParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Discovery.IParameter
    name: IParameter
    nameWithType: IParameter
    fullName: Google.Apis.Discovery.IParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Requests.IClientServiceRequest.Service*
  commentId: Overload:Google.Apis.Requests.IClientServiceRequest.Service
  isExternal: false
  name: Service
  nameWithType: IClientServiceRequest.Service
  fullName: Google.Apis.Requests.IClientServiceRequest.Service
- uid: Google.Apis.Services.IClientService
  commentId: T:Google.Apis.Services.IClientService
  parent: Google.Apis.Services
  isExternal: false
  name: IClientService
  nameWithType: IClientService
  fullName: Google.Apis.Services.IClientService
- uid: Google.Apis.Services
  commentId: N:Google.Apis.Services
  isExternal: false
  name: Google.Apis.Services
  nameWithType: Google.Apis.Services
  fullName: Google.Apis.Services
- uid: Google.Apis.Requests.IClientServiceRequest.CreateRequest*
  commentId: Overload:Google.Apis.Requests.IClientServiceRequest.CreateRequest
  isExternal: false
  name: CreateRequest
  nameWithType: IClientServiceRequest.CreateRequest
  fullName: Google.Apis.Requests.IClientServiceRequest.CreateRequest
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync*
  commentId: Overload:Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  isExternal: false
  name: ExecuteAsStreamAsync
  nameWithType: IClientServiceRequest.ExecuteAsStreamAsync
  fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Task(Of Stream)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream*
  commentId: Overload:Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
  isExternal: false
  name: ExecuteAsStream
  nameWithType: IClientServiceRequest.ExecuteAsStream
  fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
