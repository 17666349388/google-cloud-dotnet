### YamlMime:ManagedReference
items:
- uid: Google.Apis.Services.IClientService
  commentId: T:Google.Apis.Services.IClientService
  id: IClientService
  parent: Google.Apis.Services
  children:
  - Google.Apis.Services.IClientService.ApiKey
  - Google.Apis.Services.IClientService.ApplicationName
  - Google.Apis.Services.IClientService.BasePath
  - Google.Apis.Services.IClientService.BaseUri
  - Google.Apis.Services.IClientService.DeserializeError(HttpResponseMessage)
  - Google.Apis.Services.IClientService.DeserializeResponse``1(HttpResponseMessage)
  - Google.Apis.Services.IClientService.Features
  - Google.Apis.Services.IClientService.GZipEnabled
  - Google.Apis.Services.IClientService.HttpClient
  - Google.Apis.Services.IClientService.HttpClientInitializer
  - Google.Apis.Services.IClientService.Name
  - Google.Apis.Services.IClientService.SerializeObject(System.Object)
  - Google.Apis.Services.IClientService.Serializer
  - Google.Apis.Services.IClientService.SetRequestSerailizedContent(HttpRequestMessage,System.Object)
  langs:
  - csharp
  - vb
  name: IClientService
  nameWithType: IClientService
  fullName: Google.Apis.Services.IClientService
  type: Interface
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IClientService
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 34
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: "\nClient service contains all the necessary information a Google service requires. \nEach concrete <xref href=\"Google.Apis.Requests.IClientServiceRequest\" data-throw-if-not-resolved=\"false\"></xref> has a reference to a service for \nimportant properties like API key, application name, base Uri, etc.\nThis service interface also contains serialization methods to serialize an object to stream and deserialize a \nstream into an object.\n"
  example: []
  syntax:
    content: 'public interface IClientService : IDisposable'
    content.vb: >-
      Public Interface IClientService
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Google.Apis.Services.IClientService.HttpClient
  commentId: P:Google.Apis.Services.IClientService.HttpClient
  id: HttpClient
  parent: Google.Apis.Services.IClientService
  langs:
  - csharp
  - vb
  name: HttpClient
  nameWithType: IClientService.HttpClient
  fullName: Google.Apis.Services.IClientService.HttpClient
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: HttpClient
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 37
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: Gets the HTTP client which is used to create requests.
  example: []
  syntax:
    content: ConfigurableHttpClient HttpClient { get; }
    parameters: []
    return:
      type: Google.Apis.Http.ConfigurableHttpClient
    content.vb: ReadOnly Property HttpClient As ConfigurableHttpClient
  overload: Google.Apis.Services.IClientService.HttpClient*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Services.IClientService.HttpClientInitializer
  commentId: P:Google.Apis.Services.IClientService.HttpClientInitializer
  id: HttpClientInitializer
  parent: Google.Apis.Services.IClientService
  langs:
  - csharp
  - vb
  name: HttpClientInitializer
  nameWithType: IClientService.HttpClientInitializer
  fullName: Google.Apis.Services.IClientService.HttpClientInitializer
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: HttpClientInitializer
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 44
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: "\nGets a HTTP client initializer which is able to custom properties on \n<xref href=\"Google.Apis.Http.ConfigurableHttpClient\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"Google.Apis.Http.ConfigurableMessageHandler\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: IConfigurableHttpClientInitializer HttpClientInitializer { get; }
    parameters: []
    return:
      type: Google.Apis.Http.IConfigurableHttpClientInitializer
    content.vb: ReadOnly Property HttpClientInitializer As IConfigurableHttpClientInitializer
  overload: Google.Apis.Services.IClientService.HttpClientInitializer*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Services.IClientService.Name
  commentId: P:Google.Apis.Services.IClientService.Name
  id: Name
  parent: Google.Apis.Services.IClientService
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IClientService.Name
  fullName: Google.Apis.Services.IClientService.Name
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Name
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 47
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: Gets the service name.
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Google.Apis.Services.IClientService.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Services.IClientService.BaseUri
  commentId: P:Google.Apis.Services.IClientService.BaseUri
  id: BaseUri
  parent: Google.Apis.Services.IClientService
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: IClientService.BaseUri
  fullName: Google.Apis.Services.IClientService.BaseUri
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BaseUri
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 50
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: Gets the BaseUri of the service. All request paths should be relative to this URI.
  example: []
  syntax:
    content: string BaseUri { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property BaseUri As String
  overload: Google.Apis.Services.IClientService.BaseUri*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Services.IClientService.BasePath
  commentId: P:Google.Apis.Services.IClientService.BasePath
  id: BasePath
  parent: Google.Apis.Services.IClientService
  langs:
  - csharp
  - vb
  name: BasePath
  nameWithType: IClientService.BasePath
  fullName: Google.Apis.Services.IClientService.BasePath
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BasePath
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 53
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: Gets the BasePath of the service.
  example: []
  syntax:
    content: string BasePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property BasePath As String
  overload: Google.Apis.Services.IClientService.BasePath*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Services.IClientService.Features
  commentId: P:Google.Apis.Services.IClientService.Features
  id: Features
  parent: Google.Apis.Services.IClientService
  langs:
  - csharp
  - vb
  name: Features
  nameWithType: IClientService.Features
  fullName: Google.Apis.Services.IClientService.Features
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Features
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 56
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: Gets the supported features by this service.
  example: []
  syntax:
    content: IList<string> Features { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: ReadOnly Property Features As IList(Of String)
  overload: Google.Apis.Services.IClientService.Features*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Services.IClientService.GZipEnabled
  commentId: P:Google.Apis.Services.IClientService.GZipEnabled
  id: GZipEnabled
  parent: Google.Apis.Services.IClientService
  langs:
  - csharp
  - vb
  name: GZipEnabled
  nameWithType: IClientService.GZipEnabled
  fullName: Google.Apis.Services.IClientService.GZipEnabled
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GZipEnabled
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 59
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: Gets or sets whether this service supports GZip.
  example: []
  syntax:
    content: bool GZipEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property GZipEnabled As Boolean
  overload: Google.Apis.Services.IClientService.GZipEnabled*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Services.IClientService.ApiKey
  commentId: P:Google.Apis.Services.IClientService.ApiKey
  id: ApiKey
  parent: Google.Apis.Services.IClientService
  langs:
  - csharp
  - vb
  name: ApiKey
  nameWithType: IClientService.ApiKey
  fullName: Google.Apis.Services.IClientService.ApiKey
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ApiKey
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 62
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: Gets the API-Key (DeveloperKey) which this service uses for all requests.
  example: []
  syntax:
    content: string ApiKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ApiKey As String
  overload: Google.Apis.Services.IClientService.ApiKey*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Services.IClientService.ApplicationName
  commentId: P:Google.Apis.Services.IClientService.ApplicationName
  id: ApplicationName
  parent: Google.Apis.Services.IClientService
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: IClientService.ApplicationName
  fullName: Google.Apis.Services.IClientService.ApplicationName
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ApplicationName
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 65
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: Gets the application name to be used in the User-Agent header.
  example: []
  syntax:
    content: string ApplicationName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ApplicationName As String
  overload: Google.Apis.Services.IClientService.ApplicationName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Services.IClientService.SetRequestSerailizedContent(HttpRequestMessage,System.Object)
  commentId: M:Google.Apis.Services.IClientService.SetRequestSerailizedContent(HttpRequestMessage,System.Object)
  id: SetRequestSerailizedContent(HttpRequestMessage,System.Object)
  parent: Google.Apis.Services.IClientService
  langs:
  - csharp
  - vb
  name: SetRequestSerailizedContent(HttpRequestMessage, Object)
  nameWithType: IClientService.SetRequestSerailizedContent(HttpRequestMessage, Object)
  fullName: Google.Apis.Services.IClientService.SetRequestSerailizedContent(HttpRequestMessage, System.Object)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: SetRequestSerailizedContent
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 72
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: "\nSets the content of the request by the given body and the this service&apos;s configuration. \nFirst the body object is serialized by the Serializer and then, if GZip is enabled, the content will be\nwrapped in a GZip stream, otherwise a regular string stream will be used.\n"
  example: []
  syntax:
    content: void SetRequestSerailizedContent(HttpRequestMessage request, object body)
    parameters:
    - id: request
      type: HttpRequestMessage
    - id: body
      type: System.Object
    content.vb: Sub SetRequestSerailizedContent(request As HttpRequestMessage, body As Object)
  overload: Google.Apis.Services.IClientService.SetRequestSerailizedContent*
- uid: Google.Apis.Services.IClientService.Serializer
  commentId: P:Google.Apis.Services.IClientService.Serializer
  id: Serializer
  parent: Google.Apis.Services.IClientService
  langs:
  - csharp
  - vb
  name: Serializer
  nameWithType: IClientService.Serializer
  fullName: Google.Apis.Services.IClientService.Serializer
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Serializer
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 77
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: Gets the Serializer used by this service.
  example: []
  syntax:
    content: ISerializer Serializer { get; }
    parameters: []
    return:
      type: Google.Apis.ISerializer
    content.vb: ReadOnly Property Serializer As ISerializer
  overload: Google.Apis.Services.IClientService.Serializer*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Apis.Services.IClientService.SerializeObject(System.Object)
  commentId: M:Google.Apis.Services.IClientService.SerializeObject(System.Object)
  id: SerializeObject(System.Object)
  parent: Google.Apis.Services.IClientService
  langs:
  - csharp
  - vb
  name: SerializeObject(Object)
  nameWithType: IClientService.SerializeObject(Object)
  fullName: Google.Apis.Services.IClientService.SerializeObject(System.Object)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: SerializeObject
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 80
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: Serializes an object into a string representation.
  example: []
  syntax:
    content: string SerializeObject(object data)
    parameters:
    - id: data
      type: System.Object
    return:
      type: System.String
    content.vb: Function SerializeObject(data As Object) As String
  overload: Google.Apis.Services.IClientService.SerializeObject*
- uid: Google.Apis.Services.IClientService.DeserializeResponse``1(HttpResponseMessage)
  commentId: M:Google.Apis.Services.IClientService.DeserializeResponse``1(HttpResponseMessage)
  id: DeserializeResponse``1(HttpResponseMessage)
  parent: Google.Apis.Services.IClientService
  langs:
  - csharp
  - vb
  name: DeserializeResponse<T>(HttpResponseMessage)
  nameWithType: IClientService.DeserializeResponse<T>(HttpResponseMessage)
  fullName: Google.Apis.Services.IClientService.DeserializeResponse<T>(HttpResponseMessage)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DeserializeResponse
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 83
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: Deserializes a response into the specified object.
  example: []
  syntax:
    content: Task<T> DeserializeResponse<T>(HttpResponseMessage response)
    parameters:
    - id: response
      type: HttpResponseMessage
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Function DeserializeResponse(Of T)(response As HttpResponseMessage) As Task(Of T)
  overload: Google.Apis.Services.IClientService.DeserializeResponse*
  nameWithType.vb: IClientService.DeserializeResponse(Of T)(HttpResponseMessage)
  fullName.vb: Google.Apis.Services.IClientService.DeserializeResponse(Of T)(HttpResponseMessage)
  name.vb: DeserializeResponse(Of T)(HttpResponseMessage)
- uid: Google.Apis.Services.IClientService.DeserializeError(HttpResponseMessage)
  commentId: M:Google.Apis.Services.IClientService.DeserializeError(HttpResponseMessage)
  id: DeserializeError(HttpResponseMessage)
  parent: Google.Apis.Services.IClientService
  langs:
  - csharp
  - vb
  name: DeserializeError(HttpResponseMessage)
  nameWithType: IClientService.DeserializeError(HttpResponseMessage)
  fullName: Google.Apis.Services.IClientService.DeserializeError(HttpResponseMessage)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Services/IClientService.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: DeserializeError
    path: Src/Support/Google.Apis/Services/IClientService.cs
    startLine: 87
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Services
  summary: Deserializes an error response into a <xref href="Google.Apis.Requests.RequestError" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: Task<RequestError> DeserializeError(HttpResponseMessage response)
    parameters:
    - id: response
      type: HttpResponseMessage
    return:
      type: System.Threading.Tasks.Task{Google.Apis.Requests.RequestError}
    content.vb: Function DeserializeError(response As HttpResponseMessage) As Task(Of RequestError)
  overload: Google.Apis.Services.IClientService.DeserializeError*
  exceptions:
  - type: Google.GoogleApiException
    commentId: T:Google.GoogleApiException
    description: If no error is found in the response.
references:
- uid: Google.Apis.Requests.IClientServiceRequest
  commentId: T:Google.Apis.Requests.IClientServiceRequest
  parent: Google.Apis.Requests
  isExternal: false
  name: IClientServiceRequest
  nameWithType: IClientServiceRequest
  fullName: Google.Apis.Requests.IClientServiceRequest
- uid: Google.Apis.Services
  commentId: N:Google.Apis.Services
  isExternal: false
  name: Google.Apis.Services
  nameWithType: Google.Apis.Services
  fullName: Google.Apis.Services
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: false
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Services.IClientService.HttpClient*
  commentId: Overload:Google.Apis.Services.IClientService.HttpClient
  isExternal: false
  name: HttpClient
  nameWithType: IClientService.HttpClient
  fullName: Google.Apis.Services.IClientService.HttpClient
- uid: Google.Apis.Http.ConfigurableHttpClient
  commentId: T:Google.Apis.Http.ConfigurableHttpClient
  parent: Google.Apis.Http
  isExternal: false
  name: ConfigurableHttpClient
  nameWithType: ConfigurableHttpClient
  fullName: Google.Apis.Http.ConfigurableHttpClient
- uid: Google.Apis.Http
  commentId: N:Google.Apis.Http
  isExternal: false
  name: Google.Apis.Http
  nameWithType: Google.Apis.Http
  fullName: Google.Apis.Http
- uid: Google.Apis.Http.ConfigurableMessageHandler
  commentId: T:Google.Apis.Http.ConfigurableMessageHandler
- uid: Google.Apis.Services.IClientService.HttpClientInitializer*
  commentId: Overload:Google.Apis.Services.IClientService.HttpClientInitializer
  isExternal: false
  name: HttpClientInitializer
  nameWithType: IClientService.HttpClientInitializer
  fullName: Google.Apis.Services.IClientService.HttpClientInitializer
- uid: Google.Apis.Http.IConfigurableHttpClientInitializer
  commentId: T:Google.Apis.Http.IConfigurableHttpClientInitializer
  parent: Google.Apis.Http
  isExternal: false
  name: IConfigurableHttpClientInitializer
  nameWithType: IConfigurableHttpClientInitializer
  fullName: Google.Apis.Http.IConfigurableHttpClientInitializer
- uid: Google.Apis.Services.IClientService.Name*
  commentId: Overload:Google.Apis.Services.IClientService.Name
  isExternal: false
  name: Name
  nameWithType: IClientService.Name
  fullName: Google.Apis.Services.IClientService.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Services.IClientService.BaseUri*
  commentId: Overload:Google.Apis.Services.IClientService.BaseUri
  isExternal: false
  name: BaseUri
  nameWithType: IClientService.BaseUri
  fullName: Google.Apis.Services.IClientService.BaseUri
- uid: Google.Apis.Services.IClientService.BasePath*
  commentId: Overload:Google.Apis.Services.IClientService.BasePath
  isExternal: false
  name: BasePath
  nameWithType: IClientService.BasePath
  fullName: Google.Apis.Services.IClientService.BasePath
- uid: Google.Apis.Services.IClientService.Features*
  commentId: Overload:Google.Apis.Services.IClientService.Features
  isExternal: false
  name: Features
  nameWithType: IClientService.Features
  fullName: Google.Apis.Services.IClientService.Features
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Services.IClientService.GZipEnabled*
  commentId: Overload:Google.Apis.Services.IClientService.GZipEnabled
  isExternal: false
  name: GZipEnabled
  nameWithType: IClientService.GZipEnabled
  fullName: Google.Apis.Services.IClientService.GZipEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Apis.Services.IClientService.ApiKey*
  commentId: Overload:Google.Apis.Services.IClientService.ApiKey
  isExternal: false
  name: ApiKey
  nameWithType: IClientService.ApiKey
  fullName: Google.Apis.Services.IClientService.ApiKey
- uid: Google.Apis.Services.IClientService.ApplicationName*
  commentId: Overload:Google.Apis.Services.IClientService.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: IClientService.ApplicationName
  fullName: Google.Apis.Services.IClientService.ApplicationName
- uid: Google.Apis.Services.IClientService.SetRequestSerailizedContent*
  commentId: Overload:Google.Apis.Services.IClientService.SetRequestSerailizedContent
  isExternal: false
  name: SetRequestSerailizedContent
  nameWithType: IClientService.SetRequestSerailizedContent
  fullName: Google.Apis.Services.IClientService.SetRequestSerailizedContent
- uid: HttpRequestMessage
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: HttpRequestMessage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Services.IClientService.Serializer*
  commentId: Overload:Google.Apis.Services.IClientService.Serializer
  isExternal: false
  name: Serializer
  nameWithType: IClientService.Serializer
  fullName: Google.Apis.Services.IClientService.Serializer
- uid: Google.Apis.ISerializer
  commentId: T:Google.Apis.ISerializer
  parent: Google.Apis
  isExternal: false
  name: ISerializer
  nameWithType: ISerializer
  fullName: Google.Apis.ISerializer
- uid: Google.Apis
  commentId: N:Google.Apis
  isExternal: false
  name: Google.Apis
  nameWithType: Google.Apis
  fullName: Google.Apis
- uid: Google.Apis.Services.IClientService.SerializeObject*
  commentId: Overload:Google.Apis.Services.IClientService.SerializeObject
  isExternal: false
  name: SerializeObject
  nameWithType: IClientService.SerializeObject
  fullName: Google.Apis.Services.IClientService.SerializeObject
- uid: Google.Apis.Services.IClientService.DeserializeResponse*
  commentId: Overload:Google.Apis.Services.IClientService.DeserializeResponse
  isExternal: false
  name: DeserializeResponse
  nameWithType: IClientService.DeserializeResponse
  fullName: Google.Apis.Services.IClientService.DeserializeResponse
- uid: HttpResponseMessage
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: HttpResponseMessage
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Apis.Requests.RequestError
  commentId: T:Google.Apis.Requests.RequestError
  parent: Google.Apis.Requests
  isExternal: false
  name: RequestError
  nameWithType: RequestError
  fullName: Google.Apis.Requests.RequestError
- uid: Google.Apis.Services.IClientService.DeserializeError*
  commentId: Overload:Google.Apis.Services.IClientService.DeserializeError
  isExternal: false
  name: DeserializeError
  nameWithType: IClientService.DeserializeError
  fullName: Google.Apis.Services.IClientService.DeserializeError
- uid: Google.GoogleApiException
  commentId: T:Google.GoogleApiException
- uid: System.Threading.Tasks.Task{Google.Apis.Requests.RequestError}
  commentId: T:System.Threading.Tasks.Task{Google.Apis.Requests.RequestError}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RequestError>
  nameWithType: Task<RequestError>
  fullName: System.Threading.Tasks.Task<Google.Apis.Requests.RequestError>
  nameWithType.vb: Task(Of RequestError)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Apis.Requests.RequestError)
  name.vb: Task(Of RequestError)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Requests.RequestError
    name: RequestError
    nameWithType: RequestError
    fullName: Google.Apis.Requests.RequestError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Requests.RequestError
    name: RequestError
    nameWithType: RequestError
    fullName: Google.Apis.Requests.RequestError
  - name: )
    nameWithType: )
    fullName: )
