### YamlMime:ManagedReference
items:
- uid: Google.Apis.Requests.ClientServiceRequest
  commentId: T:Google.Apis.Requests.ClientServiceRequest
  id: ClientServiceRequest
  parent: Google.Apis.Requests
  children:
  - Google.Apis.Requests.ClientServiceRequest._exceptionHandlers
  - Google.Apis.Requests.ClientServiceRequest._executeInterceptors
  - Google.Apis.Requests.ClientServiceRequest._unsuccessfulResponseHandlers
  - Google.Apis.Requests.ClientServiceRequest.AddExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  - Google.Apis.Requests.ClientServiceRequest.AddExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  - Google.Apis.Requests.ClientServiceRequest.AddUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  langs:
  - csharp
  - vb
  name: ClientServiceRequest
  nameWithType: ClientServiceRequest
  fullName: Google.Apis.Requests.ClientServiceRequest
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ClientServiceRequest
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 39
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: "\nRepresents an abstract request base class to make requests to a service.\n"
  example: []
  syntax:
    content: public abstract class ClientServiceRequest
    content.vb: Public MustInherit Class ClientServiceRequest
  inheritance:
  - System.Object
  derivedClasses:
  - Google.Apis.Requests.ClientServiceRequest`1
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Google.Apis.Requests.ClientServiceRequest._unsuccessfulResponseHandlers
  commentId: F:Google.Apis.Requests.ClientServiceRequest._unsuccessfulResponseHandlers
  id: _unsuccessfulResponseHandlers
  parent: Google.Apis.Requests.ClientServiceRequest
  langs:
  - csharp
  - vb
  name: _unsuccessfulResponseHandlers
  nameWithType: ClientServiceRequest._unsuccessfulResponseHandlers
  fullName: Google.Apis.Requests.ClientServiceRequest._unsuccessfulResponseHandlers
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: _unsuccessfulResponseHandlers
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 42
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Unsuccessful response handlers for this request only.
  example: []
  syntax:
    content: protected List<IHttpUnsuccessfulResponseHandler> _unsuccessfulResponseHandlers
    return:
      type: System.Collections.Generic.List{Google.Apis.Http.IHttpUnsuccessfulResponseHandler}
    content.vb: Protected _unsuccessfulResponseHandlers As List(Of IHttpUnsuccessfulResponseHandler)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Google.Apis.Requests.ClientServiceRequest._exceptionHandlers
  commentId: F:Google.Apis.Requests.ClientServiceRequest._exceptionHandlers
  id: _exceptionHandlers
  parent: Google.Apis.Requests.ClientServiceRequest
  langs:
  - csharp
  - vb
  name: _exceptionHandlers
  nameWithType: ClientServiceRequest._exceptionHandlers
  fullName: Google.Apis.Requests.ClientServiceRequest._exceptionHandlers
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: _exceptionHandlers
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 44
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Exception handlers for this request only.
  example: []
  syntax:
    content: protected List<IHttpExceptionHandler> _exceptionHandlers
    return:
      type: System.Collections.Generic.List{Google.Apis.Http.IHttpExceptionHandler}
    content.vb: Protected _exceptionHandlers As List(Of IHttpExceptionHandler)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Google.Apis.Requests.ClientServiceRequest._executeInterceptors
  commentId: F:Google.Apis.Requests.ClientServiceRequest._executeInterceptors
  id: _executeInterceptors
  parent: Google.Apis.Requests.ClientServiceRequest
  langs:
  - csharp
  - vb
  name: _executeInterceptors
  nameWithType: ClientServiceRequest._executeInterceptors
  fullName: Google.Apis.Requests.ClientServiceRequest._executeInterceptors
  type: Field
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: _executeInterceptors
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 46
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Unsuccessful response handlers for this request only.
  example: []
  syntax:
    content: protected List<IHttpExecuteInterceptor> _executeInterceptors
    return:
      type: System.Collections.Generic.List{Google.Apis.Http.IHttpExecuteInterceptor}
    content.vb: Protected _executeInterceptors As List(Of IHttpExecuteInterceptor)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Google.Apis.Requests.ClientServiceRequest.AddUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  commentId: M:Google.Apis.Requests.ClientServiceRequest.AddUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  id: AddUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  parent: Google.Apis.Requests.ClientServiceRequest
  langs:
  - csharp
  - vb
  name: AddUnsuccessfulResponseHandler(IHttpUnsuccessfulResponseHandler)
  nameWithType: ClientServiceRequest.AddUnsuccessfulResponseHandler(IHttpUnsuccessfulResponseHandler)
  fullName: Google.Apis.Requests.ClientServiceRequest.AddUnsuccessfulResponseHandler(Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AddUnsuccessfulResponseHandler
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 52
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: "\nAdd an unsuccessful response handler for this request only.\n"
  example: []
  syntax:
    content: public void AddUnsuccessfulResponseHandler(IHttpUnsuccessfulResponseHandler handler)
    parameters:
    - id: handler
      type: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
      description: The unsuccessful response handler. Must not be <code>null</code>.
    content.vb: Public Sub AddUnsuccessfulResponseHandler(handler As IHttpUnsuccessfulResponseHandler)
  overload: Google.Apis.Requests.ClientServiceRequest.AddUnsuccessfulResponseHandler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Requests.ClientServiceRequest.AddExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  commentId: M:Google.Apis.Requests.ClientServiceRequest.AddExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  id: AddExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  parent: Google.Apis.Requests.ClientServiceRequest
  langs:
  - csharp
  - vb
  name: AddExceptionHandler(IHttpExceptionHandler)
  nameWithType: ClientServiceRequest.AddExceptionHandler(IHttpExceptionHandler)
  fullName: Google.Apis.Requests.ClientServiceRequest.AddExceptionHandler(Google.Apis.Http.IHttpExceptionHandler)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AddExceptionHandler
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 66
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: "\nAdd an exception handler for this request only.\n"
  example: []
  syntax:
    content: public void AddExceptionHandler(IHttpExceptionHandler handler)
    parameters:
    - id: handler
      type: Google.Apis.Http.IHttpExceptionHandler
      description: The exception handler. Must not be <code>null</code>.
    content.vb: Public Sub AddExceptionHandler(handler As IHttpExceptionHandler)
  overload: Google.Apis.Requests.ClientServiceRequest.AddExceptionHandler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Requests.ClientServiceRequest.AddExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  commentId: M:Google.Apis.Requests.ClientServiceRequest.AddExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  id: AddExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  parent: Google.Apis.Requests.ClientServiceRequest
  langs:
  - csharp
  - vb
  name: AddExecuteInterceptor(IHttpExecuteInterceptor)
  nameWithType: ClientServiceRequest.AddExecuteInterceptor(IHttpExecuteInterceptor)
  fullName: Google.Apis.Requests.ClientServiceRequest.AddExecuteInterceptor(Google.Apis.Http.IHttpExecuteInterceptor)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: AddExecuteInterceptor
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 80
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: "\nAdd an unsuccessful response handler for this request only.\n"
  example: []
  syntax:
    content: public void AddExecuteInterceptor(IHttpExecuteInterceptor handler)
    parameters:
    - id: handler
      type: Google.Apis.Http.IHttpExecuteInterceptor
      description: The unsuccessful response handler. Must not be <code>null</code>.
    content.vb: Public Sub AddExecuteInterceptor(handler As IHttpExecuteInterceptor)
  overload: Google.Apis.Requests.ClientServiceRequest.AddExecuteInterceptor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Google.Apis.Http.IHttpUnsuccessfulResponseHandler}
  commentId: T:System.Collections.Generic.List{Google.Apis.Http.IHttpUnsuccessfulResponseHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IHttpUnsuccessfulResponseHandler>
  nameWithType: List<IHttpUnsuccessfulResponseHandler>
  fullName: System.Collections.Generic.List<Google.Apis.Http.IHttpUnsuccessfulResponseHandler>
  nameWithType.vb: List(Of IHttpUnsuccessfulResponseHandler)
  fullName.vb: System.Collections.Generic.List(Of Google.Apis.Http.IHttpUnsuccessfulResponseHandler)
  name.vb: List(Of IHttpUnsuccessfulResponseHandler)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
    name: IHttpUnsuccessfulResponseHandler
    nameWithType: IHttpUnsuccessfulResponseHandler
    fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
    name: IHttpUnsuccessfulResponseHandler
    nameWithType: IHttpUnsuccessfulResponseHandler
    fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{Google.Apis.Http.IHttpExceptionHandler}
  commentId: T:System.Collections.Generic.List{Google.Apis.Http.IHttpExceptionHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IHttpExceptionHandler>
  nameWithType: List<IHttpExceptionHandler>
  fullName: System.Collections.Generic.List<Google.Apis.Http.IHttpExceptionHandler>
  nameWithType.vb: List(Of IHttpExceptionHandler)
  fullName.vb: System.Collections.Generic.List(Of Google.Apis.Http.IHttpExceptionHandler)
  name.vb: List(Of IHttpExceptionHandler)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Http.IHttpExceptionHandler
    name: IHttpExceptionHandler
    nameWithType: IHttpExceptionHandler
    fullName: Google.Apis.Http.IHttpExceptionHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Http.IHttpExceptionHandler
    name: IHttpExceptionHandler
    nameWithType: IHttpExceptionHandler
    fullName: Google.Apis.Http.IHttpExceptionHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Google.Apis.Http.IHttpExecuteInterceptor}
  commentId: T:System.Collections.Generic.List{Google.Apis.Http.IHttpExecuteInterceptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IHttpExecuteInterceptor>
  nameWithType: List<IHttpExecuteInterceptor>
  fullName: System.Collections.Generic.List<Google.Apis.Http.IHttpExecuteInterceptor>
  nameWithType.vb: List(Of IHttpExecuteInterceptor)
  fullName.vb: System.Collections.Generic.List(Of Google.Apis.Http.IHttpExecuteInterceptor)
  name.vb: List(Of IHttpExecuteInterceptor)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Apis.Http.IHttpExecuteInterceptor
    name: IHttpExecuteInterceptor
    nameWithType: IHttpExecuteInterceptor
    fullName: Google.Apis.Http.IHttpExecuteInterceptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Apis.Http.IHttpExecuteInterceptor
    name: IHttpExecuteInterceptor
    nameWithType: IHttpExecuteInterceptor
    fullName: Google.Apis.Http.IHttpExecuteInterceptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Requests.ClientServiceRequest.AddUnsuccessfulResponseHandler*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest.AddUnsuccessfulResponseHandler
  name: AddUnsuccessfulResponseHandler
  nameWithType: ClientServiceRequest.AddUnsuccessfulResponseHandler
  fullName: Google.Apis.Requests.ClientServiceRequest.AddUnsuccessfulResponseHandler
- uid: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  commentId: T:Google.Apis.Http.IHttpUnsuccessfulResponseHandler
  parent: Google.Apis.Http
  name: IHttpUnsuccessfulResponseHandler
  nameWithType: IHttpUnsuccessfulResponseHandler
  fullName: Google.Apis.Http.IHttpUnsuccessfulResponseHandler
- uid: Google.Apis.Http
  commentId: N:Google.Apis.Http
  name: Google.Apis.Http
  nameWithType: Google.Apis.Http
  fullName: Google.Apis.Http
- uid: Google.Apis.Requests.ClientServiceRequest.AddExceptionHandler*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest.AddExceptionHandler
  name: AddExceptionHandler
  nameWithType: ClientServiceRequest.AddExceptionHandler
  fullName: Google.Apis.Requests.ClientServiceRequest.AddExceptionHandler
- uid: Google.Apis.Http.IHttpExceptionHandler
  commentId: T:Google.Apis.Http.IHttpExceptionHandler
  parent: Google.Apis.Http
  name: IHttpExceptionHandler
  nameWithType: IHttpExceptionHandler
  fullName: Google.Apis.Http.IHttpExceptionHandler
- uid: Google.Apis.Requests.ClientServiceRequest.AddExecuteInterceptor*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest.AddExecuteInterceptor
  name: AddExecuteInterceptor
  nameWithType: ClientServiceRequest.AddExecuteInterceptor
  fullName: Google.Apis.Requests.ClientServiceRequest.AddExecuteInterceptor
- uid: Google.Apis.Http.IHttpExecuteInterceptor
  commentId: T:Google.Apis.Http.IHttpExecuteInterceptor
  parent: Google.Apis.Http
  name: IHttpExecuteInterceptor
  nameWithType: IHttpExecuteInterceptor
  fullName: Google.Apis.Http.IHttpExecuteInterceptor
