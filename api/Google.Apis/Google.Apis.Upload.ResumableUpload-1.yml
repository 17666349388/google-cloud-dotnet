### YamlMime:ManagedReference
items:
- uid: Google.Apis.Upload.ResumableUpload`1
  commentId: T:Google.Apis.Upload.ResumableUpload`1
  id: ResumableUpload`1
  parent: Google.Apis.Upload
  children:
  - Google.Apis.Upload.ResumableUpload`1.#ctor(Google.Apis.Services.IClientService,System.String,System.String,System.IO.Stream,System.String)
  - Google.Apis.Upload.ResumableUpload`1.Body
  - Google.Apis.Upload.ResumableUpload`1.ContentType
  - Google.Apis.Upload.ResumableUpload`1.HttpMethod
  - Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload`1.Path
  - Google.Apis.Upload.ResumableUpload`1.Service
  langs:
  - csharp
  - vb
  name: ResumableUpload<TRequest>
  nameWithType: ResumableUpload<TRequest>
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ResumableUpload
    path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
    startLine: 812
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Upload
  summary: "\nMedia upload which uses Google&apos;s resumable media upload protocol to upload data.\n"
  remarks: "\nSee: https://developers.google.com/drive/manage-uploads#resumable for more information on the protocol.\n"
  example: []
  syntax:
    content: 'public class ResumableUpload<TRequest> : ResumableUpload'
    typeParameters:
    - id: TRequest
      description: "\nThe type of the body of this request. Generally this should be the metadata related to the content to be \nuploaded. Must be serializable to/from JSON.\n"
    content.vb: >-
      Public Class ResumableUpload(Of TRequest)
          Inherits ResumableUpload
  inheritance:
  - System.Object
  - Google.Apis.Upload.ResumableUpload
  derivedClasses:
  - Google.Apis.Upload.ResumableUpload`2
  inheritedMembers:
  - Google.Apis.Upload.ResumableUpload.MinimumChunkSize
  - Google.Apis.Upload.ResumableUpload.DefaultChunkSize
  - Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
  - Google.Apis.Upload.ResumableUpload.Options
  - Google.Apis.Upload.ResumableUpload.ContentStream
  - Google.Apis.Upload.ResumableUpload.chunkSize
  - Google.Apis.Upload.ResumableUpload.ChunkSize
  - Google.Apis.Upload.ResumableUpload.ProgressChanged
  - Google.Apis.Upload.ResumableUpload.GetProgress
  - Google.Apis.Upload.ResumableUpload.UploadSessionData
  - Google.Apis.Upload.ResumableUpload.Upload
  - Google.Apis.Upload.ResumableUpload.UploadAsync
  - Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.Resume
  - Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  - Google.Apis.Upload.ResumableUpload.ResumeAsync
  - Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  - Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.ProcessResponse(HttpResponseMessage)
  - Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(HttpResponseMessage)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ResumableUpload(Of TRequest)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest)
  name.vb: ResumableUpload(Of TRequest)
- uid: Google.Apis.Upload.ResumableUpload`1.#ctor(Google.Apis.Services.IClientService,System.String,System.String,System.IO.Stream,System.String)
  commentId: M:Google.Apis.Upload.ResumableUpload`1.#ctor(Google.Apis.Services.IClientService,System.String,System.String,System.IO.Stream,System.String)
  id: '#ctor(Google.Apis.Services.IClientService,System.String,System.String,System.IO.Stream,System.String)'
  parent: Google.Apis.Upload.ResumableUpload`1
  langs:
  - csharp
  - vb
  name: ResumableUpload(IClientService, String, String, Stream, String)
  nameWithType: ResumableUpload<TRequest>.ResumableUpload(IClientService, String, String, Stream, String)
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.ResumableUpload(Google.Apis.Services.IClientService, System.String, System.String, System.IO.Stream, System.String)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
    startLine: 847
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Upload
  summary: "\nCreate a resumable upload instance with the required parameters.\n"
  remarks: "\nCaller is responsible for maintaining the <code data-dev-comment-type=\"paramref\" class=\"paramref\">contentStream</code> open until the upload is \ncompleted.\nCaller is responsible for closing the <code data-dev-comment-type=\"paramref\" class=\"paramref\">contentStream</code>.\n"
  example: []
  syntax:
    content: protected ResumableUpload(IClientService service, string path, string httpMethod, Stream contentStream, string contentType)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
      description: The client service.
    - id: path
      type: System.String
      description: The path for this media upload method.
    - id: httpMethod
      type: System.String
      description: The HTTP method to start this upload.
    - id: contentStream
      type: System.IO.Stream
      description: The stream containing the content to upload.
    - id: contentType
      type: System.String
      description: >-
        Content type of the content to be uploaded. Some services

        may allow this to be null; others require a content type to be specified and will

        fail when the upload is started if the value is null.
    content.vb: Protected Sub New(service As IClientService, path As String, httpMethod As String, contentStream As Stream, contentType As String)
  overload: Google.Apis.Upload.ResumableUpload`1.#ctor*
  nameWithType.vb: ResumableUpload(Of TRequest).ResumableUpload(IClientService, String, String, Stream, String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).ResumableUpload(Google.Apis.Services.IClientService, System.String, System.String, System.IO.Stream, System.String)
- uid: Google.Apis.Upload.ResumableUpload`1.Service
  commentId: P:Google.Apis.Upload.ResumableUpload`1.Service
  id: Service
  parent: Google.Apis.Upload.ResumableUpload`1
  langs:
  - csharp
  - vb
  name: Service
  nameWithType: ResumableUpload<TRequest>.Service
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Service
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Service
    path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
    startLine: 872
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Upload
  summary: Gets or sets the service.
  example: []
  syntax:
    content: public IClientService Service { get; }
    parameters: []
    return:
      type: Google.Apis.Services.IClientService
    content.vb: Public ReadOnly Property Service As IClientService
  overload: Google.Apis.Upload.ResumableUpload`1.Service*
  nameWithType.vb: ResumableUpload(Of TRequest).Service
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Service
- uid: Google.Apis.Upload.ResumableUpload`1.Path
  commentId: P:Google.Apis.Upload.ResumableUpload`1.Path
  id: Path
  parent: Google.Apis.Upload.ResumableUpload`1
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: ResumableUpload<TRequest>.Path
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Path
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Path
    path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
    startLine: 879
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Upload
  summary: "\nGets or sets the path of the method (combined with\n<xref href=\"Google.Apis.Services.IClientService.BaseUri\" data-throw-if-not-resolved=\"false\"></xref>) to produce \nabsolute Uri. \n"
  example: []
  syntax:
    content: public string Path { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Path As String
  overload: Google.Apis.Upload.ResumableUpload`1.Path*
  nameWithType.vb: ResumableUpload(Of TRequest).Path
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Path
- uid: Google.Apis.Upload.ResumableUpload`1.HttpMethod
  commentId: P:Google.Apis.Upload.ResumableUpload`1.HttpMethod
  id: HttpMethod
  parent: Google.Apis.Upload.ResumableUpload`1
  langs:
  - csharp
  - vb
  name: HttpMethod
  nameWithType: ResumableUpload<TRequest>.HttpMethod
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.HttpMethod
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: HttpMethod
    path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
    startLine: 882
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Upload
  summary: Gets or sets the HTTP method of this upload (used to initialize the upload).
  example: []
  syntax:
    content: public string HttpMethod { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property HttpMethod As String
  overload: Google.Apis.Upload.ResumableUpload`1.HttpMethod*
  nameWithType.vb: ResumableUpload(Of TRequest).HttpMethod
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).HttpMethod
- uid: Google.Apis.Upload.ResumableUpload`1.ContentType
  commentId: P:Google.Apis.Upload.ResumableUpload`1.ContentType
  id: ContentType
  parent: Google.Apis.Upload.ResumableUpload`1
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: ResumableUpload<TRequest>.ContentType
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.ContentType
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ContentType
    path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
    startLine: 885
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Upload
  summary: Gets or sets the stream&apos;s Content-Type.
  example: []
  syntax:
    content: public string ContentType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ContentType As String
  overload: Google.Apis.Upload.ResumableUpload`1.ContentType*
  nameWithType.vb: ResumableUpload(Of TRequest).ContentType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).ContentType
- uid: Google.Apis.Upload.ResumableUpload`1.Body
  commentId: P:Google.Apis.Upload.ResumableUpload`1.Body
  id: Body
  parent: Google.Apis.Upload.ResumableUpload`1
  langs:
  - csharp
  - vb
  name: Body
  nameWithType: ResumableUpload<TRequest>.Body
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Body
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Body
    path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
    startLine: 888
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Upload
  summary: Gets or sets the body of this request.
  example: []
  syntax:
    content: public TRequest Body { get; set; }
    parameters: []
    return:
      type: '{TRequest}'
    content.vb: Public Property Body As TRequest
  overload: Google.Apis.Upload.ResumableUpload`1.Body*
  nameWithType.vb: ResumableUpload(Of TRequest).Body
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Body
- uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
  id: InitiateSessionAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload`1
  langs:
  - csharp
  - vb
  name: InitiateSessionAsync(CancellationToken)
  nameWithType: ResumableUpload<TRequest>.InitiateSessionAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.InitiateSessionAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: InitiateSessionAsync
    path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
    startLine: 895
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Upload
  summary: "\nInitiates the resumable upload session and returns the session URI, or upload URI.\nSee https://developers.google.com/drive/manage-uploads#start-resumable and\nhttps://cloud.google.com/storage/docs/json_api/v1/how-tos/resumable-upload#start-resumable for more information.\n"
  example: []
  syntax:
    content: public override Task<Uri> InitiateSessionAsync(CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{System.Uri}
      description: "\nThe task containing the session URI to use for the resumable upload.\n"
    content.vb: Public Overrides Function InitiateSessionAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Uri)
  overridden: Google.Apis.Upload.ResumableUpload.InitiateSessionAsync(System.Threading.CancellationToken)
  overload: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync*
  nameWithType.vb: ResumableUpload(Of TRequest).InitiateSessionAsync(CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).InitiateSessionAsync(System.Threading.CancellationToken)
references:
- uid: Google.Apis.Upload
  commentId: N:Google.Apis.Upload
  isExternal: false
  name: Google.Apis.Upload
  nameWithType: Google.Apis.Upload
  fullName: Google.Apis.Upload
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Upload.ResumableUpload
  commentId: T:Google.Apis.Upload.ResumableUpload
  parent: Google.Apis.Upload
  isExternal: false
  name: ResumableUpload
  nameWithType: ResumableUpload
  fullName: Google.Apis.Upload.ResumableUpload
- uid: Google.Apis.Upload.ResumableUpload.MinimumChunkSize
  commentId: F:Google.Apis.Upload.ResumableUpload.MinimumChunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: MinimumChunkSize
  nameWithType: ResumableUpload.MinimumChunkSize
  fullName: Google.Apis.Upload.ResumableUpload.MinimumChunkSize
- uid: Google.Apis.Upload.ResumableUpload.DefaultChunkSize
  commentId: F:Google.Apis.Upload.ResumableUpload.DefaultChunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: DefaultChunkSize
  nameWithType: ResumableUpload.DefaultChunkSize
  fullName: Google.Apis.Upload.ResumableUpload.DefaultChunkSize
- uid: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
  commentId: M:Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: CreateFromUploadUri(Uri, Stream, ResumableUploadOptions)
  nameWithType: ResumableUpload.CreateFromUploadUri(Uri, Stream, ResumableUploadOptions)
  fullName: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri, System.IO.Stream, Google.Apis.Upload.ResumableUploadOptions)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
    name: CreateFromUploadUri
    nameWithType: ResumableUpload.CreateFromUploadUri
    fullName: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Upload.ResumableUploadOptions
    name: ResumableUploadOptions
    nameWithType: ResumableUploadOptions
    fullName: Google.Apis.Upload.ResumableUploadOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
    name: CreateFromUploadUri
    nameWithType: ResumableUpload.CreateFromUploadUri
    fullName: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Upload.ResumableUploadOptions
    name: ResumableUploadOptions
    nameWithType: ResumableUploadOptions
    fullName: Google.Apis.Upload.ResumableUploadOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.Options
  commentId: P:Google.Apis.Upload.ResumableUpload.Options
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: Options
  nameWithType: ResumableUpload.Options
  fullName: Google.Apis.Upload.ResumableUpload.Options
- uid: Google.Apis.Upload.ResumableUpload.ContentStream
  commentId: P:Google.Apis.Upload.ResumableUpload.ContentStream
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: ContentStream
  nameWithType: ResumableUpload.ContentStream
  fullName: Google.Apis.Upload.ResumableUpload.ContentStream
- uid: Google.Apis.Upload.ResumableUpload.chunkSize
  commentId: F:Google.Apis.Upload.ResumableUpload.chunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: chunkSize
  nameWithType: ResumableUpload.chunkSize
  fullName: Google.Apis.Upload.ResumableUpload.chunkSize
- uid: Google.Apis.Upload.ResumableUpload.ChunkSize
  commentId: P:Google.Apis.Upload.ResumableUpload.ChunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: ChunkSize
  nameWithType: ResumableUpload.ChunkSize
  fullName: Google.Apis.Upload.ResumableUpload.ChunkSize
- uid: Google.Apis.Upload.ResumableUpload.ProgressChanged
  commentId: E:Google.Apis.Upload.ResumableUpload.ProgressChanged
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: ProgressChanged
  nameWithType: ResumableUpload.ProgressChanged
  fullName: Google.Apis.Upload.ResumableUpload.ProgressChanged
- uid: Google.Apis.Upload.ResumableUpload.GetProgress
  commentId: M:Google.Apis.Upload.ResumableUpload.GetProgress
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: GetProgress()
  nameWithType: ResumableUpload.GetProgress()
  fullName: Google.Apis.Upload.ResumableUpload.GetProgress()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.GetProgress
    name: GetProgress
    nameWithType: ResumableUpload.GetProgress
    fullName: Google.Apis.Upload.ResumableUpload.GetProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.GetProgress
    name: GetProgress
    nameWithType: ResumableUpload.GetProgress
    fullName: Google.Apis.Upload.ResumableUpload.GetProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.UploadSessionData
  commentId: E:Google.Apis.Upload.ResumableUpload.UploadSessionData
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: UploadSessionData
  nameWithType: ResumableUpload.UploadSessionData
  fullName: Google.Apis.Upload.ResumableUpload.UploadSessionData
- uid: Google.Apis.Upload.ResumableUpload.Upload
  commentId: M:Google.Apis.Upload.ResumableUpload.Upload
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: Upload()
  nameWithType: ResumableUpload.Upload()
  fullName: Google.Apis.Upload.ResumableUpload.Upload()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.Upload
    name: Upload
    nameWithType: ResumableUpload.Upload
    fullName: Google.Apis.Upload.ResumableUpload.Upload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.Upload
    name: Upload
    nameWithType: ResumableUpload.Upload
    fullName: Google.Apis.Upload.ResumableUpload.Upload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.UploadAsync
  commentId: M:Google.Apis.Upload.ResumableUpload.UploadAsync
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: UploadAsync()
  nameWithType: ResumableUpload.UploadAsync()
  fullName: Google.Apis.Upload.ResumableUpload.UploadAsync()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: UploadAsync(CancellationToken)
  nameWithType: ResumableUpload.UploadAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.Resume
  commentId: M:Google.Apis.Upload.ResumableUpload.Resume
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: Resume()
  nameWithType: ResumableUpload.Resume()
  fullName: Google.Apis.Upload.ResumableUpload.Resume()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.Resume
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.Resume
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  commentId: M:Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: Resume(Uri)
  nameWithType: ResumableUpload.Resume(Uri)
  fullName: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: ResumeAsync()
  nameWithType: ResumableUpload.ResumeAsync()
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ResumeAsync(CancellationToken)
  nameWithType: ResumableUpload.ResumeAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ResumeAsync(Uri)
  nameWithType: ResumableUpload.ResumeAsync(Uri)
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ResumeAsync(Uri, CancellationToken)
  nameWithType: ResumableUpload.ResumeAsync(Uri, CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ProcessResponse(HttpResponseMessage)
  commentId: M:Google.Apis.Upload.ResumableUpload.ProcessResponse(HttpResponseMessage)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ProcessResponse(HttpResponseMessage)
  nameWithType: ResumableUpload.ProcessResponse(HttpResponseMessage)
  fullName: Google.Apis.Upload.ResumableUpload.ProcessResponse(HttpResponseMessage)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ProcessResponse(HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload.ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload.ProcessResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ProcessResponse(HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload.ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload.ProcessResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: SendNextChunkAsync(Stream, CancellationToken)
  nameWithType: ResumableUpload.SendNextChunkAsync(Stream, CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: SendNextChunkAsync
    nameWithType: ResumableUpload.SendNextChunkAsync
    fullName: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: SendNextChunkAsync
    nameWithType: ResumableUpload.SendNextChunkAsync
    fullName: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(HttpResponseMessage)
  commentId: M:Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(HttpResponseMessage)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ExceptionForResponseAsync(HttpResponseMessage)
  nameWithType: ResumableUpload.ExceptionForResponseAsync(HttpResponseMessage)
  fullName: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(HttpResponseMessage)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(HttpResponseMessage)
    name: ExceptionForResponseAsync
    nameWithType: ResumableUpload.ExceptionForResponseAsync
    fullName: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(HttpResponseMessage)
    name: ExceptionForResponseAsync
    nameWithType: ResumableUpload.ExceptionForResponseAsync
    fullName: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Upload.ResumableUpload`1.#ctor*
  commentId: Overload:Google.Apis.Upload.ResumableUpload`1.#ctor
  isExternal: false
  name: ResumableUpload
  nameWithType: ResumableUpload<TRequest>.ResumableUpload
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.ResumableUpload
  nameWithType.vb: ResumableUpload(Of TRequest).ResumableUpload
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).ResumableUpload
- uid: Google.Apis.Services.IClientService
  commentId: T:Google.Apis.Services.IClientService
  parent: Google.Apis.Services
  isExternal: false
  name: IClientService
  nameWithType: IClientService
  fullName: Google.Apis.Services.IClientService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Google.Apis.Services
  commentId: N:Google.Apis.Services
  isExternal: false
  name: Google.Apis.Services
  nameWithType: Google.Apis.Services
  fullName: Google.Apis.Services
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Google.Apis.Upload.ResumableUpload`1.Service*
  commentId: Overload:Google.Apis.Upload.ResumableUpload`1.Service
  isExternal: false
  name: Service
  nameWithType: ResumableUpload<TRequest>.Service
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Service
  nameWithType.vb: ResumableUpload(Of TRequest).Service
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Service
- uid: Google.Apis.Services.IClientService.BaseUri
  commentId: P:Google.Apis.Services.IClientService.BaseUri
  parent: Google.Apis.Services.IClientService
  isExternal: false
  name: BaseUri
  nameWithType: IClientService.BaseUri
  fullName: Google.Apis.Services.IClientService.BaseUri
- uid: Google.Apis.Upload.ResumableUpload`1.Path*
  commentId: Overload:Google.Apis.Upload.ResumableUpload`1.Path
  isExternal: false
  name: Path
  nameWithType: ResumableUpload<TRequest>.Path
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Path
  nameWithType.vb: ResumableUpload(Of TRequest).Path
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Path
- uid: Google.Apis.Upload.ResumableUpload`1.HttpMethod*
  commentId: Overload:Google.Apis.Upload.ResumableUpload`1.HttpMethod
  isExternal: false
  name: HttpMethod
  nameWithType: ResumableUpload<TRequest>.HttpMethod
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.HttpMethod
  nameWithType.vb: ResumableUpload(Of TRequest).HttpMethod
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).HttpMethod
- uid: Google.Apis.Upload.ResumableUpload`1.ContentType*
  commentId: Overload:Google.Apis.Upload.ResumableUpload`1.ContentType
  isExternal: false
  name: ContentType
  nameWithType: ResumableUpload<TRequest>.ContentType
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.ContentType
  nameWithType.vb: ResumableUpload(Of TRequest).ContentType
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).ContentType
- uid: Google.Apis.Upload.ResumableUpload`1.Body*
  commentId: Overload:Google.Apis.Upload.ResumableUpload`1.Body
  isExternal: false
  name: Body
  nameWithType: ResumableUpload<TRequest>.Body
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Body
  nameWithType.vb: ResumableUpload(Of TRequest).Body
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Body
- uid: '{TRequest}'
  commentId: '!:TRequest'
  definition: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: TRequest
  isExternal: false
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: Google.Apis.Upload.ResumableUpload.InitiateSessionAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.InitiateSessionAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: InitiateSessionAsync(CancellationToken)
  nameWithType: ResumableUpload.InitiateSessionAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.InitiateSessionAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.InitiateSessionAsync(System.Threading.CancellationToken)
    name: InitiateSessionAsync
    nameWithType: ResumableUpload.InitiateSessionAsync
    fullName: Google.Apis.Upload.ResumableUpload.InitiateSessionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.InitiateSessionAsync(System.Threading.CancellationToken)
    name: InitiateSessionAsync
    nameWithType: ResumableUpload.InitiateSessionAsync
    fullName: Google.Apis.Upload.ResumableUpload.InitiateSessionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync*
  commentId: Overload:Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync
  isExternal: false
  name: InitiateSessionAsync
  nameWithType: ResumableUpload<TRequest>.InitiateSessionAsync
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.InitiateSessionAsync
  nameWithType.vb: ResumableUpload(Of TRequest).InitiateSessionAsync
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).InitiateSessionAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Uri}
  commentId: T:System.Threading.Tasks.Task{System.Uri}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Uri>
  nameWithType: Task<Uri>
  fullName: System.Threading.Tasks.Task<System.Uri>
  nameWithType.vb: Task(Of Uri)
  fullName.vb: System.Threading.Tasks.Task(Of System.Uri)
  name.vb: Task(Of Uri)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
