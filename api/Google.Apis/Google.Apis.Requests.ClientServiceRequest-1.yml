### YamlMime:ManagedReference
items:
- uid: Google.Apis.Requests.ClientServiceRequest`1
  commentId: T:Google.Apis.Requests.ClientServiceRequest`1
  id: ClientServiceRequest`1
  parent: Google.Apis.Requests
  children:
  - Google.Apis.Requests.ClientServiceRequest`1.#ctor(Google.Apis.Services.IClientService)
  - Google.Apis.Requests.ClientServiceRequest`1.CreateRequest(System.Nullable{System.Boolean})
  - Google.Apis.Requests.ClientServiceRequest`1.ETagAction
  - Google.Apis.Requests.ClientServiceRequest`1.Execute
  - Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStream
  - Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStreamAsync
  - Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  - Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsync
  - Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsync(System.Threading.CancellationToken)
  - Google.Apis.Requests.ClientServiceRequest`1.GenerateRequestUri
  - Google.Apis.Requests.ClientServiceRequest`1.GetBody
  - Google.Apis.Requests.ClientServiceRequest`1.GetDefaultETagAction(System.String)
  - Google.Apis.Requests.ClientServiceRequest`1.HttpMethod
  - Google.Apis.Requests.ClientServiceRequest`1.InitParameters
  - Google.Apis.Requests.ClientServiceRequest`1.MethodName
  - Google.Apis.Requests.ClientServiceRequest`1.ModifyRequest
  - Google.Apis.Requests.ClientServiceRequest`1.RequestParameters
  - Google.Apis.Requests.ClientServiceRequest`1.RestPath
  - Google.Apis.Requests.ClientServiceRequest`1.Service
  langs:
  - csharp
  - vb
  name: ClientServiceRequest<TResponse>
  nameWithType: ClientServiceRequest<TResponse>
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ClientServiceRequest
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 40
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: "\nRepresents an abstract, strongly typed request base class to make requests to a service.\nSupports a strongly typed response.\n"
  example: []
  syntax:
    content: 'public abstract class ClientServiceRequest<TResponse> : IClientServiceRequest<TResponse>, IClientServiceRequest'
    typeParameters:
    - id: TResponse
      description: The type of the response object
    content.vb: >-
      Public MustInherit Class ClientServiceRequest(Of TResponse)
          Implements IClientServiceRequest(Of TResponse), IClientServiceRequest
  inheritance:
  - System.Object
  implements:
  - Google.Apis.Requests.IClientServiceRequest{{TResponse}}
  - Google.Apis.Requests.IClientServiceRequest
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ClientServiceRequest(Of TResponse)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse)
  name.vb: ClientServiceRequest(Of TResponse)
- uid: Google.Apis.Requests.ClientServiceRequest`1.ETagAction
  commentId: P:Google.Apis.Requests.ClientServiceRequest`1.ETagAction
  id: ETagAction
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: ETagAction
  nameWithType: ClientServiceRequest<TResponse>.ETagAction
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.ETagAction
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ETagAction
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 49
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Defines whether the E-Tag will be used in a specified way or be ignored.
  example: []
  syntax:
    content: public ETagAction ETagAction { get; set; }
    parameters: []
    return:
      type: Google.Apis.ETagAction
    content.vb: Public Property ETagAction As ETagAction
  overload: Google.Apis.Requests.ClientServiceRequest`1.ETagAction*
  nameWithType.vb: ClientServiceRequest(Of TResponse).ETagAction
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).ETagAction
- uid: Google.Apis.Requests.ClientServiceRequest`1.ModifyRequest
  commentId: P:Google.Apis.Requests.ClientServiceRequest`1.ModifyRequest
  id: ModifyRequest
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: ModifyRequest
  nameWithType: ClientServiceRequest<TResponse>.ModifyRequest
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.ModifyRequest
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ModifyRequest
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 54
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: "\nGets or sets the callback for modifying HTTP requests made by this service request.\n"
  example: []
  syntax:
    content: public Action<HttpRequestMessage> ModifyRequest { get; set; }
    parameters: []
    return:
      type: System.Action{System.Net.Http.HttpRequestMessage}
    content.vb: Public Property ModifyRequest As Action(Of HttpRequestMessage)
  overload: Google.Apis.Requests.ClientServiceRequest`1.ModifyRequest*
  nameWithType.vb: ClientServiceRequest(Of TResponse).ModifyRequest
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).ModifyRequest
- uid: Google.Apis.Requests.ClientServiceRequest`1.MethodName
  commentId: P:Google.Apis.Requests.ClientServiceRequest`1.MethodName
  id: MethodName
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: MethodName
  nameWithType: ClientServiceRequest<TResponse>.MethodName
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.MethodName
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: MethodName
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 59
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Gets the name of the method to which this request belongs.
  example: []
  syntax:
    content: public abstract string MethodName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property MethodName As String
  overload: Google.Apis.Requests.ClientServiceRequest`1.MethodName*
  implements:
  - Google.Apis.Requests.IClientServiceRequest.MethodName
  nameWithType.vb: ClientServiceRequest(Of TResponse).MethodName
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).MethodName
- uid: Google.Apis.Requests.ClientServiceRequest`1.RestPath
  commentId: P:Google.Apis.Requests.ClientServiceRequest`1.RestPath
  id: RestPath
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: RestPath
  nameWithType: ClientServiceRequest<TResponse>.RestPath
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.RestPath
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RestPath
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 62
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Gets the rest path of this request.
  example: []
  syntax:
    content: public abstract string RestPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property RestPath As String
  overload: Google.Apis.Requests.ClientServiceRequest`1.RestPath*
  implements:
  - Google.Apis.Requests.IClientServiceRequest.RestPath
  nameWithType.vb: ClientServiceRequest(Of TResponse).RestPath
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).RestPath
- uid: Google.Apis.Requests.ClientServiceRequest`1.HttpMethod
  commentId: P:Google.Apis.Requests.ClientServiceRequest`1.HttpMethod
  id: HttpMethod
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: HttpMethod
  nameWithType: ClientServiceRequest<TResponse>.HttpMethod
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.HttpMethod
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: HttpMethod
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 65
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Gets the HTTP method of this request.
  example: []
  syntax:
    content: public abstract string HttpMethod { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property HttpMethod As String
  overload: Google.Apis.Requests.ClientServiceRequest`1.HttpMethod*
  implements:
  - Google.Apis.Requests.IClientServiceRequest.HttpMethod
  nameWithType.vb: ClientServiceRequest(Of TResponse).HttpMethod
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).HttpMethod
- uid: Google.Apis.Requests.ClientServiceRequest`1.RequestParameters
  commentId: P:Google.Apis.Requests.ClientServiceRequest`1.RequestParameters
  id: RequestParameters
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: RequestParameters
  nameWithType: ClientServiceRequest<TResponse>.RequestParameters
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.RequestParameters
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: RequestParameters
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 68
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Gets the parameters information for this specific request.
  example: []
  syntax:
    content: public IDictionary<string, IParameter> RequestParameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Google.Apis.Discovery.IParameter}
    content.vb: Public ReadOnly Property RequestParameters As IDictionary(Of String, IParameter)
  overload: Google.Apis.Requests.ClientServiceRequest`1.RequestParameters*
  implements:
  - Google.Apis.Requests.IClientServiceRequest.RequestParameters
  nameWithType.vb: ClientServiceRequest(Of TResponse).RequestParameters
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).RequestParameters
- uid: Google.Apis.Requests.ClientServiceRequest`1.Service
  commentId: P:Google.Apis.Requests.ClientServiceRequest`1.Service
  id: Service
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: Service
  nameWithType: ClientServiceRequest<TResponse>.Service
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.Service
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Service
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 71
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Gets the service which is related to this request.
  example: []
  syntax:
    content: public IClientService Service { get; }
    parameters: []
    return:
      type: Google.Apis.Services.IClientService
    content.vb: Public ReadOnly Property Service As IClientService
  overload: Google.Apis.Requests.ClientServiceRequest`1.Service*
  implements:
  - Google.Apis.Requests.IClientServiceRequest.Service
  nameWithType.vb: ClientServiceRequest(Of TResponse).Service
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).Service
- uid: Google.Apis.Requests.ClientServiceRequest`1.#ctor(Google.Apis.Services.IClientService)
  commentId: M:Google.Apis.Requests.ClientServiceRequest`1.#ctor(Google.Apis.Services.IClientService)
  id: '#ctor(Google.Apis.Services.IClientService)'
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: ClientServiceRequest(IClientService)
  nameWithType: ClientServiceRequest<TResponse>.ClientServiceRequest(IClientService)
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.ClientServiceRequest(Google.Apis.Services.IClientService)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 79
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Creates a new service request.
  example: []
  syntax:
    content: protected ClientServiceRequest(IClientService service)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
    content.vb: Protected Sub New(service As IClientService)
  overload: Google.Apis.Requests.ClientServiceRequest`1.#ctor*
  nameWithType.vb: ClientServiceRequest(Of TResponse).ClientServiceRequest(IClientService)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).ClientServiceRequest(Google.Apis.Services.IClientService)
- uid: Google.Apis.Requests.ClientServiceRequest`1.InitParameters
  commentId: M:Google.Apis.Requests.ClientServiceRequest`1.InitParameters
  id: InitParameters
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: InitParameters()
  nameWithType: ClientServiceRequest<TResponse>.InitParameters()
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.InitParameters()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: InitParameters
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 88
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: "\nInitializes request&apos;s parameters. Inherited classes MUST override this method to add parameters to the\n<xref href=\"Google.Apis.Requests.ClientServiceRequest%601.RequestParameters\" data-throw-if-not-resolved=\"false\"></xref> dictionary.\n"
  example: []
  syntax:
    content: protected virtual void InitParameters()
    content.vb: Protected Overridable Sub InitParameters
  overload: Google.Apis.Requests.ClientServiceRequest`1.InitParameters*
  nameWithType.vb: ClientServiceRequest(Of TResponse).InitParameters()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).InitParameters()
- uid: Google.Apis.Requests.ClientServiceRequest`1.Execute
  commentId: M:Google.Apis.Requests.ClientServiceRequest`1.Execute
  id: Execute
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: ClientServiceRequest<TResponse>.Execute()
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.Execute()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Execute
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 96
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  example: []
  syntax:
    content: public TResponse Execute()
    return:
      type: '{TResponse}'
    content.vb: Public Function Execute As TResponse
  overload: Google.Apis.Requests.ClientServiceRequest`1.Execute*
  implements:
  - Google.Apis.Requests.IClientServiceRequest{{TResponse}}.Execute
  nameWithType.vb: ClientServiceRequest(Of TResponse).Execute()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).Execute()
- uid: Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStream
  commentId: M:Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStream
  id: ExecuteAsStream
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: ExecuteAsStream()
  nameWithType: ClientServiceRequest<TResponse>.ExecuteAsStream()
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.ExecuteAsStream()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteAsStream
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 117
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Executes the request and returns the result stream.
  example: []
  syntax:
    content: public Stream ExecuteAsStream()
    return:
      type: System.IO.Stream
    content.vb: Public Function ExecuteAsStream As Stream
  overload: Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStream*
  implements:
  - Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
  nameWithType.vb: ClientServiceRequest(Of TResponse).ExecuteAsStream()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).ExecuteAsStream()
- uid: Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsync
  commentId: M:Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsync
  id: ExecuteAsync
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync()
  nameWithType: ClientServiceRequest<TResponse>.ExecuteAsync()
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.ExecuteAsync()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteAsync
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 138
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  example: []
  syntax:
    content: public Task<TResponse> ExecuteAsync()
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Public Function ExecuteAsync As Task(Of TResponse)
  overload: Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsync*
  implements:
  - Google.Apis.Requests.IClientServiceRequest{{TResponse}}.ExecuteAsync
  nameWithType.vb: ClientServiceRequest(Of TResponse).ExecuteAsync()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).ExecuteAsync()
- uid: Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsync(System.Threading.CancellationToken)
  id: ExecuteAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync(CancellationToken)
  nameWithType: ClientServiceRequest<TResponse>.ExecuteAsync(CancellationToken)
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.ExecuteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteAsync
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 144
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  example: []
  syntax:
    content: public Task<TResponse> ExecuteAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Public Function ExecuteAsync(cancellationToken As CancellationToken) As Task(Of TResponse)
  overload: Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsync*
  implements:
  - Google.Apis.Requests.IClientServiceRequest{{TResponse}}.ExecuteAsync(System.Threading.CancellationToken)
  nameWithType.vb: ClientServiceRequest(Of TResponse).ExecuteAsync(CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).ExecuteAsync(System.Threading.CancellationToken)
- uid: Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStreamAsync
  commentId: M:Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStreamAsync
  id: ExecuteAsStreamAsync
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: ExecuteAsStreamAsync()
  nameWithType: ClientServiceRequest<TResponse>.ExecuteAsStreamAsync()
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.ExecuteAsStreamAsync()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteAsStreamAsync
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 154
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Executes the request asynchronously and returns the result stream.
  example: []
  syntax:
    content: public Task<Stream> ExecuteAsStreamAsync()
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
    content.vb: Public Function ExecuteAsStreamAsync As Task(Of Stream)
  overload: Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStreamAsync*
  implements:
  - Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  nameWithType.vb: ClientServiceRequest(Of TResponse).ExecuteAsStreamAsync()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).ExecuteAsStreamAsync()
- uid: Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  id: ExecuteAsStreamAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: ExecuteAsStreamAsync(CancellationToken)
  nameWithType: ClientServiceRequest<TResponse>.ExecuteAsStreamAsync(CancellationToken)
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteAsStreamAsync
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 160
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Executes the request asynchronously and returns the result stream.
  example: []
  syntax:
    content: public Task<Stream> ExecuteAsStreamAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
    content.vb: Public Function ExecuteAsStreamAsync(cancellationToken As CancellationToken) As Task(Of Stream)
  overload: Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStreamAsync*
  implements:
  - Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  nameWithType.vb: ClientServiceRequest(Of TResponse).ExecuteAsStreamAsync(CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).ExecuteAsStreamAsync(System.Threading.CancellationToken)
- uid: Google.Apis.Requests.ClientServiceRequest`1.CreateRequest(System.Nullable{System.Boolean})
  commentId: M:Google.Apis.Requests.ClientServiceRequest`1.CreateRequest(System.Nullable{System.Boolean})
  id: CreateRequest(System.Nullable{System.Boolean})
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: CreateRequest(Nullable<Boolean>)
  nameWithType: ClientServiceRequest<TResponse>.CreateRequest(Nullable<Boolean>)
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.CreateRequest(System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: CreateRequest
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 200
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Creates a HTTP request message with all path and query parameters, ETag, etc.
  example: []
  syntax:
    content: public HttpRequestMessage CreateRequest(bool ? overrideGZipEnabled = default (bool ? ))
    parameters:
    - id: overrideGZipEnabled
      type: System.Nullable{System.Boolean}
      description: "\nIf <code>null</code> use the service default GZip behavior. Otherwise indicates if GZip is enabled or disabled.\n"
    return:
      type: System.Net.Http.HttpRequestMessage
    content.vb: Public Function CreateRequest(overrideGZipEnabled As Boolean? = Nothing) As HttpRequestMessage
  overload: Google.Apis.Requests.ClientServiceRequest`1.CreateRequest*
  implements:
  - Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable{System.Boolean})
  nameWithType.vb: ClientServiceRequest(Of TResponse).CreateRequest(Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).CreateRequest(System.Nullable(Of System.Boolean))
  name.vb: CreateRequest(Nullable(Of Boolean))
- uid: Google.Apis.Requests.ClientServiceRequest`1.GenerateRequestUri
  commentId: M:Google.Apis.Requests.ClientServiceRequest`1.GenerateRequestUri
  id: GenerateRequestUri
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: GenerateRequestUri()
  nameWithType: ClientServiceRequest<TResponse>.GenerateRequestUri()
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.GenerateRequestUri()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GenerateRequestUri
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 238
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Generates the right URL for this request.
  example: []
  syntax:
    content: protected string GenerateRequestUri()
    return:
      type: System.String
    content.vb: Protected Function GenerateRequestUri As String
  overload: Google.Apis.Requests.ClientServiceRequest`1.GenerateRequestUri*
  nameWithType.vb: ClientServiceRequest(Of TResponse).GenerateRequestUri()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).GenerateRequestUri()
- uid: Google.Apis.Requests.ClientServiceRequest`1.GetBody
  commentId: M:Google.Apis.Requests.ClientServiceRequest`1.GetBody
  id: GetBody
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: GetBody()
  nameWithType: ClientServiceRequest<TResponse>.GetBody()
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.GetBody()
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GetBody
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 245
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Returns the body of this request.
  example: []
  syntax:
    content: protected virtual object GetBody()
    return:
      type: System.Object
      description: The body of this request.
    content.vb: Protected Overridable Function GetBody As Object
  overload: Google.Apis.Requests.ClientServiceRequest`1.GetBody*
  nameWithType.vb: ClientServiceRequest(Of TResponse).GetBody()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).GetBody()
- uid: Google.Apis.Requests.ClientServiceRequest`1.GetDefaultETagAction(System.String)
  commentId: M:Google.Apis.Requests.ClientServiceRequest`1.GetDefaultETagAction(System.String)
  id: GetDefaultETagAction(System.String)
  parent: Google.Apis.Requests.ClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: GetDefaultETagAction(String)
  nameWithType: ClientServiceRequest<TResponse>.GetDefaultETagAction(String)
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.GetDefaultETagAction(System.String)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: GetDefaultETagAction
    path: Src/Support/Google.Apis/Requests/ClientServiceRequest.cs
    startLine: 280
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Returns the default ETagAction for a specific HTTP verb.
  example: []
  syntax:
    content: public static ETagAction GetDefaultETagAction(string httpMethod)
    parameters:
    - id: httpMethod
      type: System.String
    return:
      type: Google.Apis.ETagAction
    content.vb: Public Shared Function GetDefaultETagAction(httpMethod As String) As ETagAction
  overload: Google.Apis.Requests.ClientServiceRequest`1.GetDefaultETagAction*
  nameWithType.vb: ClientServiceRequest(Of TResponse).GetDefaultETagAction(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).GetDefaultETagAction(System.String)
references:
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: false
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Requests.IClientServiceRequest{{TResponse}}
  commentId: T:Google.Apis.Requests.IClientServiceRequest{`0}
  parent: Google.Apis.Requests
  definition: Google.Apis.Requests.IClientServiceRequest`1
  name: IClientServiceRequest<TResponse>
  nameWithType: IClientServiceRequest<TResponse>
  fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>
  nameWithType.vb: IClientServiceRequest(Of TResponse)
  fullName.vb: Google.Apis.Requests.IClientServiceRequest(Of TResponse)
  name.vb: IClientServiceRequest(Of TResponse)
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest`1
    name: IClientServiceRequest
    nameWithType: IClientServiceRequest
    fullName: Google.Apis.Requests.IClientServiceRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest`1
    name: IClientServiceRequest
    nameWithType: IClientServiceRequest
    fullName: Google.Apis.Requests.IClientServiceRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Requests.IClientServiceRequest
  commentId: T:Google.Apis.Requests.IClientServiceRequest
  parent: Google.Apis.Requests
  isExternal: false
  name: IClientServiceRequest
  nameWithType: IClientServiceRequest
  fullName: Google.Apis.Requests.IClientServiceRequest
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests.IClientServiceRequest`1
  commentId: T:Google.Apis.Requests.IClientServiceRequest`1
  isExternal: false
  name: IClientServiceRequest<TResponse>
  nameWithType: IClientServiceRequest<TResponse>
  fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>
  nameWithType.vb: IClientServiceRequest(Of TResponse)
  fullName.vb: Google.Apis.Requests.IClientServiceRequest(Of TResponse)
  name.vb: IClientServiceRequest(Of TResponse)
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest`1
    name: IClientServiceRequest
    nameWithType: IClientServiceRequest
    fullName: Google.Apis.Requests.IClientServiceRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest`1
    name: IClientServiceRequest
    nameWithType: IClientServiceRequest
    fullName: Google.Apis.Requests.IClientServiceRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Requests.ClientServiceRequest`1.ETagAction*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.ETagAction
  isExternal: false
  name: ETagAction
  nameWithType: ClientServiceRequest<TResponse>.ETagAction
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.ETagAction
  nameWithType.vb: ClientServiceRequest(Of TResponse).ETagAction
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).ETagAction
- uid: Google.Apis.ETagAction
  commentId: T:Google.Apis.ETagAction
  parent: Google.Apis
  isExternal: false
  name: ETagAction
  nameWithType: ETagAction
  fullName: Google.Apis.ETagAction
- uid: Google.Apis
  commentId: N:Google.Apis
  isExternal: false
  name: Google.Apis
  nameWithType: Google.Apis
  fullName: Google.Apis
- uid: Google.Apis.Requests.ClientServiceRequest`1.ModifyRequest*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.ModifyRequest
  isExternal: false
  name: ModifyRequest
  nameWithType: ClientServiceRequest<TResponse>.ModifyRequest
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.ModifyRequest
  nameWithType.vb: ClientServiceRequest(Of TResponse).ModifyRequest
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).ModifyRequest
- uid: System.Action{System.Net.Http.HttpRequestMessage}
  commentId: T:System.Action{System.Net.Http.HttpRequestMessage}
  parent: System
  definition: System.Action`1
  name: Action<HttpRequestMessage>
  nameWithType: Action<HttpRequestMessage>
  fullName: System.Action<System.Net.Http.HttpRequestMessage>
  nameWithType.vb: Action(Of HttpRequestMessage)
  fullName.vb: System.Action(Of System.Net.Http.HttpRequestMessage)
  name.vb: Action(Of HttpRequestMessage)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Requests.ClientServiceRequest`1.MethodName*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.MethodName
  isExternal: false
  name: MethodName
  nameWithType: ClientServiceRequest<TResponse>.MethodName
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.MethodName
  nameWithType.vb: ClientServiceRequest(Of TResponse).MethodName
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).MethodName
- uid: Google.Apis.Requests.IClientServiceRequest.MethodName
  commentId: P:Google.Apis.Requests.IClientServiceRequest.MethodName
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: false
  name: MethodName
  nameWithType: IClientServiceRequest.MethodName
  fullName: Google.Apis.Requests.IClientServiceRequest.MethodName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Requests.ClientServiceRequest`1.RestPath*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.RestPath
  isExternal: false
  name: RestPath
  nameWithType: ClientServiceRequest<TResponse>.RestPath
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.RestPath
  nameWithType.vb: ClientServiceRequest(Of TResponse).RestPath
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).RestPath
- uid: Google.Apis.Requests.IClientServiceRequest.RestPath
  commentId: P:Google.Apis.Requests.IClientServiceRequest.RestPath
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: false
  name: RestPath
  nameWithType: IClientServiceRequest.RestPath
  fullName: Google.Apis.Requests.IClientServiceRequest.RestPath
- uid: Google.Apis.Requests.ClientServiceRequest`1.HttpMethod*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.HttpMethod
  isExternal: false
  name: HttpMethod
  nameWithType: ClientServiceRequest<TResponse>.HttpMethod
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.HttpMethod
  nameWithType.vb: ClientServiceRequest(Of TResponse).HttpMethod
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).HttpMethod
- uid: Google.Apis.Requests.IClientServiceRequest.HttpMethod
  commentId: P:Google.Apis.Requests.IClientServiceRequest.HttpMethod
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: false
  name: HttpMethod
  nameWithType: IClientServiceRequest.HttpMethod
  fullName: Google.Apis.Requests.IClientServiceRequest.HttpMethod
- uid: Google.Apis.Requests.ClientServiceRequest`1.RequestParameters*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.RequestParameters
  isExternal: false
  name: RequestParameters
  nameWithType: ClientServiceRequest<TResponse>.RequestParameters
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.RequestParameters
  nameWithType.vb: ClientServiceRequest(Of TResponse).RequestParameters
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).RequestParameters
- uid: Google.Apis.Requests.IClientServiceRequest.RequestParameters
  commentId: P:Google.Apis.Requests.IClientServiceRequest.RequestParameters
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: false
  name: RequestParameters
  nameWithType: IClientServiceRequest.RequestParameters
  fullName: Google.Apis.Requests.IClientServiceRequest.RequestParameters
- uid: System.Collections.Generic.IDictionary{System.String,Google.Apis.Discovery.IParameter}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Google.Apis.Discovery.IParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IParameter>
  nameWithType: IDictionary<String, IParameter>
  fullName: System.Collections.Generic.IDictionary<System.String, Google.Apis.Discovery.IParameter>
  nameWithType.vb: IDictionary(Of String, IParameter)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Google.Apis.Discovery.IParameter)
  name.vb: IDictionary(Of String, IParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Discovery.IParameter
    name: IParameter
    nameWithType: IParameter
    fullName: Google.Apis.Discovery.IParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Discovery.IParameter
    name: IParameter
    nameWithType: IParameter
    fullName: Google.Apis.Discovery.IParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Apis.Requests.ClientServiceRequest`1.Service*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.Service
  isExternal: false
  name: Service
  nameWithType: ClientServiceRequest<TResponse>.Service
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.Service
  nameWithType.vb: ClientServiceRequest(Of TResponse).Service
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).Service
- uid: Google.Apis.Requests.IClientServiceRequest.Service
  commentId: P:Google.Apis.Requests.IClientServiceRequest.Service
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: false
  name: Service
  nameWithType: IClientServiceRequest.Service
  fullName: Google.Apis.Requests.IClientServiceRequest.Service
- uid: Google.Apis.Services.IClientService
  commentId: T:Google.Apis.Services.IClientService
  parent: Google.Apis.Services
  isExternal: false
  name: IClientService
  nameWithType: IClientService
  fullName: Google.Apis.Services.IClientService
- uid: Google.Apis.Services
  commentId: N:Google.Apis.Services
  isExternal: false
  name: Google.Apis.Services
  nameWithType: Google.Apis.Services
  fullName: Google.Apis.Services
- uid: Google.Apis.Requests.ClientServiceRequest`1.#ctor*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.#ctor
  isExternal: false
  name: ClientServiceRequest
  nameWithType: ClientServiceRequest<TResponse>.ClientServiceRequest
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.ClientServiceRequest
  nameWithType.vb: ClientServiceRequest(Of TResponse).ClientServiceRequest
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).ClientServiceRequest
- uid: Google.Apis.Requests.ClientServiceRequest`1.RequestParameters
  commentId: P:Google.Apis.Requests.ClientServiceRequest`1.RequestParameters
- uid: Google.Apis.Requests.ClientServiceRequest`1.InitParameters*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.InitParameters
  isExternal: false
  name: InitParameters
  nameWithType: ClientServiceRequest<TResponse>.InitParameters
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.InitParameters
  nameWithType.vb: ClientServiceRequest(Of TResponse).InitParameters
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).InitParameters
- uid: Google.Apis.Requests.ClientServiceRequest`1.Execute*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.Execute
  isExternal: false
  name: Execute
  nameWithType: ClientServiceRequest<TResponse>.Execute
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.Execute
  nameWithType.vb: ClientServiceRequest(Of TResponse).Execute
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).Execute
- uid: Google.Apis.Requests.IClientServiceRequest{{TResponse}}.Execute
  commentId: M:Google.Apis.Requests.IClientServiceRequest{`0}.Execute
  parent: Google.Apis.Requests.IClientServiceRequest{{TResponse}}
  definition: Google.Apis.Requests.IClientServiceRequest`1.Execute
  name: Execute()
  nameWithType: IClientServiceRequest<TResponse>.Execute()
  fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.Execute()
  nameWithType.vb: IClientServiceRequest(Of TResponse).Execute()
  fullName.vb: Google.Apis.Requests.IClientServiceRequest(Of TResponse).Execute()
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest`1.Execute
    name: Execute
    nameWithType: IClientServiceRequest<TResponse>.Execute
    fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest`1.Execute
    name: Execute
    nameWithType: IClientServiceRequest(Of TResponse).Execute
    fullName: Google.Apis.Requests.IClientServiceRequest(Of TResponse).Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TResponse}'
  commentId: '!:TResponse'
  definition: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: Google.Apis.Requests.IClientServiceRequest`1.Execute
  commentId: M:Google.Apis.Requests.IClientServiceRequest`1.Execute
  isExternal: false
  name: Execute()
  nameWithType: IClientServiceRequest<TResponse>.Execute()
  fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.Execute()
  nameWithType.vb: IClientServiceRequest(Of TResponse).Execute()
  fullName.vb: Google.Apis.Requests.IClientServiceRequest(Of TResponse).Execute()
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest`1.Execute
    name: Execute
    nameWithType: IClientServiceRequest<TResponse>.Execute
    fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest`1.Execute
    name: Execute
    nameWithType: IClientServiceRequest(Of TResponse).Execute
    fullName: Google.Apis.Requests.IClientServiceRequest(Of TResponse).Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TResponse
  isExternal: false
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStream*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStream
  isExternal: false
  name: ExecuteAsStream
  nameWithType: ClientServiceRequest<TResponse>.ExecuteAsStream
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.ExecuteAsStream
  nameWithType.vb: ClientServiceRequest(Of TResponse).ExecuteAsStream
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).ExecuteAsStream
- uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
  commentId: M:Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: false
  name: ExecuteAsStream()
  nameWithType: IClientServiceRequest.ExecuteAsStream()
  fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream()
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
    name: ExecuteAsStream
    nameWithType: IClientServiceRequest.ExecuteAsStream
    fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
    name: ExecuteAsStream
    nameWithType: IClientServiceRequest.ExecuteAsStream
    fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsync*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsync
  isExternal: false
  name: ExecuteAsync
  nameWithType: ClientServiceRequest<TResponse>.ExecuteAsync
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.ExecuteAsync
  nameWithType.vb: ClientServiceRequest(Of TResponse).ExecuteAsync
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).ExecuteAsync
- uid: Google.Apis.Requests.IClientServiceRequest{{TResponse}}.ExecuteAsync
  commentId: M:Google.Apis.Requests.IClientServiceRequest{`0}.ExecuteAsync
  parent: Google.Apis.Requests.IClientServiceRequest{{TResponse}}
  definition: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync
  name: ExecuteAsync()
  nameWithType: IClientServiceRequest<TResponse>.ExecuteAsync()
  fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.ExecuteAsync()
  nameWithType.vb: IClientServiceRequest(Of TResponse).ExecuteAsync()
  fullName.vb: Google.Apis.Requests.IClientServiceRequest(Of TResponse).ExecuteAsync()
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync
    name: ExecuteAsync
    nameWithType: IClientServiceRequest<TResponse>.ExecuteAsync
    fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync
    name: ExecuteAsync
    nameWithType: IClientServiceRequest(Of TResponse).ExecuteAsync
    fullName: Google.Apis.Requests.IClientServiceRequest(Of TResponse).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TResponse}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResponse>
  nameWithType: Task<TResponse>
  fullName: System.Threading.Tasks.Task<TResponse>
  nameWithType.vb: Task(Of TResponse)
  fullName.vb: System.Threading.Tasks.Task(Of TResponse)
  name.vb: Task(Of TResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync
  commentId: M:Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync
  isExternal: false
  name: ExecuteAsync()
  nameWithType: IClientServiceRequest<TResponse>.ExecuteAsync()
  fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.ExecuteAsync()
  nameWithType.vb: IClientServiceRequest(Of TResponse).ExecuteAsync()
  fullName.vb: Google.Apis.Requests.IClientServiceRequest(Of TResponse).ExecuteAsync()
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync
    name: ExecuteAsync
    nameWithType: IClientServiceRequest<TResponse>.ExecuteAsync
    fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync
    name: ExecuteAsync
    nameWithType: IClientServiceRequest(Of TResponse).ExecuteAsync
    fullName: Google.Apis.Requests.IClientServiceRequest(Of TResponse).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Apis.Requests.IClientServiceRequest{{TResponse}}.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Requests.IClientServiceRequest{`0}.ExecuteAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Requests.IClientServiceRequest{{TResponse}}
  definition: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync(System.Threading.CancellationToken)
  name: ExecuteAsync(CancellationToken)
  nameWithType: IClientServiceRequest<TResponse>.ExecuteAsync(CancellationToken)
  fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.ExecuteAsync(System.Threading.CancellationToken)
  nameWithType.vb: IClientServiceRequest(Of TResponse).ExecuteAsync(CancellationToken)
  fullName.vb: Google.Apis.Requests.IClientServiceRequest(Of TResponse).ExecuteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: IClientServiceRequest<TResponse>.ExecuteAsync
    fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: IClientServiceRequest(Of TResponse).ExecuteAsync
    fullName: Google.Apis.Requests.IClientServiceRequest(Of TResponse).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync(System.Threading.CancellationToken)
  isExternal: true
  name: ExecuteAsync(CancellationToken)
  nameWithType: IClientServiceRequest<TResponse>.ExecuteAsync(CancellationToken)
  fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.ExecuteAsync(System.Threading.CancellationToken)
  nameWithType.vb: IClientServiceRequest(Of TResponse).ExecuteAsync(CancellationToken)
  fullName.vb: Google.Apis.Requests.IClientServiceRequest(Of TResponse).ExecuteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: IClientServiceRequest<TResponse>.ExecuteAsync
    fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: IClientServiceRequest(Of TResponse).ExecuteAsync
    fullName: Google.Apis.Requests.IClientServiceRequest(Of TResponse).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStreamAsync*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.ExecuteAsStreamAsync
  isExternal: false
  name: ExecuteAsStreamAsync
  nameWithType: ClientServiceRequest<TResponse>.ExecuteAsStreamAsync
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.ExecuteAsStreamAsync
  nameWithType.vb: ClientServiceRequest(Of TResponse).ExecuteAsStreamAsync
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).ExecuteAsStreamAsync
- uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  commentId: M:Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: false
  name: ExecuteAsStreamAsync()
  nameWithType: IClientServiceRequest.ExecuteAsStreamAsync()
  fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync()
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
    name: ExecuteAsStreamAsync
    nameWithType: IClientServiceRequest.ExecuteAsStreamAsync
    fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
    name: ExecuteAsStreamAsync
    nameWithType: IClientServiceRequest.ExecuteAsStreamAsync
    fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Task(Of Stream)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: true
  name: ExecuteAsStreamAsync(CancellationToken)
  nameWithType: IClientServiceRequest.ExecuteAsStreamAsync(CancellationToken)
  fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
    name: ExecuteAsStreamAsync
    nameWithType: IClientServiceRequest.ExecuteAsStreamAsync
    fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
    name: ExecuteAsStreamAsync
    nameWithType: IClientServiceRequest.ExecuteAsStreamAsync
    fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Requests.ClientServiceRequest`1.CreateRequest*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.CreateRequest
  isExternal: false
  name: CreateRequest
  nameWithType: ClientServiceRequest<TResponse>.CreateRequest
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.CreateRequest
  nameWithType.vb: ClientServiceRequest(Of TResponse).CreateRequest
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).CreateRequest
- uid: Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable{System.Boolean})
  commentId: M:Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable{System.Boolean})
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: true
  name: CreateRequest(Nullable<Boolean>)
  nameWithType: IClientServiceRequest.CreateRequest(Nullable<Boolean>)
  fullName: Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable<System.Boolean>)
  nameWithType.vb: IClientServiceRequest.CreateRequest(Nullable(Of Boolean))
  fullName.vb: Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable(Of System.Boolean))
  name.vb: CreateRequest(Nullable(Of Boolean))
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable{System.Boolean})
    name: CreateRequest
    nameWithType: IClientServiceRequest.CreateRequest
    fullName: Google.Apis.Requests.IClientServiceRequest.CreateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable{System.Boolean})
    name: CreateRequest
    nameWithType: IClientServiceRequest.CreateRequest
    fullName: Google.Apis.Requests.IClientServiceRequest.CreateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Google.Apis.Requests.ClientServiceRequest`1.GenerateRequestUri*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.GenerateRequestUri
  isExternal: false
  name: GenerateRequestUri
  nameWithType: ClientServiceRequest<TResponse>.GenerateRequestUri
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.GenerateRequestUri
  nameWithType.vb: ClientServiceRequest(Of TResponse).GenerateRequestUri
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).GenerateRequestUri
- uid: Google.Apis.Requests.ClientServiceRequest`1.GetBody*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.GetBody
  isExternal: false
  name: GetBody
  nameWithType: ClientServiceRequest<TResponse>.GetBody
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.GetBody
  nameWithType.vb: ClientServiceRequest(Of TResponse).GetBody
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).GetBody
- uid: Google.Apis.Requests.ClientServiceRequest`1.GetDefaultETagAction*
  commentId: Overload:Google.Apis.Requests.ClientServiceRequest`1.GetDefaultETagAction
  isExternal: false
  name: GetDefaultETagAction
  nameWithType: ClientServiceRequest<TResponse>.GetDefaultETagAction
  fullName: Google.Apis.Requests.ClientServiceRequest<TResponse>.GetDefaultETagAction
  nameWithType.vb: ClientServiceRequest(Of TResponse).GetDefaultETagAction
  fullName.vb: Google.Apis.Requests.ClientServiceRequest(Of TResponse).GetDefaultETagAction
