### YamlMime:ManagedReference
items:
- uid: Google.Apis.Requests.BatchRequest
  commentId: T:Google.Apis.Requests.BatchRequest
  id: BatchRequest
  parent: Google.Apis.Requests
  children:
  - Google.Apis.Requests.BatchRequest.#ctor(Google.Apis.Services.IClientService)
  - Google.Apis.Requests.BatchRequest.#ctor(Google.Apis.Services.IClientService,System.String)
  - Google.Apis.Requests.BatchRequest.Count
  - Google.Apis.Requests.BatchRequest.ExecuteAsync
  - Google.Apis.Requests.BatchRequest.ExecuteAsync(System.Threading.CancellationToken)
  - Google.Apis.Requests.BatchRequest.Queue``1(Google.Apis.Requests.IClientServiceRequest,Google.Apis.Requests.BatchRequest.OnResponse{``0})
  langs:
  - csharp
  - vb
  name: BatchRequest
  nameWithType: BatchRequest
  fullName: Google.Apis.Requests.BatchRequest
  type: Class
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/BatchRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: BatchRequest
    path: Src/Support/GoogleApis/Apis/Requests/BatchRequest.cs
    startLine: 44
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: "\nA batch request which represents individual requests to Google servers. You should add a single service \nrequest using the <xref href=\"Google.Apis.Requests.BatchRequest.Queue%60%601(Google.Apis.Requests.IClientServiceRequest%2cGoogle.Apis.Requests.BatchRequest.OnResponse%7b%60%600%7d)\" data-throw-if-not-resolved=\"false\"></xref> method and execute all individual requests using \n<xref href=\"Google.Apis.Requests.BatchRequest.ExecuteAsync\" data-throw-if-not-resolved=\"false\"></xref>. More information about the batch protocol is available in \nhttps://developers.google.com/storage/docs/json_api/v1/how-tos/batch.\n<remarks>\nCurrent implementation doesn't retry on unsuccessful individual response and doesn't support requests with \ndifferent access tokens (different users or scopes).\n</remarks>\n"
  example: []
  syntax:
    content: public sealed class BatchRequest
    content.vb: Public NotInheritable Class BatchRequest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Apis.Requests.BatchRequest.#ctor(Google.Apis.Services.IClientService)
  commentId: M:Google.Apis.Requests.BatchRequest.#ctor(Google.Apis.Services.IClientService)
  id: '#ctor(Google.Apis.Services.IClientService)'
  parent: Google.Apis.Requests.BatchRequest
  langs:
  - csharp
  - vb
  name: BatchRequest(IClientService)
  nameWithType: BatchRequest.BatchRequest(IClientService)
  fullName: Google.Apis.Requests.BatchRequest.BatchRequest(Google.Apis.Services.IClientService)
  type: Constructor
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/BatchRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/GoogleApis/Apis/Requests/BatchRequest.cs
    startLine: 120
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: "\nConstructs a new batch request using the given service. See \n<xref href=\"Google.Apis.Requests.BatchRequest.%23ctor(Google.Apis.Services.IClientService%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> for more information.\n"
  example: []
  syntax:
    content: public BatchRequest(IClientService service)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
    content.vb: Public Sub New(service As IClientService)
  overload: Google.Apis.Requests.BatchRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Requests.BatchRequest.#ctor(Google.Apis.Services.IClientService,System.String)
  commentId: M:Google.Apis.Requests.BatchRequest.#ctor(Google.Apis.Services.IClientService,System.String)
  id: '#ctor(Google.Apis.Services.IClientService,System.String)'
  parent: Google.Apis.Requests.BatchRequest
  langs:
  - csharp
  - vb
  name: BatchRequest(IClientService, String)
  nameWithType: BatchRequest.BatchRequest(IClientService, String)
  fullName: Google.Apis.Requests.BatchRequest.BatchRequest(Google.Apis.Services.IClientService, System.String)
  type: Constructor
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/BatchRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/GoogleApis/Apis/Requests/BatchRequest.cs
    startLine: 128
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: "\nConstructs a new batch request using the given service. The service's HTTP client is used to create a \nrequest to the given server URL and its serializer members are used to serialize the request and \ndeserialize the response.\n"
  example: []
  syntax:
    content: public BatchRequest(IClientService service, string batchUrl)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
    - id: batchUrl
      type: System.String
    content.vb: Public Sub New(service As IClientService, batchUrl As String)
  overload: Google.Apis.Requests.BatchRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Requests.BatchRequest.Count
  commentId: P:Google.Apis.Requests.BatchRequest.Count
  id: Count
  parent: Google.Apis.Requests.BatchRequest
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: BatchRequest.Count
  fullName: Google.Apis.Requests.BatchRequest.Count
  type: Property
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/BatchRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Count
    path: Src/Support/GoogleApis/Apis/Requests/BatchRequest.cs
    startLine: 135
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Gets the count of all queued requests.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Google.Apis.Requests.BatchRequest.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Apis.Requests.BatchRequest.Queue``1(Google.Apis.Requests.IClientServiceRequest,Google.Apis.Requests.BatchRequest.OnResponse{``0})
  commentId: M:Google.Apis.Requests.BatchRequest.Queue``1(Google.Apis.Requests.IClientServiceRequest,Google.Apis.Requests.BatchRequest.OnResponse{``0})
  id: Queue``1(Google.Apis.Requests.IClientServiceRequest,Google.Apis.Requests.BatchRequest.OnResponse{``0})
  parent: Google.Apis.Requests.BatchRequest
  langs:
  - csharp
  - vb
  name: Queue<TResponse>(IClientServiceRequest, BatchRequest.OnResponse<TResponse>)
  nameWithType: BatchRequest.Queue<TResponse>(IClientServiceRequest, BatchRequest.OnResponse<TResponse>)
  fullName: Google.Apis.Requests.BatchRequest.Queue<TResponse>(Google.Apis.Requests.IClientServiceRequest, Google.Apis.Requests.BatchRequest.OnResponse<TResponse>)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/BatchRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Queue
    path: Src/Support/GoogleApis/Apis/Requests/BatchRequest.cs
    startLine: 144
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Queues an individual request.
  example: []
  syntax:
    content: 'public void Queue<TResponse>(IClientServiceRequest request, BatchRequest.OnResponse<TResponse> callback)where TResponse : class'
    parameters:
    - id: request
      type: Google.Apis.Requests.IClientServiceRequest
      description: The individual request.
    - id: callback
      type: Google.Apis.Requests.BatchRequest.OnResponse{{TResponse}}
      description: A callback which will be called after a response was parsed.
    typeParameters:
    - id: TResponse
      description: The response's type.
    content.vb: Public Sub Queue(Of TResponse As Class)(request As IClientServiceRequest, callback As BatchRequest.OnResponse(Of TResponse))
  overload: Google.Apis.Requests.BatchRequest.Queue*
  nameWithType.vb: BatchRequest.Queue(Of TResponse)(IClientServiceRequest, BatchRequest.OnResponse(Of TResponse))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Requests.BatchRequest.Queue(Of TResponse)(Google.Apis.Requests.IClientServiceRequest, Google.Apis.Requests.BatchRequest.OnResponse(Of TResponse))
  name.vb: Queue(Of TResponse)(IClientServiceRequest, BatchRequest.OnResponse(Of TResponse))
- uid: Google.Apis.Requests.BatchRequest.ExecuteAsync
  commentId: M:Google.Apis.Requests.BatchRequest.ExecuteAsync
  id: ExecuteAsync
  parent: Google.Apis.Requests.BatchRequest
  langs:
  - csharp
  - vb
  name: ExecuteAsync()
  nameWithType: BatchRequest.ExecuteAsync()
  fullName: Google.Apis.Requests.BatchRequest.ExecuteAsync()
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/BatchRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteAsync
    path: Src/Support/GoogleApis/Apis/Requests/BatchRequest.cs
    startLine: 161
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Asynchronously executes the batch request.
  example: []
  syntax:
    content: public Task ExecuteAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ExecuteAsync As Task
  overload: Google.Apis.Requests.BatchRequest.ExecuteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Apis.Requests.BatchRequest.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Requests.BatchRequest.ExecuteAsync(System.Threading.CancellationToken)
  id: ExecuteAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Requests.BatchRequest
  langs:
  - csharp
  - vb
  name: ExecuteAsync(CancellationToken)
  nameWithType: BatchRequest.ExecuteAsync(CancellationToken)
  fullName: Google.Apis.Requests.BatchRequest.ExecuteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/BatchRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteAsync
    path: Src/Support/GoogleApis/Apis/Requests/BatchRequest.cs
    startLine: 168
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Asynchronously executes the batch request.
  example: []
  syntax:
    content: public Task ExecuteAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ExecuteAsync(cancellationToken As CancellationToken) As Task
  overload: Google.Apis.Requests.BatchRequest.ExecuteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Apis.Requests.BatchRequest.Queue``1(Google.Apis.Requests.IClientServiceRequest,Google.Apis.Requests.BatchRequest.OnResponse{``0})
  commentId: M:Google.Apis.Requests.BatchRequest.Queue``1(Google.Apis.Requests.IClientServiceRequest,Google.Apis.Requests.BatchRequest.OnResponse{``0})
- uid: Google.Apis.Requests.BatchRequest.ExecuteAsync
  commentId: M:Google.Apis.Requests.BatchRequest.ExecuteAsync
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: false
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Requests.BatchRequest.#ctor(Google.Apis.Services.IClientService,System.String)
  commentId: M:Google.Apis.Requests.BatchRequest.#ctor(Google.Apis.Services.IClientService,System.String)
- uid: Google.Apis.Requests.BatchRequest.#ctor*
  commentId: Overload:Google.Apis.Requests.BatchRequest.#ctor
  isExternal: false
  name: BatchRequest
  nameWithType: BatchRequest.BatchRequest
  fullName: Google.Apis.Requests.BatchRequest.BatchRequest
- uid: Google.Apis.Services.IClientService
  commentId: T:Google.Apis.Services.IClientService
  parent: Google.Apis.Services
  isExternal: false
  name: IClientService
  nameWithType: IClientService
  fullName: Google.Apis.Services.IClientService
- uid: Google.Apis.Services
  commentId: N:Google.Apis.Services
  isExternal: false
  name: Google.Apis.Services
  nameWithType: Google.Apis.Services
  fullName: Google.Apis.Services
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Apis.Requests.BatchRequest.Count*
  commentId: Overload:Google.Apis.Requests.BatchRequest.Count
  isExternal: false
  name: Count
  nameWithType: BatchRequest.Count
  fullName: Google.Apis.Requests.BatchRequest.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Apis.Requests.BatchRequest.Queue*
  commentId: Overload:Google.Apis.Requests.BatchRequest.Queue
  isExternal: false
  name: Queue
  nameWithType: BatchRequest.Queue
  fullName: Google.Apis.Requests.BatchRequest.Queue
- uid: Google.Apis.Requests.IClientServiceRequest
  commentId: T:Google.Apis.Requests.IClientServiceRequest
  parent: Google.Apis.Requests
  isExternal: false
  name: IClientServiceRequest
  nameWithType: IClientServiceRequest
  fullName: Google.Apis.Requests.IClientServiceRequest
- uid: Google.Apis.Requests.BatchRequest.OnResponse{{TResponse}}
  commentId: T:Google.Apis.Requests.BatchRequest.OnResponse{``0}
  parent: Google.Apis.Requests
  definition: Google.Apis.Requests.BatchRequest.OnResponse`1
  name: BatchRequest.OnResponse<TResponse>
  nameWithType: BatchRequest.OnResponse<TResponse>
  fullName: Google.Apis.Requests.BatchRequest.OnResponse<TResponse>
  nameWithType.vb: BatchRequest.OnResponse(Of TResponse)
  fullName.vb: Google.Apis.Requests.BatchRequest.OnResponse(Of TResponse)
  name.vb: BatchRequest.OnResponse(Of TResponse)
  spec.csharp:
  - uid: Google.Apis.Requests.BatchRequest.OnResponse`1
    name: BatchRequest.OnResponse
    nameWithType: BatchRequest.OnResponse
    fullName: Google.Apis.Requests.BatchRequest.OnResponse
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Requests.BatchRequest.OnResponse`1
    name: BatchRequest.OnResponse
    nameWithType: BatchRequest.OnResponse
    fullName: Google.Apis.Requests.BatchRequest.OnResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Requests.BatchRequest.OnResponse`1
  commentId: T:Google.Apis.Requests.BatchRequest.OnResponse`1
  isExternal: false
  name: BatchRequest.OnResponse<TResponse>
  nameWithType: BatchRequest.OnResponse<TResponse>
  fullName: Google.Apis.Requests.BatchRequest.OnResponse<TResponse>
  nameWithType.vb: BatchRequest.OnResponse(Of TResponse)
  fullName.vb: Google.Apis.Requests.BatchRequest.OnResponse(Of TResponse)
  name.vb: BatchRequest.OnResponse(Of TResponse)
  spec.csharp:
  - uid: Google.Apis.Requests.BatchRequest.OnResponse`1
    name: BatchRequest.OnResponse
    nameWithType: BatchRequest.OnResponse
    fullName: Google.Apis.Requests.BatchRequest.OnResponse
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Requests.BatchRequest.OnResponse`1
    name: BatchRequest.OnResponse
    nameWithType: BatchRequest.OnResponse
    fullName: Google.Apis.Requests.BatchRequest.OnResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Requests.BatchRequest.ExecuteAsync*
  commentId: Overload:Google.Apis.Requests.BatchRequest.ExecuteAsync
  isExternal: false
  name: ExecuteAsync
  nameWithType: BatchRequest.ExecuteAsync
  fullName: Google.Apis.Requests.BatchRequest.ExecuteAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
