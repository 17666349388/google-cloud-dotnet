### YamlMime:ManagedReference
items:
- uid: Google.Apis.Upload.ResumableUpload`2
  commentId: T:Google.Apis.Upload.ResumableUpload`2
  id: ResumableUpload`2
  parent: Google.Apis.Upload
  children:
  - Google.Apis.Upload.ResumableUpload`2.#ctor(Google.Apis.Services.IClientService,System.String,System.String,System.IO.Stream,System.String)
  - Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
  - Google.Apis.Upload.ResumableUpload`2.ResponseBody
  - Google.Apis.Upload.ResumableUpload`2.ResponseReceived
  langs:
  - csharp
  - vb
  name: ResumableUpload<TRequest, TResponse>
  nameWithType: ResumableUpload<TRequest, TResponse>
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>
  type: Class
  source:
    remote:
      path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ResumableUpload
    path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
    startLine: 994
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Upload
  summary: "\nMedia upload which uses Google's resumable media upload protocol to upload data.\nThe version with two types contains both a request object and a response object.\n"
  remarks: "\nSee: https://developers.google.com/gdata/docs/resumable_upload for\ninformation on the protocol.\n"
  example: []
  syntax:
    content: 'public class ResumableUpload<TRequest, TResponse> : ResumableUpload<TRequest>'
    typeParameters:
    - id: TRequest
      description: "\nThe type of the body of this request. Generally this should be the metadata related \nto the content to be uploaded. Must be serializable to/from JSON.\n"
    - id: TResponse
      description: "\nThe type of the response body.\n"
    content.vb: >-
      Public Class ResumableUpload(Of TRequest, TResponse)
          Inherits ResumableUpload(Of TRequest)
  inheritance:
  - System.Object
  - Google.Apis.Upload.ResumableUpload
  - Google.Apis.Upload.ResumableUpload{{TRequest}}
  inheritedMembers:
  - Google.Apis.Upload.ResumableUpload{{TRequest}}.Service
  - Google.Apis.Upload.ResumableUpload{{TRequest}}.Path
  - Google.Apis.Upload.ResumableUpload{{TRequest}}.HttpMethod
  - Google.Apis.Upload.ResumableUpload{{TRequest}}.ContentType
  - Google.Apis.Upload.ResumableUpload{{TRequest}}.Body
  - Google.Apis.Upload.ResumableUpload{{TRequest}}.InitiateSessionAsync(System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.MinimumChunkSize
  - Google.Apis.Upload.ResumableUpload.DefaultChunkSize
  - Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
  - Google.Apis.Upload.ResumableUpload.Options
  - Google.Apis.Upload.ResumableUpload.ContentStream
  - Google.Apis.Upload.ResumableUpload.chunkSize
  - Google.Apis.Upload.ResumableUpload.ChunkSize
  - Google.Apis.Upload.ResumableUpload.ProgressChanged
  - Google.Apis.Upload.ResumableUpload.GetProgress
  - Google.Apis.Upload.ResumableUpload.UploadSessionData
  - Google.Apis.Upload.ResumableUpload.Upload
  - Google.Apis.Upload.ResumableUpload.UploadAsync
  - Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.Resume
  - Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  - Google.Apis.Upload.ResumableUpload.ResumeAsync
  - Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  - Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
  - Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse)
  name.vb: ResumableUpload(Of TRequest, TResponse)
- uid: Google.Apis.Upload.ResumableUpload`2.#ctor(Google.Apis.Services.IClientService,System.String,System.String,System.IO.Stream,System.String)
  commentId: M:Google.Apis.Upload.ResumableUpload`2.#ctor(Google.Apis.Services.IClientService,System.String,System.String,System.IO.Stream,System.String)
  id: '#ctor(Google.Apis.Services.IClientService,System.String,System.String,System.IO.Stream,System.String)'
  parent: Google.Apis.Upload.ResumableUpload`2
  langs:
  - csharp
  - vb
  name: ResumableUpload(IClientService, String, String, Stream, String)
  nameWithType: ResumableUpload<TRequest, TResponse>.ResumableUpload(IClientService, String, String, Stream, String)
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ResumableUpload(Google.Apis.Services.IClientService, System.String, System.String, System.IO.Stream, System.String)
  type: Constructor
  source:
    remote:
      path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: .ctor
    path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
    startLine: 1012
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Upload
  summary: "\nCreate a resumable upload instance with the required parameters.\n"
  remarks: "\nThe stream <span class=\"paramref\">contentStream</span> must support the \"Length\" property.\nCaller is responsible for maintaining the <span class=\"paramref\">contentStream</span> open until the \nupload is completed.\nCaller is responsible for closing the <span class=\"paramref\">contentStream</span>.\n"
  example: []
  syntax:
    content: protected ResumableUpload(IClientService service, string path, string httpMethod, Stream contentStream, string contentType)
    parameters:
    - id: service
      type: Google.Apis.Services.IClientService
      description: The client service.
    - id: path
      type: System.String
      description: The path for this media upload method.
    - id: httpMethod
      type: System.String
      description: The HTTP method to start this upload.
    - id: contentStream
      type: System.IO.Stream
      description: The stream containing the content to upload.
    - id: contentType
      type: System.String
      description: Content type of the content to be uploaded.
    content.vb: Protected Sub New(service As IClientService, path As String, httpMethod As String, contentStream As Stream, contentType As String)
  overload: Google.Apis.Upload.ResumableUpload`2.#ctor*
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse).ResumableUpload(IClientService, String, String, Stream, String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ResumableUpload(Google.Apis.Services.IClientService, System.String, System.String, System.IO.Stream, System.String)
- uid: Google.Apis.Upload.ResumableUpload`2.ResponseBody
  commentId: P:Google.Apis.Upload.ResumableUpload`2.ResponseBody
  id: ResponseBody
  parent: Google.Apis.Upload.ResumableUpload`2
  langs:
  - csharp
  - vb
  name: ResponseBody
  nameWithType: ResumableUpload<TRequest, TResponse>.ResponseBody
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ResponseBody
  type: Property
  source:
    remote:
      path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ResponseBody
    path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
    startLine: 1027
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Upload
  summary: "\nThe response body.\n"
  remarks: "\nThis property will be set during upload. The <xref href=\"Google.Apis.Upload.ResumableUpload%602.ResponseReceived\" data-throw-if-not-resolved=\"false\"></xref> event\nis triggered when this has been set.\n"
  example: []
  syntax:
    content: public TResponse ResponseBody { get; }
    parameters: []
    return:
      type: '{TResponse}'
    content.vb: Public ReadOnly Property ResponseBody As TResponse
  overload: Google.Apis.Upload.ResumableUpload`2.ResponseBody*
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse).ResponseBody
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ResponseBody
- uid: Google.Apis.Upload.ResumableUpload`2.ResponseReceived
  commentId: E:Google.Apis.Upload.ResumableUpload`2.ResponseReceived
  id: ResponseReceived
  parent: Google.Apis.Upload.ResumableUpload`2
  langs:
  - csharp
  - vb
  name: ResponseReceived
  nameWithType: ResumableUpload<TRequest, TResponse>.ResponseReceived
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ResponseReceived
  type: Event
  source:
    remote:
      path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ResponseReceived
    path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
    startLine: 1034
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Upload
  summary: Event which is called when the response metadata is processed.
  example: []
  syntax:
    content: public event Action<TResponse> ResponseReceived
    return:
      type: System.Action{{TResponse}}
    content.vb: Public Event ResponseReceived As Action(Of TResponse)
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse).ResponseReceived
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ResponseReceived
- uid: Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
  commentId: M:Google.Apis.Upload.ResumableUpload`2.ProcessResponse(System.Net.Http.HttpResponseMessage)
  id: ProcessResponse(System.Net.Http.HttpResponseMessage)
  parent: Google.Apis.Upload.ResumableUpload`2
  langs:
  - csharp
  - vb
  name: ProcessResponse(HttpResponseMessage)
  nameWithType: ResumableUpload<TRequest, TResponse>.ProcessResponse(HttpResponseMessage)
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ProcessResponse(System.Net.Http.HttpResponseMessage)
  type: Method
  source:
    remote:
      path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ProcessResponse
    path: Src/Support/Google.Apis/Upload/ResumableUpload.cs
    startLine: 1041
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Upload
  summary: 'Process the response body '
  example: []
  syntax:
    content: protected override void ProcessResponse(HttpResponseMessage response)
    parameters:
    - id: response
      type: System.Net.Http.HttpResponseMessage
    content.vb: Protected Overrides Sub ProcessResponse(response As HttpResponseMessage)
  overridden: Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
  overload: Google.Apis.Upload.ResumableUpload`2.ProcessResponse*
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse).ProcessResponse(HttpResponseMessage)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ProcessResponse(System.Net.Http.HttpResponseMessage)
references:
- uid: Google.Apis.Upload
  commentId: N:Google.Apis.Upload
  isExternal: false
  name: Google.Apis.Upload
  nameWithType: Google.Apis.Upload
  fullName: Google.Apis.Upload
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Apis.Upload.ResumableUpload
  commentId: T:Google.Apis.Upload.ResumableUpload
  parent: Google.Apis.Upload
  isExternal: false
  name: ResumableUpload
  nameWithType: ResumableUpload
  fullName: Google.Apis.Upload.ResumableUpload
- uid: Google.Apis.Upload.ResumableUpload{{TRequest}}
  commentId: T:Google.Apis.Upload.ResumableUpload{`0}
  parent: Google.Apis.Upload
  definition: Google.Apis.Upload.ResumableUpload`1
  name: ResumableUpload<TRequest>
  nameWithType: ResumableUpload<TRequest>
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>
  nameWithType.vb: ResumableUpload(Of TRequest)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest)
  name.vb: ResumableUpload(Of TRequest)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`1
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`1
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload{{TRequest}}.Service
  commentId: P:Google.Apis.Upload.ResumableUpload{`0}.Service
  parent: Google.Apis.Upload.ResumableUpload{{TRequest}}
  definition: Google.Apis.Upload.ResumableUpload`1.Service
  name: Service
  nameWithType: ResumableUpload<TRequest>.Service
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Service
  nameWithType.vb: ResumableUpload(Of TRequest).Service
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Service
- uid: Google.Apis.Upload.ResumableUpload{{TRequest}}.Path
  commentId: P:Google.Apis.Upload.ResumableUpload{`0}.Path
  parent: Google.Apis.Upload.ResumableUpload{{TRequest}}
  definition: Google.Apis.Upload.ResumableUpload`1.Path
  name: Path
  nameWithType: ResumableUpload<TRequest>.Path
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Path
  nameWithType.vb: ResumableUpload(Of TRequest).Path
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Path
- uid: Google.Apis.Upload.ResumableUpload{{TRequest}}.HttpMethod
  commentId: P:Google.Apis.Upload.ResumableUpload{`0}.HttpMethod
  parent: Google.Apis.Upload.ResumableUpload{{TRequest}}
  definition: Google.Apis.Upload.ResumableUpload`1.HttpMethod
  name: HttpMethod
  nameWithType: ResumableUpload<TRequest>.HttpMethod
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.HttpMethod
  nameWithType.vb: ResumableUpload(Of TRequest).HttpMethod
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).HttpMethod
- uid: Google.Apis.Upload.ResumableUpload{{TRequest}}.ContentType
  commentId: P:Google.Apis.Upload.ResumableUpload{`0}.ContentType
  parent: Google.Apis.Upload.ResumableUpload{{TRequest}}
  definition: Google.Apis.Upload.ResumableUpload`1.ContentType
  name: ContentType
  nameWithType: ResumableUpload<TRequest>.ContentType
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.ContentType
  nameWithType.vb: ResumableUpload(Of TRequest).ContentType
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).ContentType
- uid: Google.Apis.Upload.ResumableUpload{{TRequest}}.Body
  commentId: P:Google.Apis.Upload.ResumableUpload{`0}.Body
  parent: Google.Apis.Upload.ResumableUpload{{TRequest}}
  definition: Google.Apis.Upload.ResumableUpload`1.Body
  name: Body
  nameWithType: ResumableUpload<TRequest>.Body
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Body
  nameWithType.vb: ResumableUpload(Of TRequest).Body
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Body
- uid: Google.Apis.Upload.ResumableUpload{{TRequest}}.InitiateSessionAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload{`0}.InitiateSessionAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload{{TRequest}}
  definition: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
  name: InitiateSessionAsync(CancellationToken)
  nameWithType: ResumableUpload<TRequest>.InitiateSessionAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.InitiateSessionAsync(System.Threading.CancellationToken)
  nameWithType.vb: ResumableUpload(Of TRequest).InitiateSessionAsync(CancellationToken)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).InitiateSessionAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
    name: InitiateSessionAsync
    nameWithType: ResumableUpload<TRequest>.InitiateSessionAsync
    fullName: Google.Apis.Upload.ResumableUpload<TRequest>.InitiateSessionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
    name: InitiateSessionAsync
    nameWithType: ResumableUpload(Of TRequest).InitiateSessionAsync
    fullName: Google.Apis.Upload.ResumableUpload(Of TRequest).InitiateSessionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.MinimumChunkSize
  commentId: F:Google.Apis.Upload.ResumableUpload.MinimumChunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: MinimumChunkSize
  nameWithType: ResumableUpload.MinimumChunkSize
  fullName: Google.Apis.Upload.ResumableUpload.MinimumChunkSize
- uid: Google.Apis.Upload.ResumableUpload.DefaultChunkSize
  commentId: F:Google.Apis.Upload.ResumableUpload.DefaultChunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: DefaultChunkSize
  nameWithType: ResumableUpload.DefaultChunkSize
  fullName: Google.Apis.Upload.ResumableUpload.DefaultChunkSize
- uid: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
  commentId: M:Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: CreateFromUploadUri(Uri, Stream, ResumableUploadOptions)
  nameWithType: ResumableUpload.CreateFromUploadUri(Uri, Stream, ResumableUploadOptions)
  fullName: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri, System.IO.Stream, Google.Apis.Upload.ResumableUploadOptions)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
    name: CreateFromUploadUri
    nameWithType: ResumableUpload.CreateFromUploadUri
    fullName: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Upload.ResumableUploadOptions
    name: ResumableUploadOptions
    nameWithType: ResumableUploadOptions
    fullName: Google.Apis.Upload.ResumableUploadOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri(System.Uri,System.IO.Stream,Google.Apis.Upload.ResumableUploadOptions)
    name: CreateFromUploadUri
    nameWithType: ResumableUpload.CreateFromUploadUri
    fullName: Google.Apis.Upload.ResumableUpload.CreateFromUploadUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Apis.Upload.ResumableUploadOptions
    name: ResumableUploadOptions
    nameWithType: ResumableUploadOptions
    fullName: Google.Apis.Upload.ResumableUploadOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.Options
  commentId: P:Google.Apis.Upload.ResumableUpload.Options
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: Options
  nameWithType: ResumableUpload.Options
  fullName: Google.Apis.Upload.ResumableUpload.Options
- uid: Google.Apis.Upload.ResumableUpload.ContentStream
  commentId: P:Google.Apis.Upload.ResumableUpload.ContentStream
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: ContentStream
  nameWithType: ResumableUpload.ContentStream
  fullName: Google.Apis.Upload.ResumableUpload.ContentStream
- uid: Google.Apis.Upload.ResumableUpload.chunkSize
  commentId: F:Google.Apis.Upload.ResumableUpload.chunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: chunkSize
  nameWithType: ResumableUpload.chunkSize
  fullName: Google.Apis.Upload.ResumableUpload.chunkSize
- uid: Google.Apis.Upload.ResumableUpload.ChunkSize
  commentId: P:Google.Apis.Upload.ResumableUpload.ChunkSize
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: ChunkSize
  nameWithType: ResumableUpload.ChunkSize
  fullName: Google.Apis.Upload.ResumableUpload.ChunkSize
- uid: Google.Apis.Upload.ResumableUpload.ProgressChanged
  commentId: E:Google.Apis.Upload.ResumableUpload.ProgressChanged
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: ProgressChanged
  nameWithType: ResumableUpload.ProgressChanged
  fullName: Google.Apis.Upload.ResumableUpload.ProgressChanged
- uid: Google.Apis.Upload.ResumableUpload.GetProgress
  commentId: M:Google.Apis.Upload.ResumableUpload.GetProgress
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: GetProgress()
  nameWithType: ResumableUpload.GetProgress()
  fullName: Google.Apis.Upload.ResumableUpload.GetProgress()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.GetProgress
    name: GetProgress
    nameWithType: ResumableUpload.GetProgress
    fullName: Google.Apis.Upload.ResumableUpload.GetProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.GetProgress
    name: GetProgress
    nameWithType: ResumableUpload.GetProgress
    fullName: Google.Apis.Upload.ResumableUpload.GetProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.UploadSessionData
  commentId: E:Google.Apis.Upload.ResumableUpload.UploadSessionData
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: UploadSessionData
  nameWithType: ResumableUpload.UploadSessionData
  fullName: Google.Apis.Upload.ResumableUpload.UploadSessionData
- uid: Google.Apis.Upload.ResumableUpload.Upload
  commentId: M:Google.Apis.Upload.ResumableUpload.Upload
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: Upload()
  nameWithType: ResumableUpload.Upload()
  fullName: Google.Apis.Upload.ResumableUpload.Upload()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.Upload
    name: Upload
    nameWithType: ResumableUpload.Upload
    fullName: Google.Apis.Upload.ResumableUpload.Upload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.Upload
    name: Upload
    nameWithType: ResumableUpload.Upload
    fullName: Google.Apis.Upload.ResumableUpload.Upload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.UploadAsync
  commentId: M:Google.Apis.Upload.ResumableUpload.UploadAsync
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: UploadAsync()
  nameWithType: ResumableUpload.UploadAsync()
  fullName: Google.Apis.Upload.ResumableUpload.UploadAsync()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: UploadAsync(CancellationToken)
  nameWithType: ResumableUpload.UploadAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.UploadAsync(System.Threading.CancellationToken)
    name: UploadAsync
    nameWithType: ResumableUpload.UploadAsync
    fullName: Google.Apis.Upload.ResumableUpload.UploadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.Resume
  commentId: M:Google.Apis.Upload.ResumableUpload.Resume
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: Resume()
  nameWithType: ResumableUpload.Resume()
  fullName: Google.Apis.Upload.ResumableUpload.Resume()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.Resume
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.Resume
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  commentId: M:Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: Resume(Uri)
  nameWithType: ResumableUpload.Resume(Uri)
  fullName: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.Resume(System.Uri)
    name: Resume
    nameWithType: ResumableUpload.Resume
    fullName: Google.Apis.Upload.ResumableUpload.Resume
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: false
  name: ResumeAsync()
  nameWithType: ResumableUpload.ResumeAsync()
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync()
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ResumeAsync(CancellationToken)
  nameWithType: ResumableUpload.ResumeAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ResumeAsync(Uri)
  nameWithType: ResumableUpload.ResumeAsync(Uri)
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ResumeAsync(Uri, CancellationToken)
  nameWithType: ResumableUpload.ResumeAsync(Uri, CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ResumeAsync(System.Uri,System.Threading.CancellationToken)
    name: ResumeAsync
    nameWithType: ResumableUpload.ResumeAsync
    fullName: Google.Apis.Upload.ResumableUpload.ResumeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: SendNextChunkAsync(Stream, CancellationToken)
  nameWithType: ResumableUpload.SendNextChunkAsync(Stream, CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: SendNextChunkAsync
    nameWithType: ResumableUpload.SendNextChunkAsync
    fullName: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: SendNextChunkAsync
    nameWithType: ResumableUpload.SendNextChunkAsync
    fullName: Google.Apis.Upload.ResumableUpload.SendNextChunkAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
  commentId: M:Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ExceptionForResponseAsync(HttpResponseMessage)
  nameWithType: ResumableUpload.ExceptionForResponseAsync(HttpResponseMessage)
  fullName: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
    name: ExceptionForResponseAsync
    nameWithType: ResumableUpload.ExceptionForResponseAsync
    fullName: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync(System.Net.Http.HttpResponseMessage)
    name: ExceptionForResponseAsync
    nameWithType: ResumableUpload.ExceptionForResponseAsync
    fullName: Google.Apis.Upload.ResumableUpload.ExceptionForResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Apis.Upload.ResumableUpload`1
  commentId: T:Google.Apis.Upload.ResumableUpload`1
  isExternal: false
  name: ResumableUpload<TRequest>
  nameWithType: ResumableUpload<TRequest>
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>
  nameWithType.vb: ResumableUpload(Of TRequest)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest)
  name.vb: ResumableUpload(Of TRequest)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`1
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`1
    name: ResumableUpload
    nameWithType: ResumableUpload
    fullName: Google.Apis.Upload.ResumableUpload
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload`1.Service
  commentId: P:Google.Apis.Upload.ResumableUpload`1.Service
  isExternal: false
  name: Service
  nameWithType: ResumableUpload<TRequest>.Service
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Service
  nameWithType.vb: ResumableUpload(Of TRequest).Service
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Service
- uid: Google.Apis.Upload.ResumableUpload`1.Path
  commentId: P:Google.Apis.Upload.ResumableUpload`1.Path
  isExternal: false
  name: Path
  nameWithType: ResumableUpload<TRequest>.Path
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Path
  nameWithType.vb: ResumableUpload(Of TRequest).Path
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Path
- uid: Google.Apis.Upload.ResumableUpload`1.HttpMethod
  commentId: P:Google.Apis.Upload.ResumableUpload`1.HttpMethod
  isExternal: false
  name: HttpMethod
  nameWithType: ResumableUpload<TRequest>.HttpMethod
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.HttpMethod
  nameWithType.vb: ResumableUpload(Of TRequest).HttpMethod
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).HttpMethod
- uid: Google.Apis.Upload.ResumableUpload`1.ContentType
  commentId: P:Google.Apis.Upload.ResumableUpload`1.ContentType
  isExternal: false
  name: ContentType
  nameWithType: ResumableUpload<TRequest>.ContentType
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.ContentType
  nameWithType.vb: ResumableUpload(Of TRequest).ContentType
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).ContentType
- uid: Google.Apis.Upload.ResumableUpload`1.Body
  commentId: P:Google.Apis.Upload.ResumableUpload`1.Body
  isExternal: false
  name: Body
  nameWithType: ResumableUpload<TRequest>.Body
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.Body
  nameWithType.vb: ResumableUpload(Of TRequest).Body
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).Body
- uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
  isExternal: true
  name: InitiateSessionAsync(CancellationToken)
  nameWithType: ResumableUpload<TRequest>.InitiateSessionAsync(CancellationToken)
  fullName: Google.Apis.Upload.ResumableUpload<TRequest>.InitiateSessionAsync(System.Threading.CancellationToken)
  nameWithType.vb: ResumableUpload(Of TRequest).InitiateSessionAsync(CancellationToken)
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest).InitiateSessionAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
    name: InitiateSessionAsync
    nameWithType: ResumableUpload<TRequest>.InitiateSessionAsync
    fullName: Google.Apis.Upload.ResumableUpload<TRequest>.InitiateSessionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload`1.InitiateSessionAsync(System.Threading.CancellationToken)
    name: InitiateSessionAsync
    nameWithType: ResumableUpload(Of TRequest).InitiateSessionAsync
    fullName: Google.Apis.Upload.ResumableUpload(Of TRequest).InitiateSessionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload`2.#ctor*
  commentId: Overload:Google.Apis.Upload.ResumableUpload`2.#ctor
  isExternal: false
  name: ResumableUpload
  nameWithType: ResumableUpload<TRequest, TResponse>.ResumableUpload
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ResumableUpload
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse).ResumableUpload
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ResumableUpload
- uid: Google.Apis.Services.IClientService
  commentId: T:Google.Apis.Services.IClientService
  parent: Google.Apis.Services
  isExternal: false
  name: IClientService
  nameWithType: IClientService
  fullName: Google.Apis.Services.IClientService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Google.Apis.Services
  commentId: N:Google.Apis.Services
  isExternal: false
  name: Google.Apis.Services
  nameWithType: Google.Apis.Services
  fullName: Google.Apis.Services
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Google.Apis.Upload.ResumableUpload`2.ResponseReceived
  commentId: E:Google.Apis.Upload.ResumableUpload`2.ResponseReceived
- uid: Google.Apis.Upload.ResumableUpload`2.ResponseBody*
  commentId: Overload:Google.Apis.Upload.ResumableUpload`2.ResponseBody
  isExternal: false
  name: ResponseBody
  nameWithType: ResumableUpload<TRequest, TResponse>.ResponseBody
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ResponseBody
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse).ResponseBody
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ResponseBody
- uid: '{TResponse}'
  commentId: '!:TResponse'
  definition: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: TResponse
  isExternal: false
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: System.Action{{TResponse}}
  commentId: T:System.Action{`1}
  parent: System
  definition: System.Action`1
  name: Action<TResponse>
  nameWithType: Action<TResponse>
  fullName: System.Action<TResponse>
  nameWithType.vb: Action(Of TResponse)
  fullName.vb: System.Action(Of TResponse)
  name.vb: Action(Of TResponse)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
  commentId: M:Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
  parent: Google.Apis.Upload.ResumableUpload
  isExternal: true
  name: ProcessResponse(HttpResponseMessage)
  nameWithType: ResumableUpload.ProcessResponse(HttpResponseMessage)
  fullName: Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
  spec.csharp:
  - uid: Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload.ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload.ProcessResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Upload.ResumableUpload.ProcessResponse(System.Net.Http.HttpResponseMessage)
    name: ProcessResponse
    nameWithType: ResumableUpload.ProcessResponse
    fullName: Google.Apis.Upload.ResumableUpload.ProcessResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Upload.ResumableUpload`2.ProcessResponse*
  commentId: Overload:Google.Apis.Upload.ResumableUpload`2.ProcessResponse
  isExternal: false
  name: ProcessResponse
  nameWithType: ResumableUpload<TRequest, TResponse>.ProcessResponse
  fullName: Google.Apis.Upload.ResumableUpload<TRequest, TResponse>.ProcessResponse
  nameWithType.vb: ResumableUpload(Of TRequest, TResponse).ProcessResponse
  fullName.vb: Google.Apis.Upload.ResumableUpload(Of TRequest, TResponse).ProcessResponse
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
