### YamlMime:ManagedReference
items:
- uid: Google.Apis.Requests.IClientServiceRequest`1
  commentId: T:Google.Apis.Requests.IClientServiceRequest`1
  id: IClientServiceRequest`1
  parent: Google.Apis.Requests
  children:
  - Google.Apis.Requests.IClientServiceRequest`1.Execute
  - Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync
  - Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IClientServiceRequest<TResponse>
  nameWithType: IClientServiceRequest<TResponse>
  fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>
  type: Interface
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: IClientServiceRequest
    path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
    startLine: 67
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: "\nA client service request which inherits from <xref href=\"Google.Apis.Requests.IClientServiceRequest\" data-throw-if-not-resolved=\"false\"></xref> and represents a specific \nservice request with the given response type. It supports both sync and async execution to get the response.\n"
  example: []
  syntax:
    content: 'public interface IClientServiceRequest<TResponse> : IClientServiceRequest'
    typeParameters:
    - id: TResponse
    content.vb: >-
      Public Interface IClientServiceRequest(Of TResponse)
          Inherits IClientServiceRequest
  inheritedMembers:
  - Google.Apis.Requests.IClientServiceRequest.MethodName
  - Google.Apis.Requests.IClientServiceRequest.RestPath
  - Google.Apis.Requests.IClientServiceRequest.HttpMethod
  - Google.Apis.Requests.IClientServiceRequest.RequestParameters
  - Google.Apis.Requests.IClientServiceRequest.Service
  - Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable{System.Boolean})
  - Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  - Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  - Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
  nameWithType.vb: IClientServiceRequest(Of TResponse)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Google.Apis.Requests.IClientServiceRequest(Of TResponse)
  name.vb: IClientServiceRequest(Of TResponse)
- uid: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync
  commentId: M:Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync
  id: ExecuteAsync
  parent: Google.Apis.Requests.IClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync()
  nameWithType: IClientServiceRequest<TResponse>.ExecuteAsync()
  fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.ExecuteAsync()
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteAsync
    path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
    startLine: 70
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Executes the request asynchronously and returns the result object.
  example: []
  syntax:
    content: Task<TResponse> ExecuteAsync()
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Function ExecuteAsync As Task(Of TResponse)
  overload: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync*
  nameWithType.vb: IClientServiceRequest(Of TResponse).ExecuteAsync()
  fullName.vb: Google.Apis.Requests.IClientServiceRequest(Of TResponse).ExecuteAsync()
- uid: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync(System.Threading.CancellationToken)
  id: ExecuteAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Requests.IClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync(CancellationToken)
  nameWithType: IClientServiceRequest<TResponse>.ExecuteAsync(CancellationToken)
  fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.ExecuteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: ExecuteAsync
    path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
    startLine: 74
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Executes the request asynchronously and returns the result object.
  example: []
  syntax:
    content: Task<TResponse> ExecuteAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
    content.vb: Function ExecuteAsync(cancellationToken As CancellationToken) As Task(Of TResponse)
  overload: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync*
  nameWithType.vb: IClientServiceRequest(Of TResponse).ExecuteAsync(CancellationToken)
  fullName.vb: Google.Apis.Requests.IClientServiceRequest(Of TResponse).ExecuteAsync(System.Threading.CancellationToken)
- uid: Google.Apis.Requests.IClientServiceRequest`1.Execute
  commentId: M:Google.Apis.Requests.IClientServiceRequest`1.Execute
  id: Execute
  parent: Google.Apis.Requests.IClientServiceRequest`1
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: IClientServiceRequest<TResponse>.Execute()
  fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.Execute()
  type: Method
  source:
    remote:
      path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
      branch: master
      repo: https://github.com/google/google-api-dotnet-client
    id: Execute
    path: Src/Support/GoogleApis/Apis/Requests/IClientServiceRequest.cs
    startLine: 77
  assemblies:
  - Google.Apis
  namespace: Google.Apis.Requests
  summary: Executes the request and returns the result object.
  example: []
  syntax:
    content: TResponse Execute()
    return:
      type: '{TResponse}'
    content.vb: Function Execute As TResponse
  overload: Google.Apis.Requests.IClientServiceRequest`1.Execute*
  nameWithType.vb: IClientServiceRequest(Of TResponse).Execute()
  fullName.vb: Google.Apis.Requests.IClientServiceRequest(Of TResponse).Execute()
references:
- uid: Google.Apis.Requests.IClientServiceRequest
  commentId: T:Google.Apis.Requests.IClientServiceRequest
  parent: Google.Apis.Requests
  isExternal: false
  name: IClientServiceRequest
  nameWithType: IClientServiceRequest
  fullName: Google.Apis.Requests.IClientServiceRequest
- uid: Google.Apis.Requests
  commentId: N:Google.Apis.Requests
  isExternal: false
  name: Google.Apis.Requests
  nameWithType: Google.Apis.Requests
  fullName: Google.Apis.Requests
- uid: Google.Apis.Requests.IClientServiceRequest.MethodName
  commentId: P:Google.Apis.Requests.IClientServiceRequest.MethodName
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: false
  name: MethodName
  nameWithType: IClientServiceRequest.MethodName
  fullName: Google.Apis.Requests.IClientServiceRequest.MethodName
- uid: Google.Apis.Requests.IClientServiceRequest.RestPath
  commentId: P:Google.Apis.Requests.IClientServiceRequest.RestPath
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: false
  name: RestPath
  nameWithType: IClientServiceRequest.RestPath
  fullName: Google.Apis.Requests.IClientServiceRequest.RestPath
- uid: Google.Apis.Requests.IClientServiceRequest.HttpMethod
  commentId: P:Google.Apis.Requests.IClientServiceRequest.HttpMethod
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: false
  name: HttpMethod
  nameWithType: IClientServiceRequest.HttpMethod
  fullName: Google.Apis.Requests.IClientServiceRequest.HttpMethod
- uid: Google.Apis.Requests.IClientServiceRequest.RequestParameters
  commentId: P:Google.Apis.Requests.IClientServiceRequest.RequestParameters
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: false
  name: RequestParameters
  nameWithType: IClientServiceRequest.RequestParameters
  fullName: Google.Apis.Requests.IClientServiceRequest.RequestParameters
- uid: Google.Apis.Requests.IClientServiceRequest.Service
  commentId: P:Google.Apis.Requests.IClientServiceRequest.Service
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: false
  name: Service
  nameWithType: IClientServiceRequest.Service
  fullName: Google.Apis.Requests.IClientServiceRequest.Service
- uid: Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable{System.Boolean})
  commentId: M:Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable{System.Boolean})
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: true
  name: CreateRequest(Nullable<Boolean>)
  nameWithType: IClientServiceRequest.CreateRequest(Nullable<Boolean>)
  fullName: Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable<System.Boolean>)
  nameWithType.vb: IClientServiceRequest.CreateRequest(Nullable(Of Boolean))
  fullName.vb: Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable(Of System.Boolean))
  name.vb: CreateRequest(Nullable(Of Boolean))
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable{System.Boolean})
    name: CreateRequest
    nameWithType: IClientServiceRequest.CreateRequest
    fullName: Google.Apis.Requests.IClientServiceRequest.CreateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest.CreateRequest(System.Nullable{System.Boolean})
    name: CreateRequest
    nameWithType: IClientServiceRequest.CreateRequest
    fullName: Google.Apis.Requests.IClientServiceRequest.CreateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  commentId: M:Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: false
  name: ExecuteAsStreamAsync()
  nameWithType: IClientServiceRequest.ExecuteAsStreamAsync()
  fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync()
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
    name: ExecuteAsStreamAsync
    nameWithType: IClientServiceRequest.ExecuteAsStreamAsync
    fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
    name: ExecuteAsStreamAsync
    nameWithType: IClientServiceRequest.ExecuteAsStreamAsync
    fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  commentId: M:Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: true
  name: ExecuteAsStreamAsync(CancellationToken)
  nameWithType: IClientServiceRequest.ExecuteAsStreamAsync(CancellationToken)
  fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
    name: ExecuteAsStreamAsync
    nameWithType: IClientServiceRequest.ExecuteAsStreamAsync
    fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)
    name: ExecuteAsStreamAsync
    nameWithType: IClientServiceRequest.ExecuteAsStreamAsync
    fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
  commentId: M:Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
  parent: Google.Apis.Requests.IClientServiceRequest
  isExternal: false
  name: ExecuteAsStream()
  nameWithType: IClientServiceRequest.ExecuteAsStream()
  fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream()
  spec.csharp:
  - uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
    name: ExecuteAsStream
    nameWithType: IClientServiceRequest.ExecuteAsStream
    fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
    name: ExecuteAsStream
    nameWithType: IClientServiceRequest.ExecuteAsStream
    fullName: Google.Apis.Requests.IClientServiceRequest.ExecuteAsStream
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync*
  commentId: Overload:Google.Apis.Requests.IClientServiceRequest`1.ExecuteAsync
  isExternal: false
  name: ExecuteAsync
  nameWithType: IClientServiceRequest<TResponse>.ExecuteAsync
  fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.ExecuteAsync
  nameWithType.vb: IClientServiceRequest(Of TResponse).ExecuteAsync
  fullName.vb: Google.Apis.Requests.IClientServiceRequest(Of TResponse).ExecuteAsync
- uid: System.Threading.Tasks.Task{{TResponse}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResponse>
  nameWithType: Task<TResponse>
  fullName: System.Threading.Tasks.Task<TResponse>
  nameWithType.vb: Task(Of TResponse)
  fullName.vb: System.Threading.Tasks.Task(Of TResponse)
  name.vb: Task(Of TResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Google.Apis.Requests.IClientServiceRequest`1.Execute*
  commentId: Overload:Google.Apis.Requests.IClientServiceRequest`1.Execute
  isExternal: false
  name: Execute
  nameWithType: IClientServiceRequest<TResponse>.Execute
  fullName: Google.Apis.Requests.IClientServiceRequest<TResponse>.Execute
  nameWithType.vb: IClientServiceRequest(Of TResponse).Execute
  fullName.vb: Google.Apis.Requests.IClientServiceRequest(Of TResponse).Execute
- uid: '{TResponse}'
  commentId: '!:TResponse'
  definition: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: TResponse
  isExternal: false
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
