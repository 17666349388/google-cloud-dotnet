### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.ResourceNames.ProjectName
  commentId: T:Google.Api.Gax.ResourceNames.ProjectName
  id: ProjectName
  parent: Google.Api.Gax.ResourceNames
  children:
  - Google.Api.Gax.ResourceNames.ProjectName.#ctor(System.String)
  - Google.Api.Gax.ResourceNames.ProjectName.Equals(Google.Api.Gax.ResourceNames.ProjectName)
  - Google.Api.Gax.ResourceNames.ProjectName.Equals(System.Object)
  - Google.Api.Gax.ResourceNames.ProjectName.Format(System.String)
  - Google.Api.Gax.ResourceNames.ProjectName.FormatProject(System.String)
  - Google.Api.Gax.ResourceNames.ProjectName.FromProject(System.String)
  - Google.Api.Gax.ResourceNames.ProjectName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  - Google.Api.Gax.ResourceNames.ProjectName.GetHashCode
  - Google.Api.Gax.ResourceNames.ProjectName.IsKnownPattern
  - Google.Api.Gax.ResourceNames.ProjectName.op_Equality(Google.Api.Gax.ResourceNames.ProjectName,Google.Api.Gax.ResourceNames.ProjectName)
  - Google.Api.Gax.ResourceNames.ProjectName.op_Inequality(Google.Api.Gax.ResourceNames.ProjectName,Google.Api.Gax.ResourceNames.ProjectName)
  - Google.Api.Gax.ResourceNames.ProjectName.Parse(System.String)
  - Google.Api.Gax.ResourceNames.ProjectName.Parse(System.String,System.Boolean)
  - Google.Api.Gax.ResourceNames.ProjectName.ProjectId
  - Google.Api.Gax.ResourceNames.ProjectName.ToString
  - Google.Api.Gax.ResourceNames.ProjectName.TryParse(System.String,Google.Api.Gax.ResourceNames.ProjectName@)
  - Google.Api.Gax.ResourceNames.ProjectName.TryParse(System.String,System.Boolean,Google.Api.Gax.ResourceNames.ProjectName@)
  - Google.Api.Gax.ResourceNames.ProjectName.Type
  - Google.Api.Gax.ResourceNames.ProjectName.UnparsedResource
  langs:
  - csharp
  - vb
  name: ProjectName
  nameWithType: ProjectName
  fullName: Google.Api.Gax.ResourceNames.ProjectName
  type: Class
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ProjectName
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 17
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nResource name for the &apos;project&apos; resource which is widespread across Google Cloud Platform.\nWhile most resource names are generated on a per-API basis, many APIs use a project resource, and it&apos;s\nuseful to be able to pass values from one API to another.\n"
  example: []
  syntax:
    content: 'public sealed class ProjectName : IResourceName, IEquatable<ProjectName>'
    content.vb: >-
      Public NotInheritable Class ProjectName
          Implements IResourceName, IEquatable(Of ProjectName)
  inheritance:
  - System.Object
  implements:
  - Google.Api.Gax.IResourceName
  - System.IEquatable{Google.Api.Gax.ResourceNames.ProjectName}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Api.Gax.ResourceNames.ProjectName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  id: FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: FromUnparsed(UnparsedResourceName)
  nameWithType: ProjectName.FromUnparsed(UnparsedResourceName)
  fullName: Google.Api.Gax.ResourceNames.ProjectName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: FromUnparsed
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 36
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: Creates a <xref href="Google.Api.Gax.ResourceNames.ProjectName" data-throw-if-not-resolved="false"></xref> containing an unparsed resource name.
  example: []
  syntax:
    content: public static ProjectName FromUnparsed(UnparsedResourceName unparsedResourceName)
    parameters:
    - id: unparsedResourceName
      type: Google.Api.Gax.UnparsedResourceName
      description: The unparsed resource name. Must not be <code>null</code>.
    return:
      type: Google.Api.Gax.ResourceNames.ProjectName
      description: "\nA new instance of <xref href=\"Google.Api.Gax.ResourceNames.ProjectName\" data-throw-if-not-resolved=\"false\"></xref> containing the provided <code data-dev-comment-type=\"paramref\" class=\"paramref\">unparsedResourceName</code>.\n"
    content.vb: Public Shared Function FromUnparsed(unparsedResourceName As UnparsedResourceName) As ProjectName
  overload: Google.Api.Gax.ResourceNames.ProjectName.FromUnparsed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.ProjectName.FromProject(System.String)
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.FromProject(System.String)
  id: FromProject(System.String)
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: FromProject(String)
  nameWithType: ProjectName.FromProject(String)
  fullName: Google.Api.Gax.ResourceNames.ProjectName.FromProject(System.String)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: FromProject
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 42
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: Creates a <xref href="Google.Api.Gax.ResourceNames.ProjectName" data-throw-if-not-resolved="false"></xref> with the pattern <code>projects/{project}</code>.
  example: []
  syntax:
    content: public static ProjectName FromProject(string projectId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    return:
      type: Google.Api.Gax.ResourceNames.ProjectName
      description: A new instance of <xref href="Google.Api.Gax.ResourceNames.ProjectName" data-throw-if-not-resolved="false"></xref> constructed from the provided ids.
    content.vb: Public Shared Function FromProject(projectId As String) As ProjectName
  overload: Google.Api.Gax.ResourceNames.ProjectName.FromProject*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.ProjectName.Format(System.String)
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.Format(System.String)
  id: Format(System.String)
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: Format(String)
  nameWithType: ProjectName.Format(String)
  fullName: Google.Api.Gax.ResourceNames.ProjectName.Format(System.String)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Format
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 53
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nFormats the IDs into the string representation of this <xref href=\"Google.Api.Gax.ResourceNames.ProjectName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>projects/{project}</code>.\n"
  example: []
  syntax:
    content: public static string Format(string projectId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    return:
      type: System.String
      description: "\nThe string representation of this <xref href=\"Google.Api.Gax.ResourceNames.ProjectName\" data-throw-if-not-resolved=\"false\"></xref> with pattern <code>projects/{project}</code>.\n"
    content.vb: Public Shared Function Format(projectId As String) As String
  overload: Google.Api.Gax.ResourceNames.ProjectName.Format*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.ProjectName.FormatProject(System.String)
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.FormatProject(System.String)
  id: FormatProject(System.String)
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: FormatProject(String)
  nameWithType: ProjectName.FormatProject(String)
  fullName: Google.Api.Gax.ResourceNames.ProjectName.FormatProject(System.String)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: FormatProject
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 63
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nFormats the IDs into the string representation of this <xref href=\"Google.Api.Gax.ResourceNames.ProjectName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>projects/{project}</code>.\n"
  example: []
  syntax:
    content: public static string FormatProject(string projectId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    return:
      type: System.String
      description: "\nThe string representation of this <xref href=\"Google.Api.Gax.ResourceNames.ProjectName\" data-throw-if-not-resolved=\"false\"></xref> with pattern <code>projects/{project}</code>.\n"
    content.vb: Public Shared Function FormatProject(projectId As String) As String
  overload: Google.Api.Gax.ResourceNames.ProjectName.FormatProject*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.ProjectName.Parse(System.String)
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.Parse(System.String)
  id: Parse(System.String)
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: ProjectName.Parse(String)
  fullName: Google.Api.Gax.ResourceNames.ProjectName.Parse(System.String)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parse
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 73
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: Parses the given resource name string into a new <xref href="Google.Api.Gax.ResourceNames.ProjectName" data-throw-if-not-resolved="false"></xref> instance.
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li><code>projects/{project}</code></li></ul>\n"
  example: []
  syntax:
    content: public static ProjectName Parse(string projectName)
    parameters:
    - id: projectName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    return:
      type: Google.Api.Gax.ResourceNames.ProjectName
      description: The parsed <xref href="Google.Api.Gax.ResourceNames.ProjectName" data-throw-if-not-resolved="false"></xref> if successful.
    content.vb: Public Shared Function Parse(projectName As String) As ProjectName
  overload: Google.Api.Gax.ResourceNames.ProjectName.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.ProjectName.Parse(System.String,System.Boolean)
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.Parse(System.String,System.Boolean)
  id: Parse(System.String,System.Boolean)
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: Parse(String, Boolean)
  nameWithType: ProjectName.Parse(String, Boolean)
  fullName: Google.Api.Gax.ResourceNames.ProjectName.Parse(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parse
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 91
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nParses the given resource name string into a new <xref href=\"Google.Api.Gax.ResourceNames.ProjectName\" data-throw-if-not-resolved=\"false\"></xref> instance; optionally allowing an\nunparseable resource name.\n"
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li><code>projects/{project}</code></li></ul>\nOr may be in any format if <code data-dev-comment-type=\"paramref\" class=\"paramref\">allowUnparsed</code> is <code>true</code>.\n"
  example: []
  syntax:
    content: public static ProjectName Parse(string projectName, bool allowUnparsed)
    parameters:
    - id: projectName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    - id: allowUnparsed
      type: System.Boolean
      description: "\nIf <code>true</code> will successfully store an unparseable resource name into the <xref href=\"Google.Api.Gax.ResourceNames.ProjectName.UnparsedResource\" data-throw-if-not-resolved=\"false\"></xref>\nproperty; otherwise will throw an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> if an unparseable resource name is\nspecified.\n"
    return:
      type: Google.Api.Gax.ResourceNames.ProjectName
      description: The parsed <xref href="Google.Api.Gax.ResourceNames.ProjectName" data-throw-if-not-resolved="false"></xref> if successful.
    content.vb: Public Shared Function Parse(projectName As String, allowUnparsed As Boolean) As ProjectName
  overload: Google.Api.Gax.ResourceNames.ProjectName.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.ProjectName.TryParse(System.String,Google.Api.Gax.ResourceNames.ProjectName@)
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.TryParse(System.String,Google.Api.Gax.ResourceNames.ProjectName@)
  id: TryParse(System.String,Google.Api.Gax.ResourceNames.ProjectName@)
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: TryParse(String, out ProjectName)
  nameWithType: ProjectName.TryParse(String, out ProjectName)
  fullName: Google.Api.Gax.ResourceNames.ProjectName.TryParse(System.String, out Google.Api.Gax.ResourceNames.ProjectName)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: TryParse
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 106
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nTries to parse the given resource name string into a new <xref href=\"Google.Api.Gax.ResourceNames.ProjectName\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li><code>projects/{project}</code></li></ul>\n"
  example: []
  syntax:
    content: public static bool TryParse(string projectName, out ProjectName result)
    parameters:
    - id: projectName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    - id: result
      type: Google.Api.Gax.ResourceNames.ProjectName
      description: "\nWhen this method returns, the parsed <xref href=\"Google.Api.Gax.ResourceNames.ProjectName\" data-throw-if-not-resolved=\"false\"></xref>, or <code>null</code> if parsing failed.\n"
    return:
      type: System.Boolean
      description: <code>true</code> if the name was parsed successfully; <code>false</code> otherwise.
    content.vb: Public Shared Function TryParse(projectName As String, ByRef result As ProjectName) As Boolean
  overload: Google.Api.Gax.ResourceNames.ProjectName.TryParse*
  nameWithType.vb: ProjectName.TryParse(String, ByRef ProjectName)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Api.Gax.ResourceNames.ProjectName.TryParse(System.String, ByRef Google.Api.Gax.ResourceNames.ProjectName)
  name.vb: TryParse(String, ByRef ProjectName)
- uid: Google.Api.Gax.ResourceNames.ProjectName.TryParse(System.String,System.Boolean,Google.Api.Gax.ResourceNames.ProjectName@)
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.TryParse(System.String,System.Boolean,Google.Api.Gax.ResourceNames.ProjectName@)
  id: TryParse(System.String,System.Boolean,Google.Api.Gax.ResourceNames.ProjectName@)
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: TryParse(String, Boolean, out ProjectName)
  nameWithType: ProjectName.TryParse(String, Boolean, out ProjectName)
  fullName: Google.Api.Gax.ResourceNames.ProjectName.TryParse(System.String, System.Boolean, out Google.Api.Gax.ResourceNames.ProjectName)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: TryParse
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 127
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nTries to parse the given resource name string into a new <xref href=\"Google.Api.Gax.ResourceNames.ProjectName\" data-throw-if-not-resolved=\"false\"></xref> instance; optionally\nallowing an unparseable resource name.\n"
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li><code>projects/{project}</code></li></ul>\nOr may be in any format if <code data-dev-comment-type=\"paramref\" class=\"paramref\">allowUnparsed</code> is <code>true</code>.\n"
  example: []
  syntax:
    content: public static bool TryParse(string projectName, bool allowUnparsed, out ProjectName result)
    parameters:
    - id: projectName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    - id: allowUnparsed
      type: System.Boolean
      description: "\nIf <code>true</code> will successfully store an unparseable resource name into the <xref href=\"Google.Api.Gax.ResourceNames.ProjectName.UnparsedResource\" data-throw-if-not-resolved=\"false\"></xref>\nproperty; otherwise will throw an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> if an unparseable resource name is\nspecified.\n"
    - id: result
      type: Google.Api.Gax.ResourceNames.ProjectName
      description: "\nWhen this method returns, the parsed <xref href=\"Google.Api.Gax.ResourceNames.ProjectName\" data-throw-if-not-resolved=\"false\"></xref>, or <code>null</code> if parsing failed.\n"
    return:
      type: System.Boolean
      description: <code>true</code> if the name was parsed successfully; <code>false</code> otherwise.
    content.vb: Public Shared Function TryParse(projectName As String, allowUnparsed As Boolean, ByRef result As ProjectName) As Boolean
  overload: Google.Api.Gax.ResourceNames.ProjectName.TryParse*
  nameWithType.vb: ProjectName.TryParse(String, Boolean, ByRef ProjectName)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Api.Gax.ResourceNames.ProjectName.TryParse(System.String, System.Boolean, ByRef Google.Api.Gax.ResourceNames.ProjectName)
  name.vb: TryParse(String, Boolean, ByRef ProjectName)
- uid: Google.Api.Gax.ResourceNames.ProjectName.#ctor(System.String)
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: ProjectName(String)
  nameWithType: ProjectName.ProjectName(String)
  fullName: Google.Api.Gax.ResourceNames.ProjectName.ProjectName(System.String)
  type: Constructor
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 160
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nConstructs a new instance of a <xref href=\"Google.Api.Gax.ResourceNames.ProjectName\" data-throw-if-not-resolved=\"false\"></xref> class from the component parts of pattern\n<code>projects/{project}</code>\n"
  example: []
  syntax:
    content: public ProjectName(string projectId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    content.vb: Public Sub New(projectId As String)
  overload: Google.Api.Gax.ResourceNames.ProjectName.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Gax.ResourceNames.ProjectName.Type
  commentId: P:Google.Api.Gax.ResourceNames.ProjectName.Type
  id: Type
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ProjectName.Type
  fullName: Google.Api.Gax.ResourceNames.ProjectName.Type
  type: Property
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Type
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 165
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: The <xref href="Google.Api.Gax.ResourceNames.ProjectName.ResourceNameType" data-throw-if-not-resolved="false"></xref> of the contained resource name.
  example: []
  syntax:
    content: public ProjectName.ResourceNameType Type { get; }
    parameters: []
    return:
      type: Google.Api.Gax.ResourceNames.ProjectName.ResourceNameType
    content.vb: Public ReadOnly Property Type As ProjectName.ResourceNameType
  overload: Google.Api.Gax.ResourceNames.ProjectName.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.ResourceNames.ProjectName.UnparsedResource
  commentId: P:Google.Api.Gax.ResourceNames.ProjectName.UnparsedResource
  id: UnparsedResource
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: UnparsedResource
  nameWithType: ProjectName.UnparsedResource
  fullName: Google.Api.Gax.ResourceNames.ProjectName.UnparsedResource
  type: Property
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: UnparsedResource
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 171
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nThe contained <xref href=\"Google.Api.Gax.UnparsedResourceName\" data-throw-if-not-resolved=\"false\"></xref>. Only non-<code>null</code>if this instance contains an\nunparsed resource name.\n"
  example: []
  syntax:
    content: public UnparsedResourceName UnparsedResource { get; }
    parameters: []
    return:
      type: Google.Api.Gax.UnparsedResourceName
    content.vb: Public ReadOnly Property UnparsedResource As UnparsedResourceName
  overload: Google.Api.Gax.ResourceNames.ProjectName.UnparsedResource*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.ResourceNames.ProjectName.ProjectId
  commentId: P:Google.Api.Gax.ResourceNames.ProjectName.ProjectId
  id: ProjectId
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: ProjectName.ProjectId
  fullName: Google.Api.Gax.ResourceNames.ProjectName.ProjectId
  type: Property
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ProjectId
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 176
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nThe <code>Project</code> ID. Will not be <code>null</code>, unless this instance contains an unparsed resource name.\n"
  example: []
  syntax:
    content: public string ProjectId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProjectId As String
  overload: Google.Api.Gax.ResourceNames.ProjectName.ProjectId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.ResourceNames.ProjectName.IsKnownPattern
  commentId: P:Google.Api.Gax.ResourceNames.ProjectName.IsKnownPattern
  id: IsKnownPattern
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: IsKnownPattern
  nameWithType: ProjectName.IsKnownPattern
  fullName: Google.Api.Gax.ResourceNames.ProjectName.IsKnownPattern
  type: Property
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: IsKnownPattern
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 179
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nWhether this instance contains a resource name with a known pattern.\n"
  example: []
  syntax:
    content: public bool IsKnownPattern { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsKnownPattern As Boolean
  overload: Google.Api.Gax.ResourceNames.ProjectName.IsKnownPattern*
  implements:
  - Google.Api.Gax.IResourceName.IsKnownPattern
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.ResourceNames.ProjectName.ToString
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.ToString
  id: ToString
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ProjectName.ToString()
  fullName: Google.Api.Gax.ResourceNames.ProjectName.ToString()
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 182
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nThe string representation of the resource name.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The string representation of the resource name.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Api.Gax.ResourceNames.ProjectName.ToString*
  implements:
  - Google.Api.Gax.IResourceName.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Api.Gax.ResourceNames.ProjectName.GetHashCode
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.GetHashCode
  id: GetHashCode
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ProjectName.GetHashCode()
  fullName: Google.Api.Gax.ResourceNames.ProjectName.GetHashCode()
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 193
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Api.Gax.ResourceNames.ProjectName.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Api.Gax.ResourceNames.ProjectName.Equals(System.Object)
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ProjectName.Equals(Object)
  fullName: Google.Api.Gax.ResourceNames.ProjectName.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 196
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Api.Gax.ResourceNames.ProjectName.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Api.Gax.ResourceNames.ProjectName.Equals(Google.Api.Gax.ResourceNames.ProjectName)
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.Equals(Google.Api.Gax.ResourceNames.ProjectName)
  id: Equals(Google.Api.Gax.ResourceNames.ProjectName)
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: Equals(ProjectName)
  nameWithType: ProjectName.Equals(ProjectName)
  fullName: Google.Api.Gax.ResourceNames.ProjectName.Equals(Google.Api.Gax.ResourceNames.ProjectName)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 199
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public bool Equals(ProjectName other)
    parameters:
    - id: other
      type: Google.Api.Gax.ResourceNames.ProjectName
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ProjectName) As Boolean
  overload: Google.Api.Gax.ResourceNames.ProjectName.Equals*
  implements:
  - System.IEquatable{Google.Api.Gax.ResourceNames.ProjectName}.Equals(Google.Api.Gax.ResourceNames.ProjectName)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Gax.ResourceNames.ProjectName.op_Equality(Google.Api.Gax.ResourceNames.ProjectName,Google.Api.Gax.ResourceNames.ProjectName)
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.op_Equality(Google.Api.Gax.ResourceNames.ProjectName,Google.Api.Gax.ResourceNames.ProjectName)
  id: op_Equality(Google.Api.Gax.ResourceNames.ProjectName,Google.Api.Gax.ResourceNames.ProjectName)
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: Equality(ProjectName, ProjectName)
  nameWithType: ProjectName.Equality(ProjectName, ProjectName)
  fullName: Google.Api.Gax.ResourceNames.ProjectName.Equality(Google.Api.Gax.ResourceNames.ProjectName, Google.Api.Gax.ResourceNames.ProjectName)
  type: Operator
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: op_Equality
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 202
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public static bool operator ==(ProjectName a, ProjectName b)
    parameters:
    - id: a
      type: Google.Api.Gax.ResourceNames.ProjectName
    - id: b
      type: Google.Api.Gax.ResourceNames.ProjectName
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As ProjectName, b As ProjectName) As Boolean
  overload: Google.Api.Gax.ResourceNames.ProjectName.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.ProjectName.op_Inequality(Google.Api.Gax.ResourceNames.ProjectName,Google.Api.Gax.ResourceNames.ProjectName)
  commentId: M:Google.Api.Gax.ResourceNames.ProjectName.op_Inequality(Google.Api.Gax.ResourceNames.ProjectName,Google.Api.Gax.ResourceNames.ProjectName)
  id: op_Inequality(Google.Api.Gax.ResourceNames.ProjectName,Google.Api.Gax.ResourceNames.ProjectName)
  parent: Google.Api.Gax.ResourceNames.ProjectName
  langs:
  - csharp
  - vb
  name: Inequality(ProjectName, ProjectName)
  nameWithType: ProjectName.Inequality(ProjectName, ProjectName)
  fullName: Google.Api.Gax.ResourceNames.ProjectName.Inequality(Google.Api.Gax.ResourceNames.ProjectName, Google.Api.Gax.ResourceNames.ProjectName)
  type: Operator
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/ProjectName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: op_Inequality
    path: Google.Api.Gax/ResourceNames/ProjectName.cs
    startLine: 205
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public static bool operator !=(ProjectName a, ProjectName b)
    parameters:
    - id: a
      type: Google.Api.Gax.ResourceNames.ProjectName
    - id: b
      type: Google.Api.Gax.ResourceNames.ProjectName
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As ProjectName, b As ProjectName) As Boolean
  overload: Google.Api.Gax.ResourceNames.ProjectName.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Google.Api.Gax.ResourceNames
  commentId: N:Google.Api.Gax.ResourceNames
  name: Google.Api.Gax.ResourceNames
  nameWithType: Google.Api.Gax.ResourceNames
  fullName: Google.Api.Gax.ResourceNames
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Api.Gax.IResourceName
  commentId: T:Google.Api.Gax.IResourceName
  parent: Google.Api.Gax
  name: IResourceName
  nameWithType: IResourceName
  fullName: Google.Api.Gax.IResourceName
- uid: System.IEquatable{Google.Api.Gax.ResourceNames.ProjectName}
  commentId: T:System.IEquatable{Google.Api.Gax.ResourceNames.ProjectName}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ProjectName>
  nameWithType: IEquatable<ProjectName>
  fullName: System.IEquatable<Google.Api.Gax.ResourceNames.ProjectName>
  nameWithType.vb: IEquatable(Of ProjectName)
  fullName.vb: System.IEquatable(Of Google.Api.Gax.ResourceNames.ProjectName)
  name.vb: IEquatable(Of ProjectName)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Api.Gax.ResourceNames.ProjectName
    name: ProjectName
    nameWithType: ProjectName
    fullName: Google.Api.Gax.ResourceNames.ProjectName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Api.Gax.ResourceNames.ProjectName
    name: ProjectName
    nameWithType: ProjectName
    fullName: Google.Api.Gax.ResourceNames.ProjectName
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Api.Gax
  commentId: N:Google.Api.Gax
  name: Google.Api.Gax
  nameWithType: Google.Api.Gax
  fullName: Google.Api.Gax
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.ProjectName
  commentId: T:Google.Api.Gax.ResourceNames.ProjectName
  parent: Google.Api.Gax.ResourceNames
  name: ProjectName
  nameWithType: ProjectName
  fullName: Google.Api.Gax.ResourceNames.ProjectName
- uid: Google.Api.Gax.ResourceNames.ProjectName.FromUnparsed*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.FromUnparsed
  name: FromUnparsed
  nameWithType: ProjectName.FromUnparsed
  fullName: Google.Api.Gax.ResourceNames.ProjectName.FromUnparsed
- uid: Google.Api.Gax.UnparsedResourceName
  commentId: T:Google.Api.Gax.UnparsedResourceName
  parent: Google.Api.Gax
  name: UnparsedResourceName
  nameWithType: UnparsedResourceName
  fullName: Google.Api.Gax.UnparsedResourceName
- uid: Google.Api.Gax.ResourceNames.ProjectName.FromProject*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.FromProject
  name: FromProject
  nameWithType: ProjectName.FromProject
  fullName: Google.Api.Gax.ResourceNames.ProjectName.FromProject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Api.Gax.ResourceNames.ProjectName.Format*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.Format
  name: Format
  nameWithType: ProjectName.Format
  fullName: Google.Api.Gax.ResourceNames.ProjectName.Format
- uid: Google.Api.Gax.ResourceNames.ProjectName.FormatProject*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.FormatProject
  name: FormatProject
  nameWithType: ProjectName.FormatProject
  fullName: Google.Api.Gax.ResourceNames.ProjectName.FormatProject
- uid: Google.Api.Gax.ResourceNames.ProjectName.Parse*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.Parse
  name: Parse
  nameWithType: ProjectName.Parse
  fullName: Google.Api.Gax.ResourceNames.ProjectName.Parse
- uid: Google.Api.Gax.ResourceNames.ProjectName.UnparsedResource
  commentId: P:Google.Api.Gax.ResourceNames.ProjectName.UnparsedResource
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Api.Gax.ResourceNames.ProjectName.TryParse*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.TryParse
  name: TryParse
  nameWithType: ProjectName.TryParse
  fullName: Google.Api.Gax.ResourceNames.ProjectName.TryParse
- uid: Google.Api.Gax.ResourceNames.ProjectName.#ctor*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.#ctor
  name: ProjectName
  nameWithType: ProjectName.ProjectName
  fullName: Google.Api.Gax.ResourceNames.ProjectName.ProjectName
- uid: Google.Api.Gax.ResourceNames.ProjectName.ResourceNameType
  commentId: T:Google.Api.Gax.ResourceNames.ProjectName.ResourceNameType
  parent: Google.Api.Gax.ResourceNames
  name: ProjectName.ResourceNameType
  nameWithType: ProjectName.ResourceNameType
  fullName: Google.Api.Gax.ResourceNames.ProjectName.ResourceNameType
- uid: Google.Api.Gax.ResourceNames.ProjectName.Type*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.Type
  name: Type
  nameWithType: ProjectName.Type
  fullName: Google.Api.Gax.ResourceNames.ProjectName.Type
- uid: Google.Api.Gax.ResourceNames.ProjectName.UnparsedResource*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.UnparsedResource
  name: UnparsedResource
  nameWithType: ProjectName.UnparsedResource
  fullName: Google.Api.Gax.ResourceNames.ProjectName.UnparsedResource
- uid: Google.Api.Gax.ResourceNames.ProjectName.ProjectId*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.ProjectId
  name: ProjectId
  nameWithType: ProjectName.ProjectId
  fullName: Google.Api.Gax.ResourceNames.ProjectName.ProjectId
- uid: Google.Api.Gax.ResourceNames.ProjectName.IsKnownPattern*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.IsKnownPattern
  name: IsKnownPattern
  nameWithType: ProjectName.IsKnownPattern
  fullName: Google.Api.Gax.ResourceNames.ProjectName.IsKnownPattern
- uid: Google.Api.Gax.IResourceName.IsKnownPattern
  commentId: P:Google.Api.Gax.IResourceName.IsKnownPattern
  parent: Google.Api.Gax.IResourceName
  name: IsKnownPattern
  nameWithType: IResourceName.IsKnownPattern
  fullName: Google.Api.Gax.IResourceName.IsKnownPattern
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.ProjectName.ToString*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.ToString
  name: ToString
  nameWithType: ProjectName.ToString
  fullName: Google.Api.Gax.ResourceNames.ProjectName.ToString
- uid: Google.Api.Gax.IResourceName.ToString
  commentId: M:Google.Api.Gax.IResourceName.ToString
  parent: Google.Api.Gax.IResourceName
  name: ToString()
  nameWithType: IResourceName.ToString()
  fullName: Google.Api.Gax.IResourceName.ToString()
  spec.csharp:
  - uid: Google.Api.Gax.IResourceName.ToString
    name: ToString
    nameWithType: IResourceName.ToString
    fullName: Google.Api.Gax.IResourceName.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Api.Gax.IResourceName.ToString
    name: ToString
    nameWithType: IResourceName.ToString
    fullName: Google.Api.Gax.IResourceName.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.ProjectName.GetHashCode*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.GetHashCode
  name: GetHashCode
  nameWithType: ProjectName.GetHashCode
  fullName: Google.Api.Gax.ResourceNames.ProjectName.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.ProjectName.Equals*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.Equals
  name: Equals
  nameWithType: ProjectName.Equals
  fullName: Google.Api.Gax.ResourceNames.ProjectName.Equals
- uid: System.IEquatable{Google.Api.Gax.ResourceNames.ProjectName}.Equals(Google.Api.Gax.ResourceNames.ProjectName)
  commentId: M:System.IEquatable{Google.Api.Gax.ResourceNames.ProjectName}.Equals(Google.Api.Gax.ResourceNames.ProjectName)
  parent: System.IEquatable{Google.Api.Gax.ResourceNames.ProjectName}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ProjectName)
  nameWithType: IEquatable<ProjectName>.Equals(ProjectName)
  fullName: System.IEquatable<Google.Api.Gax.ResourceNames.ProjectName>.Equals(Google.Api.Gax.ResourceNames.ProjectName)
  nameWithType.vb: IEquatable(Of ProjectName).Equals(ProjectName)
  fullName.vb: System.IEquatable(Of Google.Api.Gax.ResourceNames.ProjectName).Equals(Google.Api.Gax.ResourceNames.ProjectName)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ProjectName>.Equals
    fullName: System.IEquatable<Google.Api.Gax.ResourceNames.ProjectName>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Api.Gax.ResourceNames.ProjectName
    name: ProjectName
    nameWithType: ProjectName
    fullName: Google.Api.Gax.ResourceNames.ProjectName
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ProjectName).Equals
    fullName: System.IEquatable(Of Google.Api.Gax.ResourceNames.ProjectName).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Api.Gax.ResourceNames.ProjectName
    name: ProjectName
    nameWithType: ProjectName
    fullName: Google.Api.Gax.ResourceNames.ProjectName
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.ProjectName.op_Equality*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.op_Equality
  name: Equality
  nameWithType: ProjectName.Equality
  fullName: Google.Api.Gax.ResourceNames.ProjectName.Equality
- uid: Google.Api.Gax.ResourceNames.ProjectName.op_Inequality*
  commentId: Overload:Google.Api.Gax.ResourceNames.ProjectName.op_Inequality
  name: Inequality
  nameWithType: ProjectName.Inequality
  fullName: Google.Api.Gax.ResourceNames.ProjectName.Inequality
