### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.ResourceNames.LocationName
  commentId: T:Google.Api.Gax.ResourceNames.LocationName
  id: LocationName
  parent: Google.Api.Gax.ResourceNames
  children:
  - Google.Api.Gax.ResourceNames.LocationName.#ctor(System.String,System.String)
  - Google.Api.Gax.ResourceNames.LocationName.Equals(Google.Api.Gax.ResourceNames.LocationName)
  - Google.Api.Gax.ResourceNames.LocationName.Equals(System.Object)
  - Google.Api.Gax.ResourceNames.LocationName.Format(System.String,System.String)
  - Google.Api.Gax.ResourceNames.LocationName.FormatProjectLocation(System.String,System.String)
  - Google.Api.Gax.ResourceNames.LocationName.FromProjectLocation(System.String,System.String)
  - Google.Api.Gax.ResourceNames.LocationName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  - Google.Api.Gax.ResourceNames.LocationName.GetHashCode
  - Google.Api.Gax.ResourceNames.LocationName.IsKnownPattern
  - Google.Api.Gax.ResourceNames.LocationName.LocationId
  - Google.Api.Gax.ResourceNames.LocationName.op_Equality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  - Google.Api.Gax.ResourceNames.LocationName.op_Inequality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  - Google.Api.Gax.ResourceNames.LocationName.Parse(System.String)
  - Google.Api.Gax.ResourceNames.LocationName.Parse(System.String,System.Boolean)
  - Google.Api.Gax.ResourceNames.LocationName.ProjectId
  - Google.Api.Gax.ResourceNames.LocationName.ToString
  - Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String,Google.Api.Gax.ResourceNames.LocationName@)
  - Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String,System.Boolean,Google.Api.Gax.ResourceNames.LocationName@)
  - Google.Api.Gax.ResourceNames.LocationName.Type
  - Google.Api.Gax.ResourceNames.LocationName.UnparsedResource
  langs:
  - csharp
  - vb
  name: LocationName
  nameWithType: LocationName
  fullName: Google.Api.Gax.ResourceNames.LocationName
  type: Class
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: LocationName
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 17
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nResource name for the &apos;location&apos; resource which is widespread across Google Cloud Platform.\nWhile most resource names are generated on a per-API basis, many APIs use a location resource, and it&apos;s\nuseful to be able to pass values from one API to another.\n"
  example: []
  syntax:
    content: 'public sealed class LocationName : IResourceName, IEquatable<LocationName>'
    content.vb: >-
      Public NotInheritable Class LocationName
          Implements IResourceName, IEquatable(Of LocationName)
  inheritance:
  - System.Object
  implements:
  - Google.Api.Gax.IResourceName
  - System.IEquatable{Google.Api.Gax.ResourceNames.LocationName}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Api.Gax.ResourceNames.LocationName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  id: FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: FromUnparsed(UnparsedResourceName)
  nameWithType: LocationName.FromUnparsed(UnparsedResourceName)
  fullName: Google.Api.Gax.ResourceNames.LocationName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: FromUnparsed
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 37
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: Creates a <xref href="Google.Api.Gax.ResourceNames.LocationName" data-throw-if-not-resolved="false"></xref> containing an unparsed resource name.
  example: []
  syntax:
    content: public static LocationName FromUnparsed(UnparsedResourceName unparsedResourceName)
    parameters:
    - id: unparsedResourceName
      type: Google.Api.Gax.UnparsedResourceName
      description: The unparsed resource name. Must not be <code>null</code>.
    return:
      type: Google.Api.Gax.ResourceNames.LocationName
      description: "\nA new instance of <xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref> containing the provided <code data-dev-comment-type=\"paramref\" class=\"paramref\">unparsedResourceName</code>\n.\n"
    content.vb: Public Shared Function FromUnparsed(unparsedResourceName As UnparsedResourceName) As LocationName
  overload: Google.Api.Gax.ResourceNames.LocationName.FromUnparsed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.LocationName.FromProjectLocation(System.String,System.String)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.FromProjectLocation(System.String,System.String)
  id: FromProjectLocation(System.String,System.String)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: FromProjectLocation(String, String)
  nameWithType: LocationName.FromProjectLocation(String, String)
  fullName: Google.Api.Gax.ResourceNames.LocationName.FromProjectLocation(System.String, System.String)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: FromProjectLocation
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 46
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nCreates a <xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref> with the pattern <code>projects/{project}/locations/{location}</code>.\n"
  example: []
  syntax:
    content: public static LocationName FromProjectLocation(string projectId, string locationId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    - id: locationId
      type: System.String
      description: The <code>Location</code> ID. Must not be <code>null</code> or empty.
    return:
      type: Google.Api.Gax.ResourceNames.LocationName
      description: A new instance of <xref href="Google.Api.Gax.ResourceNames.LocationName" data-throw-if-not-resolved="false"></xref> constructed from the provided ids.
    content.vb: Public Shared Function FromProjectLocation(projectId As String, locationId As String) As LocationName
  overload: Google.Api.Gax.ResourceNames.LocationName.FromProjectLocation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.LocationName.Format(System.String,System.String)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.Format(System.String,System.String)
  id: Format(System.String,System.String)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Format(String, String)
  nameWithType: LocationName.Format(String, String)
  fullName: Google.Api.Gax.ResourceNames.LocationName.Format(System.String, System.String)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Format
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 59
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nFormats the IDs into the string representation of this <xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>projects/{project}/locations/{location}</code>.\n"
  example: []
  syntax:
    content: public static string Format(string projectId, string locationId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    - id: locationId
      type: System.String
      description: The <code>Location</code> ID. Must not be <code>null</code> or empty.
    return:
      type: System.String
      description: "\nThe string representation of this <xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>projects/{project}/locations/{location}</code>.\n"
    content.vb: Public Shared Function Format(projectId As String, locationId As String) As String
  overload: Google.Api.Gax.ResourceNames.LocationName.Format*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.LocationName.FormatProjectLocation(System.String,System.String)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.FormatProjectLocation(System.String,System.String)
  id: FormatProjectLocation(System.String,System.String)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: FormatProjectLocation(String, String)
  nameWithType: LocationName.FormatProjectLocation(String, String)
  fullName: Google.Api.Gax.ResourceNames.LocationName.FormatProjectLocation(System.String, System.String)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: FormatProjectLocation
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 71
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nFormats the IDs into the string representation of this <xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>projects/{project}/locations/{location}</code>.\n"
  example: []
  syntax:
    content: public static string FormatProjectLocation(string projectId, string locationId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    - id: locationId
      type: System.String
      description: The <code>Location</code> ID. Must not be <code>null</code> or empty.
    return:
      type: System.String
      description: "\nThe string representation of this <xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>projects/{project}/locations/{location}</code>.\n"
    content.vb: Public Shared Function FormatProjectLocation(projectId As String, locationId As String) As String
  overload: Google.Api.Gax.ResourceNames.LocationName.FormatProjectLocation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.LocationName.Parse(System.String)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.Parse(System.String)
  id: Parse(System.String)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: LocationName.Parse(String)
  fullName: Google.Api.Gax.ResourceNames.LocationName.Parse(System.String)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parse
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 83
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: Parses the given resource name string into a new <xref href="Google.Api.Gax.ResourceNames.LocationName" data-throw-if-not-resolved="false"></xref> instance.
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li><code>projects/{project}/locations/{location}</code></li></ul>\n"
  example: []
  syntax:
    content: public static LocationName Parse(string locationName)
    parameters:
    - id: locationName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    return:
      type: Google.Api.Gax.ResourceNames.LocationName
      description: The parsed <xref href="Google.Api.Gax.ResourceNames.LocationName" data-throw-if-not-resolved="false"></xref> if successful.
    content.vb: Public Shared Function Parse(locationName As String) As LocationName
  overload: Google.Api.Gax.ResourceNames.LocationName.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.LocationName.Parse(System.String,System.Boolean)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.Parse(System.String,System.Boolean)
  id: Parse(System.String,System.Boolean)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Parse(String, Boolean)
  nameWithType: LocationName.Parse(String, Boolean)
  fullName: Google.Api.Gax.ResourceNames.LocationName.Parse(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parse
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 103
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nParses the given resource name string into a new <xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref> instance; optionally allowing an\nunparseable resource name.\n"
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li><code>projects/{project}/locations/{location}</code></li></ul>\nOr may be in any format if <code data-dev-comment-type=\"paramref\" class=\"paramref\">allowUnparsed</code> is <code>true</code>.\n"
  example: []
  syntax:
    content: public static LocationName Parse(string locationName, bool allowUnparsed)
    parameters:
    - id: locationName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    - id: allowUnparsed
      type: System.Boolean
      description: "\nIf <code>true</code> will successfully store an unparseable resource name into the <xref href=\"Google.Api.Gax.ResourceNames.LocationName.UnparsedResource\" data-throw-if-not-resolved=\"false\"></xref>\nproperty; otherwise will throw an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> if an unparseable resource name is\nspecified.\n"
    return:
      type: Google.Api.Gax.ResourceNames.LocationName
      description: The parsed <xref href="Google.Api.Gax.ResourceNames.LocationName" data-throw-if-not-resolved="false"></xref> if successful.
    content.vb: Public Shared Function Parse(locationName As String, allowUnparsed As Boolean) As LocationName
  overload: Google.Api.Gax.ResourceNames.LocationName.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String,Google.Api.Gax.ResourceNames.LocationName@)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String,Google.Api.Gax.ResourceNames.LocationName@)
  id: TryParse(System.String,Google.Api.Gax.ResourceNames.LocationName@)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: TryParse(String, out LocationName)
  nameWithType: LocationName.TryParse(String, out LocationName)
  fullName: Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String, out Google.Api.Gax.ResourceNames.LocationName)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: TryParse
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 120
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nTries to parse the given resource name string into a new <xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li><code>projects/{project}/locations/{location}</code></li></ul>\n"
  example: []
  syntax:
    content: public static bool TryParse(string locationName, out LocationName result)
    parameters:
    - id: locationName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    - id: result
      type: Google.Api.Gax.ResourceNames.LocationName
      description: "\nWhen this method returns, the parsed <xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref>, or <code>null</code> if parsing failed.\n"
    return:
      type: System.Boolean
      description: <code>true</code> if the name was parsed successfully; <code>false</code> otherwise.
    content.vb: Public Shared Function TryParse(locationName As String, ByRef result As LocationName) As Boolean
  overload: Google.Api.Gax.ResourceNames.LocationName.TryParse*
  nameWithType.vb: LocationName.TryParse(String, ByRef LocationName)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String, ByRef Google.Api.Gax.ResourceNames.LocationName)
  name.vb: TryParse(String, ByRef LocationName)
- uid: Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String,System.Boolean,Google.Api.Gax.ResourceNames.LocationName@)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String,System.Boolean,Google.Api.Gax.ResourceNames.LocationName@)
  id: TryParse(System.String,System.Boolean,Google.Api.Gax.ResourceNames.LocationName@)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: TryParse(String, Boolean, out LocationName)
  nameWithType: LocationName.TryParse(String, Boolean, out LocationName)
  fullName: Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String, System.Boolean, out Google.Api.Gax.ResourceNames.LocationName)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: TryParse
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 143
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nTries to parse the given resource name string into a new <xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref> instance; optionally\nallowing an unparseable resource name.\n"
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li><code>projects/{project}/locations/{location}</code></li></ul>\nOr may be in any format if <code data-dev-comment-type=\"paramref\" class=\"paramref\">allowUnparsed</code> is <code>true</code>.\n"
  example: []
  syntax:
    content: public static bool TryParse(string locationName, bool allowUnparsed, out LocationName result)
    parameters:
    - id: locationName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    - id: allowUnparsed
      type: System.Boolean
      description: "\nIf <code>true</code> will successfully store an unparseable resource name into the <xref href=\"Google.Api.Gax.ResourceNames.LocationName.UnparsedResource\" data-throw-if-not-resolved=\"false\"></xref>\nproperty; otherwise will throw an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> if an unparseable resource name is\nspecified.\n"
    - id: result
      type: Google.Api.Gax.ResourceNames.LocationName
      description: "\nWhen this method returns, the parsed <xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref>, or <code>null</code> if parsing failed.\n"
    return:
      type: System.Boolean
      description: <code>true</code> if the name was parsed successfully; <code>false</code> otherwise.
    content.vb: Public Shared Function TryParse(locationName As String, allowUnparsed As Boolean, ByRef result As LocationName) As Boolean
  overload: Google.Api.Gax.ResourceNames.LocationName.TryParse*
  nameWithType.vb: LocationName.TryParse(String, Boolean, ByRef LocationName)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String, System.Boolean, ByRef Google.Api.Gax.ResourceNames.LocationName)
  name.vb: TryParse(String, Boolean, ByRef LocationName)
- uid: Google.Api.Gax.ResourceNames.LocationName.#ctor(System.String,System.String)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: LocationName(String, String)
  nameWithType: LocationName.LocationName(String, String)
  fullName: Google.Api.Gax.ResourceNames.LocationName.LocationName(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 178
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nConstructs a new instance of a <xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref> class from the component parts of pattern\n<code>projects/{project}/locations/{location}</code>\n"
  example: []
  syntax:
    content: public LocationName(string projectId, string locationId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    - id: locationId
      type: System.String
      description: The <code>Location</code> ID. Must not be <code>null</code> or empty.
    content.vb: Public Sub New(projectId As String, locationId As String)
  overload: Google.Api.Gax.ResourceNames.LocationName.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Gax.ResourceNames.LocationName.Type
  commentId: P:Google.Api.Gax.ResourceNames.LocationName.Type
  id: Type
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: LocationName.Type
  fullName: Google.Api.Gax.ResourceNames.LocationName.Type
  type: Property
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Type
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 183
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: The <xref href="Google.Api.Gax.ResourceNames.LocationName.ResourceNameType" data-throw-if-not-resolved="false"></xref> of the contained resource name.
  example: []
  syntax:
    content: public LocationName.ResourceNameType Type { get; }
    parameters: []
    return:
      type: Google.Api.Gax.ResourceNames.LocationName.ResourceNameType
    content.vb: Public ReadOnly Property Type As LocationName.ResourceNameType
  overload: Google.Api.Gax.ResourceNames.LocationName.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.ResourceNames.LocationName.UnparsedResource
  commentId: P:Google.Api.Gax.ResourceNames.LocationName.UnparsedResource
  id: UnparsedResource
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: UnparsedResource
  nameWithType: LocationName.UnparsedResource
  fullName: Google.Api.Gax.ResourceNames.LocationName.UnparsedResource
  type: Property
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: UnparsedResource
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 189
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nThe contained <xref href=\"Google.Api.Gax.UnparsedResourceName\" data-throw-if-not-resolved=\"false\"></xref>. Only non-<code>null</code>if this instance contains an\nunparsed resource name.\n"
  example: []
  syntax:
    content: public UnparsedResourceName UnparsedResource { get; }
    parameters: []
    return:
      type: Google.Api.Gax.UnparsedResourceName
    content.vb: Public ReadOnly Property UnparsedResource As UnparsedResourceName
  overload: Google.Api.Gax.ResourceNames.LocationName.UnparsedResource*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.ResourceNames.LocationName.LocationId
  commentId: P:Google.Api.Gax.ResourceNames.LocationName.LocationId
  id: LocationId
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: LocationId
  nameWithType: LocationName.LocationId
  fullName: Google.Api.Gax.ResourceNames.LocationName.LocationId
  type: Property
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: LocationId
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 194
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nThe <code>Location</code> ID. Will not be <code>null</code>, unless this instance contains an unparsed resource name.\n"
  example: []
  syntax:
    content: public string LocationId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property LocationId As String
  overload: Google.Api.Gax.ResourceNames.LocationName.LocationId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.ResourceNames.LocationName.ProjectId
  commentId: P:Google.Api.Gax.ResourceNames.LocationName.ProjectId
  id: ProjectId
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: LocationName.ProjectId
  fullName: Google.Api.Gax.ResourceNames.LocationName.ProjectId
  type: Property
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ProjectId
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 199
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nThe <code>Project</code> ID. Will not be <code>null</code>, unless this instance contains an unparsed resource name.\n"
  example: []
  syntax:
    content: public string ProjectId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProjectId As String
  overload: Google.Api.Gax.ResourceNames.LocationName.ProjectId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.ResourceNames.LocationName.IsKnownPattern
  commentId: P:Google.Api.Gax.ResourceNames.LocationName.IsKnownPattern
  id: IsKnownPattern
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: IsKnownPattern
  nameWithType: LocationName.IsKnownPattern
  fullName: Google.Api.Gax.ResourceNames.LocationName.IsKnownPattern
  type: Property
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: IsKnownPattern
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 202
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nWhether this instance contains a resource name with a known pattern.\n"
  example: []
  syntax:
    content: public bool IsKnownPattern { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsKnownPattern As Boolean
  overload: Google.Api.Gax.ResourceNames.LocationName.IsKnownPattern*
  implements:
  - Google.Api.Gax.IResourceName.IsKnownPattern
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.ResourceNames.LocationName.ToString
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.ToString
  id: ToString
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LocationName.ToString()
  fullName: Google.Api.Gax.ResourceNames.LocationName.ToString()
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 205
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nThe string representation of the resource name.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The string representation of the resource name.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Api.Gax.ResourceNames.LocationName.ToString*
  implements:
  - Google.Api.Gax.IResourceName.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Api.Gax.ResourceNames.LocationName.GetHashCode
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.GetHashCode
  id: GetHashCode
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: LocationName.GetHashCode()
  fullName: Google.Api.Gax.ResourceNames.LocationName.GetHashCode()
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 216
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Api.Gax.ResourceNames.LocationName.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Api.Gax.ResourceNames.LocationName.Equals(System.Object)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: LocationName.Equals(Object)
  fullName: Google.Api.Gax.ResourceNames.LocationName.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 219
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Api.Gax.ResourceNames.LocationName.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Api.Gax.ResourceNames.LocationName.Equals(Google.Api.Gax.ResourceNames.LocationName)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.Equals(Google.Api.Gax.ResourceNames.LocationName)
  id: Equals(Google.Api.Gax.ResourceNames.LocationName)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Equals(LocationName)
  nameWithType: LocationName.Equals(LocationName)
  fullName: Google.Api.Gax.ResourceNames.LocationName.Equals(Google.Api.Gax.ResourceNames.LocationName)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 222
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public bool Equals(LocationName other)
    parameters:
    - id: other
      type: Google.Api.Gax.ResourceNames.LocationName
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As LocationName) As Boolean
  overload: Google.Api.Gax.ResourceNames.LocationName.Equals*
  implements:
  - System.IEquatable{Google.Api.Gax.ResourceNames.LocationName}.Equals(Google.Api.Gax.ResourceNames.LocationName)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Gax.ResourceNames.LocationName.op_Equality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.op_Equality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  id: op_Equality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Equality(LocationName, LocationName)
  nameWithType: LocationName.Equality(LocationName, LocationName)
  fullName: Google.Api.Gax.ResourceNames.LocationName.Equality(Google.Api.Gax.ResourceNames.LocationName, Google.Api.Gax.ResourceNames.LocationName)
  type: Operator
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: op_Equality
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 225
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public static bool operator ==(LocationName a, LocationName b)
    parameters:
    - id: a
      type: Google.Api.Gax.ResourceNames.LocationName
    - id: b
      type: Google.Api.Gax.ResourceNames.LocationName
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As LocationName, b As LocationName) As Boolean
  overload: Google.Api.Gax.ResourceNames.LocationName.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.LocationName.op_Inequality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.op_Inequality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  id: op_Inequality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Inequality(LocationName, LocationName)
  nameWithType: LocationName.Inequality(LocationName, LocationName)
  fullName: Google.Api.Gax.ResourceNames.LocationName.Inequality(Google.Api.Gax.ResourceNames.LocationName, Google.Api.Gax.ResourceNames.LocationName)
  type: Operator
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: op_Inequality
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 228
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public static bool operator !=(LocationName a, LocationName b)
    parameters:
    - id: a
      type: Google.Api.Gax.ResourceNames.LocationName
    - id: b
      type: Google.Api.Gax.ResourceNames.LocationName
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As LocationName, b As LocationName) As Boolean
  overload: Google.Api.Gax.ResourceNames.LocationName.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Google.Api.Gax.ResourceNames
  commentId: N:Google.Api.Gax.ResourceNames
  name: Google.Api.Gax.ResourceNames
  nameWithType: Google.Api.Gax.ResourceNames
  fullName: Google.Api.Gax.ResourceNames
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Api.Gax.IResourceName
  commentId: T:Google.Api.Gax.IResourceName
  parent: Google.Api.Gax
  name: IResourceName
  nameWithType: IResourceName
  fullName: Google.Api.Gax.IResourceName
- uid: System.IEquatable{Google.Api.Gax.ResourceNames.LocationName}
  commentId: T:System.IEquatable{Google.Api.Gax.ResourceNames.LocationName}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<LocationName>
  nameWithType: IEquatable<LocationName>
  fullName: System.IEquatable<Google.Api.Gax.ResourceNames.LocationName>
  nameWithType.vb: IEquatable(Of LocationName)
  fullName.vb: System.IEquatable(Of Google.Api.Gax.ResourceNames.LocationName)
  name.vb: IEquatable(Of LocationName)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Api.Gax.ResourceNames.LocationName
    name: LocationName
    nameWithType: LocationName
    fullName: Google.Api.Gax.ResourceNames.LocationName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Api.Gax.ResourceNames.LocationName
    name: LocationName
    nameWithType: LocationName
    fullName: Google.Api.Gax.ResourceNames.LocationName
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Api.Gax
  commentId: N:Google.Api.Gax
  name: Google.Api.Gax
  nameWithType: Google.Api.Gax
  fullName: Google.Api.Gax
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.LocationName
  commentId: T:Google.Api.Gax.ResourceNames.LocationName
  parent: Google.Api.Gax.ResourceNames
  name: LocationName
  nameWithType: LocationName
  fullName: Google.Api.Gax.ResourceNames.LocationName
- uid: Google.Api.Gax.ResourceNames.LocationName.FromUnparsed*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.FromUnparsed
  name: FromUnparsed
  nameWithType: LocationName.FromUnparsed
  fullName: Google.Api.Gax.ResourceNames.LocationName.FromUnparsed
- uid: Google.Api.Gax.UnparsedResourceName
  commentId: T:Google.Api.Gax.UnparsedResourceName
  parent: Google.Api.Gax
  name: UnparsedResourceName
  nameWithType: UnparsedResourceName
  fullName: Google.Api.Gax.UnparsedResourceName
- uid: Google.Api.Gax.ResourceNames.LocationName.FromProjectLocation*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.FromProjectLocation
  name: FromProjectLocation
  nameWithType: LocationName.FromProjectLocation
  fullName: Google.Api.Gax.ResourceNames.LocationName.FromProjectLocation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Api.Gax.ResourceNames.LocationName.Format*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.Format
  name: Format
  nameWithType: LocationName.Format
  fullName: Google.Api.Gax.ResourceNames.LocationName.Format
- uid: Google.Api.Gax.ResourceNames.LocationName.FormatProjectLocation*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.FormatProjectLocation
  name: FormatProjectLocation
  nameWithType: LocationName.FormatProjectLocation
  fullName: Google.Api.Gax.ResourceNames.LocationName.FormatProjectLocation
- uid: Google.Api.Gax.ResourceNames.LocationName.Parse*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.Parse
  name: Parse
  nameWithType: LocationName.Parse
  fullName: Google.Api.Gax.ResourceNames.LocationName.Parse
- uid: Google.Api.Gax.ResourceNames.LocationName.UnparsedResource
  commentId: P:Google.Api.Gax.ResourceNames.LocationName.UnparsedResource
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Api.Gax.ResourceNames.LocationName.TryParse*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.TryParse
  name: TryParse
  nameWithType: LocationName.TryParse
  fullName: Google.Api.Gax.ResourceNames.LocationName.TryParse
- uid: Google.Api.Gax.ResourceNames.LocationName.#ctor*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.#ctor
  name: LocationName
  nameWithType: LocationName.LocationName
  fullName: Google.Api.Gax.ResourceNames.LocationName.LocationName
- uid: Google.Api.Gax.ResourceNames.LocationName.ResourceNameType
  commentId: T:Google.Api.Gax.ResourceNames.LocationName.ResourceNameType
  parent: Google.Api.Gax.ResourceNames
  name: LocationName.ResourceNameType
  nameWithType: LocationName.ResourceNameType
  fullName: Google.Api.Gax.ResourceNames.LocationName.ResourceNameType
- uid: Google.Api.Gax.ResourceNames.LocationName.Type*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.Type
  name: Type
  nameWithType: LocationName.Type
  fullName: Google.Api.Gax.ResourceNames.LocationName.Type
- uid: Google.Api.Gax.ResourceNames.LocationName.UnparsedResource*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.UnparsedResource
  name: UnparsedResource
  nameWithType: LocationName.UnparsedResource
  fullName: Google.Api.Gax.ResourceNames.LocationName.UnparsedResource
- uid: Google.Api.Gax.ResourceNames.LocationName.LocationId*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.LocationId
  name: LocationId
  nameWithType: LocationName.LocationId
  fullName: Google.Api.Gax.ResourceNames.LocationName.LocationId
- uid: Google.Api.Gax.ResourceNames.LocationName.ProjectId*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.ProjectId
  name: ProjectId
  nameWithType: LocationName.ProjectId
  fullName: Google.Api.Gax.ResourceNames.LocationName.ProjectId
- uid: Google.Api.Gax.ResourceNames.LocationName.IsKnownPattern*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.IsKnownPattern
  name: IsKnownPattern
  nameWithType: LocationName.IsKnownPattern
  fullName: Google.Api.Gax.ResourceNames.LocationName.IsKnownPattern
- uid: Google.Api.Gax.IResourceName.IsKnownPattern
  commentId: P:Google.Api.Gax.IResourceName.IsKnownPattern
  parent: Google.Api.Gax.IResourceName
  name: IsKnownPattern
  nameWithType: IResourceName.IsKnownPattern
  fullName: Google.Api.Gax.IResourceName.IsKnownPattern
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.LocationName.ToString*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.ToString
  name: ToString
  nameWithType: LocationName.ToString
  fullName: Google.Api.Gax.ResourceNames.LocationName.ToString
- uid: Google.Api.Gax.IResourceName.ToString
  commentId: M:Google.Api.Gax.IResourceName.ToString
  parent: Google.Api.Gax.IResourceName
  name: ToString()
  nameWithType: IResourceName.ToString()
  fullName: Google.Api.Gax.IResourceName.ToString()
  spec.csharp:
  - uid: Google.Api.Gax.IResourceName.ToString
    name: ToString
    nameWithType: IResourceName.ToString
    fullName: Google.Api.Gax.IResourceName.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Api.Gax.IResourceName.ToString
    name: ToString
    nameWithType: IResourceName.ToString
    fullName: Google.Api.Gax.IResourceName.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.LocationName.GetHashCode*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.GetHashCode
  name: GetHashCode
  nameWithType: LocationName.GetHashCode
  fullName: Google.Api.Gax.ResourceNames.LocationName.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.LocationName.Equals*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.Equals
  name: Equals
  nameWithType: LocationName.Equals
  fullName: Google.Api.Gax.ResourceNames.LocationName.Equals
- uid: System.IEquatable{Google.Api.Gax.ResourceNames.LocationName}.Equals(Google.Api.Gax.ResourceNames.LocationName)
  commentId: M:System.IEquatable{Google.Api.Gax.ResourceNames.LocationName}.Equals(Google.Api.Gax.ResourceNames.LocationName)
  parent: System.IEquatable{Google.Api.Gax.ResourceNames.LocationName}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(LocationName)
  nameWithType: IEquatable<LocationName>.Equals(LocationName)
  fullName: System.IEquatable<Google.Api.Gax.ResourceNames.LocationName>.Equals(Google.Api.Gax.ResourceNames.LocationName)
  nameWithType.vb: IEquatable(Of LocationName).Equals(LocationName)
  fullName.vb: System.IEquatable(Of Google.Api.Gax.ResourceNames.LocationName).Equals(Google.Api.Gax.ResourceNames.LocationName)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<LocationName>.Equals
    fullName: System.IEquatable<Google.Api.Gax.ResourceNames.LocationName>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Api.Gax.ResourceNames.LocationName
    name: LocationName
    nameWithType: LocationName
    fullName: Google.Api.Gax.ResourceNames.LocationName
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of LocationName).Equals
    fullName: System.IEquatable(Of Google.Api.Gax.ResourceNames.LocationName).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Api.Gax.ResourceNames.LocationName
    name: LocationName
    nameWithType: LocationName
    fullName: Google.Api.Gax.ResourceNames.LocationName
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.LocationName.op_Equality*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.op_Equality
  name: Equality
  nameWithType: LocationName.Equality
  fullName: Google.Api.Gax.ResourceNames.LocationName.Equality
- uid: Google.Api.Gax.ResourceNames.LocationName.op_Inequality*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.op_Inequality
  name: Inequality
  nameWithType: LocationName.Inequality
  fullName: Google.Api.Gax.ResourceNames.LocationName.Inequality
