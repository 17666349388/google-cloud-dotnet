### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.ResourceNames.LocationName
  commentId: T:Google.Api.Gax.ResourceNames.LocationName
  id: LocationName
  parent: Google.Api.Gax.ResourceNames
  children:
  - Google.Api.Gax.ResourceNames.LocationName.#ctor(System.String,System.String)
  - Google.Api.Gax.ResourceNames.LocationName.Equals(Google.Api.Gax.ResourceNames.LocationName)
  - Google.Api.Gax.ResourceNames.LocationName.Equals(System.Object)
  - Google.Api.Gax.ResourceNames.LocationName.Format(System.String,System.String)
  - Google.Api.Gax.ResourceNames.LocationName.GetHashCode
  - Google.Api.Gax.ResourceNames.LocationName.Kind
  - Google.Api.Gax.ResourceNames.LocationName.LocationId
  - Google.Api.Gax.ResourceNames.LocationName.op_Equality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  - Google.Api.Gax.ResourceNames.LocationName.op_Inequality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  - Google.Api.Gax.ResourceNames.LocationName.Parse(System.String)
  - Google.Api.Gax.ResourceNames.LocationName.ProjectId
  - Google.Api.Gax.ResourceNames.LocationName.ToString
  - Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String,Google.Api.Gax.ResourceNames.LocationName@)
  langs:
  - csharp
  - vb
  name: LocationName
  nameWithType: LocationName
  fullName: Google.Api.Gax.ResourceNames.LocationName
  type: Class
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: LocationName
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 17
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nResource name for the &apos;location&apos; resource which is widespread across Google Cloud Platform.\nWhile most resource names are generated on a per-API basis, many APIs use a location resource, and it&apos;s\nuseful to be able to pass values from one API to another.\n"
  example: []
  syntax:
    content: 'public sealed class LocationName : IResourceName, IEquatable<LocationName>'
    content.vb: >-
      Public NotInheritable Class LocationName
          Implements IResourceName, IEquatable(Of LocationName)
  inheritance:
  - System.Object
  implements:
  - Google.Api.Gax.IResourceName
  - System.IEquatable{Google.Api.Gax.ResourceNames.LocationName}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Api.Gax.ResourceNames.LocationName.Parse(System.String)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.Parse(System.String)
  id: Parse(System.String)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: LocationName.Parse(String)
  fullName: Google.Api.Gax.ResourceNames.LocationName.Parse(System.String)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Parse
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 27
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nParses the given location resource name in string form into a new\n<xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public static LocationName Parse(string locationName)
    parameters:
    - id: locationName
      type: System.String
      description: The location resource name in string form. Must not be <code>null</code>.
    return:
      type: Google.Api.Gax.ResourceNames.LocationName
      description: The parsed <xref href="Google.Api.Gax.ResourceNames.LocationName" data-throw-if-not-resolved="false"></xref> if successful.
    content.vb: Public Shared Function Parse(locationName As String) As LocationName
  overload: Google.Api.Gax.ResourceNames.LocationName.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String,Google.Api.Gax.ResourceNames.LocationName@)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String,Google.Api.Gax.ResourceNames.LocationName@)
  id: TryParse(System.String,Google.Api.Gax.ResourceNames.LocationName@)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: TryParse(String, out LocationName)
  nameWithType: LocationName.TryParse(String, out LocationName)
  fullName: Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String, out Google.Api.Gax.ResourceNames.LocationName)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: TryParse
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 46
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nTries to parse the given location resource name in string form into a new\n<xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  remarks: "\nThis method still throws <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> if <code data-dev-comment-type=\"paramref\" class=\"paramref\">locationName</code> is null,\nas this would usually indicate a programming error rather than a data error.\n"
  example: []
  syntax:
    content: public static bool TryParse(string locationName, out LocationName result)
    parameters:
    - id: locationName
      type: System.String
      description: The location resource name in string form. Must not be <code>null</code>.
    - id: result
      type: Google.Api.Gax.ResourceNames.LocationName
      description: >-
        When this method returns, the parsed <xref href="Google.Api.Gax.ResourceNames.LocationName" data-throw-if-not-resolved="false"></xref>,

        or <code>null</code> if parsing fails.
    return:
      type: System.Boolean
      description: <code>true</code> if the name was parsed successfully; <code>false</code> otherwise.
    content.vb: Public Shared Function TryParse(locationName As String, ByRef result As LocationName) As Boolean
  overload: Google.Api.Gax.ResourceNames.LocationName.TryParse*
  nameWithType.vb: LocationName.TryParse(String, ByRef LocationName)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Api.Gax.ResourceNames.LocationName.TryParse(System.String, ByRef Google.Api.Gax.ResourceNames.LocationName)
  name.vb: TryParse(String, ByRef LocationName)
- uid: Google.Api.Gax.ResourceNames.LocationName.Format(System.String,System.String)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.Format(System.String,System.String)
  id: Format(System.String,System.String)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Format(String, String)
  nameWithType: LocationName.Format(String, String)
  fullName: Google.Api.Gax.ResourceNames.LocationName.Format(System.String, System.String)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Format
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 66
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: Formats the IDs into the string representation of the <xref href="Google.Api.Gax.ResourceNames.LocationName" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static string Format(string projectId, string locationId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>project</code> ID. Must not be <code>null</code>.
    - id: locationId
      type: System.String
      description: The <code>location</code> ID. Must not be <code>null</code>.
    return:
      type: System.String
      description: The string representation of the <xref href="Google.Api.Gax.ResourceNames.LocationName" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Format(projectId As String, locationId As String) As String
  overload: Google.Api.Gax.ResourceNames.LocationName.Format*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.LocationName.#ctor(System.String,System.String)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: LocationName(String, String)
  nameWithType: LocationName.LocationName(String, String)
  fullName: Google.Api.Gax.ResourceNames.LocationName.LocationName(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 75
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nConstructs a new instance of the <xref href=\"Google.Api.Gax.ResourceNames.LocationName\" data-throw-if-not-resolved=\"false\"></xref> resource name class\nfrom its component parts.\n"
  example: []
  syntax:
    content: public LocationName(string projectId, string locationId)
    parameters:
    - id: projectId
      type: System.String
      description: The project ID. Must not be <code>null</code>.
    - id: locationId
      type: System.String
      description: The location ID. Must not be <code>null</code>.
    content.vb: Public Sub New(projectId As String, locationId As String)
  overload: Google.Api.Gax.ResourceNames.LocationName.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Gax.ResourceNames.LocationName.ProjectId
  commentId: P:Google.Api.Gax.ResourceNames.LocationName.ProjectId
  id: ProjectId
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: LocationName.ProjectId
  fullName: Google.Api.Gax.ResourceNames.LocationName.ProjectId
  type: Property
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ProjectId
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 84
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nThe project ID. Never <code>null</code>.\n"
  example: []
  syntax:
    content: public string ProjectId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProjectId As String
  overload: Google.Api.Gax.ResourceNames.LocationName.ProjectId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.ResourceNames.LocationName.LocationId
  commentId: P:Google.Api.Gax.ResourceNames.LocationName.LocationId
  id: LocationId
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: LocationId
  nameWithType: LocationName.LocationId
  fullName: Google.Api.Gax.ResourceNames.LocationName.LocationId
  type: Property
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: LocationId
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 89
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nThe location ID. Never <code>null</code>.\n"
  example: []
  syntax:
    content: public string LocationId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property LocationId As String
  overload: Google.Api.Gax.ResourceNames.LocationName.LocationId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.ResourceNames.LocationName.Kind
  commentId: P:Google.Api.Gax.ResourceNames.LocationName.Kind
  id: Kind
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: LocationName.Kind
  fullName: Google.Api.Gax.ResourceNames.LocationName.Kind
  type: Property
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Kind
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 92
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nThe kind of resource name.\n"
  example: []
  syntax:
    content: public ResourceNameKind Kind { get; }
    parameters: []
    return:
      type: Google.Api.Gax.ResourceNameKind
    content.vb: Public ReadOnly Property Kind As ResourceNameKind
  overload: Google.Api.Gax.ResourceNames.LocationName.Kind*
  implements:
  - Google.Api.Gax.IResourceName.Kind
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.ResourceNames.LocationName.ToString
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.ToString
  id: ToString
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LocationName.ToString()
  fullName: Google.Api.Gax.ResourceNames.LocationName.ToString()
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 95
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  summary: "\nThe string representation of the resource name.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The string representation of the resource name.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Api.Gax.ResourceNames.LocationName.ToString*
  implements:
  - Google.Api.Gax.IResourceName.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Api.Gax.ResourceNames.LocationName.GetHashCode
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.GetHashCode
  id: GetHashCode
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: LocationName.GetHashCode()
  fullName: Google.Api.Gax.ResourceNames.LocationName.GetHashCode()
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetHashCode
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 98
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Api.Gax.ResourceNames.LocationName.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Api.Gax.ResourceNames.LocationName.Equals(System.Object)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: LocationName.Equals(Object)
  fullName: Google.Api.Gax.ResourceNames.LocationName.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 101
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Api.Gax.ResourceNames.LocationName.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Api.Gax.ResourceNames.LocationName.Equals(Google.Api.Gax.ResourceNames.LocationName)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.Equals(Google.Api.Gax.ResourceNames.LocationName)
  id: Equals(Google.Api.Gax.ResourceNames.LocationName)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Equals(LocationName)
  nameWithType: LocationName.Equals(LocationName)
  fullName: Google.Api.Gax.ResourceNames.LocationName.Equals(Google.Api.Gax.ResourceNames.LocationName)
  type: Method
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Equals
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 104
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public bool Equals(LocationName other)
    parameters:
    - id: other
      type: Google.Api.Gax.ResourceNames.LocationName
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As LocationName) As Boolean
  overload: Google.Api.Gax.ResourceNames.LocationName.Equals*
  implements:
  - System.IEquatable{Google.Api.Gax.ResourceNames.LocationName}.Equals(Google.Api.Gax.ResourceNames.LocationName)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Gax.ResourceNames.LocationName.op_Equality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.op_Equality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  id: op_Equality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Equality(LocationName, LocationName)
  nameWithType: LocationName.Equality(LocationName, LocationName)
  fullName: Google.Api.Gax.ResourceNames.LocationName.Equality(Google.Api.Gax.ResourceNames.LocationName, Google.Api.Gax.ResourceNames.LocationName)
  type: Operator
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: op_Equality
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 107
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public static bool operator ==(LocationName a, LocationName b)
    parameters:
    - id: a
      type: Google.Api.Gax.ResourceNames.LocationName
    - id: b
      type: Google.Api.Gax.ResourceNames.LocationName
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As LocationName, b As LocationName) As Boolean
  overload: Google.Api.Gax.ResourceNames.LocationName.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.ResourceNames.LocationName.op_Inequality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  commentId: M:Google.Api.Gax.ResourceNames.LocationName.op_Inequality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  id: op_Inequality(Google.Api.Gax.ResourceNames.LocationName,Google.Api.Gax.ResourceNames.LocationName)
  parent: Google.Api.Gax.ResourceNames.LocationName
  langs:
  - csharp
  - vb
  name: Inequality(LocationName, LocationName)
  nameWithType: LocationName.Inequality(LocationName, LocationName)
  fullName: Google.Api.Gax.ResourceNames.LocationName.Inequality(Google.Api.Gax.ResourceNames.LocationName, Google.Api.Gax.ResourceNames.LocationName)
  type: Operator
  source:
    remote:
      path: Google.Api.Gax/ResourceNames/LocationName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: op_Inequality
    path: Google.Api.Gax/ResourceNames/LocationName.cs
    startLine: 110
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax.ResourceNames
  example: []
  syntax:
    content: public static bool operator !=(LocationName a, LocationName b)
    parameters:
    - id: a
      type: Google.Api.Gax.ResourceNames.LocationName
    - id: b
      type: Google.Api.Gax.ResourceNames.LocationName
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As LocationName, b As LocationName) As Boolean
  overload: Google.Api.Gax.ResourceNames.LocationName.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Google.Api.Gax.ResourceNames
  commentId: N:Google.Api.Gax.ResourceNames
  name: Google.Api.Gax.ResourceNames
  nameWithType: Google.Api.Gax.ResourceNames
  fullName: Google.Api.Gax.ResourceNames
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Api.Gax.IResourceName
  commentId: T:Google.Api.Gax.IResourceName
  parent: Google.Api.Gax
  name: IResourceName
  nameWithType: IResourceName
  fullName: Google.Api.Gax.IResourceName
- uid: System.IEquatable{Google.Api.Gax.ResourceNames.LocationName}
  commentId: T:System.IEquatable{Google.Api.Gax.ResourceNames.LocationName}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<LocationName>
  nameWithType: IEquatable<LocationName>
  fullName: System.IEquatable<Google.Api.Gax.ResourceNames.LocationName>
  nameWithType.vb: IEquatable(Of LocationName)
  fullName.vb: System.IEquatable(Of Google.Api.Gax.ResourceNames.LocationName)
  name.vb: IEquatable(Of LocationName)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Api.Gax.ResourceNames.LocationName
    name: LocationName
    nameWithType: LocationName
    fullName: Google.Api.Gax.ResourceNames.LocationName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Api.Gax.ResourceNames.LocationName
    name: LocationName
    nameWithType: LocationName
    fullName: Google.Api.Gax.ResourceNames.LocationName
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Api.Gax
  commentId: N:Google.Api.Gax
  name: Google.Api.Gax
  nameWithType: Google.Api.Gax
  fullName: Google.Api.Gax
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.LocationName
  commentId: T:Google.Api.Gax.ResourceNames.LocationName
  parent: Google.Api.Gax.ResourceNames
  name: LocationName
  nameWithType: LocationName
  fullName: Google.Api.Gax.ResourceNames.LocationName
- uid: Google.Api.Gax.ResourceNames.LocationName.Parse*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.Parse
  name: Parse
  nameWithType: LocationName.Parse
  fullName: Google.Api.Gax.ResourceNames.LocationName.Parse
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Google.Api.Gax.ResourceNames.LocationName.TryParse*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.TryParse
  name: TryParse
  nameWithType: LocationName.TryParse
  fullName: Google.Api.Gax.ResourceNames.LocationName.TryParse
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Api.Gax.ResourceNames.LocationName.Format*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.Format
  name: Format
  nameWithType: LocationName.Format
  fullName: Google.Api.Gax.ResourceNames.LocationName.Format
- uid: Google.Api.Gax.ResourceNames.LocationName.#ctor*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.#ctor
  name: LocationName
  nameWithType: LocationName.LocationName
  fullName: Google.Api.Gax.ResourceNames.LocationName.LocationName
- uid: Google.Api.Gax.ResourceNames.LocationName.ProjectId*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.ProjectId
  name: ProjectId
  nameWithType: LocationName.ProjectId
  fullName: Google.Api.Gax.ResourceNames.LocationName.ProjectId
- uid: Google.Api.Gax.ResourceNames.LocationName.LocationId*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.LocationId
  name: LocationId
  nameWithType: LocationName.LocationId
  fullName: Google.Api.Gax.ResourceNames.LocationName.LocationId
- uid: Google.Api.Gax.ResourceNames.LocationName.Kind*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.Kind
  name: Kind
  nameWithType: LocationName.Kind
  fullName: Google.Api.Gax.ResourceNames.LocationName.Kind
- uid: Google.Api.Gax.IResourceName.Kind
  commentId: P:Google.Api.Gax.IResourceName.Kind
  parent: Google.Api.Gax.IResourceName
  name: Kind
  nameWithType: IResourceName.Kind
  fullName: Google.Api.Gax.IResourceName.Kind
- uid: Google.Api.Gax.ResourceNameKind
  commentId: T:Google.Api.Gax.ResourceNameKind
  parent: Google.Api.Gax
  name: ResourceNameKind
  nameWithType: ResourceNameKind
  fullName: Google.Api.Gax.ResourceNameKind
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.LocationName.ToString*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.ToString
  name: ToString
  nameWithType: LocationName.ToString
  fullName: Google.Api.Gax.ResourceNames.LocationName.ToString
- uid: Google.Api.Gax.IResourceName.ToString
  commentId: M:Google.Api.Gax.IResourceName.ToString
  parent: Google.Api.Gax.IResourceName
  name: ToString()
  nameWithType: IResourceName.ToString()
  fullName: Google.Api.Gax.IResourceName.ToString()
  spec.csharp:
  - uid: Google.Api.Gax.IResourceName.ToString
    name: ToString
    nameWithType: IResourceName.ToString
    fullName: Google.Api.Gax.IResourceName.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Api.Gax.IResourceName.ToString
    name: ToString
    nameWithType: IResourceName.ToString
    fullName: Google.Api.Gax.IResourceName.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.LocationName.GetHashCode*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.GetHashCode
  name: GetHashCode
  nameWithType: LocationName.GetHashCode
  fullName: Google.Api.Gax.ResourceNames.LocationName.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.LocationName.Equals*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.Equals
  name: Equals
  nameWithType: LocationName.Equals
  fullName: Google.Api.Gax.ResourceNames.LocationName.Equals
- uid: System.IEquatable{Google.Api.Gax.ResourceNames.LocationName}.Equals(Google.Api.Gax.ResourceNames.LocationName)
  commentId: M:System.IEquatable{Google.Api.Gax.ResourceNames.LocationName}.Equals(Google.Api.Gax.ResourceNames.LocationName)
  parent: System.IEquatable{Google.Api.Gax.ResourceNames.LocationName}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(LocationName)
  nameWithType: IEquatable<LocationName>.Equals(LocationName)
  fullName: System.IEquatable<Google.Api.Gax.ResourceNames.LocationName>.Equals(Google.Api.Gax.ResourceNames.LocationName)
  nameWithType.vb: IEquatable(Of LocationName).Equals(LocationName)
  fullName.vb: System.IEquatable(Of Google.Api.Gax.ResourceNames.LocationName).Equals(Google.Api.Gax.ResourceNames.LocationName)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<LocationName>.Equals
    fullName: System.IEquatable<Google.Api.Gax.ResourceNames.LocationName>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Api.Gax.ResourceNames.LocationName
    name: LocationName
    nameWithType: LocationName
    fullName: Google.Api.Gax.ResourceNames.LocationName
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of LocationName).Equals
    fullName: System.IEquatable(Of Google.Api.Gax.ResourceNames.LocationName).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Api.Gax.ResourceNames.LocationName
    name: LocationName
    nameWithType: LocationName
    fullName: Google.Api.Gax.ResourceNames.LocationName
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.ResourceNames.LocationName.op_Equality*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.op_Equality
  name: Equality
  nameWithType: LocationName.Equality
  fullName: Google.Api.Gax.ResourceNames.LocationName.Equality
- uid: Google.Api.Gax.ResourceNames.LocationName.op_Inequality*
  commentId: Overload:Google.Api.Gax.ResourceNames.LocationName.op_Inequality
  name: Inequality
  nameWithType: LocationName.Inequality
  fullName: Google.Api.Gax.ResourceNames.LocationName.Inequality
