### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.Page`1
  commentId: T:Google.Api.Gax.Page`1
  id: Page`1
  parent: Google.Api.Gax
  children:
  - Google.Api.Gax.Page`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.String)
  - Google.Api.Gax.Page`1.GetEnumerator
  - Google.Api.Gax.Page`1.NextPageToken
  - Google.Api.Gax.Page`1.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: Page<TResource>
  nameWithType: Page<TResource>
  fullName: Google.Api.Gax.Page<TResource>
  type: Class
  source:
    remote:
      path: src/Google.Api.Gax/Page.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Page
    path: src/Google.Api.Gax/Page.cs
    startLine: 17
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nA page of resources which will only have fewer results than requested if\nthere is no more data to fetch.\n"
  example: []
  syntax:
    content: 'public sealed class Page<TResource> : IEnumerable<TResource>, IEnumerable'
    typeParameters:
    - id: TResource
      description: The type of resource within the page.
    content.vb: >-
      Public NotInheritable Class Page(Of TResource)
          Implements IEnumerable(Of TResource), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{{TResource}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: Page(Of TResource)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Google.Api.Gax.Page(Of TResource)
  name.vb: Page(Of TResource)
- uid: Google.Api.Gax.Page`1.NextPageToken
  commentId: P:Google.Api.Gax.Page`1.NextPageToken
  id: NextPageToken
  parent: Google.Api.Gax.Page`1
  langs:
  - csharp
  - vb
  name: NextPageToken
  nameWithType: Page<TResource>.NextPageToken
  fullName: Google.Api.Gax.Page<TResource>.NextPageToken
  type: Property
  source:
    remote:
      path: src/Google.Api.Gax/Page.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: NextPageToken
    path: src/Google.Api.Gax/Page.cs
    startLine: 29
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nThe page token to use to fetch the next set of resources.\n"
  remarks: "\ngRPC-based APIs use an empty string as a &quot;no page token&quot;, whereas REST-based APIs\nuse a null reference instead. The value here will be consistent with the value returned\nby the API itself.\n"
  example: []
  syntax:
    content: public string NextPageToken { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property NextPageToken As String
  overload: Google.Api.Gax.Page`1.NextPageToken*
  nameWithType.vb: Page(Of TResource).NextPageToken
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Google.Api.Gax.Page(Of TResource).NextPageToken
- uid: Google.Api.Gax.Page`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.String)
  commentId: M:Google.Api.Gax.Page`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{`0},System.String)'
  parent: Google.Api.Gax.Page`1
  langs:
  - csharp
  - vb
  name: Page(IEnumerable<TResource>, String)
  nameWithType: Page<TResource>.Page(IEnumerable<TResource>, String)
  fullName: Google.Api.Gax.Page<TResource>.Page(System.Collections.Generic.IEnumerable<TResource>, System.String)
  type: Constructor
  source:
    remote:
      path: src/Google.Api.Gax/Page.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: src/Google.Api.Gax/Page.cs
    startLine: 36
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nConstructs a fixed-size page from the given resource sequence and page token.\n"
  example: []
  syntax:
    content: public Page(IEnumerable<TResource> resources, string nextPageToken)
    parameters:
    - id: resources
      type: System.Collections.Generic.IEnumerable{{TResource}}
      description: The resources in the page.
    - id: nextPageToken
      type: System.String
      description: The next page token.
    content.vb: Public Sub New(resources As IEnumerable(Of TResource), nextPageToken As String)
  overload: Google.Api.Gax.Page`1.#ctor*
  nameWithType.vb: Page(Of TResource).Page(IEnumerable(Of TResource), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Page(Of TResource).Page(System.Collections.Generic.IEnumerable(Of TResource), System.String)
  name.vb: Page(IEnumerable(Of TResource), String)
- uid: Google.Api.Gax.Page`1.GetEnumerator
  commentId: M:Google.Api.Gax.Page`1.GetEnumerator
  id: GetEnumerator
  parent: Google.Api.Gax.Page`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: Page<TResource>.GetEnumerator()
  fullName: Google.Api.Gax.Page<TResource>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Google.Api.Gax/Page.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetEnumerator
    path: src/Google.Api.Gax/Page.cs
    startLine: 43
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  example: []
  syntax:
    content: public IEnumerator<TResource> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{TResource}}
    content.vb: Public Function GetEnumerator As IEnumerator(Of TResource)
  overload: Google.Api.Gax.Page`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{TResource}}.GetEnumerator
  nameWithType.vb: Page(Of TResource).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Page(Of TResource).GetEnumerator()
- uid: Google.Api.Gax.Page`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Google.Api.Gax.Page`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Google.Api.Gax.Page`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: Page<TResource>.IEnumerable.GetEnumerator()
  fullName: Google.Api.Gax.Page<TResource>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Google.Api.Gax/Page.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/Google.Api.Gax/Page.cs
    startLine: 46
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Google.Api.Gax.Page`1.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: Page(Of TResource).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Google.Api.Gax.Page(Of TResource).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Google.Api.Gax
  commentId: N:Google.Api.Gax
  isExternal: false
  name: Google.Api.Gax
  nameWithType: Google.Api.Gax
  fullName: Google.Api.Gax
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{{TResource}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TResource>
  nameWithType: IEnumerable<TResource>
  fullName: System.Collections.Generic.IEnumerable<TResource>
  nameWithType.vb: IEnumerable(Of TResource)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TResource)
  name.vb: IEnumerable(Of TResource)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Google.Api.Gax.Page`1.NextPageToken*
  commentId: Overload:Google.Api.Gax.Page`1.NextPageToken
  isExternal: false
  name: NextPageToken
  nameWithType: Page<TResource>.NextPageToken
  fullName: Google.Api.Gax.Page<TResource>.NextPageToken
  nameWithType.vb: Page(Of TResource).NextPageToken
  fullName.vb: Google.Api.Gax.Page(Of TResource).NextPageToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Api.Gax.Page`1.#ctor*
  commentId: Overload:Google.Api.Gax.Page`1.#ctor
  isExternal: false
  name: Page
  nameWithType: Page<TResource>.Page
  fullName: Google.Api.Gax.Page<TResource>.Page
  nameWithType.vb: Page(Of TResource).Page
  fullName.vb: Google.Api.Gax.Page(Of TResource).Page
- uid: Google.Api.Gax.Page`1.GetEnumerator*
  commentId: Overload:Google.Api.Gax.Page`1.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: Page<TResource>.GetEnumerator
  fullName: Google.Api.Gax.Page<TResource>.GetEnumerator
  nameWithType.vb: Page(Of TResource).GetEnumerator
  fullName.vb: Google.Api.Gax.Page(Of TResource).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{TResource}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{TResource}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<TResource>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TResource>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of TResource).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of TResource).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<TResource>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<TResource>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of TResource).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of TResource).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{TResource}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TResource>
  nameWithType: IEnumerator<TResource>
  fullName: System.Collections.Generic.IEnumerator<TResource>
  nameWithType.vb: IEnumerator(Of TResource)
  fullName.vb: System.Collections.Generic.IEnumerator(Of TResource)
  name.vb: IEnumerator(Of TResource)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Page`1.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Google.Api.Gax.Page`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: Page<TResource>.IEnumerable.GetEnumerator
  fullName: Google.Api.Gax.Page<TResource>.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: Page(Of TResource).System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Google.Api.Gax.Page(Of TResource).System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
