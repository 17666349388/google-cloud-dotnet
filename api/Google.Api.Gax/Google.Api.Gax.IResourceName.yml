### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.IResourceName
  commentId: T:Google.Api.Gax.IResourceName
  id: IResourceName
  parent: Google.Api.Gax
  children:
  - Google.Api.Gax.IResourceName.Kind
  - Google.Api.Gax.IResourceName.ToString
  langs:
  - csharp
  - vb
  name: IResourceName
  nameWithType: IResourceName
  fullName: Google.Api.Gax.IResourceName
  type: Interface
  source:
    remote:
      path: src/Google.Api.Gax/IResourceName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: IResourceName
    path: src/Google.Api.Gax/IResourceName.cs
    startLine: 12
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nA resource name.\n"
  example: []
  syntax:
    content: public interface IResourceName
    content.vb: Public Interface IResourceName
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Google.Api.Gax.IResourceName.Kind
  commentId: P:Google.Api.Gax.IResourceName.Kind
  id: Kind
  parent: Google.Api.Gax.IResourceName
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: IResourceName.Kind
  fullName: Google.Api.Gax.IResourceName.Kind
  type: Property
  source:
    remote:
      path: src/Google.Api.Gax/IResourceName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Kind
    path: src/Google.Api.Gax/IResourceName.cs
    startLine: 17
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nThe kind of resource name.\n"
  example: []
  syntax:
    content: ResourceNameKind Kind { get; }
    parameters: []
    return:
      type: Google.Api.Gax.ResourceNameKind
    content.vb: ReadOnly Property Kind As ResourceNameKind
  overload: Google.Api.Gax.IResourceName.Kind*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Api.Gax.IResourceName.ToString
  commentId: M:Google.Api.Gax.IResourceName.ToString
  id: ToString
  parent: Google.Api.Gax.IResourceName
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IResourceName.ToString()
  fullName: Google.Api.Gax.IResourceName.ToString()
  type: Method
  source:
    remote:
      path: src/Google.Api.Gax/IResourceName.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: src/Google.Api.Gax/IResourceName.cs
    startLine: 23
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nThe string representation of the resource name.\n"
  example: []
  syntax:
    content: string ToString()
    return:
      type: System.String
      description: The string representation of the resource name.
    content.vb: Function ToString As String
  overload: Google.Api.Gax.IResourceName.ToString*
references:
- uid: Google.Api.Gax
  commentId: N:Google.Api.Gax
  isExternal: false
  name: Google.Api.Gax
  nameWithType: Google.Api.Gax
  fullName: Google.Api.Gax
- uid: Google.Api.Gax.IResourceName.Kind*
  commentId: Overload:Google.Api.Gax.IResourceName.Kind
  isExternal: false
  name: Kind
  nameWithType: IResourceName.Kind
  fullName: Google.Api.Gax.IResourceName.Kind
- uid: Google.Api.Gax.ResourceNameKind
  commentId: T:Google.Api.Gax.ResourceNameKind
  parent: Google.Api.Gax
  isExternal: false
  name: ResourceNameKind
  nameWithType: ResourceNameKind
  fullName: Google.Api.Gax.ResourceNameKind
- uid: Google.Api.Gax.IResourceName.ToString*
  commentId: Overload:Google.Api.Gax.IResourceName.ToString
  isExternal: false
  name: ToString
  nameWithType: IResourceName.ToString
  fullName: Google.Api.Gax.IResourceName.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
