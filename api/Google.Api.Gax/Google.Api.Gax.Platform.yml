### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.Platform
  commentId: T:Google.Api.Gax.Platform
  id: Platform
  parent: Google.Api.Gax
  children:
  - Google.Api.Gax.Platform.#ctor
  - Google.Api.Gax.Platform.#ctor(Google.Api.Gax.CloudRunPlatformDetails)
  - Google.Api.Gax.Platform.#ctor(Google.Api.Gax.GaePlatformDetails)
  - Google.Api.Gax.Platform.#ctor(Google.Api.Gax.GcePlatformDetails)
  - Google.Api.Gax.Platform.#ctor(Google.Api.Gax.GkePlatformDetails)
  - Google.Api.Gax.Platform.CloudRunDetails
  - Google.Api.Gax.Platform.GaeDetails
  - Google.Api.Gax.Platform.GceDetails
  - Google.Api.Gax.Platform.GkeDetails
  - Google.Api.Gax.Platform.Instance
  - Google.Api.Gax.Platform.InstanceAsync
  - Google.Api.Gax.Platform.ProjectId
  - Google.Api.Gax.Platform.ToString
  - Google.Api.Gax.Platform.Type
  langs:
  - csharp
  - vb
  name: Platform
  nameWithType: Platform
  fullName: Google.Api.Gax.Platform
  type: Class
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Platform
    path: Google.Api.Gax/Platform.cs
    startLine: 29
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nInformation about the current execution platform.\nSupported execution platforms are Google App Engine (GAE), Google Container Engine (GKE), and Google Compute Engine (GCE).\n"
  example: []
  syntax:
    content: public sealed class Platform
    content.vb: Public NotInheritable Class Platform
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Api.Gax.Platform.InstanceAsync
  commentId: M:Google.Api.Gax.Platform.InstanceAsync
  id: InstanceAsync
  parent: Google.Api.Gax.Platform
  langs:
  - csharp
  - vb
  name: InstanceAsync()
  nameWithType: Platform.InstanceAsync()
  fullName: Google.Api.Gax.Platform.InstanceAsync()
  type: Method
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: InstanceAsync
    path: Google.Api.Gax/Platform.cs
    startLine: 38
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nAsyncrhonously get execution platform information.\n"
  example: []
  syntax:
    content: public static Task<Platform> InstanceAsync()
    return:
      type: System.Threading.Tasks.Task{Google.Api.Gax.Platform}
      description: A task containing the execution platform information.
    content.vb: Public Shared Function InstanceAsync As Task(Of Platform)
  overload: Google.Api.Gax.Platform.InstanceAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.Platform.Instance
  commentId: M:Google.Api.Gax.Platform.Instance
  id: Instance
  parent: Google.Api.Gax.Platform
  langs:
  - csharp
  - vb
  name: Instance()
  nameWithType: Platform.Instance()
  fullName: Google.Api.Gax.Platform.Instance()
  type: Method
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Instance
    path: Google.Api.Gax/Platform.cs
    startLine: 44
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nGet execution platform information. This may block briefly while network operations are in progress.\n"
  example: []
  syntax:
    content: public static Platform Instance()
    return:
      type: Google.Api.Gax.Platform
      description: Execution platform information.
    content.vb: Public Shared Function Instance As Platform
  overload: Google.Api.Gax.Platform.Instance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Api.Gax.Platform.#ctor
  commentId: M:Google.Api.Gax.Platform.#ctor
  id: '#ctor'
  parent: Google.Api.Gax.Platform
  langs:
  - csharp
  - vb
  name: Platform()
  nameWithType: Platform.Platform()
  fullName: Google.Api.Gax.Platform.Platform()
  type: Constructor
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.Gax/Platform.cs
    startLine: 157
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nConstruct with no details.\nThis leads to a platform <xref href=\"Google.Api.Gax.Platform.Type\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"Google.Api.Gax.PlatformType.Unknown\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Platform()
    content.vb: Public Sub New
  overload: Google.Api.Gax.Platform.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Gax.Platform.#ctor(Google.Api.Gax.GcePlatformDetails)
  commentId: M:Google.Api.Gax.Platform.#ctor(Google.Api.Gax.GcePlatformDetails)
  id: '#ctor(Google.Api.Gax.GcePlatformDetails)'
  parent: Google.Api.Gax.Platform
  langs:
  - csharp
  - vb
  name: Platform(GcePlatformDetails)
  nameWithType: Platform.Platform(GcePlatformDetails)
  fullName: Google.Api.Gax.Platform.Platform(Google.Api.Gax.GcePlatformDetails)
  type: Constructor
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.Gax/Platform.cs
    startLine: 165
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nConstruct with details of Google Compute Engine.\n"
  example: []
  syntax:
    content: public Platform(GcePlatformDetails gceDetails)
    parameters:
    - id: gceDetails
      type: Google.Api.Gax.GcePlatformDetails
      description: Details of Google Compute Engine.
    content.vb: Public Sub New(gceDetails As GcePlatformDetails)
  overload: Google.Api.Gax.Platform.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Gax.Platform.#ctor(Google.Api.Gax.GaePlatformDetails)
  commentId: M:Google.Api.Gax.Platform.#ctor(Google.Api.Gax.GaePlatformDetails)
  id: '#ctor(Google.Api.Gax.GaePlatformDetails)'
  parent: Google.Api.Gax.Platform
  langs:
  - csharp
  - vb
  name: Platform(GaePlatformDetails)
  nameWithType: Platform.Platform(GaePlatformDetails)
  fullName: Google.Api.Gax.Platform.Platform(Google.Api.Gax.GaePlatformDetails)
  type: Constructor
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.Gax/Platform.cs
    startLine: 174
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nConstruct with details of Google App Engine.\n"
  example: []
  syntax:
    content: public Platform(GaePlatformDetails gaeDetails)
    parameters:
    - id: gaeDetails
      type: Google.Api.Gax.GaePlatformDetails
      description: Details of Google App Engine.
    content.vb: Public Sub New(gaeDetails As GaePlatformDetails)
  overload: Google.Api.Gax.Platform.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Gax.Platform.#ctor(Google.Api.Gax.GkePlatformDetails)
  commentId: M:Google.Api.Gax.Platform.#ctor(Google.Api.Gax.GkePlatformDetails)
  id: '#ctor(Google.Api.Gax.GkePlatformDetails)'
  parent: Google.Api.Gax.Platform
  langs:
  - csharp
  - vb
  name: Platform(GkePlatformDetails)
  nameWithType: Platform.Platform(GkePlatformDetails)
  fullName: Google.Api.Gax.Platform.Platform(Google.Api.Gax.GkePlatformDetails)
  type: Constructor
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.Gax/Platform.cs
    startLine: 183
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nConstruct with details of Google Container (Kubernetes) Engine.\n"
  example: []
  syntax:
    content: public Platform(GkePlatformDetails gkeDetails)
    parameters:
    - id: gkeDetails
      type: Google.Api.Gax.GkePlatformDetails
      description: Details of Google Container (Kubernetes) Engine.
    content.vb: Public Sub New(gkeDetails As GkePlatformDetails)
  overload: Google.Api.Gax.Platform.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Gax.Platform.#ctor(Google.Api.Gax.CloudRunPlatformDetails)
  commentId: M:Google.Api.Gax.Platform.#ctor(Google.Api.Gax.CloudRunPlatformDetails)
  id: '#ctor(Google.Api.Gax.CloudRunPlatformDetails)'
  parent: Google.Api.Gax.Platform
  langs:
  - csharp
  - vb
  name: Platform(CloudRunPlatformDetails)
  nameWithType: Platform.Platform(CloudRunPlatformDetails)
  fullName: Google.Api.Gax.Platform.Platform(Google.Api.Gax.CloudRunPlatformDetails)
  type: Constructor
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.Gax/Platform.cs
    startLine: 192
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nConstruct with details of Google Cloud Run.\n"
  example: []
  syntax:
    content: public Platform(CloudRunPlatformDetails cloudRunDetails)
    parameters:
    - id: cloudRunDetails
      type: Google.Api.Gax.CloudRunPlatformDetails
      description: Details of Google Cloud Run.
    content.vb: Public Sub New(cloudRunDetails As CloudRunPlatformDetails)
  overload: Google.Api.Gax.Platform.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Gax.Platform.GaeDetails
  commentId: P:Google.Api.Gax.Platform.GaeDetails
  id: GaeDetails
  parent: Google.Api.Gax.Platform
  langs:
  - csharp
  - vb
  name: GaeDetails
  nameWithType: Platform.GaeDetails
  fullName: Google.Api.Gax.Platform.GaeDetails
  type: Property
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GaeDetails
    path: Google.Api.Gax/Platform.cs
    startLine: 201
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nGoogle App Engine (GAE) platform details.\n<code>null</code> if not executing on GAE.\n"
  example: []
  syntax:
    content: public GaePlatformDetails GaeDetails { get; }
    parameters: []
    return:
      type: Google.Api.Gax.GaePlatformDetails
    content.vb: Public ReadOnly Property GaeDetails As GaePlatformDetails
  overload: Google.Api.Gax.Platform.GaeDetails*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.Platform.GceDetails
  commentId: P:Google.Api.Gax.Platform.GceDetails
  id: GceDetails
  parent: Google.Api.Gax.Platform
  langs:
  - csharp
  - vb
  name: GceDetails
  nameWithType: Platform.GceDetails
  fullName: Google.Api.Gax.Platform.GceDetails
  type: Property
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GceDetails
    path: Google.Api.Gax/Platform.cs
    startLine: 207
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nGoogle Compute Engine (GCE) platform details.\n<code>null</code> if not executing on GCE. \n"
  example: []
  syntax:
    content: public GcePlatformDetails GceDetails { get; }
    parameters: []
    return:
      type: Google.Api.Gax.GcePlatformDetails
    content.vb: Public ReadOnly Property GceDetails As GcePlatformDetails
  overload: Google.Api.Gax.Platform.GceDetails*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.Platform.GkeDetails
  commentId: P:Google.Api.Gax.Platform.GkeDetails
  id: GkeDetails
  parent: Google.Api.Gax.Platform
  langs:
  - csharp
  - vb
  name: GkeDetails
  nameWithType: Platform.GkeDetails
  fullName: Google.Api.Gax.Platform.GkeDetails
  type: Property
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GkeDetails
    path: Google.Api.Gax/Platform.cs
    startLine: 213
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nGoogle Container (Kubernetes) Engine (GKE) platform details.\n<code>null</code> if not executing on GKE. \n"
  example: []
  syntax:
    content: public GkePlatformDetails GkeDetails { get; }
    parameters: []
    return:
      type: Google.Api.Gax.GkePlatformDetails
    content.vb: Public ReadOnly Property GkeDetails As GkePlatformDetails
  overload: Google.Api.Gax.Platform.GkeDetails*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.Platform.CloudRunDetails
  commentId: P:Google.Api.Gax.Platform.CloudRunDetails
  id: CloudRunDetails
  parent: Google.Api.Gax.Platform
  langs:
  - csharp
  - vb
  name: CloudRunDetails
  nameWithType: Platform.CloudRunDetails
  fullName: Google.Api.Gax.Platform.CloudRunDetails
  type: Property
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CloudRunDetails
    path: Google.Api.Gax/Platform.cs
    startLine: 219
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nGoogle Cloud Run platform details.\n<code>null</code> if not executing on Google Cloud Run. \n"
  example: []
  syntax:
    content: public CloudRunPlatformDetails CloudRunDetails { get; }
    parameters: []
    return:
      type: Google.Api.Gax.CloudRunPlatformDetails
    content.vb: Public ReadOnly Property CloudRunDetails As CloudRunPlatformDetails
  overload: Google.Api.Gax.Platform.CloudRunDetails*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.Platform.Type
  commentId: P:Google.Api.Gax.Platform.Type
  id: Type
  parent: Google.Api.Gax.Platform
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Platform.Type
  fullName: Google.Api.Gax.Platform.Type
  type: Property
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Type
    path: Google.Api.Gax/Platform.cs
    startLine: 224
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nThe current execution platform.\n"
  example: []
  syntax:
    content: public PlatformType Type { get; }
    parameters: []
    return:
      type: Google.Api.Gax.PlatformType
    content.vb: Public ReadOnly Property Type As PlatformType
  overload: Google.Api.Gax.Platform.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.Platform.ProjectId
  commentId: P:Google.Api.Gax.Platform.ProjectId
  id: ProjectId
  parent: Google.Api.Gax.Platform
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: Platform.ProjectId
  fullName: Google.Api.Gax.Platform.ProjectId
  type: Property
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ProjectId
    path: Google.Api.Gax/Platform.cs
    startLine: 235
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  summary: "\nThe current Project ID.\n<code>null</code> if the Project ID cannot be determined on the current execution platform.\n"
  example: []
  syntax:
    content: public string ProjectId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProjectId As String
  overload: Google.Api.Gax.Platform.ProjectId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.Platform.ToString
  commentId: M:Google.Api.Gax.Platform.ToString
  id: ToString
  parent: Google.Api.Gax.Platform
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Platform.ToString()
  fullName: Google.Api.Gax.Platform.ToString()
  type: Method
  source:
    remote:
      path: Google.Api.Gax/Platform.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ToString
    path: Google.Api.Gax/Platform.cs
    startLine: 242
  assemblies:
  - Google.Api.Gax
  namespace: Google.Api.Gax
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Api.Gax.Platform.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Google.Api.Gax
  commentId: N:Google.Api.Gax
  name: Google.Api.Gax
  nameWithType: Google.Api.Gax
  fullName: Google.Api.Gax
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Api.Gax.Platform.InstanceAsync*
  commentId: Overload:Google.Api.Gax.Platform.InstanceAsync
  name: InstanceAsync
  nameWithType: Platform.InstanceAsync
  fullName: Google.Api.Gax.Platform.InstanceAsync
- uid: System.Threading.Tasks.Task{Google.Api.Gax.Platform}
  commentId: T:System.Threading.Tasks.Task{Google.Api.Gax.Platform}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Platform>
  nameWithType: Task<Platform>
  fullName: System.Threading.Tasks.Task<Google.Api.Gax.Platform>
  nameWithType.vb: Task(Of Platform)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Api.Gax.Platform)
  name.vb: Task(Of Platform)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Api.Gax.Platform
    name: Platform
    nameWithType: Platform
    fullName: Google.Api.Gax.Platform
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Api.Gax.Platform
    name: Platform
    nameWithType: Platform
    fullName: Google.Api.Gax.Platform
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Api.Gax.Platform.Instance*
  commentId: Overload:Google.Api.Gax.Platform.Instance
  name: Instance
  nameWithType: Platform.Instance
  fullName: Google.Api.Gax.Platform.Instance
- uid: Google.Api.Gax.Platform
  commentId: T:Google.Api.Gax.Platform
  parent: Google.Api.Gax
  name: Platform
  nameWithType: Platform
  fullName: Google.Api.Gax.Platform
- uid: Google.Api.Gax.Platform.Type
  commentId: P:Google.Api.Gax.Platform.Type
  isExternal: true
- uid: Google.Api.Gax.PlatformType.Unknown
  commentId: F:Google.Api.Gax.PlatformType.Unknown
  isExternal: true
- uid: Google.Api.Gax.Platform.#ctor*
  commentId: Overload:Google.Api.Gax.Platform.#ctor
  name: Platform
  nameWithType: Platform.Platform
  fullName: Google.Api.Gax.Platform.Platform
- uid: Google.Api.Gax.GcePlatformDetails
  commentId: T:Google.Api.Gax.GcePlatformDetails
  parent: Google.Api.Gax
  name: GcePlatformDetails
  nameWithType: GcePlatformDetails
  fullName: Google.Api.Gax.GcePlatformDetails
- uid: Google.Api.Gax.GaePlatformDetails
  commentId: T:Google.Api.Gax.GaePlatformDetails
  parent: Google.Api.Gax
  name: GaePlatformDetails
  nameWithType: GaePlatformDetails
  fullName: Google.Api.Gax.GaePlatformDetails
- uid: Google.Api.Gax.GkePlatformDetails
  commentId: T:Google.Api.Gax.GkePlatformDetails
  parent: Google.Api.Gax
  name: GkePlatformDetails
  nameWithType: GkePlatformDetails
  fullName: Google.Api.Gax.GkePlatformDetails
- uid: Google.Api.Gax.CloudRunPlatformDetails
  commentId: T:Google.Api.Gax.CloudRunPlatformDetails
  parent: Google.Api.Gax
  name: CloudRunPlatformDetails
  nameWithType: CloudRunPlatformDetails
  fullName: Google.Api.Gax.CloudRunPlatformDetails
- uid: Google.Api.Gax.Platform.GaeDetails*
  commentId: Overload:Google.Api.Gax.Platform.GaeDetails
  name: GaeDetails
  nameWithType: Platform.GaeDetails
  fullName: Google.Api.Gax.Platform.GaeDetails
- uid: Google.Api.Gax.Platform.GceDetails*
  commentId: Overload:Google.Api.Gax.Platform.GceDetails
  name: GceDetails
  nameWithType: Platform.GceDetails
  fullName: Google.Api.Gax.Platform.GceDetails
- uid: Google.Api.Gax.Platform.GkeDetails*
  commentId: Overload:Google.Api.Gax.Platform.GkeDetails
  name: GkeDetails
  nameWithType: Platform.GkeDetails
  fullName: Google.Api.Gax.Platform.GkeDetails
- uid: Google.Api.Gax.Platform.CloudRunDetails*
  commentId: Overload:Google.Api.Gax.Platform.CloudRunDetails
  name: CloudRunDetails
  nameWithType: Platform.CloudRunDetails
  fullName: Google.Api.Gax.Platform.CloudRunDetails
- uid: Google.Api.Gax.Platform.Type*
  commentId: Overload:Google.Api.Gax.Platform.Type
  name: Type
  nameWithType: Platform.Type
  fullName: Google.Api.Gax.Platform.Type
- uid: Google.Api.Gax.PlatformType
  commentId: T:Google.Api.Gax.PlatformType
  parent: Google.Api.Gax
  name: PlatformType
  nameWithType: PlatformType
  fullName: Google.Api.Gax.PlatformType
- uid: Google.Api.Gax.Platform.ProjectId*
  commentId: Overload:Google.Api.Gax.Platform.ProjectId
  name: ProjectId
  nameWithType: Platform.ProjectId
  fullName: Google.Api.Gax.Platform.ProjectId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Platform.ToString*
  commentId: Overload:Google.Api.Gax.Platform.ToString
  name: ToString
  nameWithType: Platform.ToString
  fullName: Google.Api.Gax.Platform.ToString
