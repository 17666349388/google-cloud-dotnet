### YamlMime:ManagedReference
items:
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  commentId: T:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  id: FieldDescriptorProto.Types.Type
  parent: Google.Protobuf.Reflection
  children:
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Bool
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Bytes
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Double
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Enum
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Fixed32
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Fixed64
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Float
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Group
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Int32
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Int64
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Message
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sfixed32
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sfixed64
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sint32
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sint64
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.String
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Uint32
  - Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Uint64
  langs:
  - csharp
  - vb
  name: FieldDescriptorProto.Types.Type
  nameWithType: FieldDescriptorProto.Types.Type
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  type: Enum
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Type
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2301
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  syntax:
    content: public enum Type
    content.vb: Public Enum Type
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Double
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Double
  id: Double
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Double
  nameWithType: FieldDescriptorProto.Types.Type.Double
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Double
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Double
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2306
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\n0 is reserved for errors.\nOrder is weird for historical reasons.\n"
  example: []
  syntax:
    content: >-
      [OriginalName("TYPE_DOUBLE")]

      Double = 1
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_DOUBLE")>

      Double = 1
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_DOUBLE
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Float
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Float
  id: Float
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Float
  nameWithType: FieldDescriptorProto.Types.Type.Float
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Float
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Float
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2307
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  syntax:
    content: >-
      [OriginalName("TYPE_FLOAT")]

      Float = 2
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_FLOAT")>

      Float = 2
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_FLOAT
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Int64
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Int64
  id: Int64
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Int64
  nameWithType: FieldDescriptorProto.Types.Type.Int64
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Int64
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Int64
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2312
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nNot ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\nnegative values are likely.\n"
  example: []
  syntax:
    content: >-
      [OriginalName("TYPE_INT64")]

      Int64 = 3
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_INT64")>

      Int64 = 3
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_INT64
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Uint64
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Uint64
  id: Uint64
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Uint64
  nameWithType: FieldDescriptorProto.Types.Type.Uint64
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Uint64
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Uint64
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2313
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  syntax:
    content: >-
      [OriginalName("TYPE_UINT64")]

      Uint64 = 4
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_UINT64")>

      Uint64 = 4
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_UINT64
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Int32
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Int32
  id: Int32
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Int32
  nameWithType: FieldDescriptorProto.Types.Type.Int32
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Int32
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Int32
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2318
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nNot ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\nnegative values are likely.\n"
  example: []
  syntax:
    content: >-
      [OriginalName("TYPE_INT32")]

      Int32 = 5
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_INT32")>

      Int32 = 5
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_INT32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Fixed64
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Fixed64
  id: Fixed64
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Fixed64
  nameWithType: FieldDescriptorProto.Types.Type.Fixed64
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Fixed64
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Fixed64
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2319
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  syntax:
    content: >-
      [OriginalName("TYPE_FIXED64")]

      Fixed64 = 6
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_FIXED64")>

      Fixed64 = 6
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_FIXED64
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Fixed32
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Fixed32
  id: Fixed32
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Fixed32
  nameWithType: FieldDescriptorProto.Types.Type.Fixed32
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Fixed32
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Fixed32
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2320
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  syntax:
    content: >-
      [OriginalName("TYPE_FIXED32")]

      Fixed32 = 7
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_FIXED32")>

      Fixed32 = 7
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_FIXED32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Bool
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Bool
  id: Bool
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Bool
  nameWithType: FieldDescriptorProto.Types.Type.Bool
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Bool
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Bool
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2321
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  syntax:
    content: >-
      [OriginalName("TYPE_BOOL")]

      Bool = 8
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_BOOL")>

      Bool = 8
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_BOOL
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.String
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.String
  id: String
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: String
  nameWithType: FieldDescriptorProto.Types.Type.String
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.String
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: String
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2322
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  syntax:
    content: >-
      [OriginalName("TYPE_STRING")]

      String = 9
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_STRING")>

      String = 9
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_STRING
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Group
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Group
  id: Group
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: FieldDescriptorProto.Types.Type.Group
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Group
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Group
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2329
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nTag-delimited aggregate.\nGroup type is deprecated and not supported in proto3. However, Proto3\nimplementations should still be able to parse the group wire format and\ntreat group fields as unknown fields.\n"
  example: []
  syntax:
    content: >-
      [OriginalName("TYPE_GROUP")]

      Group = 10
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_GROUP")>

      Group = 10
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_GROUP
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Message
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Message
  id: Message
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: FieldDescriptorProto.Types.Type.Message
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Message
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Message
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2333
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nLength-delimited aggregate.\n"
  example: []
  syntax:
    content: >-
      [OriginalName("TYPE_MESSAGE")]

      Message = 11
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_MESSAGE")>

      Message = 11
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_MESSAGE
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Bytes
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Bytes
  id: Bytes
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Bytes
  nameWithType: FieldDescriptorProto.Types.Type.Bytes
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Bytes
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Bytes
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2337
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nNew in version 2.\n"
  example: []
  syntax:
    content: >-
      [OriginalName("TYPE_BYTES")]

      Bytes = 12
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_BYTES")>

      Bytes = 12
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_BYTES
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Uint32
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Uint32
  id: Uint32
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Uint32
  nameWithType: FieldDescriptorProto.Types.Type.Uint32
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Uint32
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Uint32
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2338
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  syntax:
    content: >-
      [OriginalName("TYPE_UINT32")]

      Uint32 = 13
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_UINT32")>

      Uint32 = 13
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_UINT32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Enum
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Enum
  id: Enum
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Enum
  nameWithType: FieldDescriptorProto.Types.Type.Enum
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Enum
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Enum
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2339
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  syntax:
    content: >-
      [OriginalName("TYPE_ENUM")]

      Enum = 14
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_ENUM")>

      Enum = 14
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_ENUM
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sfixed32
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sfixed32
  id: Sfixed32
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Sfixed32
  nameWithType: FieldDescriptorProto.Types.Type.Sfixed32
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sfixed32
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Sfixed32
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2340
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  syntax:
    content: >-
      [OriginalName("TYPE_SFIXED32")]

      Sfixed32 = 15
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_SFIXED32")>

      Sfixed32 = 15
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_SFIXED32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sfixed64
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sfixed64
  id: Sfixed64
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Sfixed64
  nameWithType: FieldDescriptorProto.Types.Type.Sfixed64
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sfixed64
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Sfixed64
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2341
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  syntax:
    content: >-
      [OriginalName("TYPE_SFIXED64")]

      Sfixed64 = 16
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_SFIXED64")>

      Sfixed64 = 16
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_SFIXED64
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sint32
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sint32
  id: Sint32
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Sint32
  nameWithType: FieldDescriptorProto.Types.Type.Sint32
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sint32
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Sint32
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2345
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nUses ZigZag encoding.\n"
  example: []
  syntax:
    content: >-
      [OriginalName("TYPE_SINT32")]

      Sint32 = 17
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_SINT32")>

      Sint32 = 17
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_SINT32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sint64
  commentId: F:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sint64
  id: Sint64
  parent: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  langs:
  - csharp
  - vb
  name: Sint64
  nameWithType: FieldDescriptorProto.Types.Type.Sint64
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type.Sint64
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Sint64
    path: csharp/src/Google.Protobuf/Reflection/Descriptor.cs
    startLine: 2349
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nUses ZigZag encoding.\n"
  example: []
  syntax:
    content: >-
      [OriginalName("TYPE_SINT64")]

      Sint64 = 18
    return:
      type: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
    content.vb: >-
      <OriginalName("TYPE_SINT64")>

      Sint64 = 18
  attributes:
  - type: Google.Protobuf.Reflection.OriginalNameAttribute
    ctor: Google.Protobuf.Reflection.OriginalNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TYPE_SINT64
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  commentId: T:Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
  parent: Google.Protobuf.Reflection
  name: FieldDescriptorProto.Types.Type
  nameWithType: FieldDescriptorProto.Types.Type
  fullName: Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type
