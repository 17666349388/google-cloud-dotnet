### YamlMime:ManagedReference
items:
- uid: Google.Protobuf.Reflection.ExtensionCollection
  commentId: T:Google.Protobuf.Reflection.ExtensionCollection
  id: ExtensionCollection
  parent: Google.Protobuf.Reflection
  children:
  - Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInDeclarationOrder(Google.Protobuf.Reflection.MessageDescriptor)
  - Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInNumberOrder(Google.Protobuf.Reflection.MessageDescriptor)
  - Google.Protobuf.Reflection.ExtensionCollection.UnorderedExtensions
  langs:
  - csharp
  - vb
  name: ExtensionCollection
  nameWithType: ExtensionCollection
  fullName: Google.Protobuf.Reflection.ExtensionCollection
  type: Class
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/ExtensionCollection.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: ExtensionCollection
    path: csharp/src/Google.Protobuf/Reflection/ExtensionCollection.cs
    startLine: 41
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nA collection to simplify retrieving the descriptors of extensions in a descriptor for a message\n"
  example: []
  syntax:
    content: public sealed class ExtensionCollection
    content.vb: Public NotInheritable Class ExtensionCollection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Protobuf.Reflection.ExtensionCollection.UnorderedExtensions
  commentId: P:Google.Protobuf.Reflection.ExtensionCollection.UnorderedExtensions
  id: UnorderedExtensions
  parent: Google.Protobuf.Reflection.ExtensionCollection
  langs:
  - csharp
  - vb
  name: UnorderedExtensions
  nameWithType: ExtensionCollection.UnorderedExtensions
  fullName: Google.Protobuf.Reflection.ExtensionCollection.UnorderedExtensions
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/ExtensionCollection.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: UnorderedExtensions
    path: csharp/src/Google.Protobuf/Reflection/ExtensionCollection.cs
    startLine: 82
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nReturns a readonly list of all the extensions defined in this type in \nthe order they were defined in the source .proto file\n"
  example: []
  syntax:
    content: public IList<FieldDescriptor> UnorderedExtensions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Protobuf.Reflection.FieldDescriptor}
    content.vb: Public ReadOnly Property UnorderedExtensions As IList(Of FieldDescriptor)
  overload: Google.Protobuf.Reflection.ExtensionCollection.UnorderedExtensions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInDeclarationOrder(Google.Protobuf.Reflection.MessageDescriptor)
  commentId: M:Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInDeclarationOrder(Google.Protobuf.Reflection.MessageDescriptor)
  id: GetExtensionsInDeclarationOrder(Google.Protobuf.Reflection.MessageDescriptor)
  parent: Google.Protobuf.Reflection.ExtensionCollection
  langs:
  - csharp
  - vb
  name: GetExtensionsInDeclarationOrder(MessageDescriptor)
  nameWithType: ExtensionCollection.GetExtensionsInDeclarationOrder(MessageDescriptor)
  fullName: Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInDeclarationOrder(Google.Protobuf.Reflection.MessageDescriptor)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/ExtensionCollection.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: GetExtensionsInDeclarationOrder
    path: csharp/src/Google.Protobuf/Reflection/ExtensionCollection.cs
    startLine: 88
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nReturns a readonly list of all the extensions define in this type that extend \nthe provided descriptor type in the order they were defined in the source .proto file\n"
  example: []
  syntax:
    content: public IList<FieldDescriptor> GetExtensionsInDeclarationOrder(MessageDescriptor descriptor)
    parameters:
    - id: descriptor
      type: Google.Protobuf.Reflection.MessageDescriptor
    return:
      type: System.Collections.Generic.IList{Google.Protobuf.Reflection.FieldDescriptor}
    content.vb: Public Function GetExtensionsInDeclarationOrder(descriptor As MessageDescriptor) As IList(Of FieldDescriptor)
  overload: Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInDeclarationOrder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInNumberOrder(Google.Protobuf.Reflection.MessageDescriptor)
  commentId: M:Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInNumberOrder(Google.Protobuf.Reflection.MessageDescriptor)
  id: GetExtensionsInNumberOrder(Google.Protobuf.Reflection.MessageDescriptor)
  parent: Google.Protobuf.Reflection.ExtensionCollection
  langs:
  - csharp
  - vb
  name: GetExtensionsInNumberOrder(MessageDescriptor)
  nameWithType: ExtensionCollection.GetExtensionsInNumberOrder(MessageDescriptor)
  fullName: Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInNumberOrder(Google.Protobuf.Reflection.MessageDescriptor)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/ExtensionCollection.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: GetExtensionsInNumberOrder
    path: csharp/src/Google.Protobuf/Reflection/ExtensionCollection.cs
    startLine: 97
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nReturns a readonly list of all the extensions define in this type that extend \nthe provided descriptor type in accending field order\n"
  example: []
  syntax:
    content: public IList<FieldDescriptor> GetExtensionsInNumberOrder(MessageDescriptor descriptor)
    parameters:
    - id: descriptor
      type: Google.Protobuf.Reflection.MessageDescriptor
    return:
      type: System.Collections.Generic.IList{Google.Protobuf.Reflection.FieldDescriptor}
    content.vb: Public Function GetExtensionsInNumberOrder(descriptor As MessageDescriptor) As IList(Of FieldDescriptor)
  overload: Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInNumberOrder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.Reflection.ExtensionCollection.UnorderedExtensions*
  commentId: Overload:Google.Protobuf.Reflection.ExtensionCollection.UnorderedExtensions
  name: UnorderedExtensions
  nameWithType: ExtensionCollection.UnorderedExtensions
  fullName: Google.Protobuf.Reflection.ExtensionCollection.UnorderedExtensions
- uid: System.Collections.Generic.IList{Google.Protobuf.Reflection.FieldDescriptor}
  commentId: T:System.Collections.Generic.IList{Google.Protobuf.Reflection.FieldDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<FieldDescriptor>
  nameWithType: IList<FieldDescriptor>
  fullName: System.Collections.Generic.IList<Google.Protobuf.Reflection.FieldDescriptor>
  nameWithType.vb: IList(Of FieldDescriptor)
  fullName.vb: System.Collections.Generic.IList(Of Google.Protobuf.Reflection.FieldDescriptor)
  name.vb: IList(Of FieldDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.Reflection.FieldDescriptor
    name: FieldDescriptor
    nameWithType: FieldDescriptor
    fullName: Google.Protobuf.Reflection.FieldDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.Reflection.FieldDescriptor
    name: FieldDescriptor
    nameWithType: FieldDescriptor
    fullName: Google.Protobuf.Reflection.FieldDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInDeclarationOrder*
  commentId: Overload:Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInDeclarationOrder
  name: GetExtensionsInDeclarationOrder
  nameWithType: ExtensionCollection.GetExtensionsInDeclarationOrder
  fullName: Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInDeclarationOrder
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInNumberOrder*
  commentId: Overload:Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInNumberOrder
  name: GetExtensionsInNumberOrder
  nameWithType: ExtensionCollection.GetExtensionsInNumberOrder
  fullName: Google.Protobuf.Reflection.ExtensionCollection.GetExtensionsInNumberOrder
