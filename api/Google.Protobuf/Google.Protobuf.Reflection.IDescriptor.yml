### YamlMime:ManagedReference
items:
- uid: Google.Protobuf.Reflection.IDescriptor
  commentId: T:Google.Protobuf.Reflection.IDescriptor
  id: IDescriptor
  parent: Google.Protobuf.Reflection
  children:
  - Google.Protobuf.Reflection.IDescriptor.File
  - Google.Protobuf.Reflection.IDescriptor.FullName
  - Google.Protobuf.Reflection.IDescriptor.Name
  langs:
  - csharp
  - vb
  name: IDescriptor
  nameWithType: IDescriptor
  fullName: Google.Protobuf.Reflection.IDescriptor
  type: Interface
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/IDescriptor.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: IDescriptor
    path: csharp/src/Google.Protobuf/Reflection/IDescriptor.cs
    startLine: 37
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nInterface implemented by all descriptor types.\n"
  example: []
  syntax:
    content: public interface IDescriptor
    content.vb: Public Interface IDescriptor
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Google.Protobuf.Reflection.IDescriptor.Name
  commentId: P:Google.Protobuf.Reflection.IDescriptor.Name
  id: Name
  parent: Google.Protobuf.Reflection.IDescriptor
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IDescriptor.Name
  fullName: Google.Protobuf.Reflection.IDescriptor.Name
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/IDescriptor.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: Name
    path: csharp/src/Google.Protobuf/Reflection/IDescriptor.cs
    startLine: 42
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nReturns the name of the entity (message, field etc) being described.\n"
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Google.Protobuf.Reflection.IDescriptor.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Protobuf.Reflection.IDescriptor.FullName
  commentId: P:Google.Protobuf.Reflection.IDescriptor.FullName
  id: FullName
  parent: Google.Protobuf.Reflection.IDescriptor
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: IDescriptor.FullName
  fullName: Google.Protobuf.Reflection.IDescriptor.FullName
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/IDescriptor.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: FullName
    path: csharp/src/Google.Protobuf/Reflection/IDescriptor.cs
    startLine: 47
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nReturns the fully-qualified name of the entity being described.\n"
  example: []
  syntax:
    content: string FullName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property FullName As String
  overload: Google.Protobuf.Reflection.IDescriptor.FullName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Google.Protobuf.Reflection.IDescriptor.File
  commentId: P:Google.Protobuf.Reflection.IDescriptor.File
  id: File
  parent: Google.Protobuf.Reflection.IDescriptor
  langs:
  - csharp
  - vb
  name: File
  nameWithType: IDescriptor.File
  fullName: Google.Protobuf.Reflection.IDescriptor.File
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/IDescriptor.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: File
    path: csharp/src/Google.Protobuf/Reflection/IDescriptor.cs
    startLine: 52
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nReturns the descriptor for the .proto file that this entity is part of.\n"
  example: []
  syntax:
    content: FileDescriptor File { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.FileDescriptor
    content.vb: ReadOnly Property File As FileDescriptor
  overload: Google.Protobuf.Reflection.IDescriptor.File*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: false
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Google.Protobuf.Reflection.IDescriptor.Name*
  commentId: Overload:Google.Protobuf.Reflection.IDescriptor.Name
  isExternal: false
  name: Name
  nameWithType: IDescriptor.Name
  fullName: Google.Protobuf.Reflection.IDescriptor.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.Reflection.IDescriptor.FullName*
  commentId: Overload:Google.Protobuf.Reflection.IDescriptor.FullName
  isExternal: false
  name: FullName
  nameWithType: IDescriptor.FullName
  fullName: Google.Protobuf.Reflection.IDescriptor.FullName
- uid: Google.Protobuf.Reflection.IDescriptor.File*
  commentId: Overload:Google.Protobuf.Reflection.IDescriptor.File
  isExternal: false
  name: File
  nameWithType: IDescriptor.File
  fullName: Google.Protobuf.Reflection.IDescriptor.File
- uid: Google.Protobuf.Reflection.FileDescriptor
  commentId: T:Google.Protobuf.Reflection.FileDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: false
  name: FileDescriptor
  nameWithType: FileDescriptor
  fullName: Google.Protobuf.Reflection.FileDescriptor
