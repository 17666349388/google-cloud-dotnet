### YamlMime:ManagedReference
items:
- uid: Google.Protobuf.WellKnownTypes.FieldMask
  commentId: T:Google.Protobuf.WellKnownTypes.FieldMask
  id: FieldMask
  parent: Google.Protobuf.WellKnownTypes
  children:
  - Google.Protobuf.WellKnownTypes.FieldMask.#ctor
  - Google.Protobuf.WellKnownTypes.FieldMask.#ctor(Google.Protobuf.WellKnownTypes.FieldMask)
  - Google.Protobuf.WellKnownTypes.FieldMask.CalculateSize
  - Google.Protobuf.WellKnownTypes.FieldMask.Clone
  - Google.Protobuf.WellKnownTypes.FieldMask.Descriptor
  - Google.Protobuf.WellKnownTypes.FieldMask.Equals(Google.Protobuf.WellKnownTypes.FieldMask)
  - Google.Protobuf.WellKnownTypes.FieldMask.Equals(System.Object)
  - Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers``1(System.Collections.Generic.IEnumerable{System.Int32})
  - Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers``1(System.Int32[])
  - Google.Protobuf.WellKnownTypes.FieldMask.FromString(System.String)
  - Google.Protobuf.WellKnownTypes.FieldMask.FromString``1(System.String)
  - Google.Protobuf.WellKnownTypes.FieldMask.FromStringEnumerable``1(System.Collections.Generic.IEnumerable{System.String})
  - Google.Protobuf.WellKnownTypes.FieldMask.GetHashCode
  - Google.Protobuf.WellKnownTypes.FieldMask.Google#Protobuf#IMessage#Descriptor
  - Google.Protobuf.WellKnownTypes.FieldMask.Intersection(Google.Protobuf.WellKnownTypes.FieldMask)
  - Google.Protobuf.WellKnownTypes.FieldMask.IsValid(Google.Protobuf.Reflection.MessageDescriptor,Google.Protobuf.WellKnownTypes.FieldMask)
  - Google.Protobuf.WellKnownTypes.FieldMask.IsValid(Google.Protobuf.Reflection.MessageDescriptor,System.String)
  - Google.Protobuf.WellKnownTypes.FieldMask.IsValid``1(Google.Protobuf.WellKnownTypes.FieldMask)
  - Google.Protobuf.WellKnownTypes.FieldMask.IsValid``1(System.String)
  - Google.Protobuf.WellKnownTypes.FieldMask.Merge(Google.Protobuf.IMessage,Google.Protobuf.IMessage)
  - Google.Protobuf.WellKnownTypes.FieldMask.Merge(Google.Protobuf.IMessage,Google.Protobuf.IMessage,Google.Protobuf.WellKnownTypes.FieldMask.MergeOptions)
  - Google.Protobuf.WellKnownTypes.FieldMask.MergeFrom(Google.Protobuf.CodedInputStream)
  - Google.Protobuf.WellKnownTypes.FieldMask.MergeFrom(Google.Protobuf.WellKnownTypes.FieldMask)
  - Google.Protobuf.WellKnownTypes.FieldMask.Normalize
  - Google.Protobuf.WellKnownTypes.FieldMask.Parser
  - Google.Protobuf.WellKnownTypes.FieldMask.Paths
  - Google.Protobuf.WellKnownTypes.FieldMask.PathsFieldNumber
  - Google.Protobuf.WellKnownTypes.FieldMask.ToDiagnosticString
  - Google.Protobuf.WellKnownTypes.FieldMask.ToString
  - Google.Protobuf.WellKnownTypes.FieldMask.Union(Google.Protobuf.WellKnownTypes.FieldMask[])
  - Google.Protobuf.WellKnownTypes.FieldMask.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: FieldMask
  nameWithType: FieldMask
  fullName: Google.Protobuf.WellKnownTypes.FieldMask
  type: Class
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: FieldMask
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 42
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\n`FieldMask` represents a set of symbolic field paths, for example:\n\npaths: &quot;f.a&quot;\npaths: &quot;f.b.d&quot;\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\nf {\n a : 22\n b {\n   d : 1\n   x : 2\n }\n y : 13\n}\nz: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\nf {\n a : 22\n b {\n   d : 1\n }\n}\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, new values will\nbe appended to the existing repeated field in the target resource. Note that\na repeated field is only allowed in the last position of a `paths` string.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then new value will be merged into the existing sub-message\nin the target resource.\n\nFor example, given the target message:\n\nf {\n b {\n   d: 1\n   x: 2\n }\n c: [1]\n}\n\nAnd an update message:\n\nf {\n b {\n   d: 10\n }\n c: [2]\n}\n\nthen if the field mask is:\n\npaths: [&quot;f.b&quot;, &quot;f.c&quot;]\n\nthen the result will be:\n\nf {\n b {\n   d: 10\n   x: 2\n }\n c: [1, 2]\n}\n\nAn implementation may provide options to override this default behavior for\nrepeated and message fields.\n\nIn order to reset a field&apos;s value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\nmessage Profile {\n User user = 1;\n Photo photo = 2;\n}\nmessage User {\n string display_name = 1;\n string address = 2;\n}\n\nIn proto a field mask for `Profile` may look as such:\n\nmask {\n paths: &quot;user.display_name&quot;\n paths: &quot;photo&quot;\n}\n\nIn JSON, the same mask is represented as below:\n\n{\n mask: &quot;user.displayName,photo&quot;\n}\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\nmessage SampleMessage {\n oneof test_oneof {\n   string name = 4;\n   SubMessage sub_message = 9;\n }\n}\n\nThe field mask can be:\n\nmask {\n paths: &quot;name&quot;\n}\n\nOr:\n\nmask {\n paths: &quot;sub_message&quot;\n}\n\nNote that oneof type names (&quot;test_oneof&quot; in this case) cannot be used in\npaths.\n\n## Field Mask Verification\n\nThe implementation of any API method which has a FieldMask type field in the\nrequest should verify the included field paths, and return an\n`INVALID_ARGUMENT` error if any path is duplicated or unmappable.\n"
  example: []
  syntax:
    content: 'public sealed class FieldMask : IMessage<FieldMask>, IEquatable<FieldMask>, IDeepCloneable<FieldMask>, ICustomDiagnosticMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class FieldMask
          Implements IMessage(Of FieldMask), IEquatable(Of FieldMask), IDeepCloneable(Of FieldMask), ICustomDiagnosticMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Protobuf.WellKnownTypes.FieldMask}
  - System.IEquatable{Google.Protobuf.WellKnownTypes.FieldMask}
  - Google.Protobuf.IDeepCloneable{Google.Protobuf.WellKnownTypes.FieldMask}
  - Google.Protobuf.ICustomDiagnosticMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.MergeFrom(System.Byte[])
  - Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.MergeFrom(System.Byte[],System.Int32,System.Int32)
  - Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.ByteString)
  - Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.MergeFrom(System.IO.Stream)
  - Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.MergeDelimitedFrom(System.IO.Stream)
  - Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.ToByteArray
  - Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.WriteTo(System.IO.Stream)
  - Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.WriteDelimitedTo(System.IO.Stream)
  - Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.ToByteString
  - Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.IsInitialized
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Parser
  commentId: P:Google.Protobuf.WellKnownTypes.FieldMask.Parser
  id: Parser
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: FieldMask.Parser
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Parser
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: Parser
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 245
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  syntax:
    content: public static MessageParser<FieldMask> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Google.Protobuf.WellKnownTypes.FieldMask}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of FieldMask)
  overload: Google.Protobuf.WellKnownTypes.FieldMask.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Descriptor
  commentId: P:Google.Protobuf.WellKnownTypes.FieldMask.Descriptor
  id: Descriptor
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: FieldMask.Descriptor
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Descriptor
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: Descriptor
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 248
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Google.Protobuf.WellKnownTypes.FieldMask.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Google#Protobuf#IMessage#Descriptor
  commentId: P:Google.Protobuf.WellKnownTypes.FieldMask.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: FieldMask.IMessage.Descriptor
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 253
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Google.Protobuf.WellKnownTypes.FieldMask.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: FieldMask.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Google.Protobuf.WellKnownTypes.FieldMask.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.WellKnownTypes.FieldMask.#ctor
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.#ctor
  id: '#ctor'
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: FieldMask()
  nameWithType: FieldMask.FieldMask()
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.FieldMask()
  type: Constructor
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: .ctor
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 258
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  syntax:
    content: public FieldMask()
    content.vb: Public Sub New
  overload: Google.Protobuf.WellKnownTypes.FieldMask.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Protobuf.WellKnownTypes.FieldMask.#ctor(Google.Protobuf.WellKnownTypes.FieldMask)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.#ctor(Google.Protobuf.WellKnownTypes.FieldMask)
  id: '#ctor(Google.Protobuf.WellKnownTypes.FieldMask)'
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: FieldMask(FieldMask)
  nameWithType: FieldMask.FieldMask(FieldMask)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.FieldMask(Google.Protobuf.WellKnownTypes.FieldMask)
  type: Constructor
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: .ctor
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 265
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  syntax:
    content: public FieldMask(FieldMask other)
    parameters:
    - id: other
      type: Google.Protobuf.WellKnownTypes.FieldMask
    content.vb: Public Sub New(other As FieldMask)
  overload: Google.Protobuf.WellKnownTypes.FieldMask.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Clone
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.Clone
  id: Clone
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: FieldMask.Clone()
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Clone()
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: Clone
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 271
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  syntax:
    content: public FieldMask Clone()
    return:
      type: Google.Protobuf.WellKnownTypes.FieldMask
    content.vb: Public Function Clone As FieldMask
  overload: Google.Protobuf.WellKnownTypes.FieldMask.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Google.Protobuf.WellKnownTypes.FieldMask}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Protobuf.WellKnownTypes.FieldMask.PathsFieldNumber
  commentId: F:Google.Protobuf.WellKnownTypes.FieldMask.PathsFieldNumber
  id: PathsFieldNumber
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: PathsFieldNumber
  nameWithType: FieldMask.PathsFieldNumber
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.PathsFieldNumber
  type: Field
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: PathsFieldNumber
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 277
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: Field number for the &quot;paths&quot; field.
  example: []
  syntax:
    content: public const int PathsFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const PathsFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Paths
  commentId: P:Google.Protobuf.WellKnownTypes.FieldMask.Paths
  id: Paths
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: Paths
  nameWithType: FieldMask.Paths
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Paths
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: Paths
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 284
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nThe set of field mask paths.\n"
  example: []
  syntax:
    content: public RepeatedField<string> Paths { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{System.String}
    content.vb: Public ReadOnly Property Paths As RepeatedField(Of String)
  overload: Google.Protobuf.WellKnownTypes.FieldMask.Paths*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Equals(System.Object)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: FieldMask.Equals(Object)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Equals(System.Object)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: Equals
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 289
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Protobuf.WellKnownTypes.FieldMask.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Equals(Google.Protobuf.WellKnownTypes.FieldMask)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.Equals(Google.Protobuf.WellKnownTypes.FieldMask)
  id: Equals(Google.Protobuf.WellKnownTypes.FieldMask)
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: Equals(FieldMask)
  nameWithType: FieldMask.Equals(FieldMask)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Equals(Google.Protobuf.WellKnownTypes.FieldMask)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: Equals
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 294
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  syntax:
    content: public bool Equals(FieldMask other)
    parameters:
    - id: other
      type: Google.Protobuf.WellKnownTypes.FieldMask
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As FieldMask) As Boolean
  overload: Google.Protobuf.WellKnownTypes.FieldMask.Equals*
  implements:
  - System.IEquatable{Google.Protobuf.WellKnownTypes.FieldMask}.Equals(Google.Protobuf.WellKnownTypes.FieldMask)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Protobuf.WellKnownTypes.FieldMask.GetHashCode
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.GetHashCode
  id: GetHashCode
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: FieldMask.GetHashCode()
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.GetHashCode()
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: GetHashCode
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 306
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Protobuf.WellKnownTypes.FieldMask.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Protobuf.WellKnownTypes.FieldMask.ToString
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.ToString
  id: ToString
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FieldMask.ToString()
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.ToString()
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: ToString
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 316
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Protobuf.WellKnownTypes.FieldMask.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Protobuf.WellKnownTypes.FieldMask.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: FieldMask.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: WriteTo
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 321
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Google.Protobuf.WellKnownTypes.FieldMask.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Protobuf.WellKnownTypes.FieldMask.CalculateSize
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.CalculateSize
  id: CalculateSize
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: FieldMask.CalculateSize()
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.CalculateSize()
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: CalculateSize
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 329
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Google.Protobuf.WellKnownTypes.FieldMask.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Protobuf.WellKnownTypes.FieldMask.MergeFrom(Google.Protobuf.WellKnownTypes.FieldMask)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.MergeFrom(Google.Protobuf.WellKnownTypes.FieldMask)
  id: MergeFrom(Google.Protobuf.WellKnownTypes.FieldMask)
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: MergeFrom(FieldMask)
  nameWithType: FieldMask.MergeFrom(FieldMask)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.MergeFrom(Google.Protobuf.WellKnownTypes.FieldMask)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: MergeFrom
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 339
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  syntax:
    content: public void MergeFrom(FieldMask other)
    parameters:
    - id: other
      type: Google.Protobuf.WellKnownTypes.FieldMask
    content.vb: Public Sub MergeFrom(other As FieldMask)
  overload: Google.Protobuf.WellKnownTypes.FieldMask.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Google.Protobuf.WellKnownTypes.FieldMask}.MergeFrom(Google.Protobuf.WellKnownTypes.FieldMask)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Protobuf.WellKnownTypes.FieldMask.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: FieldMask.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: MergeFrom
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMask.cs
    startLine: 348
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Google.Protobuf.WellKnownTypes.FieldMask.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Protobuf.WellKnownTypes.FieldMask.ToDiagnosticString
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.ToDiagnosticString
  id: ToDiagnosticString
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: ToDiagnosticString()
  nameWithType: FieldMask.ToDiagnosticString()
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.ToDiagnosticString()
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: ToDiagnosticString
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 100
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nReturns a string representation of this <xref href=\"Google.Protobuf.WellKnownTypes.FieldMask\" data-throw-if-not-resolved=\"false\"></xref> for diagnostic purposes.\n"
  remarks: "\nNormally the returned value will be a JSON string value (including leading and trailing quotes) but\nwhen the value is non-normalized or out of range, a JSON object representation will be returned\ninstead, including a warning. This is to avoid exceptions being thrown when trying to\ndiagnose problems - the regular JSON formatter will still throw an exception for non-normalized\nvalues.\n"
  example: []
  syntax:
    content: public string ToDiagnosticString()
    return:
      type: System.String
      description: A string representation of this value.
    content.vb: Public Function ToDiagnosticString As String
  overload: Google.Protobuf.WellKnownTypes.FieldMask.ToDiagnosticString*
  implements:
  - Google.Protobuf.ICustomDiagnosticMessage.ToDiagnosticString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Protobuf.WellKnownTypes.FieldMask.FromString(System.String)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.FromString(System.String)
  id: FromString(System.String)
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: FromString(String)
  nameWithType: FieldMask.FromString(String)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.FromString(System.String)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: FromString
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 108
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nParses from a string to a FieldMask.\n"
  example: []
  syntax:
    content: public static FieldMask FromString(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: Google.Protobuf.WellKnownTypes.FieldMask
    content.vb: Public Shared Function FromString(value As String) As FieldMask
  overload: Google.Protobuf.WellKnownTypes.FieldMask.FromString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Protobuf.WellKnownTypes.FieldMask.FromString``1(System.String)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.FromString``1(System.String)
  id: FromString``1(System.String)
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: FromString<T>(String)
  nameWithType: FieldMask.FromString<T>(String)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.FromString<T>(System.String)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: FromString
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 117
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nParses from a string to a FieldMask and validates all field paths.\n"
  example: []
  syntax:
    content: >-
      public static FieldMask FromString<T>(string value)
          where T : IMessage
    parameters:
    - id: value
      type: System.String
    typeParameters:
    - id: T
      description: The type to validate the field paths against.
    return:
      type: Google.Protobuf.WellKnownTypes.FieldMask
    content.vb: Public Shared Function FromString(Of T As IMessage)(value As String) As FieldMask
  overload: Google.Protobuf.WellKnownTypes.FieldMask.FromString*
  nameWithType.vb: FieldMask.FromString(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Protobuf.WellKnownTypes.FieldMask.FromString(Of T)(System.String)
  name.vb: FromString(Of T)(String)
- uid: Google.Protobuf.WellKnownTypes.FieldMask.FromStringEnumerable``1(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.FromStringEnumerable``1(System.Collections.Generic.IEnumerable{System.String})
  id: FromStringEnumerable``1(System.Collections.Generic.IEnumerable{System.String})
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: FromStringEnumerable<T>(IEnumerable<String>)
  nameWithType: FieldMask.FromStringEnumerable<T>(IEnumerable<String>)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.FromStringEnumerable<T>(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: FromStringEnumerable
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 126
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nConstructs a FieldMask for a list of field paths in a certain type.\n"
  example: []
  syntax:
    content: >-
      public static FieldMask FromStringEnumerable<T>(IEnumerable<string> paths)
          where T : IMessage
    parameters:
    - id: paths
      type: System.Collections.Generic.IEnumerable{System.String}
    typeParameters:
    - id: T
      description: The type to validate the field paths against.
    return:
      type: Google.Protobuf.WellKnownTypes.FieldMask
    content.vb: Public Shared Function FromStringEnumerable(Of T As IMessage)(paths As IEnumerable(Of String)) As FieldMask
  overload: Google.Protobuf.WellKnownTypes.FieldMask.FromStringEnumerable*
  nameWithType.vb: FieldMask.FromStringEnumerable(Of T)(IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Protobuf.WellKnownTypes.FieldMask.FromStringEnumerable(Of T)(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: FromStringEnumerable(Of T)(IEnumerable(Of String))
- uid: Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers``1(System.Int32[])
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers``1(System.Int32[])
  id: FromFieldNumbers``1(System.Int32[])
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: FromFieldNumbers<T>(Int32[])
  nameWithType: FieldMask.FromFieldNumbers<T>(Int32[])
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers<T>(System.Int32[])
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: FromFieldNumbers
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 153
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nConstructs a FieldMask from the passed field numbers.\n"
  example: []
  syntax:
    content: >-
      public static FieldMask FromFieldNumbers<T>(params int[] fieldNumbers)
          where T : IMessage
    parameters:
    - id: fieldNumbers
      type: System.Int32[]
    typeParameters:
    - id: T
      description: The type to validate the field paths against.
    return:
      type: Google.Protobuf.WellKnownTypes.FieldMask
    content.vb: Public Shared Function FromFieldNumbers(Of T As IMessage)(ParamArray fieldNumbers As Integer()) As FieldMask
  overload: Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers*
  nameWithType.vb: FieldMask.FromFieldNumbers(Of T)(Int32())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers(Of T)(System.Int32())
  name.vb: FromFieldNumbers(Of T)(Int32())
- uid: Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers``1(System.Collections.Generic.IEnumerable{System.Int32})
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers``1(System.Collections.Generic.IEnumerable{System.Int32})
  id: FromFieldNumbers``1(System.Collections.Generic.IEnumerable{System.Int32})
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: FromFieldNumbers<T>(IEnumerable<Int32>)
  nameWithType: FieldMask.FromFieldNumbers<T>(IEnumerable<Int32>)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers<T>(System.Collections.Generic.IEnumerable<System.Int32>)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: FromFieldNumbers
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 162
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nConstructs a FieldMask from the passed field numbers.\n"
  example: []
  syntax:
    content: >-
      public static FieldMask FromFieldNumbers<T>(IEnumerable<int> fieldNumbers)
          where T : IMessage
    parameters:
    - id: fieldNumbers
      type: System.Collections.Generic.IEnumerable{System.Int32}
    typeParameters:
    - id: T
      description: The type to validate the field paths against.
    return:
      type: Google.Protobuf.WellKnownTypes.FieldMask
    content.vb: Public Shared Function FromFieldNumbers(Of T As IMessage)(fieldNumbers As IEnumerable(Of Integer)) As FieldMask
  overload: Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers*
  nameWithType.vb: FieldMask.FromFieldNumbers(Of T)(IEnumerable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers(Of T)(System.Collections.Generic.IEnumerable(Of System.Int32))
  name.vb: FromFieldNumbers(Of T)(IEnumerable(Of Int32))
- uid: Google.Protobuf.WellKnownTypes.FieldMask.IsValid``1(Google.Protobuf.WellKnownTypes.FieldMask)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.IsValid``1(Google.Protobuf.WellKnownTypes.FieldMask)
  id: IsValid``1(Google.Protobuf.WellKnownTypes.FieldMask)
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: IsValid<T>(FieldMask)
  nameWithType: FieldMask.IsValid<T>(FieldMask)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.IsValid<T>(Google.Protobuf.WellKnownTypes.FieldMask)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: IsValid
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 210
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nChecks whether paths in a given fields mask are valid.\n"
  example: []
  syntax:
    content: >-
      public static bool IsValid<T>(FieldMask fieldMask)
          where T : IMessage
    parameters:
    - id: fieldMask
      type: Google.Protobuf.WellKnownTypes.FieldMask
    typeParameters:
    - id: T
      description: The type to validate the field paths against.
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(Of T As IMessage)(fieldMask As FieldMask) As Boolean
  overload: Google.Protobuf.WellKnownTypes.FieldMask.IsValid*
  nameWithType.vb: FieldMask.IsValid(Of T)(FieldMask)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Protobuf.WellKnownTypes.FieldMask.IsValid(Of T)(Google.Protobuf.WellKnownTypes.FieldMask)
  name.vb: IsValid(Of T)(FieldMask)
- uid: Google.Protobuf.WellKnownTypes.FieldMask.IsValid(Google.Protobuf.Reflection.MessageDescriptor,Google.Protobuf.WellKnownTypes.FieldMask)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.IsValid(Google.Protobuf.Reflection.MessageDescriptor,Google.Protobuf.WellKnownTypes.FieldMask)
  id: IsValid(Google.Protobuf.Reflection.MessageDescriptor,Google.Protobuf.WellKnownTypes.FieldMask)
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: IsValid(MessageDescriptor, FieldMask)
  nameWithType: FieldMask.IsValid(MessageDescriptor, FieldMask)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.IsValid(Google.Protobuf.Reflection.MessageDescriptor, Google.Protobuf.WellKnownTypes.FieldMask)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: IsValid
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 220
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nChecks whether paths in a given fields mask are valid.\n"
  example: []
  syntax:
    content: public static bool IsValid(MessageDescriptor descriptor, FieldMask fieldMask)
    parameters:
    - id: descriptor
      type: Google.Protobuf.Reflection.MessageDescriptor
    - id: fieldMask
      type: Google.Protobuf.WellKnownTypes.FieldMask
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(descriptor As MessageDescriptor, fieldMask As FieldMask) As Boolean
  overload: Google.Protobuf.WellKnownTypes.FieldMask.IsValid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Protobuf.WellKnownTypes.FieldMask.IsValid``1(System.String)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.IsValid``1(System.String)
  id: IsValid``1(System.String)
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: IsValid<T>(String)
  nameWithType: FieldMask.IsValid<T>(String)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.IsValid<T>(System.String)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: IsValid
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 237
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nChecks whether a given field path is valid.\n"
  example: []
  syntax:
    content: >-
      public static bool IsValid<T>(string path)
          where T : IMessage
    parameters:
    - id: path
      type: System.String
    typeParameters:
    - id: T
      description: The type to validate the field paths against.
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(Of T As IMessage)(path As String) As Boolean
  overload: Google.Protobuf.WellKnownTypes.FieldMask.IsValid*
  nameWithType.vb: FieldMask.IsValid(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Protobuf.WellKnownTypes.FieldMask.IsValid(Of T)(System.String)
  name.vb: IsValid(Of T)(String)
- uid: Google.Protobuf.WellKnownTypes.FieldMask.IsValid(Google.Protobuf.Reflection.MessageDescriptor,System.String)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.IsValid(Google.Protobuf.Reflection.MessageDescriptor,System.String)
  id: IsValid(Google.Protobuf.Reflection.MessageDescriptor,System.String)
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: IsValid(MessageDescriptor, String)
  nameWithType: FieldMask.IsValid(MessageDescriptor, String)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.IsValid(Google.Protobuf.Reflection.MessageDescriptor, System.String)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: IsValid
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 247
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nChecks whether paths in a given fields mask are valid.\n"
  example: []
  syntax:
    content: public static bool IsValid(MessageDescriptor descriptor, string path)
    parameters:
    - id: descriptor
      type: Google.Protobuf.Reflection.MessageDescriptor
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsValid(descriptor As MessageDescriptor, path As String) As Boolean
  overload: Google.Protobuf.WellKnownTypes.FieldMask.IsValid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Normalize
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.Normalize
  id: Normalize
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: FieldMask.Normalize()
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Normalize()
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: Normalize
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 282
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nConverts this FieldMask to its canonical form. In the canonical form of a\nFieldMask, all field paths are sorted alphabetically and redundant field\npaths are removed.\n"
  example: []
  syntax:
    content: public FieldMask Normalize()
    return:
      type: Google.Protobuf.WellKnownTypes.FieldMask
    content.vb: Public Function Normalize As FieldMask
  overload: Google.Protobuf.WellKnownTypes.FieldMask.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Union(Google.Protobuf.WellKnownTypes.FieldMask[])
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.Union(Google.Protobuf.WellKnownTypes.FieldMask[])
  id: Union(Google.Protobuf.WellKnownTypes.FieldMask[])
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: Union(FieldMask[])
  nameWithType: FieldMask.Union(FieldMask[])
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Union(Google.Protobuf.WellKnownTypes.FieldMask[])
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: Union
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 290
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nCreates a union of two or more FieldMasks.\n"
  example: []
  syntax:
    content: public FieldMask Union(params FieldMask[] otherMasks)
    parameters:
    - id: otherMasks
      type: Google.Protobuf.WellKnownTypes.FieldMask[]
    return:
      type: Google.Protobuf.WellKnownTypes.FieldMask
    content.vb: Public Function Union(ParamArray otherMasks As FieldMask()) As FieldMask
  overload: Google.Protobuf.WellKnownTypes.FieldMask.Union*
  nameWithType.vb: FieldMask.Union(FieldMask())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.WellKnownTypes.FieldMask.Union(Google.Protobuf.WellKnownTypes.FieldMask())
  name.vb: Union(FieldMask())
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Intersection(Google.Protobuf.WellKnownTypes.FieldMask)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.Intersection(Google.Protobuf.WellKnownTypes.FieldMask)
  id: Intersection(Google.Protobuf.WellKnownTypes.FieldMask)
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: Intersection(FieldMask)
  nameWithType: FieldMask.Intersection(FieldMask)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Intersection(Google.Protobuf.WellKnownTypes.FieldMask)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: Intersection
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 304
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nCalculates the intersection of two FieldMasks.\n"
  example: []
  syntax:
    content: public FieldMask Intersection(FieldMask additionalMask)
    parameters:
    - id: additionalMask
      type: Google.Protobuf.WellKnownTypes.FieldMask
    return:
      type: Google.Protobuf.WellKnownTypes.FieldMask
    content.vb: Public Function Intersection(additionalMask As FieldMask) As FieldMask
  overload: Google.Protobuf.WellKnownTypes.FieldMask.Intersection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Merge(Google.Protobuf.IMessage,Google.Protobuf.IMessage,Google.Protobuf.WellKnownTypes.FieldMask.MergeOptions)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.Merge(Google.Protobuf.IMessage,Google.Protobuf.IMessage,Google.Protobuf.WellKnownTypes.FieldMask.MergeOptions)
  id: Merge(Google.Protobuf.IMessage,Google.Protobuf.IMessage,Google.Protobuf.WellKnownTypes.FieldMask.MergeOptions)
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: Merge(IMessage, IMessage, FieldMask.MergeOptions)
  nameWithType: FieldMask.Merge(IMessage, IMessage, FieldMask.MergeOptions)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Merge(Google.Protobuf.IMessage, Google.Protobuf.IMessage, Google.Protobuf.WellKnownTypes.FieldMask.MergeOptions)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: Merge
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 320
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nMerges fields specified by this FieldMask from one message to another with the\nspecified merge options.\n"
  example: []
  syntax:
    content: public void Merge(IMessage source, IMessage destination, FieldMask.MergeOptions options)
    parameters:
    - id: source
      type: Google.Protobuf.IMessage
    - id: destination
      type: Google.Protobuf.IMessage
    - id: options
      type: Google.Protobuf.WellKnownTypes.FieldMask.MergeOptions
    content.vb: Public Sub Merge(source As IMessage, destination As IMessage, options As FieldMask.MergeOptions)
  overload: Google.Protobuf.WellKnownTypes.FieldMask.Merge*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Merge(Google.Protobuf.IMessage,Google.Protobuf.IMessage)
  commentId: M:Google.Protobuf.WellKnownTypes.FieldMask.Merge(Google.Protobuf.IMessage,Google.Protobuf.IMessage)
  id: Merge(Google.Protobuf.IMessage,Google.Protobuf.IMessage)
  parent: Google.Protobuf.WellKnownTypes.FieldMask
  langs:
  - csharp
  - vb
  name: Merge(IMessage, IMessage)
  nameWithType: FieldMask.Merge(IMessage, IMessage)
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Merge(Google.Protobuf.IMessage, Google.Protobuf.IMessage)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
      branch: 3.8.x
      repo: https://github.com/google/protobuf
    id: Merge
    path: csharp/src/Google.Protobuf/WellKnownTypes/FieldMaskPartial.cs
    startLine: 328
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.WellKnownTypes
  summary: "\nMerges fields specified by this FieldMask from one message to another.\n"
  example: []
  syntax:
    content: public void Merge(IMessage source, IMessage destination)
    parameters:
    - id: source
      type: Google.Protobuf.IMessage
    - id: destination
      type: Google.Protobuf.IMessage
    content.vb: Public Sub Merge(source As IMessage, destination As IMessage)
  overload: Google.Protobuf.WellKnownTypes.FieldMask.Merge*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Protobuf.WellKnownTypes.FieldMask}
  commentId: T:Google.Protobuf.IMessage{Google.Protobuf.WellKnownTypes.FieldMask}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<FieldMask>
  nameWithType: IMessage<FieldMask>
  fullName: Google.Protobuf.IMessage<Google.Protobuf.WellKnownTypes.FieldMask>
  nameWithType.vb: IMessage(Of FieldMask)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Protobuf.WellKnownTypes.FieldMask)
  name.vb: IMessage(Of FieldMask)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.WellKnownTypes.FieldMask
    name: FieldMask
    nameWithType: FieldMask
    fullName: Google.Protobuf.WellKnownTypes.FieldMask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.WellKnownTypes.FieldMask
    name: FieldMask
    nameWithType: FieldMask
    fullName: Google.Protobuf.WellKnownTypes.FieldMask
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Protobuf.WellKnownTypes.FieldMask}
  commentId: T:System.IEquatable{Google.Protobuf.WellKnownTypes.FieldMask}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<FieldMask>
  nameWithType: IEquatable<FieldMask>
  fullName: System.IEquatable<Google.Protobuf.WellKnownTypes.FieldMask>
  nameWithType.vb: IEquatable(Of FieldMask)
  fullName.vb: System.IEquatable(Of Google.Protobuf.WellKnownTypes.FieldMask)
  name.vb: IEquatable(Of FieldMask)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.WellKnownTypes.FieldMask
    name: FieldMask
    nameWithType: FieldMask
    fullName: Google.Protobuf.WellKnownTypes.FieldMask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.WellKnownTypes.FieldMask
    name: FieldMask
    nameWithType: FieldMask
    fullName: Google.Protobuf.WellKnownTypes.FieldMask
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Protobuf.WellKnownTypes.FieldMask}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Protobuf.WellKnownTypes.FieldMask}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<FieldMask>
  nameWithType: IDeepCloneable<FieldMask>
  fullName: Google.Protobuf.IDeepCloneable<Google.Protobuf.WellKnownTypes.FieldMask>
  nameWithType.vb: IDeepCloneable(Of FieldMask)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Protobuf.WellKnownTypes.FieldMask)
  name.vb: IDeepCloneable(Of FieldMask)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.WellKnownTypes.FieldMask
    name: FieldMask
    nameWithType: FieldMask
    fullName: Google.Protobuf.WellKnownTypes.FieldMask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.WellKnownTypes.FieldMask
    name: FieldMask
    nameWithType: FieldMask
    fullName: Google.Protobuf.WellKnownTypes.FieldMask
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.ICustomDiagnosticMessage
  commentId: T:Google.Protobuf.ICustomDiagnosticMessage
  parent: Google.Protobuf
  name: ICustomDiagnosticMessage
  nameWithType: ICustomDiagnosticMessage
  fullName: Google.Protobuf.ICustomDiagnosticMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.MergeFrom(System.Byte[])
  commentId: M:Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[])
  parent: Google.Protobuf.MessageExtensions
  definition: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[])
  name: MergeFrom(Byte[])
  nameWithType: MessageExtensions.MergeFrom(Byte[])
  fullName: Google.Protobuf.MessageExtensions.MergeFrom(System.Byte[])
  nameWithType.vb: MessageExtensions.MergeFrom(Byte())
  fullName.vb: Google.Protobuf.MessageExtensions.MergeFrom(System.Byte())
  name.vb: MergeFrom(Byte())
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(System.Byte[])
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(System.Byte[])
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.MergeFrom(System.Byte[],System.Int32,System.Int32)
  commentId: M:Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[],System.Int32,System.Int32)
  parent: Google.Protobuf.MessageExtensions
  definition: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[],System.Int32,System.Int32)
  name: MergeFrom(Byte[], Int32, Int32)
  nameWithType: MessageExtensions.MergeFrom(Byte[], Int32, Int32)
  fullName: Google.Protobuf.MessageExtensions.MergeFrom(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: MessageExtensions.MergeFrom(Byte(), Int32, Int32)
  fullName.vb: Google.Protobuf.MessageExtensions.MergeFrom(System.Byte(), System.Int32, System.Int32)
  name.vb: MergeFrom(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(System.Byte[],System.Int32,System.Int32)
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(System.Byte[],System.Int32,System.Int32)
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.ByteString)
  commentId: M:Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,Google.Protobuf.ByteString)
  parent: Google.Protobuf.MessageExtensions
  definition: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,Google.Protobuf.ByteString)
  name: MergeFrom(ByteString)
  nameWithType: MessageExtensions.MergeFrom(ByteString)
  fullName: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.ByteString)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.ByteString)
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.ByteString
    name: ByteString
    nameWithType: ByteString
    fullName: Google.Protobuf.ByteString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.ByteString)
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.ByteString
    name: ByteString
    nameWithType: ByteString
    fullName: Google.Protobuf.ByteString
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.MergeFrom(System.IO.Stream)
  commentId: M:Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.IO.Stream)
  parent: Google.Protobuf.MessageExtensions
  definition: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.IO.Stream)
  name: MergeFrom(Stream)
  nameWithType: MessageExtensions.MergeFrom(Stream)
  fullName: Google.Protobuf.MessageExtensions.MergeFrom(System.IO.Stream)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(System.IO.Stream)
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(System.IO.Stream)
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.MergeDelimitedFrom(System.IO.Stream)
  commentId: M:Google.Protobuf.MessageExtensions.MergeDelimitedFrom(Google.Protobuf.IMessage,System.IO.Stream)
  parent: Google.Protobuf.MessageExtensions
  definition: Google.Protobuf.MessageExtensions.MergeDelimitedFrom(Google.Protobuf.IMessage,System.IO.Stream)
  name: MergeDelimitedFrom(Stream)
  nameWithType: MessageExtensions.MergeDelimitedFrom(Stream)
  fullName: Google.Protobuf.MessageExtensions.MergeDelimitedFrom(System.IO.Stream)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.MergeDelimitedFrom(System.IO.Stream)
    name: MergeDelimitedFrom
    nameWithType: MessageExtensions.MergeDelimitedFrom
    fullName: Google.Protobuf.MessageExtensions.MergeDelimitedFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.MergeDelimitedFrom(System.IO.Stream)
    name: MergeDelimitedFrom
    nameWithType: MessageExtensions.MergeDelimitedFrom
    fullName: Google.Protobuf.MessageExtensions.MergeDelimitedFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.ToByteArray
  commentId: M:Google.Protobuf.MessageExtensions.ToByteArray(Google.Protobuf.IMessage)
  parent: Google.Protobuf.MessageExtensions
  definition: Google.Protobuf.MessageExtensions.ToByteArray(Google.Protobuf.IMessage)
  name: ToByteArray()
  nameWithType: MessageExtensions.ToByteArray()
  fullName: Google.Protobuf.MessageExtensions.ToByteArray()
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.ToByteArray
    name: ToByteArray
    nameWithType: MessageExtensions.ToByteArray
    fullName: Google.Protobuf.MessageExtensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.ToByteArray
    name: ToByteArray
    nameWithType: MessageExtensions.ToByteArray
    fullName: Google.Protobuf.MessageExtensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.WriteTo(System.IO.Stream)
  commentId: M:Google.Protobuf.MessageExtensions.WriteTo(Google.Protobuf.IMessage,System.IO.Stream)
  parent: Google.Protobuf.MessageExtensions
  definition: Google.Protobuf.MessageExtensions.WriteTo(Google.Protobuf.IMessage,System.IO.Stream)
  name: WriteTo(Stream)
  nameWithType: MessageExtensions.WriteTo(Stream)
  fullName: Google.Protobuf.MessageExtensions.WriteTo(System.IO.Stream)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.WriteTo(System.IO.Stream)
    name: WriteTo
    nameWithType: MessageExtensions.WriteTo
    fullName: Google.Protobuf.MessageExtensions.WriteTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.WriteTo(System.IO.Stream)
    name: WriteTo
    nameWithType: MessageExtensions.WriteTo
    fullName: Google.Protobuf.MessageExtensions.WriteTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.WriteDelimitedTo(System.IO.Stream)
  commentId: M:Google.Protobuf.MessageExtensions.WriteDelimitedTo(Google.Protobuf.IMessage,System.IO.Stream)
  parent: Google.Protobuf.MessageExtensions
  definition: Google.Protobuf.MessageExtensions.WriteDelimitedTo(Google.Protobuf.IMessage,System.IO.Stream)
  name: WriteDelimitedTo(Stream)
  nameWithType: MessageExtensions.WriteDelimitedTo(Stream)
  fullName: Google.Protobuf.MessageExtensions.WriteDelimitedTo(System.IO.Stream)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.WriteDelimitedTo(System.IO.Stream)
    name: WriteDelimitedTo
    nameWithType: MessageExtensions.WriteDelimitedTo
    fullName: Google.Protobuf.MessageExtensions.WriteDelimitedTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.WriteDelimitedTo(System.IO.Stream)
    name: WriteDelimitedTo
    nameWithType: MessageExtensions.WriteDelimitedTo
    fullName: Google.Protobuf.MessageExtensions.WriteDelimitedTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.ToByteString
  commentId: M:Google.Protobuf.MessageExtensions.ToByteString(Google.Protobuf.IMessage)
  parent: Google.Protobuf.MessageExtensions
  definition: Google.Protobuf.MessageExtensions.ToByteString(Google.Protobuf.IMessage)
  name: ToByteString()
  nameWithType: MessageExtensions.ToByteString()
  fullName: Google.Protobuf.MessageExtensions.ToByteString()
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.ToByteString
    name: ToByteString
    nameWithType: MessageExtensions.ToByteString
    fullName: Google.Protobuf.MessageExtensions.ToByteString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.ToByteString
    name: ToByteString
    nameWithType: MessageExtensions.ToByteString
    fullName: Google.Protobuf.MessageExtensions.ToByteString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.Google.Protobuf.MessageExtensions.IsInitialized
  commentId: M:Google.Protobuf.MessageExtensions.IsInitialized(Google.Protobuf.IMessage)
  parent: Google.Protobuf.MessageExtensions
  definition: Google.Protobuf.MessageExtensions.IsInitialized(Google.Protobuf.IMessage)
  name: IsInitialized()
  nameWithType: MessageExtensions.IsInitialized()
  fullName: Google.Protobuf.MessageExtensions.IsInitialized()
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.IsInitialized
    name: IsInitialized
    nameWithType: MessageExtensions.IsInitialized
    fullName: Google.Protobuf.MessageExtensions.IsInitialized
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.IsInitialized
    name: IsInitialized
    nameWithType: MessageExtensions.IsInitialized
    fullName: Google.Protobuf.MessageExtensions.IsInitialized
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[])
  commentId: M:Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[])
  isExternal: true
  name: MergeFrom(IMessage, Byte[])
  nameWithType: MessageExtensions.MergeFrom(IMessage, Byte[])
  fullName: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage, System.Byte[])
  nameWithType.vb: MessageExtensions.MergeFrom(IMessage, Byte())
  fullName.vb: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage, System.Byte())
  name.vb: MergeFrom(IMessage, Byte())
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[])
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[])
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageExtensions
  commentId: T:Google.Protobuf.MessageExtensions
  parent: Google.Protobuf
  name: MessageExtensions
  nameWithType: MessageExtensions
  fullName: Google.Protobuf.MessageExtensions
- uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[],System.Int32,System.Int32)
  commentId: M:Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[],System.Int32,System.Int32)
  isExternal: true
  name: MergeFrom(IMessage, Byte[], Int32, Int32)
  nameWithType: MessageExtensions.MergeFrom(IMessage, Byte[], Int32, Int32)
  fullName: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage, System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: MessageExtensions.MergeFrom(IMessage, Byte(), Int32, Int32)
  fullName.vb: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage, System.Byte(), System.Int32, System.Int32)
  name.vb: MergeFrom(IMessage, Byte(), Int32, Int32)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[],System.Int32,System.Int32)
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[],System.Int32,System.Int32)
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,Google.Protobuf.ByteString)
  commentId: M:Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,Google.Protobuf.ByteString)
  name: MergeFrom(IMessage, ByteString)
  nameWithType: MessageExtensions.MergeFrom(IMessage, ByteString)
  fullName: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage, Google.Protobuf.ByteString)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,Google.Protobuf.ByteString)
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Protobuf.ByteString
    name: ByteString
    nameWithType: ByteString
    fullName: Google.Protobuf.ByteString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,Google.Protobuf.ByteString)
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Protobuf.ByteString
    name: ByteString
    nameWithType: ByteString
    fullName: Google.Protobuf.ByteString
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.IO.Stream)
  commentId: M:Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.IO.Stream)
  isExternal: true
  name: MergeFrom(IMessage, Stream)
  nameWithType: MessageExtensions.MergeFrom(IMessage, Stream)
  fullName: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage, System.IO.Stream)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.IO.Stream)
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.IO.Stream)
    name: MergeFrom
    nameWithType: MessageExtensions.MergeFrom
    fullName: Google.Protobuf.MessageExtensions.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageExtensions.MergeDelimitedFrom(Google.Protobuf.IMessage,System.IO.Stream)
  commentId: M:Google.Protobuf.MessageExtensions.MergeDelimitedFrom(Google.Protobuf.IMessage,System.IO.Stream)
  isExternal: true
  name: MergeDelimitedFrom(IMessage, Stream)
  nameWithType: MessageExtensions.MergeDelimitedFrom(IMessage, Stream)
  fullName: Google.Protobuf.MessageExtensions.MergeDelimitedFrom(Google.Protobuf.IMessage, System.IO.Stream)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.MergeDelimitedFrom(Google.Protobuf.IMessage,System.IO.Stream)
    name: MergeDelimitedFrom
    nameWithType: MessageExtensions.MergeDelimitedFrom
    fullName: Google.Protobuf.MessageExtensions.MergeDelimitedFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.MergeDelimitedFrom(Google.Protobuf.IMessage,System.IO.Stream)
    name: MergeDelimitedFrom
    nameWithType: MessageExtensions.MergeDelimitedFrom
    fullName: Google.Protobuf.MessageExtensions.MergeDelimitedFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageExtensions.ToByteArray(Google.Protobuf.IMessage)
  commentId: M:Google.Protobuf.MessageExtensions.ToByteArray(Google.Protobuf.IMessage)
  name: ToByteArray(IMessage)
  nameWithType: MessageExtensions.ToByteArray(IMessage)
  fullName: Google.Protobuf.MessageExtensions.ToByteArray(Google.Protobuf.IMessage)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.ToByteArray(Google.Protobuf.IMessage)
    name: ToByteArray
    nameWithType: MessageExtensions.ToByteArray
    fullName: Google.Protobuf.MessageExtensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.ToByteArray(Google.Protobuf.IMessage)
    name: ToByteArray
    nameWithType: MessageExtensions.ToByteArray
    fullName: Google.Protobuf.MessageExtensions.ToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageExtensions.WriteTo(Google.Protobuf.IMessage,System.IO.Stream)
  commentId: M:Google.Protobuf.MessageExtensions.WriteTo(Google.Protobuf.IMessage,System.IO.Stream)
  isExternal: true
  name: WriteTo(IMessage, Stream)
  nameWithType: MessageExtensions.WriteTo(IMessage, Stream)
  fullName: Google.Protobuf.MessageExtensions.WriteTo(Google.Protobuf.IMessage, System.IO.Stream)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.WriteTo(Google.Protobuf.IMessage,System.IO.Stream)
    name: WriteTo
    nameWithType: MessageExtensions.WriteTo
    fullName: Google.Protobuf.MessageExtensions.WriteTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.WriteTo(Google.Protobuf.IMessage,System.IO.Stream)
    name: WriteTo
    nameWithType: MessageExtensions.WriteTo
    fullName: Google.Protobuf.MessageExtensions.WriteTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageExtensions.WriteDelimitedTo(Google.Protobuf.IMessage,System.IO.Stream)
  commentId: M:Google.Protobuf.MessageExtensions.WriteDelimitedTo(Google.Protobuf.IMessage,System.IO.Stream)
  isExternal: true
  name: WriteDelimitedTo(IMessage, Stream)
  nameWithType: MessageExtensions.WriteDelimitedTo(IMessage, Stream)
  fullName: Google.Protobuf.MessageExtensions.WriteDelimitedTo(Google.Protobuf.IMessage, System.IO.Stream)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.WriteDelimitedTo(Google.Protobuf.IMessage,System.IO.Stream)
    name: WriteDelimitedTo
    nameWithType: MessageExtensions.WriteDelimitedTo
    fullName: Google.Protobuf.MessageExtensions.WriteDelimitedTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.WriteDelimitedTo(Google.Protobuf.IMessage,System.IO.Stream)
    name: WriteDelimitedTo
    nameWithType: MessageExtensions.WriteDelimitedTo
    fullName: Google.Protobuf.MessageExtensions.WriteDelimitedTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageExtensions.ToByteString(Google.Protobuf.IMessage)
  commentId: M:Google.Protobuf.MessageExtensions.ToByteString(Google.Protobuf.IMessage)
  name: ToByteString(IMessage)
  nameWithType: MessageExtensions.ToByteString(IMessage)
  fullName: Google.Protobuf.MessageExtensions.ToByteString(Google.Protobuf.IMessage)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.ToByteString(Google.Protobuf.IMessage)
    name: ToByteString
    nameWithType: MessageExtensions.ToByteString
    fullName: Google.Protobuf.MessageExtensions.ToByteString
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.ToByteString(Google.Protobuf.IMessage)
    name: ToByteString
    nameWithType: MessageExtensions.ToByteString
    fullName: Google.Protobuf.MessageExtensions.ToByteString
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageExtensions.IsInitialized(Google.Protobuf.IMessage)
  commentId: M:Google.Protobuf.MessageExtensions.IsInitialized(Google.Protobuf.IMessage)
  name: IsInitialized(IMessage)
  nameWithType: MessageExtensions.IsInitialized(IMessage)
  fullName: Google.Protobuf.MessageExtensions.IsInitialized(Google.Protobuf.IMessage)
  spec.csharp:
  - uid: Google.Protobuf.MessageExtensions.IsInitialized(Google.Protobuf.IMessage)
    name: IsInitialized
    nameWithType: MessageExtensions.IsInitialized
    fullName: Google.Protobuf.MessageExtensions.IsInitialized
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.MessageExtensions.IsInitialized(Google.Protobuf.IMessage)
    name: IsInitialized
    nameWithType: MessageExtensions.IsInitialized
    fullName: Google.Protobuf.MessageExtensions.IsInitialized
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Parser*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.Parser
  name: Parser
  nameWithType: FieldMask.Parser
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Parser
- uid: Google.Protobuf.MessageParser{Google.Protobuf.WellKnownTypes.FieldMask}
  commentId: T:Google.Protobuf.MessageParser{Google.Protobuf.WellKnownTypes.FieldMask}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<FieldMask>
  nameWithType: MessageParser<FieldMask>
  fullName: Google.Protobuf.MessageParser<Google.Protobuf.WellKnownTypes.FieldMask>
  nameWithType.vb: MessageParser(Of FieldMask)
  fullName.vb: Google.Protobuf.MessageParser(Of Google.Protobuf.WellKnownTypes.FieldMask)
  name.vb: MessageParser(Of FieldMask)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.WellKnownTypes.FieldMask
    name: FieldMask
    nameWithType: FieldMask
    fullName: Google.Protobuf.WellKnownTypes.FieldMask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.WellKnownTypes.FieldMask
    name: FieldMask
    nameWithType: FieldMask
    fullName: Google.Protobuf.WellKnownTypes.FieldMask
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  parent: Google.Protobuf
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Descriptor*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.Descriptor
  name: Descriptor
  nameWithType: FieldMask.Descriptor
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.Google#Protobuf#IMessage#Descriptor
  name: IMessage.Descriptor
  nameWithType: FieldMask.IMessage.Descriptor
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: FieldMask.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Google.Protobuf.WellKnownTypes.FieldMask.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.WellKnownTypes.FieldMask.#ctor*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.#ctor
  name: FieldMask
  nameWithType: FieldMask.FieldMask
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.FieldMask
- uid: Google.Protobuf.WellKnownTypes.FieldMask
  commentId: T:Google.Protobuf.WellKnownTypes.FieldMask
  parent: Google.Protobuf.WellKnownTypes
  name: FieldMask
  nameWithType: FieldMask
  fullName: Google.Protobuf.WellKnownTypes.FieldMask
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Clone*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.Clone
  name: Clone
  nameWithType: FieldMask.Clone
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Clone
- uid: Google.Protobuf.IDeepCloneable{Google.Protobuf.WellKnownTypes.FieldMask}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Google.Protobuf.WellKnownTypes.FieldMask}.Clone
  parent: Google.Protobuf.IDeepCloneable{Google.Protobuf.WellKnownTypes.FieldMask}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<FieldMask>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Google.Protobuf.WellKnownTypes.FieldMask>.Clone()
  nameWithType.vb: IDeepCloneable(Of FieldMask).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Protobuf.WellKnownTypes.FieldMask).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<FieldMask>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Google.Protobuf.WellKnownTypes.FieldMask>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of FieldMask).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Google.Protobuf.WellKnownTypes.FieldMask).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Paths*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.Paths
  name: Paths
  nameWithType: FieldMask.Paths
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Paths
- uid: Google.Protobuf.Collections.RepeatedField{System.String}
  commentId: T:Google.Protobuf.Collections.RepeatedField{System.String}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<String>
  nameWithType: RepeatedField<String>
  fullName: Google.Protobuf.Collections.RepeatedField<System.String>
  nameWithType.vb: RepeatedField(Of String)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of System.String)
  name.vb: RepeatedField(Of String)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  parent: Google.Protobuf.Collections
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Equals*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.Equals
  name: Equals
  nameWithType: FieldMask.Equals
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Google.Protobuf.WellKnownTypes.FieldMask}.Equals(Google.Protobuf.WellKnownTypes.FieldMask)
  commentId: M:System.IEquatable{Google.Protobuf.WellKnownTypes.FieldMask}.Equals(Google.Protobuf.WellKnownTypes.FieldMask)
  parent: System.IEquatable{Google.Protobuf.WellKnownTypes.FieldMask}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(FieldMask)
  nameWithType: IEquatable<FieldMask>.Equals(FieldMask)
  fullName: System.IEquatable<Google.Protobuf.WellKnownTypes.FieldMask>.Equals(Google.Protobuf.WellKnownTypes.FieldMask)
  nameWithType.vb: IEquatable(Of FieldMask).Equals(FieldMask)
  fullName.vb: System.IEquatable(Of Google.Protobuf.WellKnownTypes.FieldMask).Equals(Google.Protobuf.WellKnownTypes.FieldMask)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<FieldMask>.Equals
    fullName: System.IEquatable<Google.Protobuf.WellKnownTypes.FieldMask>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.WellKnownTypes.FieldMask
    name: FieldMask
    nameWithType: FieldMask
    fullName: Google.Protobuf.WellKnownTypes.FieldMask
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of FieldMask).Equals
    fullName: System.IEquatable(Of Google.Protobuf.WellKnownTypes.FieldMask).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.WellKnownTypes.FieldMask
    name: FieldMask
    nameWithType: FieldMask
    fullName: Google.Protobuf.WellKnownTypes.FieldMask
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.WellKnownTypes.FieldMask.GetHashCode*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.GetHashCode
  name: GetHashCode
  nameWithType: FieldMask.GetHashCode
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.WellKnownTypes.FieldMask.ToString*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.ToString
  name: ToString
  nameWithType: FieldMask.ToString
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Protobuf.WellKnownTypes.FieldMask.WriteTo*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.WriteTo
  name: WriteTo
  nameWithType: FieldMask.WriteTo
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Google.Protobuf.WellKnownTypes.FieldMask.CalculateSize*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.CalculateSize
  name: CalculateSize
  nameWithType: FieldMask.CalculateSize
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.WellKnownTypes.FieldMask.MergeFrom*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.MergeFrom
  name: MergeFrom
  nameWithType: FieldMask.MergeFrom
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.MergeFrom
- uid: Google.Protobuf.IMessage{Google.Protobuf.WellKnownTypes.FieldMask}.MergeFrom(Google.Protobuf.WellKnownTypes.FieldMask)
  commentId: M:Google.Protobuf.IMessage{Google.Protobuf.WellKnownTypes.FieldMask}.MergeFrom(Google.Protobuf.WellKnownTypes.FieldMask)
  parent: Google.Protobuf.IMessage{Google.Protobuf.WellKnownTypes.FieldMask}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(FieldMask)
  nameWithType: IMessage<FieldMask>.MergeFrom(FieldMask)
  fullName: Google.Protobuf.IMessage<Google.Protobuf.WellKnownTypes.FieldMask>.MergeFrom(Google.Protobuf.WellKnownTypes.FieldMask)
  nameWithType.vb: IMessage(Of FieldMask).MergeFrom(FieldMask)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Protobuf.WellKnownTypes.FieldMask).MergeFrom(Google.Protobuf.WellKnownTypes.FieldMask)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<FieldMask>.MergeFrom
    fullName: Google.Protobuf.IMessage<Google.Protobuf.WellKnownTypes.FieldMask>.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.WellKnownTypes.FieldMask
    name: FieldMask
    nameWithType: FieldMask
    fullName: Google.Protobuf.WellKnownTypes.FieldMask
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of FieldMask).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Google.Protobuf.WellKnownTypes.FieldMask).MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.WellKnownTypes.FieldMask
    name: FieldMask
    nameWithType: FieldMask
    fullName: Google.Protobuf.WellKnownTypes.FieldMask
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
- uid: Google.Protobuf.WellKnownTypes.FieldMask.ToDiagnosticString*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.ToDiagnosticString
  name: ToDiagnosticString
  nameWithType: FieldMask.ToDiagnosticString
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.ToDiagnosticString
- uid: Google.Protobuf.ICustomDiagnosticMessage.ToDiagnosticString
  commentId: M:Google.Protobuf.ICustomDiagnosticMessage.ToDiagnosticString
  parent: Google.Protobuf.ICustomDiagnosticMessage
  name: ToDiagnosticString()
  nameWithType: ICustomDiagnosticMessage.ToDiagnosticString()
  fullName: Google.Protobuf.ICustomDiagnosticMessage.ToDiagnosticString()
  spec.csharp:
  - uid: Google.Protobuf.ICustomDiagnosticMessage.ToDiagnosticString
    name: ToDiagnosticString
    nameWithType: ICustomDiagnosticMessage.ToDiagnosticString
    fullName: Google.Protobuf.ICustomDiagnosticMessage.ToDiagnosticString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.ICustomDiagnosticMessage.ToDiagnosticString
    name: ToDiagnosticString
    nameWithType: ICustomDiagnosticMessage.ToDiagnosticString
    fullName: Google.Protobuf.ICustomDiagnosticMessage.ToDiagnosticString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.WellKnownTypes.FieldMask.FromString*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.FromString
  name: FromString
  nameWithType: FieldMask.FromString
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.FromString
- uid: Google.Protobuf.WellKnownTypes.FieldMask.FromStringEnumerable*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.FromStringEnumerable
  name: FromStringEnumerable
  nameWithType: FieldMask.FromStringEnumerable
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.FromStringEnumerable
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers
  name: FromFieldNumbers
  nameWithType: FieldMask.FromFieldNumbers
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.FromFieldNumbers
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.WellKnownTypes.FieldMask.IsValid*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.IsValid
  name: IsValid
  nameWithType: FieldMask.IsValid
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.IsValid
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Normalize*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.Normalize
  name: Normalize
  nameWithType: FieldMask.Normalize
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Normalize
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Union*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.Union
  name: Union
  nameWithType: FieldMask.Union
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Union
- uid: Google.Protobuf.WellKnownTypes.FieldMask[]
  isExternal: true
  name: FieldMask[]
  nameWithType: FieldMask[]
  fullName: Google.Protobuf.WellKnownTypes.FieldMask[]
  nameWithType.vb: FieldMask()
  fullName.vb: Google.Protobuf.WellKnownTypes.FieldMask()
  name.vb: FieldMask()
  spec.csharp:
  - uid: Google.Protobuf.WellKnownTypes.FieldMask
    name: FieldMask
    nameWithType: FieldMask
    fullName: Google.Protobuf.WellKnownTypes.FieldMask
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Google.Protobuf.WellKnownTypes.FieldMask
    name: FieldMask
    nameWithType: FieldMask
    fullName: Google.Protobuf.WellKnownTypes.FieldMask
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Intersection*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.Intersection
  name: Intersection
  nameWithType: FieldMask.Intersection
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Intersection
- uid: Google.Protobuf.WellKnownTypes.FieldMask.Merge*
  commentId: Overload:Google.Protobuf.WellKnownTypes.FieldMask.Merge
  name: Merge
  nameWithType: FieldMask.Merge
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.Merge
- uid: Google.Protobuf.WellKnownTypes.FieldMask.MergeOptions
  commentId: T:Google.Protobuf.WellKnownTypes.FieldMask.MergeOptions
  parent: Google.Protobuf.WellKnownTypes
  name: FieldMask.MergeOptions
  nameWithType: FieldMask.MergeOptions
  fullName: Google.Protobuf.WellKnownTypes.FieldMask.MergeOptions
