### YamlMime:ManagedReference
items:
- uid: Google.Protobuf.Reflection.DescriptorDeclaration
  commentId: T:Google.Protobuf.Reflection.DescriptorDeclaration
  id: DescriptorDeclaration
  parent: Google.Protobuf.Reflection
  children:
  - Google.Protobuf.Reflection.DescriptorDeclaration.Descriptor
  - Google.Protobuf.Reflection.DescriptorDeclaration.EndColumn
  - Google.Protobuf.Reflection.DescriptorDeclaration.EndLine
  - Google.Protobuf.Reflection.DescriptorDeclaration.LeadingComments
  - Google.Protobuf.Reflection.DescriptorDeclaration.LeadingDetachedComments
  - Google.Protobuf.Reflection.DescriptorDeclaration.StartColumn
  - Google.Protobuf.Reflection.DescriptorDeclaration.StartLine
  - Google.Protobuf.Reflection.DescriptorDeclaration.TrailingComments
  langs:
  - csharp
  - vb
  name: DescriptorDeclaration
  nameWithType: DescriptorDeclaration
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration
  type: Class
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: DescriptorDeclaration
    path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
    startLine: 45
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nProvides additional information about the declaration of a descriptor,\nsuch as source location and comments.\n"
  example: []
  syntax:
    content: public sealed class DescriptorDeclaration
    content.vb: Public NotInheritable Class DescriptorDeclaration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.Descriptor
  commentId: P:Google.Protobuf.Reflection.DescriptorDeclaration.Descriptor
  id: Descriptor
  parent: Google.Protobuf.Reflection.DescriptorDeclaration
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: DescriptorDeclaration.Descriptor
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.Descriptor
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: Descriptor
    path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
    startLine: 50
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nThe descriptor this declaration relates to.\n"
  example: []
  syntax:
    content: public IDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.IDescriptor
    content.vb: Public ReadOnly Property Descriptor As IDescriptor
  overload: Google.Protobuf.Reflection.DescriptorDeclaration.Descriptor*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.StartLine
  commentId: P:Google.Protobuf.Reflection.DescriptorDeclaration.StartLine
  id: StartLine
  parent: Google.Protobuf.Reflection.DescriptorDeclaration
  langs:
  - csharp
  - vb
  name: StartLine
  nameWithType: DescriptorDeclaration.StartLine
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.StartLine
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: StartLine
    path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
    startLine: 55
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nThe start line of the declaration within the source file. This value is 1-based.\n"
  example: []
  syntax:
    content: public int StartLine { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property StartLine As Integer
  overload: Google.Protobuf.Reflection.DescriptorDeclaration.StartLine*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.StartColumn
  commentId: P:Google.Protobuf.Reflection.DescriptorDeclaration.StartColumn
  id: StartColumn
  parent: Google.Protobuf.Reflection.DescriptorDeclaration
  langs:
  - csharp
  - vb
  name: StartColumn
  nameWithType: DescriptorDeclaration.StartColumn
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.StartColumn
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: StartColumn
    path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
    startLine: 59
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nThe start column of the declaration within the source file. This value is 1-based.\n"
  example: []
  syntax:
    content: public int StartColumn { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property StartColumn As Integer
  overload: Google.Protobuf.Reflection.DescriptorDeclaration.StartColumn*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.EndLine
  commentId: P:Google.Protobuf.Reflection.DescriptorDeclaration.EndLine
  id: EndLine
  parent: Google.Protobuf.Reflection.DescriptorDeclaration
  langs:
  - csharp
  - vb
  name: EndLine
  nameWithType: DescriptorDeclaration.EndLine
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.EndLine
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: EndLine
    path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
    startLine: 64
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\n// The end line of the declaration within the source file. This value is 1-based.\n"
  example: []
  syntax:
    content: public int EndLine { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property EndLine As Integer
  overload: Google.Protobuf.Reflection.DescriptorDeclaration.EndLine*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.EndColumn
  commentId: P:Google.Protobuf.Reflection.DescriptorDeclaration.EndColumn
  id: EndColumn
  parent: Google.Protobuf.Reflection.DescriptorDeclaration
  langs:
  - csharp
  - vb
  name: EndColumn
  nameWithType: DescriptorDeclaration.EndColumn
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.EndColumn
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: EndColumn
    path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
    startLine: 69
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nThe end column of the declaration within the source file. This value is 1-based, and\nexclusive. (The final character of the declaration is on the column before this value.)\n"
  example: []
  syntax:
    content: public int EndColumn { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property EndColumn As Integer
  overload: Google.Protobuf.Reflection.DescriptorDeclaration.EndColumn*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.LeadingComments
  commentId: P:Google.Protobuf.Reflection.DescriptorDeclaration.LeadingComments
  id: LeadingComments
  parent: Google.Protobuf.Reflection.DescriptorDeclaration
  langs:
  - csharp
  - vb
  name: LeadingComments
  nameWithType: DescriptorDeclaration.LeadingComments
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.LeadingComments
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: LeadingComments
    path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
    startLine: 76
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nComments appearing before the declaration. Never null, but may be empty. Multi-line comments\nare represented as a newline-separated string. Leading whitespace and the comment marker (&quot;//&quot;)\nare removed from each line.\n"
  example: []
  syntax:
    content: public string LeadingComments { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property LeadingComments As String
  overload: Google.Protobuf.Reflection.DescriptorDeclaration.LeadingComments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.TrailingComments
  commentId: P:Google.Protobuf.Reflection.DescriptorDeclaration.TrailingComments
  id: TrailingComments
  parent: Google.Protobuf.Reflection.DescriptorDeclaration
  langs:
  - csharp
  - vb
  name: TrailingComments
  nameWithType: DescriptorDeclaration.TrailingComments
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.TrailingComments
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: TrailingComments
    path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
    startLine: 83
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nComments appearing after the declaration. Never null, but may be empty. Multi-line comments\nare represented as a newline-separated string. Leading whitespace and the comment marker (&quot;//&quot;)\nare removed from each line.\n"
  example: []
  syntax:
    content: public string TrailingComments { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TrailingComments As String
  overload: Google.Protobuf.Reflection.DescriptorDeclaration.TrailingComments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.LeadingDetachedComments
  commentId: P:Google.Protobuf.Reflection.DescriptorDeclaration.LeadingDetachedComments
  id: LeadingDetachedComments
  parent: Google.Protobuf.Reflection.DescriptorDeclaration
  langs:
  - csharp
  - vb
  name: LeadingDetachedComments
  nameWithType: DescriptorDeclaration.LeadingDetachedComments
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.LeadingDetachedComments
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
      branch: 3.11.x
      repo: https://github.com/google/protobuf
    id: LeadingDetachedComments
    path: csharp/src/Google.Protobuf/Reflection/DescriptorDeclaration.cs
    startLine: 91
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nComments appearing before the declaration, but separated from it by blank\nlines. Each string represents a newline-separated paragraph of comments.\nLeading whitespace and the comment marker (&quot;//&quot;) are removed from each line.\nThe list is never null, but may be empty. Likewise each element is never null, but may be empty.\n"
  example: []
  syntax:
    content: public IReadOnlyList<string> LeadingDetachedComments { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.String}
    content.vb: Public ReadOnly Property LeadingDetachedComments As IReadOnlyList(Of String)
  overload: Google.Protobuf.Reflection.DescriptorDeclaration.LeadingDetachedComments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.Descriptor*
  commentId: Overload:Google.Protobuf.Reflection.DescriptorDeclaration.Descriptor
  name: Descriptor
  nameWithType: DescriptorDeclaration.Descriptor
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.Descriptor
- uid: Google.Protobuf.Reflection.IDescriptor
  commentId: T:Google.Protobuf.Reflection.IDescriptor
  parent: Google.Protobuf.Reflection
  name: IDescriptor
  nameWithType: IDescriptor
  fullName: Google.Protobuf.Reflection.IDescriptor
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.StartLine*
  commentId: Overload:Google.Protobuf.Reflection.DescriptorDeclaration.StartLine
  name: StartLine
  nameWithType: DescriptorDeclaration.StartLine
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.StartLine
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.StartColumn*
  commentId: Overload:Google.Protobuf.Reflection.DescriptorDeclaration.StartColumn
  name: StartColumn
  nameWithType: DescriptorDeclaration.StartColumn
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.StartColumn
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.EndLine*
  commentId: Overload:Google.Protobuf.Reflection.DescriptorDeclaration.EndLine
  name: EndLine
  nameWithType: DescriptorDeclaration.EndLine
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.EndLine
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.EndColumn*
  commentId: Overload:Google.Protobuf.Reflection.DescriptorDeclaration.EndColumn
  name: EndColumn
  nameWithType: DescriptorDeclaration.EndColumn
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.EndColumn
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.LeadingComments*
  commentId: Overload:Google.Protobuf.Reflection.DescriptorDeclaration.LeadingComments
  name: LeadingComments
  nameWithType: DescriptorDeclaration.LeadingComments
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.LeadingComments
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.TrailingComments*
  commentId: Overload:Google.Protobuf.Reflection.DescriptorDeclaration.TrailingComments
  name: TrailingComments
  nameWithType: DescriptorDeclaration.TrailingComments
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.TrailingComments
- uid: Google.Protobuf.Reflection.DescriptorDeclaration.LeadingDetachedComments*
  commentId: Overload:Google.Protobuf.Reflection.DescriptorDeclaration.LeadingDetachedComments
  name: LeadingDetachedComments
  nameWithType: DescriptorDeclaration.LeadingDetachedComments
  fullName: Google.Protobuf.Reflection.DescriptorDeclaration.LeadingDetachedComments
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<String>
  nameWithType: IReadOnlyList<String>
  fullName: System.Collections.Generic.IReadOnlyList<System.String>
  nameWithType.vb: IReadOnlyList(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
