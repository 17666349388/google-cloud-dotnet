### YamlMime:ManagedReference
items:
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  id: RepeatedField`1
  parent: Google.Protobuf.Collections
  children:
  - Google.Protobuf.Collections.RepeatedField`1.Add(`0)
  - Google.Protobuf.Collections.RepeatedField`1.Add(System.Collections.Generic.IEnumerable{`0})
  - Google.Protobuf.Collections.RepeatedField`1.AddEntriesFrom(Google.Protobuf.CodedInputStream,Google.Protobuf.FieldCodec{`0})
  - Google.Protobuf.Collections.RepeatedField`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  - Google.Protobuf.Collections.RepeatedField`1.CalculateSize(Google.Protobuf.FieldCodec{`0})
  - Google.Protobuf.Collections.RepeatedField`1.Clear
  - Google.Protobuf.Collections.RepeatedField`1.Clone
  - Google.Protobuf.Collections.RepeatedField`1.Contains(`0)
  - Google.Protobuf.Collections.RepeatedField`1.CopyTo(`0[],System.Int32)
  - Google.Protobuf.Collections.RepeatedField`1.Count
  - Google.Protobuf.Collections.RepeatedField`1.Equals(Google.Protobuf.Collections.RepeatedField{`0})
  - Google.Protobuf.Collections.RepeatedField`1.Equals(System.Object)
  - Google.Protobuf.Collections.RepeatedField`1.GetEnumerator
  - Google.Protobuf.Collections.RepeatedField`1.GetHashCode
  - Google.Protobuf.Collections.RepeatedField`1.IndexOf(`0)
  - Google.Protobuf.Collections.RepeatedField`1.Insert(System.Int32,`0)
  - Google.Protobuf.Collections.RepeatedField`1.IsReadOnly
  - Google.Protobuf.Collections.RepeatedField`1.Item(System.Int32)
  - Google.Protobuf.Collections.RepeatedField`1.Remove(`0)
  - Google.Protobuf.Collections.RepeatedField`1.RemoveAt(System.Int32)
  - Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#IsSynchronized
  - Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#SyncRoot
  - Google.Protobuf.Collections.RepeatedField`1.System#Collections#IEnumerable#GetEnumerator
  - Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Add(System.Object)
  - Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Contains(System.Object)
  - Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#IndexOf(System.Object)
  - Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#IsFixedSize
  - Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Item(System.Int32)
  - Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Remove(System.Object)
  - Google.Protobuf.Collections.RepeatedField`1.ToString
  - Google.Protobuf.Collections.RepeatedField`1.WriteTo(Google.Protobuf.CodedOutputStream,Google.Protobuf.FieldCodec{`0})
  langs:
  - csharp
  - vb
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  type: Class
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: RepeatedField
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 48
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nThe contents of a repeated field: essentially, a collection with some extra\nrestrictions (no null values) and capabilities (deep cloning).\n"
  remarks: "\nThis implementation does not generally prohibit the use of types which are not\nsupported by Protocol Buffers but nor does it guarantee that all operations will work in such cases.\n"
  example: []
  syntax:
    content: 'public sealed class RepeatedField<T> : IList<T>, ICollection<T>, IList, ICollection, IDeepCloneable<RepeatedField<T>>, IEquatable<RepeatedField<T>>, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable'
    typeParameters:
    - id: T
      description: The element type of the repeated field.
    content.vb: >-
      Public NotInheritable Class RepeatedField(Of T)
          Implements IList(Of T), ICollection(Of T), IList, ICollection, IDeepCloneable(Of RepeatedField(Of T)), IEquatable(Of RepeatedField(Of T)), IReadOnlyList(Of T), IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IList{{T}}
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.IList
  - System.Collections.ICollection
  - Google.Protobuf.IDeepCloneable{Google.Protobuf.Collections.RepeatedField`1}
  - System.IEquatable{Google.Protobuf.Collections.RepeatedField`1}
  - System.Collections.Generic.IReadOnlyList{{T}}
  - System.Collections.Generic.IReadOnlyCollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: RepeatedField(Of T)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
- uid: Google.Protobuf.Collections.RepeatedField`1.Clone
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.Clone
  id: Clone
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: RepeatedField<T>.Clone()
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Clone()
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: Clone
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 70
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nCreates a deep clone of this repeated field.\n"
  remarks: "\nIf the field type is\na message type, each element is also cloned; otherwise, it is\nassumed that the field type is primitive (including string and\nbytes, both of which are immutable) and so a simple copy is\nequivalent to a deep clone.\n"
  example: []
  syntax:
    content: public RepeatedField<T> Clone()
    return:
      type: Google.Protobuf.Collections.RepeatedField`1
      description: A deep clone of this repeated field.
    content.vb: Public Function Clone As RepeatedField(Of T)
  overload: Google.Protobuf.Collections.RepeatedField`1.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Google.Protobuf.Collections.RepeatedField`1}.Clone
  nameWithType.vb: RepeatedField(Of T).Clone()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Clone()
- uid: Google.Protobuf.Collections.RepeatedField`1.AddEntriesFrom(Google.Protobuf.CodedInputStream,Google.Protobuf.FieldCodec{`0})
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.AddEntriesFrom(Google.Protobuf.CodedInputStream,Google.Protobuf.FieldCodec{`0})
  id: AddEntriesFrom(Google.Protobuf.CodedInputStream,Google.Protobuf.FieldCodec{`0})
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: AddEntriesFrom(CodedInputStream, FieldCodec<T>)
  nameWithType: RepeatedField<T>.AddEntriesFrom(CodedInputStream, FieldCodec<T>)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.AddEntriesFrom(Google.Protobuf.CodedInputStream, Google.Protobuf.FieldCodec<T>)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: AddEntriesFrom
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 94
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nAdds the entries from the given input stream, decoding them with the specified codec.\n"
  example: []
  syntax:
    content: public void AddEntriesFrom(CodedInputStream input, FieldCodec<T> codec)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
      description: The input stream to read from.
    - id: codec
      type: Google.Protobuf.FieldCodec{{T}}
      description: The codec to use in order to read each entry.
    content.vb: Public Sub AddEntriesFrom(input As CodedInputStream, codec As FieldCodec(Of T))
  overload: Google.Protobuf.Collections.RepeatedField`1.AddEntriesFrom*
  nameWithType.vb: RepeatedField(Of T).AddEntriesFrom(CodedInputStream, FieldCodec(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).AddEntriesFrom(Google.Protobuf.CodedInputStream, Google.Protobuf.FieldCodec(Of T))
  name.vb: AddEntriesFrom(CodedInputStream, FieldCodec(Of T))
- uid: Google.Protobuf.Collections.RepeatedField`1.CalculateSize(Google.Protobuf.FieldCodec{`0})
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.CalculateSize(Google.Protobuf.FieldCodec{`0})
  id: CalculateSize(Google.Protobuf.FieldCodec{`0})
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: CalculateSize(FieldCodec<T>)
  nameWithType: RepeatedField<T>.CalculateSize(FieldCodec<T>)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.CalculateSize(Google.Protobuf.FieldCodec<T>)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: CalculateSize
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 131
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nCalculates the size of this collection based on the given codec.\n"
  example: []
  syntax:
    content: public int CalculateSize(FieldCodec<T> codec)
    parameters:
    - id: codec
      type: Google.Protobuf.FieldCodec{{T}}
      description: The codec to use when encoding each field.
    return:
      type: System.Int32
      description: >-
        The number of bytes that would be written to a <xref href="Google.Protobuf.CodedOutputStream" data-throw-if-not-resolved="false"></xref> by <xref href="Google.Protobuf.Collections.RepeatedField%601.WriteTo(Google.Protobuf.CodedOutputStream%2cGoogle.Protobuf.FieldCodec%7b%600%7d)" data-throw-if-not-resolved="false"></xref>,

        using the same codec.
    content.vb: Public Function CalculateSize(codec As FieldCodec(Of T)) As Integer
  overload: Google.Protobuf.Collections.RepeatedField`1.CalculateSize*
  nameWithType.vb: RepeatedField(Of T).CalculateSize(FieldCodec(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).CalculateSize(Google.Protobuf.FieldCodec(Of T))
  name.vb: CalculateSize(FieldCodec(Of T))
- uid: Google.Protobuf.Collections.RepeatedField`1.WriteTo(Google.Protobuf.CodedOutputStream,Google.Protobuf.FieldCodec{`0})
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.WriteTo(Google.Protobuf.CodedOutputStream,Google.Protobuf.FieldCodec{`0})
  id: WriteTo(Google.Protobuf.CodedOutputStream,Google.Protobuf.FieldCodec{`0})
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream, FieldCodec<T>)
  nameWithType: RepeatedField<T>.WriteTo(CodedOutputStream, FieldCodec<T>)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.WriteTo(Google.Protobuf.CodedOutputStream, Google.Protobuf.FieldCodec<T>)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: WriteTo
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 182
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nWrites the contents of this collection to the given <xref href=\"Google.Protobuf.CodedOutputStream\" data-throw-if-not-resolved=\"false\"></xref>,\nencoding each value using the specified codec.\n"
  example: []
  syntax:
    content: public void WriteTo(CodedOutputStream output, FieldCodec<T> codec)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
      description: The output stream to write to.
    - id: codec
      type: Google.Protobuf.FieldCodec{{T}}
      description: The codec to use when encoding each value.
    content.vb: Public Sub WriteTo(output As CodedOutputStream, codec As FieldCodec(Of T))
  overload: Google.Protobuf.Collections.RepeatedField`1.WriteTo*
  nameWithType.vb: RepeatedField(Of T).WriteTo(CodedOutputStream, FieldCodec(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).WriteTo(Google.Protobuf.CodedOutputStream, Google.Protobuf.FieldCodec(Of T))
  name.vb: WriteTo(CodedOutputStream, FieldCodec(Of T))
- uid: Google.Protobuf.Collections.RepeatedField`1.Add(`0)
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.Add(`0)
  id: Add(`0)
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: RepeatedField<T>.Add(T)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Add(T)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: Add
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 229
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nAdds the specified item to the collection.\n"
  example: []
  syntax:
    content: public void Add(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The item to add.
    content.vb: Public Sub Add(item As T)
  overload: Google.Protobuf.Collections.RepeatedField`1.Add*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Add({T})
  nameWithType.vb: RepeatedField(Of T).Add(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Add(T)
- uid: Google.Protobuf.Collections.RepeatedField`1.Clear
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.Clear
  id: Clear
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: RepeatedField<T>.Clear()
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Clear()
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: Clear
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 239
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nRemoves all items from the collection.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Google.Protobuf.Collections.RepeatedField`1.Clear*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Clear
  - System.Collections.IList.Clear
  nameWithType.vb: RepeatedField(Of T).Clear()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Clear()
- uid: Google.Protobuf.Collections.RepeatedField`1.Contains(`0)
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.Contains(`0)
  id: Contains(`0)
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: RepeatedField<T>.Contains(T)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Contains(T)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: Contains
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 250
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nDetermines whether this collection contains the given item.\n"
  example: []
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The item to find.
    return:
      type: System.Boolean
      description: <code>true</code> if this collection contains the given item; <code>false</code> otherwise.
    content.vb: Public Function Contains(item As T) As Boolean
  overload: Google.Protobuf.Collections.RepeatedField`1.Contains*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Contains({T})
  nameWithType.vb: RepeatedField(Of T).Contains(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Contains(T)
- uid: Google.Protobuf.Collections.RepeatedField`1.CopyTo(`0[],System.Int32)
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], Int32)
  nameWithType: RepeatedField<T>.CopyTo(T[], Int32)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.CopyTo(T[], System.Int32)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: CopyTo
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 260
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nCopies this collection to the given array.\n"
  example: []
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{T}[]'
      description: The array to copy to.
    - id: arrayIndex
      type: System.Int32
      description: The first index of the array to copy to.
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
  overload: Google.Protobuf.Collections.RepeatedField`1.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  nameWithType.vb: RepeatedField(Of T).CopyTo(T(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
- uid: Google.Protobuf.Collections.RepeatedField`1.Remove(`0)
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.Remove(`0)
  id: Remove(`0)
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: RepeatedField<T>.Remove(T)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Remove(T)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: Remove
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 270
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nRemoves the specified item from the collection\n"
  example: []
  syntax:
    content: public bool Remove(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The item to remove.
    return:
      type: System.Boolean
      description: <code>true</code> if the item was found and removed; <code>false</code> otherwise.
    content.vb: Public Function Remove(item As T) As Boolean
  overload: Google.Protobuf.Collections.RepeatedField`1.Remove*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Remove({T})
  nameWithType.vb: RepeatedField(Of T).Remove(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Remove(T)
- uid: Google.Protobuf.Collections.RepeatedField`1.Count
  commentId: P:Google.Protobuf.Collections.RepeatedField`1.Count
  id: Count
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: RepeatedField<T>.Count
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Count
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: Count
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 286
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nGets the number of elements contained in the collection.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Google.Protobuf.Collections.RepeatedField`1.Count*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Count
  - System.Collections.ICollection.Count
  - System.Collections.Generic.IReadOnlyCollection{{T}}.Count
  nameWithType.vb: RepeatedField(Of T).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Count
- uid: Google.Protobuf.Collections.RepeatedField`1.IsReadOnly
  commentId: P:Google.Protobuf.Collections.RepeatedField`1.IsReadOnly
  id: IsReadOnly
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: RepeatedField<T>.IsReadOnly
  fullName: Google.Protobuf.Collections.RepeatedField<T>.IsReadOnly
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: IsReadOnly
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 291
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nGets a value indicating whether the collection is read-only.\n"
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: Google.Protobuf.Collections.RepeatedField`1.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{{T}}.IsReadOnly
  - System.Collections.IList.IsReadOnly
  nameWithType.vb: RepeatedField(Of T).IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).IsReadOnly
- uid: Google.Protobuf.Collections.RepeatedField`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  id: AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: AddRange(IEnumerable<T>)
  nameWithType: RepeatedField<T>.AddRange(IEnumerable<T>)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: AddRange
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 297
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nAdds all of the specified values into this collection.\n"
  example: []
  syntax:
    content: public void AddRange(IEnumerable<T> values)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The values to add to this collection.
    content.vb: Public Sub AddRange(values As IEnumerable(Of T))
  overload: Google.Protobuf.Collections.RepeatedField`1.AddRange*
  nameWithType.vb: RepeatedField(Of T).AddRange(IEnumerable(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
- uid: Google.Protobuf.Collections.RepeatedField`1.Add(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.Add(System.Collections.Generic.IEnumerable{`0})
  id: Add(System.Collections.Generic.IEnumerable{`0})
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<T>)
  nameWithType: RepeatedField<T>.Add(IEnumerable<T>)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Add(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: Add
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 359
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nAdds all of the specified values into this collection. This method is present to\nallow repeated fields to be constructed from queries within collection initializers.\nWithin non-collection-initializer code, consider using the equivalent <xref href=\"Google.Protobuf.Collections.RepeatedField%601.AddRange(System.Collections.Generic.IEnumerable%7b%600%7d)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod instead for clarity.\n"
  example: []
  syntax:
    content: public void Add(IEnumerable<T> values)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The values to add to this collection.
    content.vb: Public Sub Add(values As IEnumerable(Of T))
  overload: Google.Protobuf.Collections.RepeatedField`1.Add*
  nameWithType.vb: RepeatedField(Of T).Add(IEnumerable(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Add(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Add(IEnumerable(Of T))
- uid: Google.Protobuf.Collections.RepeatedField`1.GetEnumerator
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.GetEnumerator
  id: GetEnumerator
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: RepeatedField<T>.GetEnumerator()
  fullName: Google.Protobuf.Collections.RepeatedField<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: GetEnumerator
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 370
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nReturns an enumerator that iterates through the collection.\n"
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: "\nAn enumerator that can be used to iterate through the collection.\n"
    content.vb: Public Function GetEnumerator As IEnumerator(Of T)
  overload: Google.Protobuf.Collections.RepeatedField`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: RepeatedField(Of T).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).GetEnumerator()
- uid: Google.Protobuf.Collections.RepeatedField`1.Equals(System.Object)
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: RepeatedField<T>.Equals(Object)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Equals(System.Object)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: Equals
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 385
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>, is equal to this instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with this instance.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to this instance; otherwise, <code>false</code>.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Google.Protobuf.Collections.RepeatedField`1.Equals*
  nameWithType.vb: RepeatedField(Of T).Equals(Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Equals(System.Object)
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: RepeatedField<T>.IEnumerable.GetEnumerator()
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: System.Collections.IEnumerable.GetEnumerator
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 396
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nReturns an enumerator that iterates through a collection.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: "\nAn <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to iterate through the collection.\n"
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: RepeatedField(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Google.Protobuf.Collections.RepeatedField`1.GetHashCode
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.GetHashCode
  id: GetHashCode
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: RepeatedField<T>.GetHashCode()
  fullName: Google.Protobuf.Collections.RepeatedField<T>.GetHashCode()
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: GetHashCode
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 407
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nReturns a hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nA hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. \n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Protobuf.Collections.RepeatedField`1.GetHashCode*
  nameWithType.vb: RepeatedField(Of T).GetHashCode()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).GetHashCode()
- uid: Google.Protobuf.Collections.RepeatedField`1.Equals(Google.Protobuf.Collections.RepeatedField{`0})
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.Equals(Google.Protobuf.Collections.RepeatedField{`0})
  id: Equals(Google.Protobuf.Collections.RepeatedField{`0})
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: Equals(RepeatedField<T>)
  nameWithType: RepeatedField<T>.Equals(RepeatedField<T>)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Equals(Google.Protobuf.Collections.RepeatedField<T>)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: Equals
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 422
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nCompares this repeated field with another for equality.\n"
  example: []
  syntax:
    content: public bool Equals(RepeatedField<T> other)
    parameters:
    - id: other
      type: Google.Protobuf.Collections.RepeatedField`1
      description: The repeated field to compare this with.
    return:
      type: System.Boolean
      description: <code>true</code> if <code data-dev-comment-type="paramref" class="paramref">other</code> refers to an equal repeated field; <code>false</code> otherwise.
    content.vb: Public Function Equals(other As RepeatedField(Of T)) As Boolean
  overload: Google.Protobuf.Collections.RepeatedField`1.Equals*
  implements:
  - System.IEquatable{Google.Protobuf.Collections.RepeatedField`1}.Equals(Google.Protobuf.Collections.RepeatedField{{T}})
  nameWithType.vb: RepeatedField(Of T).Equals(RepeatedField(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Equals(Google.Protobuf.Collections.RepeatedField(Of T))
  name.vb: Equals(RepeatedField(Of T))
- uid: Google.Protobuf.Collections.RepeatedField`1.IndexOf(`0)
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: IndexOf(T)
  nameWithType: RepeatedField<T>.IndexOf(T)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.IndexOf(T)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: IndexOf
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 453
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nReturns the index of the given item within the collection, or -1 if the item is not\npresent.\n"
  example: []
  syntax:
    content: public int IndexOf(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The item to find in the collection.
    return:
      type: System.Int32
      description: The zero-based index of the item, or -1 if it is not found.
    content.vb: Public Function IndexOf(item As T) As Integer
  overload: Google.Protobuf.Collections.RepeatedField`1.IndexOf*
  implements:
  - System.Collections.Generic.IList{{T}}.IndexOf({T})
  nameWithType.vb: RepeatedField(Of T).IndexOf(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).IndexOf(T)
- uid: Google.Protobuf.Collections.RepeatedField`1.Insert(System.Int32,`0)
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: Insert(Int32, T)
  nameWithType: RepeatedField<T>.Insert(Int32, T)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Insert(System.Int32, T)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: Insert
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 472
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nInserts the given item at the specified index.\n"
  example: []
  syntax:
    content: public void Insert(int index, T item)
    parameters:
    - id: index
      type: System.Int32
      description: The index at which to insert the item.
    - id: item
      type: '{T}'
      description: The item to insert.
    content.vb: Public Sub Insert(index As Integer, item As T)
  overload: Google.Protobuf.Collections.RepeatedField`1.Insert*
  implements:
  - System.Collections.Generic.IList{{T}}.Insert(System.Int32,{T})
  nameWithType.vb: RepeatedField(Of T).Insert(Int32, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Insert(System.Int32, T)
- uid: Google.Protobuf.Collections.RepeatedField`1.RemoveAt(System.Int32)
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: RepeatedField<T>.RemoveAt(Int32)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: RemoveAt
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 489
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nRemoves the item at the given index.\n"
  example: []
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the item to remove.
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: Google.Protobuf.Collections.RepeatedField`1.RemoveAt*
  implements:
  - System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  - System.Collections.IList.RemoveAt(System.Int32)
  nameWithType.vb: RepeatedField(Of T).RemoveAt(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).RemoveAt(System.Int32)
- uid: Google.Protobuf.Collections.RepeatedField`1.ToString
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.ToString
  id: ToString
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RepeatedField<T>.ToString()
  fullName: Google.Protobuf.Collections.RepeatedField<T>.ToString()
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: ToString
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 504
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nReturns a string representation of this repeated field, in the same\nway as it would be represented by the default JSON formatter.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Protobuf.Collections.RepeatedField`1.ToString*
  nameWithType.vb: RepeatedField(Of T).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).ToString()
- uid: Google.Protobuf.Collections.RepeatedField`1.Item(System.Int32)
  commentId: P:Google.Protobuf.Collections.RepeatedField`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: RepeatedField<T>.Item[Int32]
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Item[System.Int32]
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: this[]
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 519
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nGets or sets the item at the specified index.\n"
  example: []
  syntax:
    content: public T this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: '{T}'
      description: "\nThe element at the specified index.\n"
    content.vb: Public Property Item(index As Integer) As T
  overload: Google.Protobuf.Collections.RepeatedField`1.Item*
  implements:
  - System.Collections.Generic.IList{{T}}.Item(System.Int32)
  - System.Collections.Generic.IReadOnlyList{{T}}.Item(System.Int32)
  nameWithType.vb: RepeatedField(Of T).Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Item(System.Int32)
  name.vb: Item(Int32)
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#IsFixedSize
  commentId: P:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: IList.IsFixedSize
  nameWithType: RepeatedField<T>.IList.IsFixedSize
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IList.IsFixedSize
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: System.Collections.IList.IsFixedSize
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 541
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  syntax:
    content: bool IList.IsFixedSize { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsFixedSize As Boolean Implements IList.IsFixedSize
  overload: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#IsFixedSize*
  implements:
  - System.Collections.IList.IsFixedSize
  nameWithType.vb: RepeatedField(Of T).System.Collections.IList.IsFixedSize
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: RepeatedField<T>.ICollection.CopyTo(Array, Int32)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: System.Collections.ICollection.CopyTo
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 543
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
  overload: Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#CopyTo*
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  nameWithType.vb: RepeatedField(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#IsSynchronized
  commentId: P:Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  nameWithType: RepeatedField<T>.ICollection.IsSynchronized
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: System.Collections.ICollection.IsSynchronized
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 548
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
  overload: Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#IsSynchronized*
  implements:
  - System.Collections.ICollection.IsSynchronized
  nameWithType.vb: RepeatedField(Of T).System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#SyncRoot
  commentId: P:Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  nameWithType: RepeatedField<T>.ICollection.SyncRoot
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: System.Collections.ICollection.SyncRoot
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 550
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  syntax:
    content: object ICollection.SyncRoot { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
  overload: Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#SyncRoot*
  implements:
  - System.Collections.ICollection.SyncRoot
  nameWithType.vb: RepeatedField(Of T).System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Item(System.Int32)
  commentId: P:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: IList.Item[Int32]
  nameWithType: RepeatedField<T>.IList.Item[Int32]
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IList.Item[System.Int32]
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: System.Collections.IList.this[]
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 552
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  syntax:
    content: object IList.this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.Item(index As Integer) As Object Implements IList.this
  overload: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Item*
  implements:
  - System.Collections.IList.Item(System.Int32)
  nameWithType.vb: RepeatedField(Of T).System.Collections.IList.Item(Int32)
  modifiers.csharp:
  - get
  - set
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Add(System.Object)
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: IList.Add(Object)
  nameWithType: RepeatedField<T>.IList.Add(Object)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IList.Add(System.Object)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: System.Collections.IList.Add
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 558
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  syntax:
    content: int IList.Add(object value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
    content.vb: Function System.Collections.IList.Add(value As Object) As Integer Implements IList.Add
  overload: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Add*
  implements:
  - System.Collections.IList.Add(System.Object)
  nameWithType.vb: RepeatedField(Of T).System.Collections.IList.Add(Object)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Contains(System.Object)
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: IList.Contains(Object)
  nameWithType: RepeatedField<T>.IList.Contains(Object)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IList.Contains(System.Object)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: System.Collections.IList.Contains
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 564
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  syntax:
    content: bool IList.Contains(object value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Function System.Collections.IList.Contains(value As Object) As Boolean Implements IList.Contains
  overload: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Contains*
  implements:
  - System.Collections.IList.Contains(System.Object)
  nameWithType.vb: RepeatedField(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: IList.IndexOf(Object)
  nameWithType: RepeatedField<T>.IList.IndexOf(Object)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IList.IndexOf(System.Object)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: System.Collections.IList.IndexOf
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 569
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  syntax:
    content: int IList.IndexOf(object value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
    content.vb: Function System.Collections.IList.IndexOf(value As Object) As Integer Implements IList.IndexOf
  overload: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#IndexOf*
  implements:
  - System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: RepeatedField(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: IList.Insert(Int32, Object)
  nameWithType: RepeatedField<T>.IList.Insert(Int32, Object)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: System.Collections.IList.Insert
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 578
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  syntax:
    content: void IList.Insert(int index, object value)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Object
    content.vb: Sub System.Collections.IList.Insert(index As Integer, value As Object) Implements IList.Insert
  overload: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Insert*
  implements:
  - System.Collections.IList.Insert(System.Int32,System.Object)
  nameWithType.vb: RepeatedField(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Remove(System.Object)
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: Google.Protobuf.Collections.RepeatedField`1
  langs:
  - csharp
  - vb
  name: IList.Remove(Object)
  nameWithType: RepeatedField<T>.IList.Remove(Object)
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IList.Remove(System.Object)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: System.Collections.IList.Remove
    path: csharp/src/Google.Protobuf/Collections/RepeatedField.cs
    startLine: 583
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  syntax:
    content: void IList.Remove(object value)
    parameters:
    - id: value
      type: System.Object
    content.vb: Sub System.Collections.IList.Remove(value As Object) Implements IList.Remove
  overload: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Remove*
  implements:
  - System.Collections.IList.Remove(System.Object)
  nameWithType.vb: RepeatedField(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
references:
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: false
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: Google.Protobuf.IDeepCloneable{Google.Protobuf.Collections.RepeatedField`1}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Protobuf.Collections.RepeatedField`1}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<RepeatedField<T>>
  nameWithType: IDeepCloneable<RepeatedField<T>>
  fullName: Google.Protobuf.IDeepCloneable<Google.Protobuf.Collections.RepeatedField<T>>
  nameWithType.vb: IDeepCloneable(Of RepeatedField(Of T))
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Protobuf.Collections.RepeatedField(Of T))
  name.vb: IDeepCloneable(Of RepeatedField(Of T))
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Protobuf.Collections.RepeatedField`1}
  commentId: T:System.IEquatable{Google.Protobuf.Collections.RepeatedField`1}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<RepeatedField<T>>
  nameWithType: IEquatable<RepeatedField<T>>
  fullName: System.IEquatable<Google.Protobuf.Collections.RepeatedField<T>>
  nameWithType.vb: IEquatable(Of RepeatedField(Of T))
  fullName.vb: System.IEquatable(Of Google.Protobuf.Collections.RepeatedField(Of T))
  name.vb: IEquatable(Of RepeatedField(Of T))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{{T}}
  commentId: T:System.Collections.Generic.IReadOnlyList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{{T}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: false
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: false
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.Clone*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.Clone
  isExternal: false
  name: Clone
  nameWithType: RepeatedField<T>.Clone
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Clone
  nameWithType.vb: RepeatedField(Of T).Clone
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Clone
- uid: Google.Protobuf.IDeepCloneable{Google.Protobuf.Collections.RepeatedField`1}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Google.Protobuf.Collections.RepeatedField`1}.Clone
  parent: Google.Protobuf.IDeepCloneable{Google.Protobuf.Collections.RepeatedField`1}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<RepeatedField<T>>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Google.Protobuf.Collections.RepeatedField<T>>.Clone()
  nameWithType.vb: IDeepCloneable(Of RepeatedField(Of T)).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Protobuf.Collections.RepeatedField(Of T)).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<RepeatedField<T>>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Google.Protobuf.Collections.RepeatedField<T>>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of RepeatedField(Of T)).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Google.Protobuf.Collections.RepeatedField(Of T)).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  parent: Google.Protobuf.Collections
  isExternal: false
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: false
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.AddEntriesFrom*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.AddEntriesFrom
  isExternal: false
  name: AddEntriesFrom
  nameWithType: RepeatedField<T>.AddEntriesFrom
  fullName: Google.Protobuf.Collections.RepeatedField<T>.AddEntriesFrom
  nameWithType.vb: RepeatedField(Of T).AddEntriesFrom
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).AddEntriesFrom
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: false
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
- uid: Google.Protobuf.FieldCodec{{T}}
  commentId: T:Google.Protobuf.FieldCodec{``0}
  parent: Google.Protobuf
  definition: Google.Protobuf.FieldCodec`1
  name: FieldCodec<T>
  nameWithType: FieldCodec<T>
  fullName: Google.Protobuf.FieldCodec<T>
  nameWithType.vb: FieldCodec(Of T)
  fullName.vb: Google.Protobuf.FieldCodec(Of T)
  name.vb: FieldCodec(Of T)
  spec.csharp:
  - uid: Google.Protobuf.FieldCodec`1
    name: FieldCodec
    nameWithType: FieldCodec
    fullName: Google.Protobuf.FieldCodec
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.FieldCodec`1
    name: FieldCodec
    nameWithType: FieldCodec
    fullName: Google.Protobuf.FieldCodec
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.FieldCodec`1
  commentId: T:Google.Protobuf.FieldCodec`1
  isExternal: false
  name: FieldCodec<T>
  nameWithType: FieldCodec<T>
  fullName: Google.Protobuf.FieldCodec<T>
  nameWithType.vb: FieldCodec(Of T)
  fullName.vb: Google.Protobuf.FieldCodec(Of T)
  name.vb: FieldCodec(Of T)
  spec.csharp:
  - uid: Google.Protobuf.FieldCodec`1
    name: FieldCodec
    nameWithType: FieldCodec
    fullName: Google.Protobuf.FieldCodec
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.FieldCodec`1
    name: FieldCodec
    nameWithType: FieldCodec
    fullName: Google.Protobuf.FieldCodec
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: false
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Google.Protobuf.Collections.RepeatedField`1.WriteTo(Google.Protobuf.CodedOutputStream,Google.Protobuf.FieldCodec{`0})
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.WriteTo(Google.Protobuf.CodedOutputStream,Google.Protobuf.FieldCodec{`0})
- uid: Google.Protobuf.Collections.RepeatedField`1.CalculateSize*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.CalculateSize
  isExternal: false
  name: CalculateSize
  nameWithType: RepeatedField<T>.CalculateSize
  fullName: Google.Protobuf.Collections.RepeatedField<T>.CalculateSize
  nameWithType.vb: RepeatedField(Of T).CalculateSize
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).CalculateSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Protobuf.Collections.RepeatedField`1.WriteTo*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.WriteTo
  isExternal: false
  name: WriteTo
  nameWithType: RepeatedField<T>.WriteTo
  fullName: Google.Protobuf.Collections.RepeatedField<T>.WriteTo
  nameWithType.vb: RepeatedField(Of T).WriteTo
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).WriteTo
- uid: Google.Protobuf.Collections.RepeatedField`1.Add*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.Add
  isExternal: false
  name: Add
  nameWithType: RepeatedField<T>.Add
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Add
  nameWithType.vb: RepeatedField(Of T).Add
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Add
- uid: System.Collections.Generic.ICollection{{T}}.Add({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Add(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Google.Protobuf.Collections.RepeatedField`1.Clear*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.Clear
  isExternal: false
  name: Clear
  nameWithType: RepeatedField<T>.Clear
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Clear
  nameWithType.vb: RepeatedField(Of T).Clear
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Clear
- uid: System.Collections.Generic.ICollection{{T}}.Clear
  commentId: M:System.Collections.Generic.ICollection{`0}.Clear
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList.Clear
  commentId: M:System.Collections.IList.Clear
  parent: System.Collections.IList
  isExternal: true
  name: Clear()
  nameWithType: IList.Clear()
  fullName: System.Collections.IList.Clear()
  spec.csharp:
  - uid: System.Collections.IList.Clear
    name: Clear
    nameWithType: IList.Clear
    fullName: System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Clear
    name: Clear
    nameWithType: IList.Clear
    fullName: System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.Contains*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.Contains
  isExternal: false
  name: Contains
  nameWithType: RepeatedField<T>.Contains
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Contains
  nameWithType.vb: RepeatedField(Of T).Contains
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Contains
- uid: System.Collections.Generic.ICollection{{T}}.Contains({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.CopyTo*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.CopyTo
  isExternal: false
  name: CopyTo
  nameWithType: RepeatedField<T>.CopyTo
  fullName: Google.Protobuf.Collections.RepeatedField<T>.CopyTo
  nameWithType.vb: RepeatedField(Of T).CopyTo
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).CopyTo
- uid: System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}[]'
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.Remove*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.Remove
  isExternal: false
  name: Remove
  nameWithType: RepeatedField<T>.Remove
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Remove
  nameWithType.vb: RepeatedField(Of T).Remove
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Remove
- uid: System.Collections.Generic.ICollection{{T}}.Remove({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.Count*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.Count
  isExternal: false
  name: Count
  nameWithType: RepeatedField<T>.Count
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Count
  nameWithType.vb: RepeatedField(Of T).Count
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Count
- uid: System.Collections.Generic.ICollection{{T}}.Count
  commentId: P:System.Collections.Generic.ICollection{`0}.Count
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.ICollection.Count
  commentId: P:System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: true
  name: Count
  nameWithType: ICollection.Count
  fullName: System.Collections.ICollection.Count
- uid: System.Collections.Generic.IReadOnlyCollection{{T}}.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{`0}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{{T}}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: true
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: Google.Protobuf.Collections.RepeatedField`1.IsReadOnly*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: RepeatedField<T>.IsReadOnly
  fullName: Google.Protobuf.Collections.RepeatedField<T>.IsReadOnly
  nameWithType.vb: RepeatedField(Of T).IsReadOnly
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection{{T}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{`0}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.IList.IsReadOnly
  commentId: P:System.Collections.IList.IsReadOnly
  parent: System.Collections.IList
  isExternal: true
  name: IsReadOnly
  nameWithType: IList.IsReadOnly
  fullName: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: Google.Protobuf.Collections.RepeatedField`1.AddRange*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.AddRange
  isExternal: false
  name: AddRange
  nameWithType: RepeatedField<T>.AddRange
  fullName: Google.Protobuf.Collections.RepeatedField<T>.AddRange
  nameWithType.vb: RepeatedField(Of T).AddRange
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).AddRange
- uid: Google.Protobuf.Collections.RepeatedField`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Google.Protobuf.Collections.RepeatedField`1.AddRange(System.Collections.Generic.IEnumerable{`0})
- uid: Google.Protobuf.Collections.RepeatedField`1.GetEnumerator*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: RepeatedField<T>.GetEnumerator
  fullName: Google.Protobuf.Collections.RepeatedField<T>.GetEnumerator
  nameWithType.vb: RepeatedField(Of T).GetEnumerator
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.Equals*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.Equals
  isExternal: false
  name: Equals
  nameWithType: RepeatedField<T>.Equals
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Equals
  nameWithType.vb: RepeatedField(Of T).Equals
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Equals
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: RepeatedField<T>.IEnumerable.GetEnumerator
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: RepeatedField(Of T).System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.GetHashCode*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: RepeatedField<T>.GetHashCode
  fullName: Google.Protobuf.Collections.RepeatedField<T>.GetHashCode
  nameWithType.vb: RepeatedField(Of T).GetHashCode
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).GetHashCode
- uid: System.IEquatable{Google.Protobuf.Collections.RepeatedField`1}.Equals(Google.Protobuf.Collections.RepeatedField{{T}})
  commentId: M:System.IEquatable{Google.Protobuf.Collections.RepeatedField`1}.Equals(Google.Protobuf.Collections.RepeatedField{`0})
  parent: System.IEquatable{Google.Protobuf.Collections.RepeatedField`1}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(RepeatedField<T>)
  nameWithType: IEquatable<RepeatedField<T>>.Equals(RepeatedField<T>)
  fullName: System.IEquatable<Google.Protobuf.Collections.RepeatedField<T>>.Equals(Google.Protobuf.Collections.RepeatedField<T>)
  nameWithType.vb: IEquatable(Of RepeatedField(Of T)).Equals(RepeatedField(Of T))
  fullName.vb: System.IEquatable(Of Google.Protobuf.Collections.RepeatedField(Of T)).Equals(Google.Protobuf.Collections.RepeatedField(Of T))
  name.vb: Equals(RepeatedField(Of T))
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<RepeatedField<T>>.Equals
    fullName: System.IEquatable<Google.Protobuf.Collections.RepeatedField<T>>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of RepeatedField(Of T)).Equals
    fullName: System.IEquatable(Of Google.Protobuf.Collections.RepeatedField(Of T)).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.IndexOf*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.IndexOf
  isExternal: false
  name: IndexOf
  nameWithType: RepeatedField<T>.IndexOf
  fullName: Google.Protobuf.Collections.RepeatedField<T>.IndexOf
  nameWithType.vb: RepeatedField(Of T).IndexOf
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).IndexOf
- uid: System.Collections.Generic.IList{{T}}.IndexOf({T})
  commentId: M:System.Collections.Generic.IList{`0}.IndexOf(`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.Insert*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.Insert
  isExternal: false
  name: Insert
  nameWithType: RepeatedField<T>.Insert
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Insert
  nameWithType.vb: RepeatedField(Of T).Insert
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Insert
- uid: System.Collections.Generic.IList{{T}}.Insert(System.Int32,{T})
  commentId: M:System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.RemoveAt*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.RemoveAt
  isExternal: false
  name: RemoveAt
  nameWithType: RepeatedField<T>.RemoveAt
  fullName: Google.Protobuf.Collections.RepeatedField<T>.RemoveAt
  nameWithType.vb: RepeatedField(Of T).RemoveAt
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).RemoveAt
- uid: System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList.RemoveAt(System.Int32)
  commentId: M:System.Collections.IList.RemoveAt(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList.RemoveAt(Int32)
  fullName: System.Collections.IList.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList.RemoveAt
    fullName: System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList.RemoveAt
    fullName: System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.ToString*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.ToString
  isExternal: false
  name: ToString
  nameWithType: RepeatedField<T>.ToString
  fullName: Google.Protobuf.Collections.RepeatedField<T>.ToString
  nameWithType.vb: RepeatedField(Of T).ToString
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Protobuf.Collections.RepeatedField`1.Item*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.Item
  isExternal: false
  name: Item
  nameWithType: RepeatedField<T>.Item
  fullName: Google.Protobuf.Collections.RepeatedField<T>.Item
  nameWithType.vb: RepeatedField(Of T).Item
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).Item
- uid: System.Collections.Generic.IList{{T}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{`0}.Item(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{{T}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IReadOnlyList{`0}.Item(System.Int32)
  parent: System.Collections.Generic.IReadOnlyList{{T}}
  definition: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IReadOnlyList<T>.Item[Int32]
  fullName: System.Collections.Generic.IReadOnlyList<T>.Item[System.Int32]
  nameWithType.vb: IReadOnlyList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: Item
    nameWithType: IReadOnlyList<T>.Item
    fullName: System.Collections.Generic.IReadOnlyList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: Item
    nameWithType: IReadOnlyList(Of T).Item
    fullName: System.Collections.Generic.IReadOnlyList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IReadOnlyList<T>.Item[Int32]
  fullName: System.Collections.Generic.IReadOnlyList<T>.Item[System.Int32]
  nameWithType.vb: IReadOnlyList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: Item
    nameWithType: IReadOnlyList<T>.Item
    fullName: System.Collections.Generic.IReadOnlyList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: Item
    nameWithType: IReadOnlyList(Of T).Item
    fullName: System.Collections.Generic.IReadOnlyList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#IsFixedSize*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#IsFixedSize
  isExternal: false
  name: IList.IsFixedSize
  nameWithType: RepeatedField<T>.IList.IsFixedSize
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: RepeatedField(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.IList.IsFixedSize
  commentId: P:System.Collections.IList.IsFixedSize
  parent: System.Collections.IList
  isExternal: true
  name: IsFixedSize
  nameWithType: IList.IsFixedSize
  fullName: System.Collections.IList.IsFixedSize
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#CopyTo*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#CopyTo
  isExternal: false
  name: ICollection.CopyTo
  nameWithType: RepeatedField<T>.ICollection.CopyTo
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.ICollection.CopyTo
  nameWithType.vb: RepeatedField(Of T).System.Collections.ICollection.CopyTo
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.ICollection.CopyTo
  name.vb: System.Collections.ICollection.CopyTo
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#IsSynchronized*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#IsSynchronized
  isExternal: false
  name: ICollection.IsSynchronized
  nameWithType: RepeatedField<T>.ICollection.IsSynchronized
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: RepeatedField(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: true
  name: IsSynchronized
  nameWithType: ICollection.IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#SyncRoot*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.System#Collections#ICollection#SyncRoot
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: RepeatedField<T>.ICollection.SyncRoot
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: RepeatedField(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: true
  name: SyncRoot
  nameWithType: ICollection.SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Item*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Item
  isExternal: false
  name: IList.Item
  nameWithType: RepeatedField<T>.IList.Item
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IList.Item
  nameWithType.vb: RepeatedField(Of T).System.Collections.IList.Item
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IList.Item
  name.vb: System.Collections.IList.Item
- uid: System.Collections.IList.Item(System.Int32)
  commentId: P:System.Collections.IList.Item(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: Item[Int32]
  nameWithType: IList.Item[Int32]
  fullName: System.Collections.IList.Item[System.Int32]
  nameWithType.vb: IList.Item(Int32)
  fullName.vb: System.Collections.IList.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.IList.Item(System.Int32)
    name: Item
    nameWithType: IList.Item
    fullName: System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.IList.Item(System.Int32)
    name: Item
    nameWithType: IList.Item
    fullName: System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Add*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Add
  isExternal: false
  name: IList.Add
  nameWithType: RepeatedField<T>.IList.Add
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IList.Add
  nameWithType.vb: RepeatedField(Of T).System.Collections.IList.Add
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IList.Add
  name.vb: System.Collections.IList.Add
- uid: System.Collections.IList.Add(System.Object)
  commentId: M:System.Collections.IList.Add(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Add(Object)
  nameWithType: IList.Add(Object)
  fullName: System.Collections.IList.Add(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Add(System.Object)
    name: Add
    nameWithType: IList.Add
    fullName: System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Add(System.Object)
    name: Add
    nameWithType: IList.Add
    fullName: System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Contains*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Contains
  isExternal: false
  name: IList.Contains
  nameWithType: RepeatedField<T>.IList.Contains
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IList.Contains
  nameWithType.vb: RepeatedField(Of T).System.Collections.IList.Contains
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IList.Contains
  name.vb: System.Collections.IList.Contains
- uid: System.Collections.IList.Contains(System.Object)
  commentId: M:System.Collections.IList.Contains(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Contains(Object)
  nameWithType: IList.Contains(Object)
  fullName: System.Collections.IList.Contains(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Contains(System.Object)
    name: Contains
    nameWithType: IList.Contains
    fullName: System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Contains(System.Object)
    name: Contains
    nameWithType: IList.Contains
    fullName: System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#IndexOf*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#IndexOf
  isExternal: false
  name: IList.IndexOf
  nameWithType: RepeatedField<T>.IList.IndexOf
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IList.IndexOf
  nameWithType.vb: RepeatedField(Of T).System.Collections.IList.IndexOf
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IList.IndexOf
  name.vb: System.Collections.IList.IndexOf
- uid: System.Collections.IList.IndexOf(System.Object)
  commentId: M:System.Collections.IList.IndexOf(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: IndexOf(Object)
  nameWithType: IList.IndexOf(Object)
  fullName: System.Collections.IList.IndexOf(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: IndexOf
    nameWithType: IList.IndexOf
    fullName: System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: IndexOf
    nameWithType: IList.IndexOf
    fullName: System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Insert*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Insert
  isExternal: false
  name: IList.Insert
  nameWithType: RepeatedField<T>.IList.Insert
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IList.Insert
  nameWithType.vb: RepeatedField(Of T).System.Collections.IList.Insert
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IList.Insert
  name.vb: System.Collections.IList.Insert
- uid: System.Collections.IList.Insert(System.Int32,System.Object)
  commentId: M:System.Collections.IList.Insert(System.Int32,System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Insert(Int32, Object)
  nameWithType: IList.Insert(Int32, Object)
  fullName: System.Collections.IList.Insert(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: Insert
    nameWithType: IList.Insert
    fullName: System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: Insert
    nameWithType: IList.Insert
    fullName: System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Remove*
  commentId: Overload:Google.Protobuf.Collections.RepeatedField`1.System#Collections#IList#Remove
  isExternal: false
  name: IList.Remove
  nameWithType: RepeatedField<T>.IList.Remove
  fullName: Google.Protobuf.Collections.RepeatedField<T>.System.Collections.IList.Remove
  nameWithType.vb: RepeatedField(Of T).System.Collections.IList.Remove
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T).System.Collections.IList.Remove
  name.vb: System.Collections.IList.Remove
- uid: System.Collections.IList.Remove(System.Object)
  commentId: M:System.Collections.IList.Remove(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Remove(Object)
  nameWithType: IList.Remove(Object)
  fullName: System.Collections.IList.Remove(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Remove(System.Object)
    name: Remove
    nameWithType: IList.Remove
    fullName: System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Remove(System.Object)
    name: Remove
    nameWithType: IList.Remove
    fullName: System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
