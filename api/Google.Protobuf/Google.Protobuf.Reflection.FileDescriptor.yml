### YamlMime:ManagedReference
items:
- uid: Google.Protobuf.Reflection.FileDescriptor
  commentId: T:Google.Protobuf.Reflection.FileDescriptor
  id: FileDescriptor
  parent: Google.Protobuf.Reflection
  children:
  - Google.Protobuf.Reflection.FileDescriptor.CustomOptions
  - Google.Protobuf.Reflection.FileDescriptor.Dependencies
  - Google.Protobuf.Reflection.FileDescriptor.DescriptorProtoFileDescriptor
  - Google.Protobuf.Reflection.FileDescriptor.EnumTypes
  - Google.Protobuf.Reflection.FileDescriptor.FindTypeByName``1(System.String)
  - Google.Protobuf.Reflection.FileDescriptor.ForceReflectionInitialization``1
  - Google.Protobuf.Reflection.FileDescriptor.FromGeneratedCode(System.Byte[],Google.Protobuf.Reflection.FileDescriptor[],Google.Protobuf.Reflection.GeneratedClrTypeInfo)
  - Google.Protobuf.Reflection.FileDescriptor.Google#Protobuf#Reflection#IDescriptor#File
  - Google.Protobuf.Reflection.FileDescriptor.Google#Protobuf#Reflection#IDescriptor#FullName
  - Google.Protobuf.Reflection.FileDescriptor.MessageTypes
  - Google.Protobuf.Reflection.FileDescriptor.Name
  - Google.Protobuf.Reflection.FileDescriptor.Package
  - Google.Protobuf.Reflection.FileDescriptor.PublicDependencies
  - Google.Protobuf.Reflection.FileDescriptor.SerializedData
  - Google.Protobuf.Reflection.FileDescriptor.Services
  - Google.Protobuf.Reflection.FileDescriptor.ToString
  langs:
  - csharp
  - vb
  name: FileDescriptor
  nameWithType: FileDescriptor
  fullName: Google.Protobuf.Reflection.FileDescriptor
  type: Class
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: FileDescriptor
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 44
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nDescribes a .proto file, including everything defined within.\nIDescriptor is implemented such that the File property returns this descriptor,\nand the FullName is the same as the Name.\n"
  example: []
  syntax:
    content: 'public sealed class FileDescriptor : IDescriptor'
    content.vb: >-
      Public NotInheritable Class FileDescriptor
          Implements IDescriptor
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.Reflection.IDescriptor
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Protobuf.Reflection.FileDescriptor.Name
  commentId: P:Google.Protobuf.Reflection.FileDescriptor.Name
  id: Name
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FileDescriptor.Name
  fullName: Google.Protobuf.Reflection.FileDescriptor.Name
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: Name
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 141
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe file name.\n"
    content.vb: Public ReadOnly Property Name As String
  overload: Google.Protobuf.Reflection.FileDescriptor.Name*
  implements:
  - Google.Protobuf.Reflection.IDescriptor.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.FileDescriptor.Package
  commentId: P:Google.Protobuf.Reflection.FileDescriptor.Package
  id: Package
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: Package
  nameWithType: FileDescriptor.Package
  fullName: Google.Protobuf.Reflection.FileDescriptor.Package
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: Package
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 147
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nThe package as declared in the .proto file. This may or may not\nbe equivalent to the .NET namespace of the generated classes.\n"
  example: []
  syntax:
    content: public string Package { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Package As String
  overload: Google.Protobuf.Reflection.FileDescriptor.Package*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.FileDescriptor.MessageTypes
  commentId: P:Google.Protobuf.Reflection.FileDescriptor.MessageTypes
  id: MessageTypes
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: MessageTypes
  nameWithType: FileDescriptor.MessageTypes
  fullName: Google.Protobuf.Reflection.FileDescriptor.MessageTypes
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: MessageTypes
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 152
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  example: []
  syntax:
    content: public IList<MessageDescriptor> MessageTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Protobuf.Reflection.MessageDescriptor}
      description: "\nUnmodifiable list of top-level message types declared in this file.\n"
    content.vb: Public ReadOnly Property MessageTypes As IList(Of MessageDescriptor)
  overload: Google.Protobuf.Reflection.FileDescriptor.MessageTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.FileDescriptor.EnumTypes
  commentId: P:Google.Protobuf.Reflection.FileDescriptor.EnumTypes
  id: EnumTypes
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: EnumTypes
  nameWithType: FileDescriptor.EnumTypes
  fullName: Google.Protobuf.Reflection.FileDescriptor.EnumTypes
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: EnumTypes
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 157
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  example: []
  syntax:
    content: public IList<EnumDescriptor> EnumTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Protobuf.Reflection.EnumDescriptor}
      description: "\nUnmodifiable list of top-level enum types declared in this file.\n"
    content.vb: Public ReadOnly Property EnumTypes As IList(Of EnumDescriptor)
  overload: Google.Protobuf.Reflection.FileDescriptor.EnumTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.FileDescriptor.Services
  commentId: P:Google.Protobuf.Reflection.FileDescriptor.Services
  id: Services
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: Services
  nameWithType: FileDescriptor.Services
  fullName: Google.Protobuf.Reflection.FileDescriptor.Services
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: Services
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 162
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  example: []
  syntax:
    content: public IList<ServiceDescriptor> Services { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Protobuf.Reflection.ServiceDescriptor}
      description: "\nUnmodifiable list of top-level services declared in this file.\n"
    content.vb: Public ReadOnly Property Services As IList(Of ServiceDescriptor)
  overload: Google.Protobuf.Reflection.FileDescriptor.Services*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.FileDescriptor.Dependencies
  commentId: P:Google.Protobuf.Reflection.FileDescriptor.Dependencies
  id: Dependencies
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: Dependencies
  nameWithType: FileDescriptor.Dependencies
  fullName: Google.Protobuf.Reflection.FileDescriptor.Dependencies
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: Dependencies
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 167
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  example: []
  syntax:
    content: public IList<FileDescriptor> Dependencies { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Protobuf.Reflection.FileDescriptor}
      description: "\nUnmodifiable list of this file&apos;s dependencies (imports).\n"
    content.vb: Public ReadOnly Property Dependencies As IList(Of FileDescriptor)
  overload: Google.Protobuf.Reflection.FileDescriptor.Dependencies*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.FileDescriptor.PublicDependencies
  commentId: P:Google.Protobuf.Reflection.FileDescriptor.PublicDependencies
  id: PublicDependencies
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: PublicDependencies
  nameWithType: FileDescriptor.PublicDependencies
  fullName: Google.Protobuf.Reflection.FileDescriptor.PublicDependencies
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: PublicDependencies
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 172
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  example: []
  syntax:
    content: public IList<FileDescriptor> PublicDependencies { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Protobuf.Reflection.FileDescriptor}
      description: "\nUnmodifiable list of this file&apos;s public dependencies (public imports).\n"
    content.vb: Public ReadOnly Property PublicDependencies As IList(Of FileDescriptor)
  overload: Google.Protobuf.Reflection.FileDescriptor.PublicDependencies*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.FileDescriptor.SerializedData
  commentId: P:Google.Protobuf.Reflection.FileDescriptor.SerializedData
  id: SerializedData
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: SerializedData
  nameWithType: FileDescriptor.SerializedData
  fullName: Google.Protobuf.Reflection.FileDescriptor.SerializedData
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: SerializedData
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 177
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  example: []
  syntax:
    content: public ByteString SerializedData { get; }
    parameters: []
    return:
      type: Google.Protobuf.ByteString
      description: "\nThe original serialized binary form of this descriptor.\n"
    content.vb: Public ReadOnly Property SerializedData As ByteString
  overload: Google.Protobuf.Reflection.FileDescriptor.SerializedData*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.FileDescriptor.Google#Protobuf#Reflection#IDescriptor#FullName
  commentId: P:Google.Protobuf.Reflection.FileDescriptor.Google#Protobuf#Reflection#IDescriptor#FullName
  id: Google#Protobuf#Reflection#IDescriptor#FullName
  isEii: true
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: IDescriptor.FullName
  nameWithType: FileDescriptor.IDescriptor.FullName
  fullName: Google.Protobuf.Reflection.FileDescriptor.Google.Protobuf.Reflection.IDescriptor.FullName
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: Google.Protobuf.Reflection.IDescriptor.FullName
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 182
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  example: []
  syntax:
    content: string IDescriptor.FullName { get; }
    parameters: []
    return:
      type: System.String
      description: "\nImplementation of IDescriptor.FullName - just returns the same as Name.\n"
    content.vb: ReadOnly WriteOnly Property Google.Protobuf.Reflection.IDescriptor.FullName As String Implements IDescriptor.FullName
  overload: Google.Protobuf.Reflection.FileDescriptor.Google#Protobuf#Reflection#IDescriptor#FullName*
  implements:
  - Google.Protobuf.Reflection.IDescriptor.FullName
  nameWithType.vb: FileDescriptor.Google.Protobuf.Reflection.IDescriptor.FullName
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Google.Protobuf.Reflection.IDescriptor.FullName
- uid: Google.Protobuf.Reflection.FileDescriptor.Google#Protobuf#Reflection#IDescriptor#File
  commentId: P:Google.Protobuf.Reflection.FileDescriptor.Google#Protobuf#Reflection#IDescriptor#File
  id: Google#Protobuf#Reflection#IDescriptor#File
  isEii: true
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: IDescriptor.File
  nameWithType: FileDescriptor.IDescriptor.File
  fullName: Google.Protobuf.Reflection.FileDescriptor.Google.Protobuf.Reflection.IDescriptor.File
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: Google.Protobuf.Reflection.IDescriptor.File
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 187
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  example: []
  syntax:
    content: FileDescriptor IDescriptor.File { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.FileDescriptor
      description: "\nImplementation of IDescriptor.File - just returns this descriptor.\n"
    content.vb: ReadOnly WriteOnly Property Google.Protobuf.Reflection.IDescriptor.File As FileDescriptor Implements IDescriptor.File
  overload: Google.Protobuf.Reflection.FileDescriptor.Google#Protobuf#Reflection#IDescriptor#File*
  implements:
  - Google.Protobuf.Reflection.IDescriptor.File
  nameWithType.vb: FileDescriptor.Google.Protobuf.Reflection.IDescriptor.File
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Google.Protobuf.Reflection.IDescriptor.File
- uid: Google.Protobuf.Reflection.FileDescriptor.FindTypeByName``1(System.String)
  commentId: M:Google.Protobuf.Reflection.FileDescriptor.FindTypeByName``1(System.String)
  id: FindTypeByName``1(System.String)
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: FindTypeByName<T>(String)
  nameWithType: FileDescriptor.FindTypeByName<T>(String)
  fullName: Google.Protobuf.Reflection.FileDescriptor.FindTypeByName<T>(System.String)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: FindTypeByName
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 200
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nFinds a type (message, enum, service or extension) in the file by name. Does not find nested types.\n"
  example: []
  syntax:
    content: 'public T FindTypeByName<T>(string name)where T : class, IDescriptor'
    parameters:
    - id: name
      type: System.String
      description: The unqualified type name to look for.
    typeParameters:
    - id: T
      description: The type of descriptor to look for
    return:
      type: '{T}'
      description: The type&apos;s descriptor, or null if not found.
    content.vb: Public Function FindTypeByName(Of T As {Class, IDescriptor})(name As String) As T
  overload: Google.Protobuf.Reflection.FileDescriptor.FindTypeByName*
  nameWithType.vb: FileDescriptor.FindTypeByName(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Reflection.FileDescriptor.FindTypeByName(Of T)(System.String)
  name.vb: FindTypeByName(Of T)(String)
- uid: Google.Protobuf.Reflection.FileDescriptor.FromGeneratedCode(System.Byte[],Google.Protobuf.Reflection.FileDescriptor[],Google.Protobuf.Reflection.GeneratedClrTypeInfo)
  commentId: M:Google.Protobuf.Reflection.FileDescriptor.FromGeneratedCode(System.Byte[],Google.Protobuf.Reflection.FileDescriptor[],Google.Protobuf.Reflection.GeneratedClrTypeInfo)
  id: FromGeneratedCode(System.Byte[],Google.Protobuf.Reflection.FileDescriptor[],Google.Protobuf.Reflection.GeneratedClrTypeInfo)
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: FromGeneratedCode(Byte[], FileDescriptor[], GeneratedClrTypeInfo)
  nameWithType: FileDescriptor.FromGeneratedCode(Byte[], FileDescriptor[], GeneratedClrTypeInfo)
  fullName: Google.Protobuf.Reflection.FileDescriptor.FromGeneratedCode(System.Byte[], Google.Protobuf.Reflection.FileDescriptor[], Google.Protobuf.Reflection.GeneratedClrTypeInfo)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: FromGeneratedCode
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 290
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nCreates a descriptor for generated code.\n"
  remarks: "\nThis method is only designed to be used by the results of generating code with protoc,\nwhich creates the appropriate dependencies etc. It has to be public because the generated\ncode is &quot;external&quot;, but should not be called directly by end users.\n"
  example: []
  syntax:
    content: public static FileDescriptor FromGeneratedCode(byte[] descriptorData, FileDescriptor[] dependencies, GeneratedClrTypeInfo generatedCodeInfo)
    parameters:
    - id: descriptorData
      type: System.Byte[]
    - id: dependencies
      type: Google.Protobuf.Reflection.FileDescriptor[]
    - id: generatedCodeInfo
      type: Google.Protobuf.Reflection.GeneratedClrTypeInfo
    return:
      type: Google.Protobuf.Reflection.FileDescriptor
    content.vb: Public Shared Function FromGeneratedCode(descriptorData As Byte(), dependencies As FileDescriptor(), generatedCodeInfo As GeneratedClrTypeInfo) As FileDescriptor
  overload: Google.Protobuf.Reflection.FileDescriptor.FromGeneratedCode*
  nameWithType.vb: FileDescriptor.FromGeneratedCode(Byte(), FileDescriptor(), GeneratedClrTypeInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Protobuf.Reflection.FileDescriptor.FromGeneratedCode(System.Byte(), Google.Protobuf.Reflection.FileDescriptor(), Google.Protobuf.Reflection.GeneratedClrTypeInfo)
  name.vb: FromGeneratedCode(Byte(), FileDescriptor(), GeneratedClrTypeInfo)
- uid: Google.Protobuf.Reflection.FileDescriptor.ToString
  commentId: M:Google.Protobuf.Reflection.FileDescriptor.ToString
  id: ToString
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FileDescriptor.ToString()
  fullName: Google.Protobuf.Reflection.FileDescriptor.ToString()
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: ToString
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 323
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Protobuf.Reflection.FileDescriptor.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Protobuf.Reflection.FileDescriptor.DescriptorProtoFileDescriptor
  commentId: P:Google.Protobuf.Reflection.FileDescriptor.DescriptorProtoFileDescriptor
  id: DescriptorProtoFileDescriptor
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: DescriptorProtoFileDescriptor
  nameWithType: FileDescriptor.DescriptorProtoFileDescriptor
  fullName: Google.Protobuf.Reflection.FileDescriptor.DescriptorProtoFileDescriptor
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: DescriptorProtoFileDescriptor
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 341
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nReturns the file descriptor for descriptor.proto.\n"
  remarks: "\nThis is used for protos which take a direct dependency on <code>descriptor.proto</code>, typically for\nannotations. While <code>descriptor.proto</code> is a proto2 file, it is built into the Google.Protobuf\nruntime for reflection purposes. The messages are internal to the runtime as they would require\nproto2 semantics for full support, but the file descriptor is available via this property. The\nC# codegen in protoc automatically uses this property when it detects a dependency on <code>descriptor.proto</code>.\n"
  example: []
  syntax:
    content: public static FileDescriptor DescriptorProtoFileDescriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.FileDescriptor
      description: "\nThe file descriptor for <code>descriptor.proto</code>.\n"
    content.vb: Public Shared ReadOnly Property DescriptorProtoFileDescriptor As FileDescriptor
  overload: Google.Protobuf.Reflection.FileDescriptor.DescriptorProtoFileDescriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Protobuf.Reflection.FileDescriptor.CustomOptions
  commentId: P:Google.Protobuf.Reflection.FileDescriptor.CustomOptions
  id: CustomOptions
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: CustomOptions
  nameWithType: FileDescriptor.CustomOptions
  fullName: Google.Protobuf.Reflection.FileDescriptor.CustomOptions
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: CustomOptions
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 346
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nThe (possibly empty) set of custom options for this file.\n"
  example: []
  syntax:
    content: public CustomOptions CustomOptions { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.CustomOptions
    content.vb: Public ReadOnly Property CustomOptions As CustomOptions
  overload: Google.Protobuf.Reflection.FileDescriptor.CustomOptions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.FileDescriptor.ForceReflectionInitialization``1
  commentId: M:Google.Protobuf.Reflection.FileDescriptor.ForceReflectionInitialization``1
  id: ForceReflectionInitialization``1
  parent: Google.Protobuf.Reflection.FileDescriptor
  langs:
  - csharp
  - vb
  name: ForceReflectionInitialization<T>()
  nameWithType: FileDescriptor.ForceReflectionInitialization<T>()
  fullName: Google.Protobuf.Reflection.FileDescriptor.ForceReflectionInitialization<T>()
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
      branch: 3.6.x
      repo: https://github.com/google/protobuf
    id: ForceReflectionInitialization
    path: csharp/src/Google.Protobuf/Reflection/FileDescriptor.cs
    startLine: 359
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nPerforms initialization for the given generic type argument.\n"
  remarks: "\nThis method is present for the sake of AOT compilers. It allows code (whether handwritten or generated)\nto make calls into the reflection machinery of this library to express an intention to use that type\nreflectively (e.g. for JSON parsing and formatting). The call itself does almost nothing, but AOT compilers\nattempting to determine which generic type arguments need to be handled will spot the code path and act\naccordingly.\n"
  example: []
  syntax:
    content: public static void ForceReflectionInitialization<T>()
    typeParameters:
    - id: T
      description: The type to force initialization for.
    content.vb: Public Shared Sub ForceReflectionInitialization(Of T)
  overload: Google.Protobuf.Reflection.FileDescriptor.ForceReflectionInitialization*
  nameWithType.vb: FileDescriptor.ForceReflectionInitialization(Of T)()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Protobuf.Reflection.FileDescriptor.ForceReflectionInitialization(Of T)()
  name.vb: ForceReflectionInitialization(Of T)()
references:
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: false
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.Reflection.IDescriptor
  commentId: T:Google.Protobuf.Reflection.IDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: false
  name: IDescriptor
  nameWithType: IDescriptor
  fullName: Google.Protobuf.Reflection.IDescriptor
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.Reflection.FileDescriptor.Name*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.Name
  isExternal: false
  name: Name
  nameWithType: FileDescriptor.Name
  fullName: Google.Protobuf.Reflection.FileDescriptor.Name
- uid: Google.Protobuf.Reflection.IDescriptor.Name
  commentId: P:Google.Protobuf.Reflection.IDescriptor.Name
  parent: Google.Protobuf.Reflection.IDescriptor
  isExternal: false
  name: Name
  nameWithType: IDescriptor.Name
  fullName: Google.Protobuf.Reflection.IDescriptor.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Protobuf.Reflection.FileDescriptor.Package*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.Package
  isExternal: false
  name: Package
  nameWithType: FileDescriptor.Package
  fullName: Google.Protobuf.Reflection.FileDescriptor.Package
- uid: Google.Protobuf.Reflection.FileDescriptor.MessageTypes*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.MessageTypes
  isExternal: false
  name: MessageTypes
  nameWithType: FileDescriptor.MessageTypes
  fullName: Google.Protobuf.Reflection.FileDescriptor.MessageTypes
- uid: System.Collections.Generic.IList{Google.Protobuf.Reflection.MessageDescriptor}
  commentId: T:System.Collections.Generic.IList{Google.Protobuf.Reflection.MessageDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MessageDescriptor>
  nameWithType: IList<MessageDescriptor>
  fullName: System.Collections.Generic.IList<Google.Protobuf.Reflection.MessageDescriptor>
  nameWithType.vb: IList(Of MessageDescriptor)
  fullName.vb: System.Collections.Generic.IList(Of Google.Protobuf.Reflection.MessageDescriptor)
  name.vb: IList(Of MessageDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.Reflection.MessageDescriptor
    name: MessageDescriptor
    nameWithType: MessageDescriptor
    fullName: Google.Protobuf.Reflection.MessageDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.Reflection.MessageDescriptor
    name: MessageDescriptor
    nameWithType: MessageDescriptor
    fullName: Google.Protobuf.Reflection.MessageDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Protobuf.Reflection.FileDescriptor.EnumTypes*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.EnumTypes
  isExternal: false
  name: EnumTypes
  nameWithType: FileDescriptor.EnumTypes
  fullName: Google.Protobuf.Reflection.FileDescriptor.EnumTypes
- uid: System.Collections.Generic.IList{Google.Protobuf.Reflection.EnumDescriptor}
  commentId: T:System.Collections.Generic.IList{Google.Protobuf.Reflection.EnumDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<EnumDescriptor>
  nameWithType: IList<EnumDescriptor>
  fullName: System.Collections.Generic.IList<Google.Protobuf.Reflection.EnumDescriptor>
  nameWithType.vb: IList(Of EnumDescriptor)
  fullName.vb: System.Collections.Generic.IList(Of Google.Protobuf.Reflection.EnumDescriptor)
  name.vb: IList(Of EnumDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.Reflection.EnumDescriptor
    name: EnumDescriptor
    nameWithType: EnumDescriptor
    fullName: Google.Protobuf.Reflection.EnumDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.Reflection.EnumDescriptor
    name: EnumDescriptor
    nameWithType: EnumDescriptor
    fullName: Google.Protobuf.Reflection.EnumDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Reflection.FileDescriptor.Services*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.Services
  isExternal: false
  name: Services
  nameWithType: FileDescriptor.Services
  fullName: Google.Protobuf.Reflection.FileDescriptor.Services
- uid: System.Collections.Generic.IList{Google.Protobuf.Reflection.ServiceDescriptor}
  commentId: T:System.Collections.Generic.IList{Google.Protobuf.Reflection.ServiceDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ServiceDescriptor>
  nameWithType: IList<ServiceDescriptor>
  fullName: System.Collections.Generic.IList<Google.Protobuf.Reflection.ServiceDescriptor>
  nameWithType.vb: IList(Of ServiceDescriptor)
  fullName.vb: System.Collections.Generic.IList(Of Google.Protobuf.Reflection.ServiceDescriptor)
  name.vb: IList(Of ServiceDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.Reflection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Google.Protobuf.Reflection.ServiceDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.Reflection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Google.Protobuf.Reflection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Reflection.FileDescriptor.Dependencies*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.Dependencies
  isExternal: false
  name: Dependencies
  nameWithType: FileDescriptor.Dependencies
  fullName: Google.Protobuf.Reflection.FileDescriptor.Dependencies
- uid: System.Collections.Generic.IList{Google.Protobuf.Reflection.FileDescriptor}
  commentId: T:System.Collections.Generic.IList{Google.Protobuf.Reflection.FileDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<FileDescriptor>
  nameWithType: IList<FileDescriptor>
  fullName: System.Collections.Generic.IList<Google.Protobuf.Reflection.FileDescriptor>
  nameWithType.vb: IList(Of FileDescriptor)
  fullName.vb: System.Collections.Generic.IList(Of Google.Protobuf.Reflection.FileDescriptor)
  name.vb: IList(Of FileDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.Reflection.FileDescriptor
    name: FileDescriptor
    nameWithType: FileDescriptor
    fullName: Google.Protobuf.Reflection.FileDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.Reflection.FileDescriptor
    name: FileDescriptor
    nameWithType: FileDescriptor
    fullName: Google.Protobuf.Reflection.FileDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Reflection.FileDescriptor.PublicDependencies*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.PublicDependencies
  isExternal: false
  name: PublicDependencies
  nameWithType: FileDescriptor.PublicDependencies
  fullName: Google.Protobuf.Reflection.FileDescriptor.PublicDependencies
- uid: Google.Protobuf.Reflection.FileDescriptor.SerializedData*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.SerializedData
  isExternal: false
  name: SerializedData
  nameWithType: FileDescriptor.SerializedData
  fullName: Google.Protobuf.Reflection.FileDescriptor.SerializedData
- uid: Google.Protobuf.ByteString
  commentId: T:Google.Protobuf.ByteString
  parent: Google.Protobuf
  isExternal: false
  name: ByteString
  nameWithType: ByteString
  fullName: Google.Protobuf.ByteString
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: false
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: Google.Protobuf.Reflection.FileDescriptor.Google#Protobuf#Reflection#IDescriptor#FullName*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.Google#Protobuf#Reflection#IDescriptor#FullName
  isExternal: false
  name: IDescriptor.FullName
  nameWithType: FileDescriptor.IDescriptor.FullName
  fullName: Google.Protobuf.Reflection.FileDescriptor.Google.Protobuf.Reflection.IDescriptor.FullName
  nameWithType.vb: FileDescriptor.Google.Protobuf.Reflection.IDescriptor.FullName
  name.vb: Google.Protobuf.Reflection.IDescriptor.FullName
- uid: Google.Protobuf.Reflection.IDescriptor.FullName
  commentId: P:Google.Protobuf.Reflection.IDescriptor.FullName
  parent: Google.Protobuf.Reflection.IDescriptor
  isExternal: false
  name: FullName
  nameWithType: IDescriptor.FullName
  fullName: Google.Protobuf.Reflection.IDescriptor.FullName
- uid: Google.Protobuf.Reflection.FileDescriptor.Google#Protobuf#Reflection#IDescriptor#File*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.Google#Protobuf#Reflection#IDescriptor#File
  isExternal: false
  name: IDescriptor.File
  nameWithType: FileDescriptor.IDescriptor.File
  fullName: Google.Protobuf.Reflection.FileDescriptor.Google.Protobuf.Reflection.IDescriptor.File
  nameWithType.vb: FileDescriptor.Google.Protobuf.Reflection.IDescriptor.File
  name.vb: Google.Protobuf.Reflection.IDescriptor.File
- uid: Google.Protobuf.Reflection.IDescriptor.File
  commentId: P:Google.Protobuf.Reflection.IDescriptor.File
  parent: Google.Protobuf.Reflection.IDescriptor
  isExternal: false
  name: File
  nameWithType: IDescriptor.File
  fullName: Google.Protobuf.Reflection.IDescriptor.File
- uid: Google.Protobuf.Reflection.FileDescriptor
  commentId: T:Google.Protobuf.Reflection.FileDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: false
  name: FileDescriptor
  nameWithType: FileDescriptor
  fullName: Google.Protobuf.Reflection.FileDescriptor
- uid: Google.Protobuf.Reflection.FileDescriptor.FindTypeByName*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.FindTypeByName
  isExternal: false
  name: FindTypeByName
  nameWithType: FileDescriptor.FindTypeByName
  fullName: Google.Protobuf.Reflection.FileDescriptor.FindTypeByName
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Google.Protobuf.Reflection.FileDescriptor.FromGeneratedCode*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.FromGeneratedCode
  isExternal: false
  name: FromGeneratedCode
  nameWithType: FileDescriptor.FromGeneratedCode
  fullName: Google.Protobuf.Reflection.FileDescriptor.FromGeneratedCode
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Google.Protobuf.Reflection.FileDescriptor[]
  name: FileDescriptor[]
  nameWithType: FileDescriptor[]
  fullName: Google.Protobuf.Reflection.FileDescriptor[]
  nameWithType.vb: FileDescriptor()
  fullName.vb: Google.Protobuf.Reflection.FileDescriptor()
  name.vb: FileDescriptor()
  spec.csharp:
  - uid: Google.Protobuf.Reflection.FileDescriptor
    name: FileDescriptor
    nameWithType: FileDescriptor
    fullName: Google.Protobuf.Reflection.FileDescriptor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Google.Protobuf.Reflection.FileDescriptor
    name: FileDescriptor
    nameWithType: FileDescriptor
    fullName: Google.Protobuf.Reflection.FileDescriptor
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Google.Protobuf.Reflection.GeneratedClrTypeInfo
  commentId: T:Google.Protobuf.Reflection.GeneratedClrTypeInfo
  parent: Google.Protobuf.Reflection
  isExternal: false
  name: GeneratedClrTypeInfo
  nameWithType: GeneratedClrTypeInfo
  fullName: Google.Protobuf.Reflection.GeneratedClrTypeInfo
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Reflection.FileDescriptor.ToString*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.ToString
  isExternal: false
  name: ToString
  nameWithType: FileDescriptor.ToString
  fullName: Google.Protobuf.Reflection.FileDescriptor.ToString
- uid: Google.Protobuf.Reflection.FileDescriptor.DescriptorProtoFileDescriptor*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.DescriptorProtoFileDescriptor
  isExternal: false
  name: DescriptorProtoFileDescriptor
  nameWithType: FileDescriptor.DescriptorProtoFileDescriptor
  fullName: Google.Protobuf.Reflection.FileDescriptor.DescriptorProtoFileDescriptor
- uid: Google.Protobuf.Reflection.FileDescriptor.CustomOptions*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.CustomOptions
  isExternal: false
  name: CustomOptions
  nameWithType: FileDescriptor.CustomOptions
  fullName: Google.Protobuf.Reflection.FileDescriptor.CustomOptions
- uid: Google.Protobuf.Reflection.CustomOptions
  commentId: T:Google.Protobuf.Reflection.CustomOptions
  parent: Google.Protobuf.Reflection
  isExternal: false
  name: CustomOptions
  nameWithType: CustomOptions
  fullName: Google.Protobuf.Reflection.CustomOptions
- uid: Google.Protobuf.Reflection.FileDescriptor.ForceReflectionInitialization*
  commentId: Overload:Google.Protobuf.Reflection.FileDescriptor.ForceReflectionInitialization
  isExternal: false
  name: ForceReflectionInitialization
  nameWithType: FileDescriptor.ForceReflectionInitialization
  fullName: Google.Protobuf.Reflection.FileDescriptor.ForceReflectionInitialization
