### YamlMime:ManagedReference
items:
- uid: Google.Protobuf.MessageExtensions
  commentId: T:Google.Protobuf.MessageExtensions
  id: MessageExtensions
  parent: Google.Protobuf
  children:
  - Google.Protobuf.MessageExtensions.MergeDelimitedFrom(Google.Protobuf.IMessage,System.IO.Stream)
  - Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,Google.Protobuf.ByteString)
  - Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[])
  - Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.IO.Stream)
  - Google.Protobuf.MessageExtensions.ToByteArray(Google.Protobuf.IMessage)
  - Google.Protobuf.MessageExtensions.ToByteString(Google.Protobuf.IMessage)
  - Google.Protobuf.MessageExtensions.WriteDelimitedTo(Google.Protobuf.IMessage,System.IO.Stream)
  - Google.Protobuf.MessageExtensions.WriteTo(Google.Protobuf.IMessage,System.IO.Stream)
  langs:
  - csharp
  - vb
  name: MessageExtensions
  nameWithType: MessageExtensions
  fullName: Google.Protobuf.MessageExtensions
  type: Class
  source:
    remote:
      path: csharp/src/Google.Protobuf/MessageExtensions.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: MessageExtensions
    path: csharp/src/Google.Protobuf/MessageExtensions.cs
    startLine: 39
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf
  summary: "\nExtension methods on <xref href=\"Google.Protobuf.IMessage\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Google.Protobuf.IMessage%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class MessageExtensions
    content.vb: Public Module MessageExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[])
  commentId: M:Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.Byte[])
  id: MergeFrom(Google.Protobuf.IMessage,System.Byte[])
  isExtensionMethod: true
  parent: Google.Protobuf.MessageExtensions
  langs:
  - csharp
  - vb
  name: MergeFrom(IMessage, Byte[])
  nameWithType: MessageExtensions.MergeFrom(IMessage, Byte[])
  fullName: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage, System.Byte[])
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/MessageExtensions.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: MergeFrom
    path: csharp/src/Google.Protobuf/MessageExtensions.cs
    startLine: 46
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf
  summary: "\nMerges data from the given byte array into an existing message.\n"
  example: []
  syntax:
    content: public static void MergeFrom(this IMessage message, byte[] data)
    parameters:
    - id: message
      type: Google.Protobuf.IMessage
      description: The message to merge the data into.
    - id: data
      type: System.Byte[]
      description: The data to merge, which must be protobuf-encoded binary data.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub MergeFrom(message As IMessage, data As Byte())
  overload: Google.Protobuf.MessageExtensions.MergeFrom*
  nameWithType.vb: MessageExtensions.MergeFrom(IMessage, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage, System.Byte())
  name.vb: MergeFrom(IMessage, Byte())
- uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,Google.Protobuf.ByteString)
  commentId: M:Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,Google.Protobuf.ByteString)
  id: MergeFrom(Google.Protobuf.IMessage,Google.Protobuf.ByteString)
  isExtensionMethod: true
  parent: Google.Protobuf.MessageExtensions
  langs:
  - csharp
  - vb
  name: MergeFrom(IMessage, ByteString)
  nameWithType: MessageExtensions.MergeFrom(IMessage, ByteString)
  fullName: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage, Google.Protobuf.ByteString)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/MessageExtensions.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: MergeFrom
    path: csharp/src/Google.Protobuf/MessageExtensions.cs
    startLine: 60
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf
  summary: "\nMerges data from the given byte string into an existing message.\n"
  example: []
  syntax:
    content: public static void MergeFrom(this IMessage message, ByteString data)
    parameters:
    - id: message
      type: Google.Protobuf.IMessage
      description: The message to merge the data into.
    - id: data
      type: Google.Protobuf.ByteString
      description: The data to merge, which must be protobuf-encoded binary data.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub MergeFrom(message As IMessage, data As ByteString)
  overload: Google.Protobuf.MessageExtensions.MergeFrom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.IO.Stream)
  commentId: M:Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage,System.IO.Stream)
  id: MergeFrom(Google.Protobuf.IMessage,System.IO.Stream)
  isExtensionMethod: true
  parent: Google.Protobuf.MessageExtensions
  langs:
  - csharp
  - vb
  name: MergeFrom(IMessage, Stream)
  nameWithType: MessageExtensions.MergeFrom(IMessage, Stream)
  fullName: Google.Protobuf.MessageExtensions.MergeFrom(Google.Protobuf.IMessage, System.IO.Stream)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/MessageExtensions.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: MergeFrom
    path: csharp/src/Google.Protobuf/MessageExtensions.cs
    startLine: 74
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf
  summary: "\nMerges data from the given stream into an existing message.\n"
  example: []
  syntax:
    content: public static void MergeFrom(this IMessage message, Stream input)
    parameters:
    - id: message
      type: Google.Protobuf.IMessage
      description: The message to merge the data into.
    - id: input
      type: System.IO.Stream
      description: Stream containing the data to merge, which must be protobuf-encoded binary data.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub MergeFrom(message As IMessage, input As Stream)
  overload: Google.Protobuf.MessageExtensions.MergeFrom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Protobuf.MessageExtensions.MergeDelimitedFrom(Google.Protobuf.IMessage,System.IO.Stream)
  commentId: M:Google.Protobuf.MessageExtensions.MergeDelimitedFrom(Google.Protobuf.IMessage,System.IO.Stream)
  id: MergeDelimitedFrom(Google.Protobuf.IMessage,System.IO.Stream)
  isExtensionMethod: true
  parent: Google.Protobuf.MessageExtensions
  langs:
  - csharp
  - vb
  name: MergeDelimitedFrom(IMessage, Stream)
  nameWithType: MessageExtensions.MergeDelimitedFrom(IMessage, Stream)
  fullName: Google.Protobuf.MessageExtensions.MergeDelimitedFrom(Google.Protobuf.IMessage, System.IO.Stream)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/MessageExtensions.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: MergeDelimitedFrom
    path: csharp/src/Google.Protobuf/MessageExtensions.cs
    startLine: 92
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf
  summary: "\nMerges length-delimited data from the given stream into an existing message.\n"
  remarks: "\nThe stream is expected to contain a length and then the data. Only the amount of data\nspecified by the length will be consumed.\n"
  example: []
  syntax:
    content: public static void MergeDelimitedFrom(this IMessage message, Stream input)
    parameters:
    - id: message
      type: Google.Protobuf.IMessage
      description: The message to merge the data into.
    - id: input
      type: System.IO.Stream
      description: Stream containing the data to merge, which must be protobuf-encoded binary data.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub MergeDelimitedFrom(message As IMessage, input As Stream)
  overload: Google.Protobuf.MessageExtensions.MergeDelimitedFrom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Protobuf.MessageExtensions.ToByteArray(Google.Protobuf.IMessage)
  commentId: M:Google.Protobuf.MessageExtensions.ToByteArray(Google.Protobuf.IMessage)
  id: ToByteArray(Google.Protobuf.IMessage)
  isExtensionMethod: true
  parent: Google.Protobuf.MessageExtensions
  langs:
  - csharp
  - vb
  name: ToByteArray(IMessage)
  nameWithType: MessageExtensions.ToByteArray(IMessage)
  fullName: Google.Protobuf.MessageExtensions.ToByteArray(Google.Protobuf.IMessage)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/MessageExtensions.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: ToByteArray
    path: csharp/src/Google.Protobuf/MessageExtensions.cs
    startLine: 106
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf
  summary: "\nConverts the given message into a byte array in protobuf encoding.\n"
  example: []
  syntax:
    content: public static byte[] ToByteArray(this IMessage message)
    parameters:
    - id: message
      type: Google.Protobuf.IMessage
      description: The message to convert.
    return:
      type: System.Byte[]
      description: The message data as a byte array.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToByteArray(message As IMessage) As Byte()
  overload: Google.Protobuf.MessageExtensions.ToByteArray*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Protobuf.MessageExtensions.WriteTo(Google.Protobuf.IMessage,System.IO.Stream)
  commentId: M:Google.Protobuf.MessageExtensions.WriteTo(Google.Protobuf.IMessage,System.IO.Stream)
  id: WriteTo(Google.Protobuf.IMessage,System.IO.Stream)
  isExtensionMethod: true
  parent: Google.Protobuf.MessageExtensions
  langs:
  - csharp
  - vb
  name: WriteTo(IMessage, Stream)
  nameWithType: MessageExtensions.WriteTo(IMessage, Stream)
  fullName: Google.Protobuf.MessageExtensions.WriteTo(Google.Protobuf.IMessage, System.IO.Stream)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/MessageExtensions.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: WriteTo
    path: csharp/src/Google.Protobuf/MessageExtensions.cs
    startLine: 121
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf
  summary: "\nWrites the given message data to the given stream in protobuf encoding.\n"
  example: []
  syntax:
    content: public static void WriteTo(this IMessage message, Stream output)
    parameters:
    - id: message
      type: Google.Protobuf.IMessage
      description: The message to write to the stream.
    - id: output
      type: System.IO.Stream
      description: The stream to write to.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteTo(message As IMessage, output As Stream)
  overload: Google.Protobuf.MessageExtensions.WriteTo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Protobuf.MessageExtensions.WriteDelimitedTo(Google.Protobuf.IMessage,System.IO.Stream)
  commentId: M:Google.Protobuf.MessageExtensions.WriteDelimitedTo(Google.Protobuf.IMessage,System.IO.Stream)
  id: WriteDelimitedTo(Google.Protobuf.IMessage,System.IO.Stream)
  isExtensionMethod: true
  parent: Google.Protobuf.MessageExtensions
  langs:
  - csharp
  - vb
  name: WriteDelimitedTo(IMessage, Stream)
  nameWithType: MessageExtensions.WriteDelimitedTo(IMessage, Stream)
  fullName: Google.Protobuf.MessageExtensions.WriteDelimitedTo(Google.Protobuf.IMessage, System.IO.Stream)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/MessageExtensions.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: WriteDelimitedTo
    path: csharp/src/Google.Protobuf/MessageExtensions.cs
    startLine: 135
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf
  summary: "\nWrites the length and then data of the given message to a stream.\n"
  example: []
  syntax:
    content: public static void WriteDelimitedTo(this IMessage message, Stream output)
    parameters:
    - id: message
      type: Google.Protobuf.IMessage
      description: The message to write.
    - id: output
      type: System.IO.Stream
      description: The output stream to write to.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteDelimitedTo(message As IMessage, output As Stream)
  overload: Google.Protobuf.MessageExtensions.WriteDelimitedTo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Protobuf.MessageExtensions.ToByteString(Google.Protobuf.IMessage)
  commentId: M:Google.Protobuf.MessageExtensions.ToByteString(Google.Protobuf.IMessage)
  id: ToByteString(Google.Protobuf.IMessage)
  isExtensionMethod: true
  parent: Google.Protobuf.MessageExtensions
  langs:
  - csharp
  - vb
  name: ToByteString(IMessage)
  nameWithType: MessageExtensions.ToByteString(IMessage)
  fullName: Google.Protobuf.MessageExtensions.ToByteString(Google.Protobuf.IMessage)
  type: Method
  source:
    remote:
      path: csharp/src/Google.Protobuf/MessageExtensions.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: ToByteString
    path: csharp/src/Google.Protobuf/MessageExtensions.cs
    startLine: 150
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf
  summary: "\nConverts the given message into a byte string in protobuf encoding.\n"
  example: []
  syntax:
    content: public static ByteString ToByteString(this IMessage message)
    parameters:
    - id: message
      type: Google.Protobuf.IMessage
      description: The message to convert.
    return:
      type: Google.Protobuf.ByteString
      description: The message data as a byte string.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToByteString(message As IMessage) As ByteString
  overload: Google.Protobuf.MessageExtensions.ToByteString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: false
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: false
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.MessageExtensions.MergeFrom*
  commentId: Overload:Google.Protobuf.MessageExtensions.MergeFrom
  isExternal: false
  name: MergeFrom
  nameWithType: MessageExtensions.MergeFrom
  fullName: Google.Protobuf.MessageExtensions.MergeFrom
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Google.Protobuf.ByteString
  commentId: T:Google.Protobuf.ByteString
  parent: Google.Protobuf
  isExternal: false
  name: ByteString
  nameWithType: ByteString
  fullName: Google.Protobuf.ByteString
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Google.Protobuf.MessageExtensions.MergeDelimitedFrom*
  commentId: Overload:Google.Protobuf.MessageExtensions.MergeDelimitedFrom
  isExternal: false
  name: MergeDelimitedFrom
  nameWithType: MessageExtensions.MergeDelimitedFrom
  fullName: Google.Protobuf.MessageExtensions.MergeDelimitedFrom
- uid: Google.Protobuf.MessageExtensions.ToByteArray*
  commentId: Overload:Google.Protobuf.MessageExtensions.ToByteArray
  isExternal: false
  name: ToByteArray
  nameWithType: MessageExtensions.ToByteArray
  fullName: Google.Protobuf.MessageExtensions.ToByteArray
- uid: Google.Protobuf.MessageExtensions.WriteTo*
  commentId: Overload:Google.Protobuf.MessageExtensions.WriteTo
  isExternal: false
  name: WriteTo
  nameWithType: MessageExtensions.WriteTo
  fullName: Google.Protobuf.MessageExtensions.WriteTo
- uid: Google.Protobuf.MessageExtensions.WriteDelimitedTo*
  commentId: Overload:Google.Protobuf.MessageExtensions.WriteDelimitedTo
  isExternal: false
  name: WriteDelimitedTo
  nameWithType: MessageExtensions.WriteDelimitedTo
  fullName: Google.Protobuf.MessageExtensions.WriteDelimitedTo
- uid: Google.Protobuf.MessageExtensions.ToByteString*
  commentId: Overload:Google.Protobuf.MessageExtensions.ToByteString
  isExternal: false
  name: ToByteString
  nameWithType: MessageExtensions.ToByteString
  fullName: Google.Protobuf.MessageExtensions.ToByteString
