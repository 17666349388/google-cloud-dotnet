### YamlMime:ManagedReference
items:
- uid: Google.Protobuf.Collections.MapField`2.Codec
  commentId: T:Google.Protobuf.Collections.MapField`2.Codec
  id: MapField`2.Codec
  parent: Google.Protobuf.Collections
  children:
  - Google.Protobuf.Collections.MapField`2.Codec.#ctor(Google.Protobuf.FieldCodec{`0},Google.Protobuf.FieldCodec{`1},System.UInt32)
  langs:
  - csharp
  - vb
  name: MapField<TKey, TValue>.Codec
  nameWithType: MapField<TKey, TValue>.Codec
  fullName: Google.Protobuf.Collections.MapField<TKey, TValue>.Codec
  type: Class
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/MapField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: Codec
    path: csharp/src/Google.Protobuf/Collections/MapField.cs
    startLine: 590
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nA codec for a specific map field. This contains all the information required to encode and\ndecode the nested messages.\n"
  example: []
  syntax:
    content: public sealed class Codec
    content.vb: Public NotInheritable Class Codec
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: MapField(Of TKey, TValue).Codec
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Google.Protobuf.Collections.MapField(Of TKey, TValue).Codec
  name.vb: MapField(Of TKey, TValue).Codec
- uid: Google.Protobuf.Collections.MapField`2.Codec.#ctor(Google.Protobuf.FieldCodec{`0},Google.Protobuf.FieldCodec{`1},System.UInt32)
  commentId: M:Google.Protobuf.Collections.MapField`2.Codec.#ctor(Google.Protobuf.FieldCodec{`0},Google.Protobuf.FieldCodec{`1},System.UInt32)
  id: '#ctor(Google.Protobuf.FieldCodec{`0},Google.Protobuf.FieldCodec{`1},System.UInt32)'
  parent: Google.Protobuf.Collections.MapField`2.Codec
  langs:
  - csharp
  - vb
  name: Codec(FieldCodec<TKey>, FieldCodec<TValue>, UInt32)
  nameWithType: MapField<TKey, TValue>.Codec.Codec(FieldCodec<TKey>, FieldCodec<TValue>, UInt32)
  fullName: Google.Protobuf.Collections.MapField<TKey, TValue>.Codec.Codec(Google.Protobuf.FieldCodec<TKey>, Google.Protobuf.FieldCodec<TValue>, System.UInt32)
  type: Constructor
  source:
    remote:
      path: csharp/src/Google.Protobuf/Collections/MapField.cs
      branch: 3.4.x
      repo: https://github.com/google/protobuf
    id: .ctor
    path: csharp/src/Google.Protobuf/Collections/MapField.cs
    startLine: 603
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Collections
  summary: "\nCreates a new entry codec based on a separate key codec and value codec,\nand the tag to use for each map entry.\n"
  example: []
  syntax:
    content: public Codec(FieldCodec<TKey> keyCodec, FieldCodec<TValue> valueCodec, uint mapTag)
    parameters:
    - id: keyCodec
      type: Google.Protobuf.FieldCodec{{TKey}}
      description: The key codec.
    - id: valueCodec
      type: Google.Protobuf.FieldCodec{{TValue}}
      description: The value codec.
    - id: mapTag
      type: System.UInt32
      description: The map tag to use to introduce each map entry.
    content.vb: Public Sub New(keyCodec As FieldCodec(Of TKey), valueCodec As FieldCodec(Of TValue), mapTag As UInteger)
  overload: Google.Protobuf.Collections.MapField`2.Codec.#ctor*
  nameWithType.vb: MapField(Of TKey, TValue).Codec.Codec(FieldCodec(Of TKey), FieldCodec(Of TValue), UInt32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Protobuf.Collections.MapField(Of TKey, TValue).Codec.Codec(Google.Protobuf.FieldCodec(Of TKey), Google.Protobuf.FieldCodec(Of TValue), System.UInt32)
  name.vb: Codec(FieldCodec(Of TKey), FieldCodec(Of TValue), UInt32)
references:
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: false
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.Collections.MapField`2.Codec.#ctor*
  commentId: Overload:Google.Protobuf.Collections.MapField`2.Codec.#ctor
  isExternal: false
  name: Codec
  nameWithType: MapField<TKey, TValue>.Codec.Codec
  fullName: Google.Protobuf.Collections.MapField<TKey, TValue>.Codec.Codec
  nameWithType.vb: MapField(Of TKey, TValue).Codec.Codec
  fullName.vb: Google.Protobuf.Collections.MapField(Of TKey, TValue).Codec.Codec
- uid: Google.Protobuf.FieldCodec{{TKey}}
  commentId: T:Google.Protobuf.FieldCodec{`0}
  parent: Google.Protobuf
  definition: Google.Protobuf.FieldCodec`1
  name: FieldCodec<TKey>
  nameWithType: FieldCodec<TKey>
  fullName: Google.Protobuf.FieldCodec<TKey>
  nameWithType.vb: FieldCodec(Of TKey)
  fullName.vb: Google.Protobuf.FieldCodec(Of TKey)
  name.vb: FieldCodec(Of TKey)
  spec.csharp:
  - uid: Google.Protobuf.FieldCodec`1
    name: FieldCodec
    nameWithType: FieldCodec
    fullName: Google.Protobuf.FieldCodec
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.FieldCodec`1
    name: FieldCodec
    nameWithType: FieldCodec
    fullName: Google.Protobuf.FieldCodec
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.FieldCodec{{TValue}}
  commentId: T:Google.Protobuf.FieldCodec{`1}
  parent: Google.Protobuf
  definition: Google.Protobuf.FieldCodec`1
  name: FieldCodec<TValue>
  nameWithType: FieldCodec<TValue>
  fullName: Google.Protobuf.FieldCodec<TValue>
  nameWithType.vb: FieldCodec(Of TValue)
  fullName.vb: Google.Protobuf.FieldCodec(Of TValue)
  name.vb: FieldCodec(Of TValue)
  spec.csharp:
  - uid: Google.Protobuf.FieldCodec`1
    name: FieldCodec
    nameWithType: FieldCodec
    fullName: Google.Protobuf.FieldCodec
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.FieldCodec`1
    name: FieldCodec
    nameWithType: FieldCodec
    fullName: Google.Protobuf.FieldCodec
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Google.Protobuf.FieldCodec`1
  commentId: T:Google.Protobuf.FieldCodec`1
  isExternal: false
  name: FieldCodec<T>
  nameWithType: FieldCodec<T>
  fullName: Google.Protobuf.FieldCodec<T>
  nameWithType.vb: FieldCodec(Of T)
  fullName.vb: Google.Protobuf.FieldCodec(Of T)
  name.vb: FieldCodec(Of T)
  spec.csharp:
  - uid: Google.Protobuf.FieldCodec`1
    name: FieldCodec
    nameWithType: FieldCodec
    fullName: Google.Protobuf.FieldCodec
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.FieldCodec`1
    name: FieldCodec
    nameWithType: FieldCodec
    fullName: Google.Protobuf.FieldCodec
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: false
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
