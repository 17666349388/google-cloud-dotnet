### YamlMime:ManagedReference
items:
- uid: Google.Protobuf.Reflection.OneofDescriptor
  commentId: T:Google.Protobuf.Reflection.OneofDescriptor
  id: OneofDescriptor
  parent: Google.Protobuf.Reflection
  children:
  - Google.Protobuf.Reflection.OneofDescriptor.Accessor
  - Google.Protobuf.Reflection.OneofDescriptor.ContainingType
  - Google.Protobuf.Reflection.OneofDescriptor.CustomOptions
  - Google.Protobuf.Reflection.OneofDescriptor.Fields
  - Google.Protobuf.Reflection.OneofDescriptor.Name
  langs:
  - csharp
  - vb
  name: OneofDescriptor
  nameWithType: OneofDescriptor
  fullName: Google.Protobuf.Reflection.OneofDescriptor
  type: Class
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/OneofDescriptor.cs
      branch: 3.3.x
      repo: https://github.com/google/protobuf
    id: OneofDescriptor
    path: csharp/src/Google.Protobuf/Reflection/OneofDescriptor.cs
    startLine: 42
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nDescribes a &quot;oneof&quot; field collection in a message type: a set of\nfields of which at most one can be set in any particular message.\n"
  example: []
  syntax:
    content: 'public sealed class OneofDescriptor : DescriptorBase, IDescriptor'
    content.vb: >-
      Public NotInheritable Class OneofDescriptor
          Inherits DescriptorBase
          Implements IDescriptor
  inheritance:
  - System.Object
  - Google.Protobuf.Reflection.DescriptorBase
  implements:
  - Google.Protobuf.Reflection.IDescriptor
  inheritedMembers:
  - Google.Protobuf.Reflection.DescriptorBase.Index
  - Google.Protobuf.Reflection.DescriptorBase.FullName
  - Google.Protobuf.Reflection.DescriptorBase.File
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Protobuf.Reflection.OneofDescriptor.Name
  commentId: P:Google.Protobuf.Reflection.OneofDescriptor.Name
  id: Name
  parent: Google.Protobuf.Reflection.OneofDescriptor
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: OneofDescriptor.Name
  fullName: Google.Protobuf.Reflection.OneofDescriptor.Name
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/OneofDescriptor.cs
      branch: 3.3.x
      repo: https://github.com/google/protobuf
    id: Name
    path: csharp/src/Google.Protobuf/Reflection/OneofDescriptor.cs
    startLine: 62
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nThe brief name of the descriptor&apos;s target.\n"
  example: []
  syntax:
    content: public override string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Name As String
  overridden: Google.Protobuf.Reflection.DescriptorBase.Name
  overload: Google.Protobuf.Reflection.OneofDescriptor.Name*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Google.Protobuf.Reflection.OneofDescriptor.ContainingType
  commentId: P:Google.Protobuf.Reflection.OneofDescriptor.ContainingType
  id: ContainingType
  parent: Google.Protobuf.Reflection.OneofDescriptor
  langs:
  - csharp
  - vb
  name: ContainingType
  nameWithType: OneofDescriptor.ContainingType
  fullName: Google.Protobuf.Reflection.OneofDescriptor.ContainingType
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/OneofDescriptor.cs
      branch: 3.3.x
      repo: https://github.com/google/protobuf
    id: ContainingType
    path: csharp/src/Google.Protobuf/Reflection/OneofDescriptor.cs
    startLine: 70
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nGets the message type containing this oneof.\n"
  example: []
  syntax:
    content: public MessageDescriptor ContainingType { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
      description: "\nThe message type containing this oneof.\n"
    content.vb: Public ReadOnly Property ContainingType As MessageDescriptor
  overload: Google.Protobuf.Reflection.OneofDescriptor.ContainingType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.OneofDescriptor.Fields
  commentId: P:Google.Protobuf.Reflection.OneofDescriptor.Fields
  id: Fields
  parent: Google.Protobuf.Reflection.OneofDescriptor
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: OneofDescriptor.Fields
  fullName: Google.Protobuf.Reflection.OneofDescriptor.Fields
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/OneofDescriptor.cs
      branch: 3.3.x
      repo: https://github.com/google/protobuf
    id: Fields
    path: csharp/src/Google.Protobuf/Reflection/OneofDescriptor.cs
    startLine: 81
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nGets the fields within this oneof, in declaration order.\n"
  example: []
  syntax:
    content: public IList<FieldDescriptor> Fields { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Google.Protobuf.Reflection.FieldDescriptor}
      description: "\nThe fields within this oneof, in declaration order.\n"
    content.vb: Public ReadOnly Property Fields As IList(Of FieldDescriptor)
  overload: Google.Protobuf.Reflection.OneofDescriptor.Fields*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.OneofDescriptor.Accessor
  commentId: P:Google.Protobuf.Reflection.OneofDescriptor.Accessor
  id: Accessor
  parent: Google.Protobuf.Reflection.OneofDescriptor
  langs:
  - csharp
  - vb
  name: Accessor
  nameWithType: OneofDescriptor.Accessor
  fullName: Google.Protobuf.Reflection.OneofDescriptor.Accessor
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/OneofDescriptor.cs
      branch: 3.3.x
      repo: https://github.com/google/protobuf
    id: Accessor
    path: csharp/src/Google.Protobuf/Reflection/OneofDescriptor.cs
    startLine: 90
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nGets an accessor for reflective access to the values associated with the oneof\nin a particular message.\n"
  example: []
  syntax:
    content: public OneofAccessor Accessor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.OneofAccessor
      description: "\nThe accessor used for reflective access.\n"
    content.vb: Public ReadOnly Property Accessor As OneofAccessor
  overload: Google.Protobuf.Reflection.OneofDescriptor.Accessor*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Protobuf.Reflection.OneofDescriptor.CustomOptions
  commentId: P:Google.Protobuf.Reflection.OneofDescriptor.CustomOptions
  id: CustomOptions
  parent: Google.Protobuf.Reflection.OneofDescriptor
  langs:
  - csharp
  - vb
  name: CustomOptions
  nameWithType: OneofDescriptor.CustomOptions
  fullName: Google.Protobuf.Reflection.OneofDescriptor.CustomOptions
  type: Property
  source:
    remote:
      path: csharp/src/Google.Protobuf/Reflection/OneofDescriptor.cs
      branch: 3.3.x
      repo: https://github.com/google/protobuf
    id: CustomOptions
    path: csharp/src/Google.Protobuf/Reflection/OneofDescriptor.cs
    startLine: 95
  assemblies:
  - Google.Protobuf
  namespace: Google.Protobuf.Reflection
  summary: "\nThe (possibly empty) set of custom options for this oneof.\n"
  example: []
  syntax:
    content: public CustomOptions CustomOptions { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.CustomOptions
    content.vb: Public ReadOnly Property CustomOptions As CustomOptions
  overload: Google.Protobuf.Reflection.OneofDescriptor.CustomOptions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: false
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.Reflection.DescriptorBase
  commentId: T:Google.Protobuf.Reflection.DescriptorBase
  parent: Google.Protobuf.Reflection
  isExternal: false
  name: DescriptorBase
  nameWithType: DescriptorBase
  fullName: Google.Protobuf.Reflection.DescriptorBase
- uid: Google.Protobuf.Reflection.IDescriptor
  commentId: T:Google.Protobuf.Reflection.IDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: false
  name: IDescriptor
  nameWithType: IDescriptor
  fullName: Google.Protobuf.Reflection.IDescriptor
- uid: Google.Protobuf.Reflection.DescriptorBase.Index
  commentId: P:Google.Protobuf.Reflection.DescriptorBase.Index
  parent: Google.Protobuf.Reflection.DescriptorBase
  isExternal: false
  name: Index
  nameWithType: DescriptorBase.Index
  fullName: Google.Protobuf.Reflection.DescriptorBase.Index
- uid: Google.Protobuf.Reflection.DescriptorBase.FullName
  commentId: P:Google.Protobuf.Reflection.DescriptorBase.FullName
  parent: Google.Protobuf.Reflection.DescriptorBase
  isExternal: false
  name: FullName
  nameWithType: DescriptorBase.FullName
  fullName: Google.Protobuf.Reflection.DescriptorBase.FullName
- uid: Google.Protobuf.Reflection.DescriptorBase.File
  commentId: P:Google.Protobuf.Reflection.DescriptorBase.File
  parent: Google.Protobuf.Reflection.DescriptorBase
  isExternal: false
  name: File
  nameWithType: DescriptorBase.File
  fullName: Google.Protobuf.Reflection.DescriptorBase.File
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.Reflection.DescriptorBase.Name
  commentId: P:Google.Protobuf.Reflection.DescriptorBase.Name
  parent: Google.Protobuf.Reflection.DescriptorBase
  isExternal: false
  name: Name
  nameWithType: DescriptorBase.Name
  fullName: Google.Protobuf.Reflection.DescriptorBase.Name
- uid: Google.Protobuf.Reflection.OneofDescriptor.Name*
  commentId: Overload:Google.Protobuf.Reflection.OneofDescriptor.Name
  isExternal: false
  name: Name
  nameWithType: OneofDescriptor.Name
  fullName: Google.Protobuf.Reflection.OneofDescriptor.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Protobuf.Reflection.OneofDescriptor.ContainingType*
  commentId: Overload:Google.Protobuf.Reflection.OneofDescriptor.ContainingType
  isExternal: false
  name: ContainingType
  nameWithType: OneofDescriptor.ContainingType
  fullName: Google.Protobuf.Reflection.OneofDescriptor.ContainingType
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: false
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection.OneofDescriptor.Fields*
  commentId: Overload:Google.Protobuf.Reflection.OneofDescriptor.Fields
  isExternal: false
  name: Fields
  nameWithType: OneofDescriptor.Fields
  fullName: Google.Protobuf.Reflection.OneofDescriptor.Fields
- uid: System.Collections.Generic.IList{Google.Protobuf.Reflection.FieldDescriptor}
  commentId: T:System.Collections.Generic.IList{Google.Protobuf.Reflection.FieldDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<FieldDescriptor>
  nameWithType: IList<FieldDescriptor>
  fullName: System.Collections.Generic.IList<Google.Protobuf.Reflection.FieldDescriptor>
  nameWithType.vb: IList(Of FieldDescriptor)
  fullName.vb: System.Collections.Generic.IList(Of Google.Protobuf.Reflection.FieldDescriptor)
  name.vb: IList(Of FieldDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.Reflection.FieldDescriptor
    name: FieldDescriptor
    nameWithType: FieldDescriptor
    fullName: Google.Protobuf.Reflection.FieldDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.Reflection.FieldDescriptor
    name: FieldDescriptor
    nameWithType: FieldDescriptor
    fullName: Google.Protobuf.Reflection.FieldDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Protobuf.Reflection.OneofDescriptor.Accessor*
  commentId: Overload:Google.Protobuf.Reflection.OneofDescriptor.Accessor
  isExternal: false
  name: Accessor
  nameWithType: OneofDescriptor.Accessor
  fullName: Google.Protobuf.Reflection.OneofDescriptor.Accessor
- uid: Google.Protobuf.Reflection.OneofAccessor
  commentId: T:Google.Protobuf.Reflection.OneofAccessor
  parent: Google.Protobuf.Reflection
  isExternal: false
  name: OneofAccessor
  nameWithType: OneofAccessor
  fullName: Google.Protobuf.Reflection.OneofAccessor
- uid: Google.Protobuf.Reflection.OneofDescriptor.CustomOptions*
  commentId: Overload:Google.Protobuf.Reflection.OneofDescriptor.CustomOptions
  isExternal: false
  name: CustomOptions
  nameWithType: OneofDescriptor.CustomOptions
  fullName: Google.Protobuf.Reflection.OneofDescriptor.CustomOptions
- uid: Google.Protobuf.Reflection.CustomOptions
  commentId: T:Google.Protobuf.Reflection.CustomOptions
  parent: Google.Protobuf.Reflection
  isExternal: false
  name: CustomOptions
  nameWithType: CustomOptions
  fullName: Google.Protobuf.Reflection.CustomOptions
