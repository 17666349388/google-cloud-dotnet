### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.Grpc.ServerStreamingBase`1
  commentId: T:Google.Api.Gax.Grpc.ServerStreamingBase`1
  id: ServerStreamingBase`1
  parent: Google.Api.Gax.Grpc
  children:
  - Google.Api.Gax.Grpc.ServerStreamingBase`1.GetResponseStream
  - Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall
  langs:
  - csharp
  - vb
  name: ServerStreamingBase<TResponse>
  nameWithType: ServerStreamingBase<TResponse>
  fullName: Google.Api.Gax.Grpc.ServerStreamingBase<TResponse>
  type: Class
  source:
    remote:
      path: Google.Api.Gax.Grpc/ServerStreamingBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ServerStreamingBase
    path: Google.Api.Gax.Grpc/ServerStreamingBase.cs
    startLine: 19
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nBase class for server streaming RPC methods.\n"
  example: []
  syntax:
    content: public class ServerStreamingBase<TResponse>
    typeParameters:
    - id: TResponse
      description: RPC streaming response type
    content.vb: Public Class ServerStreamingBase(Of TResponse)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ServerStreamingBase(Of TResponse)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Google.Api.Gax.Grpc.ServerStreamingBase(Of TResponse)
  name.vb: ServerStreamingBase(Of TResponse)
- uid: Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall
  commentId: P:Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall
  id: GrpcCall
  parent: Google.Api.Gax.Grpc.ServerStreamingBase`1
  langs:
  - csharp
  - vb
  name: GrpcCall
  nameWithType: ServerStreamingBase<TResponse>.GrpcCall
  fullName: Google.Api.Gax.Grpc.ServerStreamingBase<TResponse>.GrpcCall
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/ServerStreamingBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GrpcCall
    path: Google.Api.Gax.Grpc/ServerStreamingBase.cs
    startLine: 24
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe underlying gRPC duplex streaming call.\n"
  example: []
  syntax:
    content: public virtual AsyncServerStreamingCall<TResponse> GrpcCall { get; }
    parameters: []
    return:
      type: Grpc.Core.AsyncServerStreamingCall{{TResponse}}
    content.vb: Public Overridable ReadOnly Property GrpcCall As AsyncServerStreamingCall(Of TResponse)
  overload: Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall*
  nameWithType.vb: ServerStreamingBase(Of TResponse).GrpcCall
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Google.Api.Gax.Grpc.ServerStreamingBase(Of TResponse).GrpcCall
- uid: Google.Api.Gax.Grpc.ServerStreamingBase`1.GetResponseStream
  commentId: M:Google.Api.Gax.Grpc.ServerStreamingBase`1.GetResponseStream
  id: GetResponseStream
  parent: Google.Api.Gax.Grpc.ServerStreamingBase`1
  langs:
  - csharp
  - vb
  name: GetResponseStream()
  nameWithType: ServerStreamingBase<TResponse>.GetResponseStream()
  fullName: Google.Api.Gax.Grpc.ServerStreamingBase<TResponse>.GetResponseStream()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ServerStreamingBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetResponseStream
    path: Google.Api.Gax.Grpc/ServerStreamingBase.cs
    startLine: 40
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nAsync stream to read streaming responses, exposed as an async sequence.\nThe default implementation will use <xref href=\"Google.Api.Gax.Grpc.ServerStreamingBase%601.GrpcCall\" data-throw-if-not-resolved=\"false\"></xref> to extract a response\nstream, and adapt it to <xref href=\"Google.Api.Gax.Grpc.AsyncResponseStream%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nIf this method is called more than once, all the returned enumerators will be enumerating over the\nsame underlying response stream, which may cause confusion. Additionally, the sequence returned by\nthis method can only be iterated over a single time. Attempting to iterate more than once will cause\nan <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual AsyncResponseStream<TResponse> GetResponseStream()
    return:
      type: Google.Api.Gax.Grpc.AsyncResponseStream{{TResponse}}
    content.vb: Public Overridable Function GetResponseStream As AsyncResponseStream(Of TResponse)
  overload: Google.Api.Gax.Grpc.ServerStreamingBase`1.GetResponseStream*
  nameWithType.vb: ServerStreamingBase(Of TResponse).GetResponseStream()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Api.Gax.Grpc.ServerStreamingBase(Of TResponse).GetResponseStream()
references:
- uid: Google.Api.Gax.Grpc
  commentId: N:Google.Api.Gax.Grpc
  name: Google.Api.Gax.Grpc
  nameWithType: Google.Api.Gax.Grpc
  fullName: Google.Api.Gax.Grpc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall*
  commentId: Overload:Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall
  name: GrpcCall
  nameWithType: ServerStreamingBase<TResponse>.GrpcCall
  fullName: Google.Api.Gax.Grpc.ServerStreamingBase<TResponse>.GrpcCall
  nameWithType.vb: ServerStreamingBase(Of TResponse).GrpcCall
  fullName.vb: Google.Api.Gax.Grpc.ServerStreamingBase(Of TResponse).GrpcCall
- uid: Grpc.Core.AsyncServerStreamingCall{{TResponse}}
  commentId: T:Grpc.Core.AsyncServerStreamingCall{`1}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncServerStreamingCall`1
  name: AsyncServerStreamingCall<TResponse>
  nameWithType: AsyncServerStreamingCall<TResponse>
  fullName: Grpc.Core.AsyncServerStreamingCall<TResponse>
  nameWithType.vb: AsyncServerStreamingCall(Of TResponse)
  fullName.vb: Grpc.Core.AsyncServerStreamingCall(Of TResponse)
  name.vb: AsyncServerStreamingCall(Of TResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: Grpc.Core.AsyncServerStreamingCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: Grpc.Core.AsyncServerStreamingCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.AsyncServerStreamingCall`1
  commentId: T:Grpc.Core.AsyncServerStreamingCall`1
  isExternal: true
  name: AsyncServerStreamingCall<TResponse>
  nameWithType: AsyncServerStreamingCall<TResponse>
  fullName: Grpc.Core.AsyncServerStreamingCall<TResponse>
  nameWithType.vb: AsyncServerStreamingCall(Of TResponse)
  fullName.vb: Grpc.Core.AsyncServerStreamingCall(Of TResponse)
  name.vb: AsyncServerStreamingCall(Of TResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: Grpc.Core.AsyncServerStreamingCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: Grpc.Core.AsyncServerStreamingCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: true
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall
  commentId: P:Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall
  isExternal: true
- uid: Google.Api.Gax.Grpc.AsyncResponseStream`1
  commentId: T:Google.Api.Gax.Grpc.AsyncResponseStream`1
  name: AsyncResponseStream<TResponse>
  nameWithType: AsyncResponseStream<TResponse>
  fullName: Google.Api.Gax.Grpc.AsyncResponseStream<TResponse>
  nameWithType.vb: AsyncResponseStream(Of TResponse)
  fullName.vb: Google.Api.Gax.Grpc.AsyncResponseStream(Of TResponse)
  name.vb: AsyncResponseStream(Of TResponse)
  spec.csharp:
  - uid: Google.Api.Gax.Grpc.AsyncResponseStream`1
    name: AsyncResponseStream
    nameWithType: AsyncResponseStream
    fullName: Google.Api.Gax.Grpc.AsyncResponseStream
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Api.Gax.Grpc.AsyncResponseStream`1
    name: AsyncResponseStream
    nameWithType: AsyncResponseStream
    fullName: Google.Api.Gax.Grpc.AsyncResponseStream
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Google.Api.Gax.Grpc.ServerStreamingBase`1.GetResponseStream*
  commentId: Overload:Google.Api.Gax.Grpc.ServerStreamingBase`1.GetResponseStream
  name: GetResponseStream
  nameWithType: ServerStreamingBase<TResponse>.GetResponseStream
  fullName: Google.Api.Gax.Grpc.ServerStreamingBase<TResponse>.GetResponseStream
  nameWithType.vb: ServerStreamingBase(Of TResponse).GetResponseStream
  fullName.vb: Google.Api.Gax.Grpc.ServerStreamingBase(Of TResponse).GetResponseStream
- uid: Google.Api.Gax.Grpc.AsyncResponseStream{{TResponse}}
  commentId: T:Google.Api.Gax.Grpc.AsyncResponseStream{`1}
  parent: Google.Api.Gax.Grpc
  definition: Google.Api.Gax.Grpc.AsyncResponseStream`1
  name: AsyncResponseStream<TResponse>
  nameWithType: AsyncResponseStream<TResponse>
  fullName: Google.Api.Gax.Grpc.AsyncResponseStream<TResponse>
  nameWithType.vb: AsyncResponseStream(Of TResponse)
  fullName.vb: Google.Api.Gax.Grpc.AsyncResponseStream(Of TResponse)
  name.vb: AsyncResponseStream(Of TResponse)
  spec.csharp:
  - uid: Google.Api.Gax.Grpc.AsyncResponseStream`1
    name: AsyncResponseStream
    nameWithType: AsyncResponseStream
    fullName: Google.Api.Gax.Grpc.AsyncResponseStream
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Api.Gax.Grpc.AsyncResponseStream`1
    name: AsyncResponseStream
    nameWithType: AsyncResponseStream
    fullName: Google.Api.Gax.Grpc.AsyncResponseStream
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
