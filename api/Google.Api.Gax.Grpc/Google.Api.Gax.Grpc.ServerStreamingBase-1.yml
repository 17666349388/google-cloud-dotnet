### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.Grpc.ServerStreamingBase`1
  commentId: T:Google.Api.Gax.Grpc.ServerStreamingBase`1
  id: ServerStreamingBase`1
  parent: Google.Api.Gax.Grpc
  children:
  - Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall
  - Google.Api.Gax.Grpc.ServerStreamingBase`1.ResponseStream
  langs:
  - csharp
  - vb
  name: ServerStreamingBase<TResponse>
  nameWithType: ServerStreamingBase<TResponse>
  fullName: Google.Api.Gax.Grpc.ServerStreamingBase<TResponse>
  type: Class
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/ServerStreamingBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ServerStreamingBase
    path: src/Google.Api.Gax.Grpc/ServerStreamingBase.cs
    startLine: 17
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nBase class for server streaming RPC methods.\n"
  example: []
  syntax:
    content: public class ServerStreamingBase<TResponse>
    typeParameters:
    - id: TResponse
      description: RPC streaming response type
    content.vb: Public Class ServerStreamingBase(Of TResponse)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ServerStreamingBase(Of TResponse)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Google.Api.Gax.Grpc.ServerStreamingBase(Of TResponse)
  name.vb: ServerStreamingBase(Of TResponse)
- uid: Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall
  commentId: P:Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall
  id: GrpcCall
  parent: Google.Api.Gax.Grpc.ServerStreamingBase`1
  langs:
  - csharp
  - vb
  name: GrpcCall
  nameWithType: ServerStreamingBase<TResponse>.GrpcCall
  fullName: Google.Api.Gax.Grpc.ServerStreamingBase<TResponse>.GrpcCall
  type: Property
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/ServerStreamingBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GrpcCall
    path: src/Google.Api.Gax.Grpc/ServerStreamingBase.cs
    startLine: 22
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe underlying gRPC duplex streaming call.\n"
  example: []
  syntax:
    content: public virtual AsyncServerStreamingCall<TResponse> GrpcCall { get; }
    parameters: []
    return:
      type: AsyncServerStreamingCall{{TResponse}}
    content.vb: Public Overridable ReadOnly Property GrpcCall As AsyncServerStreamingCall(Of TResponse)
  overload: Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall*
  nameWithType.vb: ServerStreamingBase(Of TResponse).GrpcCall
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Google.Api.Gax.Grpc.ServerStreamingBase(Of TResponse).GrpcCall
- uid: Google.Api.Gax.Grpc.ServerStreamingBase`1.ResponseStream
  commentId: P:Google.Api.Gax.Grpc.ServerStreamingBase`1.ResponseStream
  id: ResponseStream
  parent: Google.Api.Gax.Grpc.ServerStreamingBase`1
  langs:
  - csharp
  - vb
  name: ResponseStream
  nameWithType: ServerStreamingBase<TResponse>.ResponseStream
  fullName: Google.Api.Gax.Grpc.ServerStreamingBase<TResponse>.ResponseStream
  type: Property
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/ServerStreamingBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ResponseStream
    path: src/Google.Api.Gax.Grpc/ServerStreamingBase.cs
    startLine: 30
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nAsync stream to read streaming responses.\n"
  example: []
  syntax:
    content: public virtual IAsyncEnumerator<TResponse> ResponseStream { get; }
    parameters: []
    return:
      type: IAsyncEnumerator{{TResponse}}
    content.vb: Public Overridable ReadOnly Property ResponseStream As IAsyncEnumerator(Of TResponse)
  overload: Google.Api.Gax.Grpc.ServerStreamingBase`1.ResponseStream*
  nameWithType.vb: ServerStreamingBase(Of TResponse).ResponseStream
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Google.Api.Gax.Grpc.ServerStreamingBase(Of TResponse).ResponseStream
references:
- uid: Google.Api.Gax.Grpc
  commentId: N:Google.Api.Gax.Grpc
  isExternal: false
  name: Google.Api.Gax.Grpc
  nameWithType: Google.Api.Gax.Grpc
  fullName: Google.Api.Gax.Grpc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall*
  commentId: Overload:Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall
  isExternal: false
  name: GrpcCall
  nameWithType: ServerStreamingBase<TResponse>.GrpcCall
  fullName: Google.Api.Gax.Grpc.ServerStreamingBase<TResponse>.GrpcCall
  nameWithType.vb: ServerStreamingBase(Of TResponse).GrpcCall
  fullName.vb: Google.Api.Gax.Grpc.ServerStreamingBase(Of TResponse).GrpcCall
- uid: AsyncServerStreamingCall{{TResponse}}
  commentId: '!:AsyncServerStreamingCall{`1}'
  definition: AsyncServerStreamingCall`1
  name: AsyncServerStreamingCall<TResponse>
  nameWithType: AsyncServerStreamingCall<TResponse>
  fullName: AsyncServerStreamingCall<TResponse>
  nameWithType.vb: AsyncServerStreamingCall(Of TResponse)
  fullName.vb: AsyncServerStreamingCall(Of TResponse)
  name.vb: AsyncServerStreamingCall(Of TResponse)
  spec.csharp:
  - uid: AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: AsyncServerStreamingCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: AsyncServerStreamingCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: AsyncServerStreamingCall`1
  isExternal: true
  name: AsyncServerStreamingCall<>
  nameWithType: AsyncServerStreamingCall<>
  fullName: AsyncServerStreamingCall<>
  nameWithType.vb: AsyncServerStreamingCall(Of )
  fullName.vb: AsyncServerStreamingCall(Of )
  name.vb: AsyncServerStreamingCall(Of )
  spec.csharp:
  - uid: AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: AsyncServerStreamingCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: AsyncServerStreamingCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Grpc.ServerStreamingBase`1.ResponseStream*
  commentId: Overload:Google.Api.Gax.Grpc.ServerStreamingBase`1.ResponseStream
  isExternal: false
  name: ResponseStream
  nameWithType: ServerStreamingBase<TResponse>.ResponseStream
  fullName: Google.Api.Gax.Grpc.ServerStreamingBase<TResponse>.ResponseStream
  nameWithType.vb: ServerStreamingBase(Of TResponse).ResponseStream
  fullName.vb: Google.Api.Gax.Grpc.ServerStreamingBase(Of TResponse).ResponseStream
- uid: IAsyncEnumerator{{TResponse}}
  commentId: '!:IAsyncEnumerator{`1}'
  definition: IAsyncEnumerator`1
  name: IAsyncEnumerator<TResponse>
  nameWithType: IAsyncEnumerator<TResponse>
  fullName: IAsyncEnumerator<TResponse>
  nameWithType.vb: IAsyncEnumerator(Of TResponse)
  fullName.vb: IAsyncEnumerator(Of TResponse)
  name.vb: IAsyncEnumerator(Of TResponse)
  spec.csharp:
  - uid: IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: IAsyncEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: IAsyncEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: IAsyncEnumerator`1
  isExternal: true
  name: IAsyncEnumerator<>
  nameWithType: IAsyncEnumerator<>
  fullName: IAsyncEnumerator<>
  nameWithType.vb: IAsyncEnumerator(Of )
  fullName.vb: IAsyncEnumerator(Of )
  name.vb: IAsyncEnumerator(Of )
  spec.csharp:
  - uid: IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: IAsyncEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: IAsyncEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
