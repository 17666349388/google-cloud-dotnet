### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.Grpc.RetrySettings
  commentId: T:Google.Api.Gax.Grpc.RetrySettings
  id: RetrySettings
  parent: Google.Api.Gax.Grpc
  children:
  - Google.Api.Gax.Grpc.RetrySettings.#ctor(Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Expiration)
  - Google.Api.Gax.Grpc.RetrySettings.#ctor(Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Expiration,System.Predicate{RpcException})
  - Google.Api.Gax.Grpc.RetrySettings.#ctor(Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Expiration,System.Predicate{RpcException},Google.Api.Gax.Grpc.RetrySettings.IJitter)
  - Google.Api.Gax.Grpc.RetrySettings.DefaultFilter
  - Google.Api.Gax.Grpc.RetrySettings.DelayJitter
  - Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes(StatusCode[])
  - Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes(System.Collections.Generic.IEnumerable{StatusCode})
  - Google.Api.Gax.Grpc.RetrySettings.NoJitter
  - Google.Api.Gax.Grpc.RetrySettings.RandomJitter
  - Google.Api.Gax.Grpc.RetrySettings.RetryBackoff
  - Google.Api.Gax.Grpc.RetrySettings.RetryFilter
  - Google.Api.Gax.Grpc.RetrySettings.TimeoutBackoff
  - Google.Api.Gax.Grpc.RetrySettings.TotalExpiration
  - Google.Api.Gax.Grpc.RetrySettings.WithTotalExpiration(Google.Api.Gax.Expiration)
  langs:
  - csharp
  - vb
  name: RetrySettings
  nameWithType: RetrySettings
  fullName: Google.Api.Gax.Grpc.RetrySettings
  type: Class
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: RetrySettings
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 17
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nSettings for retrying RPCs.\n"
  example: []
  syntax:
    content: public sealed class RetrySettings
    content.vb: Public NotInheritable Class RetrySettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Api.Gax.Grpc.RetrySettings.RetryBackoff
  commentId: P:Google.Api.Gax.Grpc.RetrySettings.RetryBackoff
  id: RetryBackoff
  parent: Google.Api.Gax.Grpc.RetrySettings
  langs:
  - csharp
  - vb
  name: RetryBackoff
  nameWithType: RetrySettings.RetryBackoff
  fullName: Google.Api.Gax.Grpc.RetrySettings.RetryBackoff
  type: Property
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: RetryBackoff
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 22
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe backoff policy for the time between retries. This is never null.\n"
  example: []
  syntax:
    content: public BackoffSettings RetryBackoff { get; }
    parameters: []
    return:
      type: Google.Api.Gax.Grpc.BackoffSettings
    content.vb: Public ReadOnly Property RetryBackoff As BackoffSettings
  overload: Google.Api.Gax.Grpc.RetrySettings.RetryBackoff*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.Grpc.RetrySettings.TimeoutBackoff
  commentId: P:Google.Api.Gax.Grpc.RetrySettings.TimeoutBackoff
  id: TimeoutBackoff
  parent: Google.Api.Gax.Grpc.RetrySettings
  langs:
  - csharp
  - vb
  name: TimeoutBackoff
  nameWithType: RetrySettings.TimeoutBackoff
  fullName: Google.Api.Gax.Grpc.RetrySettings.TimeoutBackoff
  type: Property
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: TimeoutBackoff
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 32
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe backoff policy for timeouts of retries. This is never null.\n"
  remarks: "\nThis allows an increasing timeout, initially requesting a fast call,\nthen allowing a bit more time, then a bit more, and so on. However,\nthe timeout will also be adjusted to accommodate <xref href=\"Google.Api.Gax.Grpc.RetrySettings.TotalExpiration\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public BackoffSettings TimeoutBackoff { get; }
    parameters: []
    return:
      type: Google.Api.Gax.Grpc.BackoffSettings
    content.vb: Public ReadOnly Property TimeoutBackoff As BackoffSettings
  overload: Google.Api.Gax.Grpc.RetrySettings.TimeoutBackoff*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.Grpc.RetrySettings.TotalExpiration
  commentId: P:Google.Api.Gax.Grpc.RetrySettings.TotalExpiration
  id: TotalExpiration
  parent: Google.Api.Gax.Grpc.RetrySettings
  langs:
  - csharp
  - vb
  name: TotalExpiration
  nameWithType: RetrySettings.TotalExpiration
  fullName: Google.Api.Gax.Grpc.RetrySettings.TotalExpiration
  type: Property
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: TotalExpiration
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 37
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe total expiration, across all retries. This is never null.\n"
  example: []
  syntax:
    content: public Expiration TotalExpiration { get; }
    parameters: []
    return:
      type: Google.Api.Gax.Expiration
    content.vb: Public ReadOnly Property TotalExpiration As Expiration
  overload: Google.Api.Gax.Grpc.RetrySettings.TotalExpiration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.Grpc.RetrySettings.RetryFilter
  commentId: P:Google.Api.Gax.Grpc.RetrySettings.RetryFilter
  id: RetryFilter
  parent: Google.Api.Gax.Grpc.RetrySettings
  langs:
  - csharp
  - vb
  name: RetryFilter
  nameWithType: RetrySettings.RetryFilter
  fullName: Google.Api.Gax.Grpc.RetrySettings.RetryFilter
  type: Property
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: RetryFilter
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 43
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nA predicate to determine whether or not a particular exception should cause the operation to be retried.\nUsually this is simply a matter of checking the status codes.\n"
  example: []
  syntax:
    content: public Predicate<RpcException> RetryFilter { get; }
    parameters: []
    return:
      type: System.Predicate{RpcException}
    content.vb: Public ReadOnly Property RetryFilter As Predicate(Of RpcException)
  overload: Google.Api.Gax.Grpc.RetrySettings.RetryFilter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.Grpc.RetrySettings.DelayJitter
  commentId: P:Google.Api.Gax.Grpc.RetrySettings.DelayJitter
  id: DelayJitter
  parent: Google.Api.Gax.Grpc.RetrySettings
  langs:
  - csharp
  - vb
  name: DelayJitter
  nameWithType: RetrySettings.DelayJitter
  fullName: Google.Api.Gax.Grpc.RetrySettings.DelayJitter
  type: Property
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: DelayJitter
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 55
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe delay jitter to apply for delays, defaulting to <xref href=\"Google.Api.Gax.Grpc.RetrySettings.RandomJitter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n&quot;Jitter&quot; is used to introduce randomness into the pattern of delays. This is to avoid multiple\nclients performing the same delay pattern starting at the same point in time,\nleading to higher-than-necessary contention. The default jitter simply takes each maximum delay\nand returns an actual delay which is a uniformly random value between 0 and the maximum. This\nis good enough for most applications, but makes precise testing difficult.\n"
  example: []
  syntax:
    content: public RetrySettings.IJitter DelayJitter { get; }
    parameters: []
    return:
      type: Google.Api.Gax.Grpc.RetrySettings.IJitter
    content.vb: Public ReadOnly Property DelayJitter As RetrySettings.IJitter
  overload: Google.Api.Gax.Grpc.RetrySettings.DelayJitter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.Grpc.RetrySettings.#ctor(Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Expiration)
  commentId: M:Google.Api.Gax.Grpc.RetrySettings.#ctor(Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Expiration)
  id: '#ctor(Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Expiration)'
  parent: Google.Api.Gax.Grpc.RetrySettings
  langs:
  - csharp
  - vb
  name: RetrySettings(BackoffSettings, BackoffSettings, Expiration)
  nameWithType: RetrySettings.RetrySettings(BackoffSettings, BackoffSettings, Expiration)
  fullName: Google.Api.Gax.Grpc.RetrySettings.RetrySettings(Google.Api.Gax.Grpc.BackoffSettings, Google.Api.Gax.Grpc.BackoffSettings, Google.Api.Gax.Expiration)
  type: Constructor
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 64
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nConstructs an instance with the given backoff configuration, the default RPC filter and\njitter.\n"
  example: []
  syntax:
    content: public RetrySettings(BackoffSettings retryBackoff, BackoffSettings timeoutBackoff, Expiration totalExpiration)
    parameters:
    - id: retryBackoff
      type: Google.Api.Gax.Grpc.BackoffSettings
      description: The backoff policy for the time between retries. Must not be null.
    - id: timeoutBackoff
      type: Google.Api.Gax.Grpc.BackoffSettings
      description: The backoff policy for timeouts of retries. Must not be null.
    - id: totalExpiration
      type: Google.Api.Gax.Expiration
      description: The total expiration, across all retries. Must not be null.
    content.vb: Public Sub New(retryBackoff As BackoffSettings, timeoutBackoff As BackoffSettings, totalExpiration As Expiration)
  overload: Google.Api.Gax.Grpc.RetrySettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Gax.Grpc.RetrySettings.#ctor(Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Expiration,System.Predicate{RpcException})
  commentId: M:Google.Api.Gax.Grpc.RetrySettings.#ctor(Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Expiration,System.Predicate{RpcException})
  id: '#ctor(Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Expiration,System.Predicate{RpcException})'
  parent: Google.Api.Gax.Grpc.RetrySettings
  langs:
  - csharp
  - vb
  name: RetrySettings(BackoffSettings, BackoffSettings, Expiration, Predicate<RpcException>)
  nameWithType: RetrySettings.RetrySettings(BackoffSettings, BackoffSettings, Expiration, Predicate<RpcException>)
  fullName: Google.Api.Gax.Grpc.RetrySettings.RetrySettings(Google.Api.Gax.Grpc.BackoffSettings, Google.Api.Gax.Grpc.BackoffSettings, Google.Api.Gax.Expiration, System.Predicate<RpcException>)
  type: Constructor
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 79
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nConstructs an instance with the given configuration, and the default jitter.\n"
  example: []
  syntax:
    content: public RetrySettings(BackoffSettings retryBackoff, BackoffSettings timeoutBackoff, Expiration totalExpiration, Predicate<RpcException> retryFilter)
    parameters:
    - id: retryBackoff
      type: Google.Api.Gax.Grpc.BackoffSettings
      description: The backoff policy for the time between retries. Must not be null.
    - id: timeoutBackoff
      type: Google.Api.Gax.Grpc.BackoffSettings
      description: The backoff policy for timeouts of retries. Must not be null.
    - id: totalExpiration
      type: Google.Api.Gax.Expiration
      description: The total expiration, across all retries. Must not be null.
    - id: retryFilter
      type: System.Predicate{RpcException}
      description: >-
        A predicate to determine whether or not a particular exception should cause the operation to be retried,

        or null for the default filter.
    content.vb: Public Sub New(retryBackoff As BackoffSettings, timeoutBackoff As BackoffSettings, totalExpiration As Expiration, retryFilter As Predicate(Of RpcException))
  overload: Google.Api.Gax.Grpc.RetrySettings.#ctor*
  nameWithType.vb: RetrySettings.RetrySettings(BackoffSettings, BackoffSettings, Expiration, Predicate(Of RpcException))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.RetrySettings.RetrySettings(Google.Api.Gax.Grpc.BackoffSettings, Google.Api.Gax.Grpc.BackoffSettings, Google.Api.Gax.Expiration, System.Predicate(Of RpcException))
  name.vb: RetrySettings(BackoffSettings, BackoffSettings, Expiration, Predicate(Of RpcException))
- uid: Google.Api.Gax.Grpc.RetrySettings.#ctor(Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Expiration,System.Predicate{RpcException},Google.Api.Gax.Grpc.RetrySettings.IJitter)
  commentId: M:Google.Api.Gax.Grpc.RetrySettings.#ctor(Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Expiration,System.Predicate{RpcException},Google.Api.Gax.Grpc.RetrySettings.IJitter)
  id: '#ctor(Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Grpc.BackoffSettings,Google.Api.Gax.Expiration,System.Predicate{RpcException},Google.Api.Gax.Grpc.RetrySettings.IJitter)'
  parent: Google.Api.Gax.Grpc.RetrySettings
  langs:
  - csharp
  - vb
  name: RetrySettings(BackoffSettings, BackoffSettings, Expiration, Predicate<RpcException>, RetrySettings.IJitter)
  nameWithType: RetrySettings.RetrySettings(BackoffSettings, BackoffSettings, Expiration, Predicate<RpcException>, RetrySettings.IJitter)
  fullName: Google.Api.Gax.Grpc.RetrySettings.RetrySettings(Google.Api.Gax.Grpc.BackoffSettings, Google.Api.Gax.Grpc.BackoffSettings, Google.Api.Gax.Expiration, System.Predicate<RpcException>, Google.Api.Gax.Grpc.RetrySettings.IJitter)
  type: Constructor
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 96
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nConstructs an instance with the given configuration.\n"
  example: []
  syntax:
    content: public RetrySettings(BackoffSettings retryBackoff, BackoffSettings timeoutBackoff, Expiration totalExpiration, Predicate<RpcException> retryFilter, RetrySettings.IJitter delayJitter)
    parameters:
    - id: retryBackoff
      type: Google.Api.Gax.Grpc.BackoffSettings
      description: The backoff policy for the time between retries. Must not be null.
    - id: timeoutBackoff
      type: Google.Api.Gax.Grpc.BackoffSettings
      description: The backoff policy for timeouts of retries. Must not be null.
    - id: totalExpiration
      type: Google.Api.Gax.Expiration
      description: The total expiration, across all retries. Must not be null.
    - id: retryFilter
      type: System.Predicate{RpcException}
      description: >-
        A predicate to determine whether or not a particular exception should cause the operation to be retried,

        or null for the default filter.
    - id: delayJitter
      type: Google.Api.Gax.Grpc.RetrySettings.IJitter
      description: The delay jitter to apply for delays, or null for the defautl (random) jitter.
    content.vb: Public Sub New(retryBackoff As BackoffSettings, timeoutBackoff As BackoffSettings, totalExpiration As Expiration, retryFilter As Predicate(Of RpcException), delayJitter As RetrySettings.IJitter)
  overload: Google.Api.Gax.Grpc.RetrySettings.#ctor*
  nameWithType.vb: RetrySettings.RetrySettings(BackoffSettings, BackoffSettings, Expiration, Predicate(Of RpcException), RetrySettings.IJitter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.RetrySettings.RetrySettings(Google.Api.Gax.Grpc.BackoffSettings, Google.Api.Gax.Grpc.BackoffSettings, Google.Api.Gax.Expiration, System.Predicate(Of RpcException), Google.Api.Gax.Grpc.RetrySettings.IJitter)
  name.vb: RetrySettings(BackoffSettings, BackoffSettings, Expiration, Predicate(Of RpcException), RetrySettings.IJitter)
- uid: Google.Api.Gax.Grpc.RetrySettings.RandomJitter
  commentId: P:Google.Api.Gax.Grpc.RetrySettings.RandomJitter
  id: RandomJitter
  parent: Google.Api.Gax.Grpc.RetrySettings
  langs:
  - csharp
  - vb
  name: RandomJitter
  nameWithType: RetrySettings.RandomJitter
  fullName: Google.Api.Gax.Grpc.RetrySettings.RandomJitter
  type: Property
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: RandomJitter
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 128
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe default jitter which returns a uniformly distributed random delay between 0 and\nthe specified maximum.\n"
  example: []
  syntax:
    content: public static RetrySettings.IJitter RandomJitter { get; }
    parameters: []
    return:
      type: Google.Api.Gax.Grpc.RetrySettings.IJitter
    content.vb: Public Shared ReadOnly Property RandomJitter As RetrySettings.IJitter
  overload: Google.Api.Gax.Grpc.RetrySettings.RandomJitter*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Api.Gax.Grpc.RetrySettings.NoJitter
  commentId: P:Google.Api.Gax.Grpc.RetrySettings.NoJitter
  id: NoJitter
  parent: Google.Api.Gax.Grpc.RetrySettings
  langs:
  - csharp
  - vb
  name: NoJitter
  nameWithType: RetrySettings.NoJitter
  fullName: Google.Api.Gax.Grpc.RetrySettings.NoJitter
  type: Property
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: NoJitter
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 133
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nA jitter which simply returns the specified maximum delay.\n"
  example: []
  syntax:
    content: public static RetrySettings.IJitter NoJitter { get; }
    parameters: []
    return:
      type: Google.Api.Gax.Grpc.RetrySettings.IJitter
    content.vb: Public Shared ReadOnly Property NoJitter As RetrySettings.IJitter
  overload: Google.Api.Gax.Grpc.RetrySettings.NoJitter*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Api.Gax.Grpc.RetrySettings.DefaultFilter
  commentId: P:Google.Api.Gax.Grpc.RetrySettings.DefaultFilter
  id: DefaultFilter
  parent: Google.Api.Gax.Grpc.RetrySettings
  langs:
  - csharp
  - vb
  name: DefaultFilter
  nameWithType: RetrySettings.DefaultFilter
  fullName: Google.Api.Gax.Grpc.RetrySettings.DefaultFilter
  type: Property
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: DefaultFilter
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 140
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe default retry filter, which retries operations which fail due to a status code of &quot;not found&quot;.\n"
  example: []
  syntax:
    content: public static Predicate<RpcException> DefaultFilter { get; }
    parameters: []
    return:
      type: System.Predicate{RpcException}
    content.vb: Public Shared ReadOnly Property DefaultFilter As Predicate(Of RpcException)
  overload: Google.Api.Gax.Grpc.RetrySettings.DefaultFilter*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes(StatusCode[])
  commentId: M:Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes(StatusCode[])
  id: FilterForStatusCodes(StatusCode[])
  parent: Google.Api.Gax.Grpc.RetrySettings
  langs:
  - csharp
  - vb
  name: FilterForStatusCodes(StatusCode[])
  nameWithType: RetrySettings.FilterForStatusCodes(StatusCode[])
  fullName: Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes(StatusCode[])
  type: Method
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: FilterForStatusCodes
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 147
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nCreates a retry filter based on status codes.\n"
  example: []
  syntax:
    content: public static Predicate<RpcException> FilterForStatusCodes(params StatusCode[] statusCodes)
    parameters:
    - id: statusCodes
      type: StatusCode[]
      description: The status codes to retry. Must not be null.
    return:
      type: System.Predicate{RpcException}
      description: A retry filter based on status codes.
    content.vb: Public Shared Function FilterForStatusCodes(ParamArray statusCodes As StatusCode()) As Predicate(Of RpcException)
  overload: Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes*
  nameWithType.vb: RetrySettings.FilterForStatusCodes(StatusCode())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes(StatusCode())
  name.vb: FilterForStatusCodes(StatusCode())
- uid: Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes(System.Collections.Generic.IEnumerable{StatusCode})
  commentId: M:Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes(System.Collections.Generic.IEnumerable{StatusCode})
  id: FilterForStatusCodes(System.Collections.Generic.IEnumerable{StatusCode})
  parent: Google.Api.Gax.Grpc.RetrySettings
  langs:
  - csharp
  - vb
  name: FilterForStatusCodes(IEnumerable<StatusCode>)
  nameWithType: RetrySettings.FilterForStatusCodes(IEnumerable<StatusCode>)
  fullName: Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes(System.Collections.Generic.IEnumerable<StatusCode>)
  type: Method
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: FilterForStatusCodes
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 155
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nCreates a retry filter based on status codes.\n"
  example: []
  syntax:
    content: public static Predicate<RpcException> FilterForStatusCodes(IEnumerable<StatusCode> statusCodes)
    parameters:
    - id: statusCodes
      type: System.Collections.Generic.IEnumerable{StatusCode}
      description: The status codes to retry. Must not be null.
    return:
      type: System.Predicate{RpcException}
      description: A retry filter based on status codes.
    content.vb: Public Shared Function FilterForStatusCodes(statusCodes As IEnumerable(Of StatusCode)) As Predicate(Of RpcException)
  overload: Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes*
  nameWithType.vb: RetrySettings.FilterForStatusCodes(IEnumerable(Of StatusCode))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes(System.Collections.Generic.IEnumerable(Of StatusCode))
  name.vb: FilterForStatusCodes(IEnumerable(Of StatusCode))
- uid: Google.Api.Gax.Grpc.RetrySettings.WithTotalExpiration(Google.Api.Gax.Expiration)
  commentId: M:Google.Api.Gax.Grpc.RetrySettings.WithTotalExpiration(Google.Api.Gax.Expiration)
  id: WithTotalExpiration(Google.Api.Gax.Expiration)
  parent: Google.Api.Gax.Grpc.RetrySettings
  langs:
  - csharp
  - vb
  name: WithTotalExpiration(Expiration)
  nameWithType: RetrySettings.WithTotalExpiration(Expiration)
  fullName: Google.Api.Gax.Grpc.RetrySettings.WithTotalExpiration(Google.Api.Gax.Expiration)
  type: Method
  source:
    remote:
      path: src/Google.Api.Gax.Grpc/RetrySettings.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WithTotalExpiration
    path: src/Google.Api.Gax.Grpc/RetrySettings.cs
    startLine: 166
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nBuilds a new RetrySettings which is identical to this one, but with the given expiration.\n"
  example: []
  syntax:
    content: public RetrySettings WithTotalExpiration(Expiration expiration)
    parameters:
    - id: expiration
      type: Google.Api.Gax.Expiration
      description: New expiration
    return:
      type: Google.Api.Gax.Grpc.RetrySettings
    content.vb: Public Function WithTotalExpiration(expiration As Expiration) As RetrySettings
  overload: Google.Api.Gax.Grpc.RetrySettings.WithTotalExpiration*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Api.Gax.Grpc
  commentId: N:Google.Api.Gax.Grpc
  isExternal: false
  name: Google.Api.Gax.Grpc
  nameWithType: Google.Api.Gax.Grpc
  fullName: Google.Api.Gax.Grpc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Api.Gax.Grpc.RetrySettings.RetryBackoff*
  commentId: Overload:Google.Api.Gax.Grpc.RetrySettings.RetryBackoff
  isExternal: false
  name: RetryBackoff
  nameWithType: RetrySettings.RetryBackoff
  fullName: Google.Api.Gax.Grpc.RetrySettings.RetryBackoff
- uid: Google.Api.Gax.Grpc.BackoffSettings
  commentId: T:Google.Api.Gax.Grpc.BackoffSettings
  parent: Google.Api.Gax.Grpc
  isExternal: false
  name: BackoffSettings
  nameWithType: BackoffSettings
  fullName: Google.Api.Gax.Grpc.BackoffSettings
- uid: Google.Api.Gax.Grpc.RetrySettings.TotalExpiration
  commentId: P:Google.Api.Gax.Grpc.RetrySettings.TotalExpiration
- uid: Google.Api.Gax.Grpc.RetrySettings.TimeoutBackoff*
  commentId: Overload:Google.Api.Gax.Grpc.RetrySettings.TimeoutBackoff
  isExternal: false
  name: TimeoutBackoff
  nameWithType: RetrySettings.TimeoutBackoff
  fullName: Google.Api.Gax.Grpc.RetrySettings.TimeoutBackoff
- uid: Google.Api.Gax.Grpc.RetrySettings.TotalExpiration*
  commentId: Overload:Google.Api.Gax.Grpc.RetrySettings.TotalExpiration
  isExternal: false
  name: TotalExpiration
  nameWithType: RetrySettings.TotalExpiration
  fullName: Google.Api.Gax.Grpc.RetrySettings.TotalExpiration
- uid: Google.Api.Gax.Expiration
  commentId: T:Google.Api.Gax.Expiration
  parent: Google.Api.Gax
  isExternal: false
  name: Expiration
  nameWithType: Expiration
  fullName: Google.Api.Gax.Expiration
- uid: Google.Api.Gax
  commentId: N:Google.Api.Gax
  isExternal: false
  name: Google.Api.Gax
  nameWithType: Google.Api.Gax
  fullName: Google.Api.Gax
- uid: Google.Api.Gax.Grpc.RetrySettings.RetryFilter*
  commentId: Overload:Google.Api.Gax.Grpc.RetrySettings.RetryFilter
  isExternal: false
  name: RetryFilter
  nameWithType: RetrySettings.RetryFilter
  fullName: Google.Api.Gax.Grpc.RetrySettings.RetryFilter
- uid: System.Predicate{RpcException}
  commentId: T:System.Predicate{RpcException}
  parent: System
  definition: System.Predicate`1
  name: Predicate<RpcException>
  nameWithType: Predicate<RpcException>
  fullName: System.Predicate<RpcException>
  nameWithType.vb: Predicate(Of RpcException)
  fullName.vb: System.Predicate(Of RpcException)
  name.vb: Predicate(Of RpcException)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RpcException
    name: RpcException
    nameWithType: RpcException
    fullName: RpcException
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RpcException
    name: RpcException
    nameWithType: RpcException
    fullName: RpcException
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Grpc.RetrySettings.RandomJitter
  commentId: P:Google.Api.Gax.Grpc.RetrySettings.RandomJitter
- uid: Google.Api.Gax.Grpc.RetrySettings.DelayJitter*
  commentId: Overload:Google.Api.Gax.Grpc.RetrySettings.DelayJitter
  isExternal: false
  name: DelayJitter
  nameWithType: RetrySettings.DelayJitter
  fullName: Google.Api.Gax.Grpc.RetrySettings.DelayJitter
- uid: Google.Api.Gax.Grpc.RetrySettings.IJitter
  commentId: T:Google.Api.Gax.Grpc.RetrySettings.IJitter
  parent: Google.Api.Gax.Grpc
  isExternal: false
  name: RetrySettings.IJitter
  nameWithType: RetrySettings.IJitter
  fullName: Google.Api.Gax.Grpc.RetrySettings.IJitter
- uid: Google.Api.Gax.Grpc.RetrySettings.#ctor*
  commentId: Overload:Google.Api.Gax.Grpc.RetrySettings.#ctor
  isExternal: false
  name: RetrySettings
  nameWithType: RetrySettings.RetrySettings
  fullName: Google.Api.Gax.Grpc.RetrySettings.RetrySettings
- uid: Google.Api.Gax.Grpc.RetrySettings.RandomJitter*
  commentId: Overload:Google.Api.Gax.Grpc.RetrySettings.RandomJitter
  isExternal: false
  name: RandomJitter
  nameWithType: RetrySettings.RandomJitter
  fullName: Google.Api.Gax.Grpc.RetrySettings.RandomJitter
- uid: Google.Api.Gax.Grpc.RetrySettings.NoJitter*
  commentId: Overload:Google.Api.Gax.Grpc.RetrySettings.NoJitter
  isExternal: false
  name: NoJitter
  nameWithType: RetrySettings.NoJitter
  fullName: Google.Api.Gax.Grpc.RetrySettings.NoJitter
- uid: Google.Api.Gax.Grpc.RetrySettings.DefaultFilter*
  commentId: Overload:Google.Api.Gax.Grpc.RetrySettings.DefaultFilter
  isExternal: false
  name: DefaultFilter
  nameWithType: RetrySettings.DefaultFilter
  fullName: Google.Api.Gax.Grpc.RetrySettings.DefaultFilter
- uid: Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes*
  commentId: Overload:Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes
  isExternal: false
  name: FilterForStatusCodes
  nameWithType: RetrySettings.FilterForStatusCodes
  fullName: Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes
- uid: StatusCode[]
  name: StatusCode[]
  nameWithType: StatusCode[]
  fullName: StatusCode[]
  nameWithType.vb: StatusCode()
  fullName.vb: StatusCode()
  name.vb: StatusCode()
  spec.csharp:
  - uid: StatusCode
    name: StatusCode
    nameWithType: StatusCode
    fullName: StatusCode
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: StatusCode
    name: StatusCode
    nameWithType: StatusCode
    fullName: StatusCode
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{StatusCode}
  commentId: T:System.Collections.Generic.IEnumerable{StatusCode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<StatusCode>
  nameWithType: IEnumerable<StatusCode>
  fullName: System.Collections.Generic.IEnumerable<StatusCode>
  nameWithType.vb: IEnumerable(Of StatusCode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of StatusCode)
  name.vb: IEnumerable(Of StatusCode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: StatusCode
    name: StatusCode
    nameWithType: StatusCode
    fullName: StatusCode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: StatusCode
    name: StatusCode
    nameWithType: StatusCode
    fullName: StatusCode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Api.Gax.Grpc.RetrySettings.WithTotalExpiration*
  commentId: Overload:Google.Api.Gax.Grpc.RetrySettings.WithTotalExpiration
  isExternal: false
  name: WithTotalExpiration
  nameWithType: RetrySettings.WithTotalExpiration
  fullName: Google.Api.Gax.Grpc.RetrySettings.WithTotalExpiration
- uid: Google.Api.Gax.Grpc.RetrySettings
  commentId: T:Google.Api.Gax.Grpc.RetrySettings
  parent: Google.Api.Gax.Grpc
  isExternal: false
  name: RetrySettings
  nameWithType: RetrySettings
  fullName: Google.Api.Gax.Grpc.RetrySettings
