### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1
  commentId: T:Google.Api.Gax.Grpc.ClientBuilderBase`1
  id: ClientBuilderBase`1
  parent: Google.Api.Gax.Grpc
  children:
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.#ctor
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.Build
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.BuildAsync(System.Threading.CancellationToken)
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.CallInvoker
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.CanUseChannelPool
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.ChannelCredentials
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.CopyCommonSettings``1(Google.Api.Gax.Grpc.ClientBuilderBase{``0})
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.CreateCallInvoker
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.CreateCallInvokerAsync(System.Threading.CancellationToken)
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.CredentialsPath
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.DefaultGrpcAdapter
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.EmulatorDetection
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.Endpoint
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentials
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentialsAsync(System.Threading.CancellationToken)
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelOptions
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelPool
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.GetDefaultEndpoint
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.GetDefaultScopes
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.GetEmulatorEnvironment(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.String})
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.GrpcAdapter
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.JsonCredentials
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.Scopes
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.TokenAccessMethod
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.UserAgent
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.Validate
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.ValidateAtMostOneNotNull(System.String,System.Object[])
  - Google.Api.Gax.Grpc.ClientBuilderBase`1.ValidateOptionExcludesOthers(System.String,System.Object,System.Object[])
  langs:
  - csharp
  - vb
  name: ClientBuilderBase<TClient>
  nameWithType: ClientBuilderBase<TClient>
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>
  type: Class
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ClientBuilderBase
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 22
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nBase class for API-specific builders.\n"
  example: []
  syntax:
    content: public abstract class ClientBuilderBase<TClient>
    typeParameters:
    - id: TClient
      description: The type of client created by this builder.
    content.vb: Public MustInherit Class ClientBuilderBase(Of TClient)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ClientBuilderBase(Of TClient)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient)
  name.vb: ClientBuilderBase(Of TClient)
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.Endpoint
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.Endpoint
  id: Endpoint
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: Endpoint
  nameWithType: ClientBuilderBase<TClient>.Endpoint
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.Endpoint
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Endpoint
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 31
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe endpoint to connect to, or null to use the default endpoint.\n"
  example: []
  syntax:
    content: public string Endpoint { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Endpoint As String
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.Endpoint*
  nameWithType.vb: ClientBuilderBase(Of TClient).Endpoint
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).Endpoint
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.Scopes
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.Scopes
  id: Scopes
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: Scopes
  nameWithType: ClientBuilderBase<TClient>.Scopes
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.Scopes
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Scopes
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 36
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe scopes to use, or null to use the default scopes.\n"
  example: []
  syntax:
    content: public IReadOnlyList<string> Scopes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.String}
    content.vb: Public Property Scopes As IReadOnlyList(Of String)
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.Scopes*
  nameWithType.vb: ClientBuilderBase(Of TClient).Scopes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).Scopes
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.ChannelCredentials
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.ChannelCredentials
  id: ChannelCredentials
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: ChannelCredentials
  nameWithType: ClientBuilderBase<TClient>.ChannelCredentials
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.ChannelCredentials
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ChannelCredentials
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 41
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe channel credentials to use, or null if credentials are being provided in a different way.\n"
  example: []
  syntax:
    content: public ChannelCredentials ChannelCredentials { get; set; }
    parameters: []
    return:
      type: Grpc.Core.ChannelCredentials
    content.vb: Public Property ChannelCredentials As ChannelCredentials
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.ChannelCredentials*
  nameWithType.vb: ClientBuilderBase(Of TClient).ChannelCredentials
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).ChannelCredentials
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.CredentialsPath
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.CredentialsPath
  id: CredentialsPath
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: CredentialsPath
  nameWithType: ClientBuilderBase<TClient>.CredentialsPath
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.CredentialsPath
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CredentialsPath
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 46
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe path to the credentials file to use, or null if credentials are being provided in a different way.\n"
  example: []
  syntax:
    content: public string CredentialsPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CredentialsPath As String
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.CredentialsPath*
  nameWithType.vb: ClientBuilderBase(Of TClient).CredentialsPath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).CredentialsPath
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.JsonCredentials
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.JsonCredentials
  id: JsonCredentials
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: JsonCredentials
  nameWithType: ClientBuilderBase<TClient>.JsonCredentials
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.JsonCredentials
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: JsonCredentials
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 51
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe credentials to use as a JSON string, or null if credentials are being provided in a different way.\n"
  example: []
  syntax:
    content: public string JsonCredentials { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property JsonCredentials As String
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.JsonCredentials*
  nameWithType.vb: ClientBuilderBase(Of TClient).JsonCredentials
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).JsonCredentials
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.TokenAccessMethod
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.TokenAccessMethod
  id: TokenAccessMethod
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: TokenAccessMethod
  nameWithType: ClientBuilderBase<TClient>.TokenAccessMethod
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.TokenAccessMethod
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: TokenAccessMethod
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 62
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe token access method to use, or null if credentials are being provided in a different way.\n"
  remarks: "\n<p>\nTo use a GoogleCredential for credentials, set this property using a method group conversion, e.g.\n<code>TokenAccessMethod = credential.GetAccessTokenForRequestAsync</code>\n</p>\n"
  example: []
  syntax:
    content: public Func<string, CancellationToken, Task<string>> TokenAccessMethod { get; set; }
    parameters: []
    return:
      type: System.Func{System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.String}}
    content.vb: Public Property TokenAccessMethod As Func(Of String, CancellationToken, Task(Of String))
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.TokenAccessMethod*
  nameWithType.vb: ClientBuilderBase(Of TClient).TokenAccessMethod
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).TokenAccessMethod
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.CallInvoker
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.CallInvoker
  id: CallInvoker
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: CallInvoker
  nameWithType: ClientBuilderBase<TClient>.CallInvoker
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.CallInvoker
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CallInvoker
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 67
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe call invoker to use, or null to create the call invoker when the client is built.\n"
  example: []
  syntax:
    content: public CallInvoker CallInvoker { get; set; }
    parameters: []
    return:
      type: Grpc.Core.CallInvoker
    content.vb: Public Property CallInvoker As CallInvoker
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.CallInvoker*
  nameWithType.vb: ClientBuilderBase(Of TClient).CallInvoker
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).CallInvoker
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.UserAgent
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.UserAgent
  id: UserAgent
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: UserAgent
  nameWithType: ClientBuilderBase<TClient>.UserAgent
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.UserAgent
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: UserAgent
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 72
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nA custom user agent to specify in the channel metadata, or null if no custom user agent is required.\n"
  example: []
  syntax:
    content: public string UserAgent { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserAgent As String
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.UserAgent*
  nameWithType.vb: ClientBuilderBase(Of TClient).UserAgent
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).UserAgent
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GrpcAdapter
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.GrpcAdapter
  id: GrpcAdapter
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: GrpcAdapter
  nameWithType: ClientBuilderBase<TClient>.GrpcAdapter
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GrpcAdapter
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GrpcAdapter
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 77
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe gRPC implementation to use, or null to use the default implementation.\n"
  example: []
  syntax:
    content: public GrpcAdapter GrpcAdapter { get; set; }
    parameters: []
    return:
      type: Google.Api.Gax.Grpc.GrpcAdapter
    content.vb: Public Property GrpcAdapter As GrpcAdapter
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.GrpcAdapter*
  nameWithType.vb: ClientBuilderBase(Of TClient).GrpcAdapter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GrpcAdapter
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.EmulatorDetection
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.EmulatorDetection
  id: EmulatorDetection
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: EmulatorDetection
  nameWithType: ClientBuilderBase<TClient>.EmulatorDetection
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.EmulatorDetection
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: EmulatorDetection
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 85
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe emulator detection policy to apply when building a client. Derived classes which support\nemulators should create public properties which delegate to this one. The default value is\n<xref href=\"Google.Api.Gax.EmulatorDetection.None\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected EmulatorDetection EmulatorDetection { get; set; }
    parameters: []
    return:
      type: Google.Api.Gax.EmulatorDetection
    content.vb: Protected Property EmulatorDetection As EmulatorDetection
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.EmulatorDetection*
  nameWithType.vb: ClientBuilderBase(Of TClient).EmulatorDetection
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).EmulatorDetection
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.#ctor
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.#ctor
  id: '#ctor'
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: ClientBuilderBase()
  nameWithType: ClientBuilderBase<TClient>.ClientBuilderBase()
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.ClientBuilderBase()
  type: Constructor
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: .ctor
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 96
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nCreates a new instance with no settings.\n"
  example: []
  syntax:
    content: protected ClientBuilderBase()
    content.vb: Protected Sub New
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.#ctor*
  nameWithType.vb: ClientBuilderBase(Of TClient).ClientBuilderBase()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).ClientBuilderBase()
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.CopyCommonSettings``1(Google.Api.Gax.Grpc.ClientBuilderBase{``0})
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.CopyCommonSettings``1(Google.Api.Gax.Grpc.ClientBuilderBase{``0})
  id: CopyCommonSettings``1(Google.Api.Gax.Grpc.ClientBuilderBase{``0})
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: CopyCommonSettings<TOther>(ClientBuilderBase<TOther>)
  nameWithType: ClientBuilderBase<TClient>.CopyCommonSettings<TOther>(ClientBuilderBase<TOther>)
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.CopyCommonSettings<TOther>(Google.Api.Gax.Grpc.ClientBuilderBase<TOther>)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CopyCommonSettings
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 105
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nCopies common settings from the specified builder into this one. This is a shallow copy.\n"
  example: []
  syntax:
    content: protected void CopyCommonSettings<TOther>(ClientBuilderBase<TOther> source)
    parameters:
    - id: source
      type: Google.Api.Gax.Grpc.ClientBuilderBase{{TOther}}
      description: The builder to copy from.
    typeParameters:
    - id: TOther
      description: The other client type
    content.vb: Protected Sub CopyCommonSettings(Of TOther)(source As ClientBuilderBase(Of TOther))
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.CopyCommonSettings*
  nameWithType.vb: ClientBuilderBase(Of TClient).CopyCommonSettings(Of TOther)(ClientBuilderBase(Of TOther))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).CopyCommonSettings(Of TOther)(Google.Api.Gax.Grpc.ClientBuilderBase(Of TOther))
  name.vb: CopyCommonSettings(Of TOther)(ClientBuilderBase(Of TOther))
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.Validate
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.Validate
  id: Validate
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ClientBuilderBase<TClient>.Validate()
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.Validate()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Validate
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 130
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nValidates that the builder is in a consistent state for building. For example, it&apos;s invalid to call\n<xref href=\"Google.Api.Gax.Grpc.ClientBuilderBase%601.Build\" data-throw-if-not-resolved=\"false\"></xref> on an instance which has both JSON credentials and a credentials path specified.\n"
  example: []
  syntax:
    content: protected virtual void Validate()
    content.vb: Protected Overridable Sub Validate
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.Validate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The builder is in an invalid state.
  nameWithType.vb: ClientBuilderBase(Of TClient).Validate()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).Validate()
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetEmulatorEnvironment(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.String})
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetEmulatorEnvironment(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.String})
  id: GetEmulatorEnvironment(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.String})
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: GetEmulatorEnvironment(IEnumerable<String>, IEnumerable<String>, Func<String, String>)
  nameWithType: ClientBuilderBase<TClient>.GetEmulatorEnvironment(IEnumerable<String>, IEnumerable<String>, Func<String, String>)
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GetEmulatorEnvironment(System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>, System.Func<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetEmulatorEnvironment
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 166
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nPerforms basic emulator detection and validation based on the given environment variables.\nThis method is expected to be called by a derived class that supports emulators, in order to perform the common\nwork of checking whether the emulator is configured in the environment.\n"
  remarks: "\n<p>\nIf the emulator should not be used, either due to being disabled in <xref href=\"Google.Api.Gax.Grpc.ClientBuilderBase%601.EmulatorDetection\" data-throw-if-not-resolved=\"false\"></xref> or\nthe appropriate environment variables not being set, this method returns null.\n</p>\n<p>\nOtherwise, a dictionary is returned mapping every value in <code data-dev-comment-type=\"paramref\" class=\"paramref\">allEmulatorEnvironmentVariables</code> to the value in\nthe environment. Any missing, empty or whitespace-only values are mapped to a null reference in the returned dictionary, but\nthe entry will still be present (so callers can use an indexer with the returned dictionary for every environment variable passed in).\n</p>\n"
  example: []
  syntax:
    content: protected Dictionary<string, string> GetEmulatorEnvironment(IEnumerable<string> requiredEmulatorEnvironmentVariables, IEnumerable<string> allEmulatorEnvironmentVariables, Func<string, string> environmentVariableProvider = null)
    parameters:
    - id: requiredEmulatorEnvironmentVariables
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Required emulator environment variables.
    - id: allEmulatorEnvironmentVariables
      type: System.Collections.Generic.IEnumerable{System.String}
      description: All emulator environment variables.
    - id: environmentVariableProvider
      type: System.Func{System.String,System.String}
      description: >-
        The provider used to retrieve environment variables. This is used to faciliate testing, and defaults

        to using <xref href="System.Environment.GetEnvironmentVariable(System.String)" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: A key/value mapping of the emulator environment variables to their values, or null if the emulator should not be used.
    content.vb: Protected Function GetEmulatorEnvironment(requiredEmulatorEnvironmentVariables As IEnumerable(Of String), allEmulatorEnvironmentVariables As IEnumerable(Of String), environmentVariableProvider As Func(Of String, String) = Nothing) As Dictionary(Of String, String)
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetEmulatorEnvironment*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: >-
      The configuration is inconsistent, e.g. due to some environment variables

      being set but not all the required ones, or any environment variables being set in a production-only environment.
  nameWithType.vb: ClientBuilderBase(Of TClient).GetEmulatorEnvironment(IEnumerable(Of String), IEnumerable(Of String), Func(Of String, String))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GetEmulatorEnvironment(System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String), System.Func(Of System.String, System.String))
  name.vb: GetEmulatorEnvironment(IEnumerable(Of String), IEnumerable(Of String), Func(Of String, String))
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.ValidateAtMostOneNotNull(System.String,System.Object[])
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.ValidateAtMostOneNotNull(System.String,System.Object[])
  id: ValidateAtMostOneNotNull(System.String,System.Object[])
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: ValidateAtMostOneNotNull(String, Object[])
  nameWithType: ClientBuilderBase<TClient>.ValidateAtMostOneNotNull(String, Object[])
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.ValidateAtMostOneNotNull(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ValidateAtMostOneNotNull
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 247
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nValidates that at most one of the given values is not null.\n"
  example: []
  syntax:
    content: protected void ValidateAtMostOneNotNull(string message, params object[] values)
    parameters:
    - id: message
      type: System.String
      description: The message if the condition is violated.
    - id: values
      type: System.Object[]
      description: The values to check for nullity.
    content.vb: Protected Sub ValidateAtMostOneNotNull(message As String, ParamArray values As Object())
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.ValidateAtMostOneNotNull*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: More than one value is null.
  nameWithType.vb: ClientBuilderBase(Of TClient).ValidateAtMostOneNotNull(String, Object())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).ValidateAtMostOneNotNull(System.String, System.Object())
  name.vb: ValidateAtMostOneNotNull(String, Object())
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.ValidateOptionExcludesOthers(System.String,System.Object,System.Object[])
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.ValidateOptionExcludesOthers(System.String,System.Object,System.Object[])
  id: ValidateOptionExcludesOthers(System.String,System.Object,System.Object[])
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: ValidateOptionExcludesOthers(String, Object, Object[])
  nameWithType: ClientBuilderBase<TClient>.ValidateOptionExcludesOthers(String, Object, Object[])
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.ValidateOptionExcludesOthers(System.String, System.Object, System.Object[])
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ValidateOptionExcludesOthers
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 259
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nValidates that if <code data-dev-comment-type=\"paramref\" class=\"paramref\">controlling</code> is not null, then every value in <code data-dev-comment-type=\"paramref\" class=\"paramref\">values</code> is null.\n"
  example: []
  syntax:
    content: protected void ValidateOptionExcludesOthers(string message, object controlling, params object[] values)
    parameters:
    - id: message
      type: System.String
      description: The message if the condition is violated.
    - id: controlling
      type: System.Object
      description: The value controlling whether or not any other value can be non-null.
    - id: values
      type: System.Object[]
      description: The values checked for non-nullity if <code data-dev-comment-type="paramref" class="paramref">controlling</code> is non-null.
    content.vb: Protected Sub ValidateOptionExcludesOthers(message As String, controlling As Object, ParamArray values As Object())
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.ValidateOptionExcludesOthers*
  nameWithType.vb: ClientBuilderBase(Of TClient).ValidateOptionExcludesOthers(String, Object, Object())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).ValidateOptionExcludesOthers(System.String, System.Object, System.Object())
  name.vb: ValidateOptionExcludesOthers(String, Object, Object())
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.CreateCallInvoker
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.CreateCallInvoker
  id: CreateCallInvoker
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: CreateCallInvoker()
  nameWithType: ClientBuilderBase<TClient>.CreateCallInvoker()
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.CreateCallInvoker()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CreateCallInvoker
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 269
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nCreates a call invoker synchronously. Override this method in a concrete builder type if more\ncall invoker mechanisms are supported.\nThis implementation calls <xref href=\"Google.Api.Gax.Grpc.ClientBuilderBase%601.GetChannelCredentials\" data-throw-if-not-resolved=\"false\"></xref> if no call invoker is specified.\n"
  example: []
  syntax:
    content: protected virtual CallInvoker CreateCallInvoker()
    return:
      type: Grpc.Core.CallInvoker
    content.vb: Protected Overridable Function CreateCallInvoker As CallInvoker
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.CreateCallInvoker*
  nameWithType.vb: ClientBuilderBase(Of TClient).CreateCallInvoker()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).CreateCallInvoker()
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.CreateCallInvokerAsync(System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.CreateCallInvokerAsync(System.Threading.CancellationToken)
  id: CreateCallInvokerAsync(System.Threading.CancellationToken)
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: CreateCallInvokerAsync(CancellationToken)
  nameWithType: ClientBuilderBase<TClient>.CreateCallInvokerAsync(CancellationToken)
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.CreateCallInvokerAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CreateCallInvokerAsync
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 295
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nCreates a call invoker asynchronously. Override this method in a concrete builder type if more\ncall invoker mechanisms are supported.\nThis implementation calls <xref href=\"Google.Api.Gax.Grpc.ClientBuilderBase%601.GetChannelCredentialsAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> if no call\ninvoker is specified.\n"
  example: []
  syntax:
    content: protected virtual Task<CallInvoker> CreateCallInvokerAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Grpc.Core.CallInvoker}
    content.vb: Protected Overridable Function CreateCallInvokerAsync(cancellationToken As CancellationToken) As Task(Of CallInvoker)
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.CreateCallInvokerAsync*
  nameWithType.vb: ClientBuilderBase(Of TClient).CreateCallInvokerAsync(CancellationToken)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).CreateCallInvokerAsync(System.Threading.CancellationToken)
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentials
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentials
  id: GetChannelCredentials
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: GetChannelCredentials()
  nameWithType: ClientBuilderBase<TClient>.GetChannelCredentials()
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GetChannelCredentials()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetChannelCredentials
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 321
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nObtains channel credentials synchronously. Override this method in a concrete builder type if more\ncredential mechanisms are supported.\n"
  example: []
  syntax:
    content: protected virtual ChannelCredentials GetChannelCredentials()
    return:
      type: Grpc.Core.ChannelCredentials
    content.vb: Protected Overridable Function GetChannelCredentials As ChannelCredentials
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentials*
  nameWithType.vb: ClientBuilderBase(Of TClient).GetChannelCredentials()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GetChannelCredentials()
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentialsAsync(System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentialsAsync(System.Threading.CancellationToken)
  id: GetChannelCredentialsAsync(System.Threading.CancellationToken)
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: GetChannelCredentialsAsync(CancellationToken)
  nameWithType: ClientBuilderBase<TClient>.GetChannelCredentialsAsync(CancellationToken)
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GetChannelCredentialsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetChannelCredentialsAsync
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 342
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nObtains channel credentials asynchronously. Override this method in a concrete builder type if more\ncredential mechanisms are supported.\n"
  example: []
  syntax:
    content: protected virtual Task<ChannelCredentials> GetChannelCredentialsAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Grpc.Core.ChannelCredentials}
    content.vb: Protected Overridable Function GetChannelCredentialsAsync(cancellationToken As CancellationToken) As Task(Of ChannelCredentials)
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentialsAsync*
  nameWithType.vb: ClientBuilderBase(Of TClient).GetChannelCredentialsAsync(CancellationToken)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GetChannelCredentialsAsync(System.Threading.CancellationToken)
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetDefaultScopes
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetDefaultScopes
  id: GetDefaultScopes
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: GetDefaultScopes()
  nameWithType: ClientBuilderBase<TClient>.GetDefaultScopes()
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GetDefaultScopes()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetDefaultScopes
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 362
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nReturns the default scopes for this builder type, used if no scopes are otherwise specified.\n"
  example: []
  syntax:
    content: protected abstract IReadOnlyList<string> GetDefaultScopes()
    return:
      type: System.Collections.Generic.IReadOnlyList{System.String}
    content.vb: Protected MustOverride Function GetDefaultScopes As IReadOnlyList(Of String)
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetDefaultScopes*
  nameWithType.vb: ClientBuilderBase(Of TClient).GetDefaultScopes()
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GetDefaultScopes()
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetDefaultEndpoint
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetDefaultEndpoint
  id: GetDefaultEndpoint
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: GetDefaultEndpoint()
  nameWithType: ClientBuilderBase<TClient>.GetDefaultEndpoint()
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GetDefaultEndpoint()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetDefaultEndpoint
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 367
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nReturns the endpoint for this builder type, used if no endpoint is otherwise specified.\n"
  example: []
  syntax:
    content: protected abstract string GetDefaultEndpoint()
    return:
      type: System.String
    content.vb: Protected MustOverride Function GetDefaultEndpoint As String
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetDefaultEndpoint*
  nameWithType.vb: ClientBuilderBase(Of TClient).GetDefaultEndpoint()
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GetDefaultEndpoint()
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelPool
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelPool
  id: GetChannelPool
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: GetChannelPool()
  nameWithType: ClientBuilderBase<TClient>.GetChannelPool()
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GetChannelPool()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetChannelPool
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 374
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nReturns the channel pool to use when no other options are specified. This method is not called unless\n<xref href=\"Google.Api.Gax.Grpc.ClientBuilderBase%601.CanUseChannelPool\" data-throw-if-not-resolved=\"false\"></xref> returns true, so if a channel pool is unavailable, override that property\nto return false and throw an exception from this method.\n"
  example: []
  syntax:
    content: protected abstract ChannelPool GetChannelPool()
    return:
      type: Google.Api.Gax.Grpc.ChannelPool
    content.vb: Protected MustOverride Function GetChannelPool As ChannelPool
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelPool*
  nameWithType.vb: ClientBuilderBase(Of TClient).GetChannelPool()
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GetChannelPool()
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.DefaultGrpcAdapter
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.DefaultGrpcAdapter
  id: DefaultGrpcAdapter
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: DefaultGrpcAdapter
  nameWithType: ClientBuilderBase<TClient>.DefaultGrpcAdapter
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.DefaultGrpcAdapter
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: DefaultGrpcAdapter
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 380
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nReturns the default <xref href=\"Google.Api.Gax.Grpc.ClientBuilderBase%601.GrpcAdapter\" data-throw-if-not-resolved=\"false\"></xref> to use if\n<xref href=\"Google.Api.Gax.Grpc.ClientBuilderBase%601.GrpcAdapter\" data-throw-if-not-resolved=\"false\"></xref> is not set.\n"
  example: []
  syntax:
    content: protected abstract GrpcAdapter DefaultGrpcAdapter { get; }
    parameters: []
    return:
      type: Google.Api.Gax.Grpc.GrpcAdapter
    content.vb: Protected MustOverride ReadOnly Property DefaultGrpcAdapter As GrpcAdapter
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.DefaultGrpcAdapter*
  nameWithType.vb: ClientBuilderBase(Of TClient).DefaultGrpcAdapter
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).DefaultGrpcAdapter
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelOptions
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelOptions
  id: GetChannelOptions
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: GetChannelOptions()
  nameWithType: ClientBuilderBase<TClient>.GetChannelOptions()
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GetChannelOptions()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetChannelOptions
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 388
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nReturns the options to use when creating a channel.\n"
  example: []
  syntax:
    content: protected virtual GrpcChannelOptions GetChannelOptions()
    return:
      type: Google.Api.Gax.Grpc.GrpcChannelOptions
      description: The options to use when creating a channel.
    content.vb: Protected Overridable Function GetChannelOptions As GrpcChannelOptions
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelOptions*
  nameWithType.vb: ClientBuilderBase(Of TClient).GetChannelOptions()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GetChannelOptions()
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.CanUseChannelPool
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.CanUseChannelPool
  id: CanUseChannelPool
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: CanUseChannelPool
  nameWithType: ClientBuilderBase<TClient>.CanUseChannelPool
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.CanUseChannelPool
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CanUseChannelPool
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 398
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nReturns whether or not a channel pool can be used if a channel is required. The default behavior is to return\ntrue if and only if no scopes, credentials or token access method have been specified. Derived classes should\noverride this property if there are other reasons why the channel pool should not be used.\n"
  example: []
  syntax:
    content: protected virtual bool CanUseChannelPool { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property CanUseChannelPool As Boolean
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.CanUseChannelPool*
  nameWithType.vb: ClientBuilderBase(Of TClient).CanUseChannelPool
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).CanUseChannelPool
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.Build
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.Build
  id: Build
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: ClientBuilderBase<TClient>.Build()
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.Build()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Build
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 411
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nBuilds the resulting client.\n"
  example: []
  syntax:
    content: public abstract TClient Build()
    return:
      type: '{TClient}'
    content.vb: Public MustOverride Function Build As TClient
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.Build*
  nameWithType.vb: ClientBuilderBase(Of TClient).Build()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).Build()
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.BuildAsync(System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.BuildAsync(System.Threading.CancellationToken)
  id: BuildAsync(System.Threading.CancellationToken)
  parent: Google.Api.Gax.Grpc.ClientBuilderBase`1
  langs:
  - csharp
  - vb
  name: BuildAsync(CancellationToken)
  nameWithType: ClientBuilderBase<TClient>.BuildAsync(CancellationToken)
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.BuildAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: BuildAsync
    path: Google.Api.Gax.Grpc/ClientBuilderBase.cs
    startLine: 419
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nBuilds the resulting client asynchronously.\n"
  example: []
  syntax:
    content: public abstract Task<TClient> BuildAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TClient}}
    content.vb: Public MustOverride Function BuildAsync(cancellationToken As CancellationToken = Nothing) As Task(Of TClient)
  overload: Google.Api.Gax.Grpc.ClientBuilderBase`1.BuildAsync*
  nameWithType.vb: ClientBuilderBase(Of TClient).BuildAsync(CancellationToken)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).BuildAsync(System.Threading.CancellationToken)
references:
- uid: Google.Api.Gax.Grpc
  commentId: N:Google.Api.Gax.Grpc
  name: Google.Api.Gax.Grpc
  nameWithType: Google.Api.Gax.Grpc
  fullName: Google.Api.Gax.Grpc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.Endpoint*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.Endpoint
  name: Endpoint
  nameWithType: ClientBuilderBase<TClient>.Endpoint
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.Endpoint
  nameWithType.vb: ClientBuilderBase(Of TClient).Endpoint
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).Endpoint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.Scopes*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.Scopes
  name: Scopes
  nameWithType: ClientBuilderBase<TClient>.Scopes
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.Scopes
  nameWithType.vb: ClientBuilderBase(Of TClient).Scopes
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).Scopes
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<String>
  nameWithType: IReadOnlyList<String>
  fullName: System.Collections.Generic.IReadOnlyList<System.String>
  nameWithType.vb: IReadOnlyList(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.ChannelCredentials*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.ChannelCredentials
  name: ChannelCredentials
  nameWithType: ClientBuilderBase<TClient>.ChannelCredentials
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.ChannelCredentials
  nameWithType.vb: ClientBuilderBase(Of TClient).ChannelCredentials
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).ChannelCredentials
- uid: Grpc.Core.ChannelCredentials
  commentId: T:Grpc.Core.ChannelCredentials
  parent: Grpc.Core
  isExternal: true
  name: ChannelCredentials
  nameWithType: ChannelCredentials
  fullName: Grpc.Core.ChannelCredentials
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: true
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.CredentialsPath*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.CredentialsPath
  name: CredentialsPath
  nameWithType: ClientBuilderBase<TClient>.CredentialsPath
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.CredentialsPath
  nameWithType.vb: ClientBuilderBase(Of TClient).CredentialsPath
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).CredentialsPath
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.JsonCredentials*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.JsonCredentials
  name: JsonCredentials
  nameWithType: ClientBuilderBase<TClient>.JsonCredentials
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.JsonCredentials
  nameWithType.vb: ClientBuilderBase(Of TClient).JsonCredentials
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).JsonCredentials
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.TokenAccessMethod*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.TokenAccessMethod
  name: TokenAccessMethod
  nameWithType: ClientBuilderBase<TClient>.TokenAccessMethod
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.TokenAccessMethod
  nameWithType.vb: ClientBuilderBase(Of TClient).TokenAccessMethod
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).TokenAccessMethod
- uid: System.Func{System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.String}}
  commentId: T:System.Func{System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.String}}
  parent: System
  definition: System.Func`3
  name: Func<String, CancellationToken, Task<String>>
  nameWithType: Func<String, CancellationToken, Task<String>>
  fullName: System.Func<System.String, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.String>>
  nameWithType.vb: Func(Of String, CancellationToken, Task(Of String))
  fullName.vb: System.Func(Of System.String, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.String))
  name.vb: Func(Of String, CancellationToken, Task(Of String))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.CallInvoker*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.CallInvoker
  name: CallInvoker
  nameWithType: ClientBuilderBase<TClient>.CallInvoker
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.CallInvoker
  nameWithType.vb: ClientBuilderBase(Of TClient).CallInvoker
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).CallInvoker
- uid: Grpc.Core.CallInvoker
  commentId: T:Grpc.Core.CallInvoker
  parent: Grpc.Core
  isExternal: true
  name: CallInvoker
  nameWithType: CallInvoker
  fullName: Grpc.Core.CallInvoker
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.UserAgent*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.UserAgent
  name: UserAgent
  nameWithType: ClientBuilderBase<TClient>.UserAgent
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.UserAgent
  nameWithType.vb: ClientBuilderBase(Of TClient).UserAgent
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).UserAgent
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GrpcAdapter*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.GrpcAdapter
  name: GrpcAdapter
  nameWithType: ClientBuilderBase<TClient>.GrpcAdapter
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GrpcAdapter
  nameWithType.vb: ClientBuilderBase(Of TClient).GrpcAdapter
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GrpcAdapter
- uid: Google.Api.Gax.Grpc.GrpcAdapter
  commentId: T:Google.Api.Gax.Grpc.GrpcAdapter
  parent: Google.Api.Gax.Grpc
  name: GrpcAdapter
  nameWithType: GrpcAdapter
  fullName: Google.Api.Gax.Grpc.GrpcAdapter
- uid: Google.Api.Gax.EmulatorDetection.None
  commentId: F:Google.Api.Gax.EmulatorDetection.None
  isExternal: true
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.EmulatorDetection*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.EmulatorDetection
  name: EmulatorDetection
  nameWithType: ClientBuilderBase<TClient>.EmulatorDetection
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.EmulatorDetection
  nameWithType.vb: ClientBuilderBase(Of TClient).EmulatorDetection
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).EmulatorDetection
- uid: Google.Api.Gax.EmulatorDetection
  commentId: T:Google.Api.Gax.EmulatorDetection
  parent: Google.Api.Gax
  name: EmulatorDetection
  nameWithType: EmulatorDetection
  fullName: Google.Api.Gax.EmulatorDetection
- uid: Google.Api.Gax
  commentId: N:Google.Api.Gax
  name: Google.Api.Gax
  nameWithType: Google.Api.Gax
  fullName: Google.Api.Gax
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.#ctor*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.#ctor
  name: ClientBuilderBase
  nameWithType: ClientBuilderBase<TClient>.ClientBuilderBase
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.ClientBuilderBase
  nameWithType.vb: ClientBuilderBase(Of TClient).ClientBuilderBase
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).ClientBuilderBase
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.CopyCommonSettings*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.CopyCommonSettings
  name: CopyCommonSettings
  nameWithType: ClientBuilderBase<TClient>.CopyCommonSettings
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.CopyCommonSettings
  nameWithType.vb: ClientBuilderBase(Of TClient).CopyCommonSettings
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).CopyCommonSettings
- uid: Google.Api.Gax.Grpc.ClientBuilderBase{{TOther}}
  commentId: T:Google.Api.Gax.Grpc.ClientBuilderBase{``0}
  parent: Google.Api.Gax.Grpc
  definition: Google.Api.Gax.Grpc.ClientBuilderBase`1
  name: ClientBuilderBase<TOther>
  nameWithType: ClientBuilderBase<TOther>
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TOther>
  nameWithType.vb: ClientBuilderBase(Of TOther)
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TOther)
  name.vb: ClientBuilderBase(Of TOther)
  spec.csharp:
  - uid: Google.Api.Gax.Grpc.ClientBuilderBase`1
    name: ClientBuilderBase
    nameWithType: ClientBuilderBase
    fullName: Google.Api.Gax.Grpc.ClientBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TOther
    nameWithType: TOther
    fullName: TOther
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Api.Gax.Grpc.ClientBuilderBase`1
    name: ClientBuilderBase
    nameWithType: ClientBuilderBase
    fullName: Google.Api.Gax.Grpc.ClientBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOther
    nameWithType: TOther
    fullName: TOther
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1
  commentId: T:Google.Api.Gax.Grpc.ClientBuilderBase`1
  name: ClientBuilderBase<TClient>
  nameWithType: ClientBuilderBase<TClient>
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>
  nameWithType.vb: ClientBuilderBase(Of TClient)
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient)
  name.vb: ClientBuilderBase(Of TClient)
  spec.csharp:
  - uid: Google.Api.Gax.Grpc.ClientBuilderBase`1
    name: ClientBuilderBase
    nameWithType: ClientBuilderBase
    fullName: Google.Api.Gax.Grpc.ClientBuilderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TClient
    nameWithType: TClient
    fullName: TClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Api.Gax.Grpc.ClientBuilderBase`1
    name: ClientBuilderBase
    nameWithType: ClientBuilderBase
    fullName: Google.Api.Gax.Grpc.ClientBuilderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TClient
    nameWithType: TClient
    fullName: TClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.Build
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.Build
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.Validate*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.Validate
  name: Validate
  nameWithType: ClientBuilderBase<TClient>.Validate
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.Validate
  nameWithType.vb: ClientBuilderBase(Of TClient).Validate
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).Validate
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.EmulatorDetection
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.EmulatorDetection
  isExternal: true
- uid: System.Environment.GetEnvironmentVariable(System.String)
  commentId: M:System.Environment.GetEnvironmentVariable(System.String)
  isExternal: true
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetEmulatorEnvironment*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetEmulatorEnvironment
  name: GetEmulatorEnvironment
  nameWithType: ClientBuilderBase<TClient>.GetEmulatorEnvironment
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GetEmulatorEnvironment
  nameWithType.vb: ClientBuilderBase(Of TClient).GetEmulatorEnvironment
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GetEmulatorEnvironment
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.String,System.String}
  commentId: T:System.Func{System.String,System.String}
  parent: System
  definition: System.Func`2
  name: Func<String, String>
  nameWithType: Func<String, String>
  fullName: System.Func<System.String, System.String>
  nameWithType.vb: Func(Of String, String)
  fullName.vb: System.Func(Of System.String, System.String)
  name.vb: Func(Of String, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.ValidateAtMostOneNotNull*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.ValidateAtMostOneNotNull
  name: ValidateAtMostOneNotNull
  nameWithType: ClientBuilderBase<TClient>.ValidateAtMostOneNotNull
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.ValidateAtMostOneNotNull
  nameWithType.vb: ClientBuilderBase(Of TClient).ValidateAtMostOneNotNull
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).ValidateAtMostOneNotNull
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.ValidateOptionExcludesOthers*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.ValidateOptionExcludesOthers
  name: ValidateOptionExcludesOthers
  nameWithType: ClientBuilderBase<TClient>.ValidateOptionExcludesOthers
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.ValidateOptionExcludesOthers
  nameWithType.vb: ClientBuilderBase(Of TClient).ValidateOptionExcludesOthers
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).ValidateOptionExcludesOthers
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentials
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentials
  isExternal: true
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.CreateCallInvoker*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.CreateCallInvoker
  name: CreateCallInvoker
  nameWithType: ClientBuilderBase<TClient>.CreateCallInvoker
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.CreateCallInvoker
  nameWithType.vb: ClientBuilderBase(Of TClient).CreateCallInvoker
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).CreateCallInvoker
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentialsAsync(System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentialsAsync(System.Threading.CancellationToken)
  isExternal: true
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.CreateCallInvokerAsync*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.CreateCallInvokerAsync
  name: CreateCallInvokerAsync
  nameWithType: ClientBuilderBase<TClient>.CreateCallInvokerAsync
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.CreateCallInvokerAsync
  nameWithType.vb: ClientBuilderBase(Of TClient).CreateCallInvokerAsync
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).CreateCallInvokerAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Grpc.Core.CallInvoker}
  commentId: T:System.Threading.Tasks.Task{Grpc.Core.CallInvoker}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CallInvoker>
  nameWithType: Task<CallInvoker>
  fullName: System.Threading.Tasks.Task<Grpc.Core.CallInvoker>
  nameWithType.vb: Task(Of CallInvoker)
  fullName.vb: System.Threading.Tasks.Task(Of Grpc.Core.CallInvoker)
  name.vb: Task(Of CallInvoker)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Grpc.Core.CallInvoker
    name: CallInvoker
    nameWithType: CallInvoker
    fullName: Grpc.Core.CallInvoker
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Grpc.Core.CallInvoker
    name: CallInvoker
    nameWithType: CallInvoker
    fullName: Grpc.Core.CallInvoker
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentials*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentials
  name: GetChannelCredentials
  nameWithType: ClientBuilderBase<TClient>.GetChannelCredentials
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GetChannelCredentials
  nameWithType.vb: ClientBuilderBase(Of TClient).GetChannelCredentials
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GetChannelCredentials
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentialsAsync*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentialsAsync
  name: GetChannelCredentialsAsync
  nameWithType: ClientBuilderBase<TClient>.GetChannelCredentialsAsync
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GetChannelCredentialsAsync
  nameWithType.vb: ClientBuilderBase(Of TClient).GetChannelCredentialsAsync
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GetChannelCredentialsAsync
- uid: System.Threading.Tasks.Task{Grpc.Core.ChannelCredentials}
  commentId: T:System.Threading.Tasks.Task{Grpc.Core.ChannelCredentials}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ChannelCredentials>
  nameWithType: Task<ChannelCredentials>
  fullName: System.Threading.Tasks.Task<Grpc.Core.ChannelCredentials>
  nameWithType.vb: Task(Of ChannelCredentials)
  fullName.vb: System.Threading.Tasks.Task(Of Grpc.Core.ChannelCredentials)
  name.vb: Task(Of ChannelCredentials)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Grpc.Core.ChannelCredentials
    name: ChannelCredentials
    nameWithType: ChannelCredentials
    fullName: Grpc.Core.ChannelCredentials
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Grpc.Core.ChannelCredentials
    name: ChannelCredentials
    nameWithType: ChannelCredentials
    fullName: Grpc.Core.ChannelCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetDefaultScopes*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetDefaultScopes
  name: GetDefaultScopes
  nameWithType: ClientBuilderBase<TClient>.GetDefaultScopes
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GetDefaultScopes
  nameWithType.vb: ClientBuilderBase(Of TClient).GetDefaultScopes
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GetDefaultScopes
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetDefaultEndpoint*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetDefaultEndpoint
  name: GetDefaultEndpoint
  nameWithType: ClientBuilderBase<TClient>.GetDefaultEndpoint
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GetDefaultEndpoint
  nameWithType.vb: ClientBuilderBase(Of TClient).GetDefaultEndpoint
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GetDefaultEndpoint
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.CanUseChannelPool
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.CanUseChannelPool
  isExternal: true
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelPool*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelPool
  name: GetChannelPool
  nameWithType: ClientBuilderBase<TClient>.GetChannelPool
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GetChannelPool
  nameWithType.vb: ClientBuilderBase(Of TClient).GetChannelPool
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GetChannelPool
- uid: Google.Api.Gax.Grpc.ChannelPool
  commentId: T:Google.Api.Gax.Grpc.ChannelPool
  parent: Google.Api.Gax.Grpc
  name: ChannelPool
  nameWithType: ChannelPool
  fullName: Google.Api.Gax.Grpc.ChannelPool
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GrpcAdapter
  commentId: P:Google.Api.Gax.Grpc.ClientBuilderBase`1.GrpcAdapter
  isExternal: true
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.DefaultGrpcAdapter*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.DefaultGrpcAdapter
  name: DefaultGrpcAdapter
  nameWithType: ClientBuilderBase<TClient>.DefaultGrpcAdapter
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.DefaultGrpcAdapter
  nameWithType.vb: ClientBuilderBase(Of TClient).DefaultGrpcAdapter
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).DefaultGrpcAdapter
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelOptions*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelOptions
  name: GetChannelOptions
  nameWithType: ClientBuilderBase<TClient>.GetChannelOptions
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.GetChannelOptions
  nameWithType.vb: ClientBuilderBase(Of TClient).GetChannelOptions
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).GetChannelOptions
- uid: Google.Api.Gax.Grpc.GrpcChannelOptions
  commentId: T:Google.Api.Gax.Grpc.GrpcChannelOptions
  parent: Google.Api.Gax.Grpc
  name: GrpcChannelOptions
  nameWithType: GrpcChannelOptions
  fullName: Google.Api.Gax.Grpc.GrpcChannelOptions
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.CanUseChannelPool*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.CanUseChannelPool
  name: CanUseChannelPool
  nameWithType: ClientBuilderBase<TClient>.CanUseChannelPool
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.CanUseChannelPool
  nameWithType.vb: ClientBuilderBase(Of TClient).CanUseChannelPool
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).CanUseChannelPool
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.Build*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.Build
  name: Build
  nameWithType: ClientBuilderBase<TClient>.Build
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.Build
  nameWithType.vb: ClientBuilderBase(Of TClient).Build
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).Build
- uid: '{TClient}'
  commentId: '!:TClient'
  definition: TClient
  name: TClient
  nameWithType: TClient
  fullName: TClient
- uid: TClient
  commentId: '!:TClient'
  name: TClient
  nameWithType: TClient
  fullName: TClient
- uid: Google.Api.Gax.Grpc.ClientBuilderBase`1.BuildAsync*
  commentId: Overload:Google.Api.Gax.Grpc.ClientBuilderBase`1.BuildAsync
  name: BuildAsync
  nameWithType: ClientBuilderBase<TClient>.BuildAsync
  fullName: Google.Api.Gax.Grpc.ClientBuilderBase<TClient>.BuildAsync
  nameWithType.vb: ClientBuilderBase(Of TClient).BuildAsync
  fullName.vb: Google.Api.Gax.Grpc.ClientBuilderBase(Of TClient).BuildAsync
- uid: System.Threading.Tasks.Task{{TClient}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TClient>
  nameWithType: Task<TClient>
  fullName: System.Threading.Tasks.Task<TClient>
  nameWithType.vb: Task(Of TClient)
  fullName.vb: System.Threading.Tasks.Task(Of TClient)
  name.vb: Task(Of TClient)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TClient
    nameWithType: TClient
    fullName: TClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TClient
    nameWithType: TClient
    fullName: TClient
  - name: )
    nameWithType: )
    fullName: )
