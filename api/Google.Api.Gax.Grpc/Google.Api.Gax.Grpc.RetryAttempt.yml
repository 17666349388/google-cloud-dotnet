### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.Grpc.RetryAttempt
  commentId: T:Google.Api.Gax.Grpc.RetryAttempt
  id: RetryAttempt
  parent: Google.Api.Gax.Grpc
  children:
  - Google.Api.Gax.Grpc.RetryAttempt.AttemptNumber
  - Google.Api.Gax.Grpc.RetryAttempt.Backoff(System.Threading.CancellationToken)
  - Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync(System.Threading.CancellationToken)
  - Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.DateTime},Google.Api.Gax.IClock,System.Nullable{System.TimeSpan})
  - Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.TimeSpan})
  - Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff
  - Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry(System.Exception)
  langs:
  - csharp
  - vb
  name: RetryAttempt
  nameWithType: RetryAttempt
  fullName: Google.Api.Gax.Grpc.RetryAttempt
  type: Class
  source:
    remote:
      path: Google.Api.Gax.Grpc/RetryAttempt.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: RetryAttempt
    path: Google.Api.Gax.Grpc/RetryAttempt.cs
    startLine: 19
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nAn attempt at a retriable operation. Use <xref href=\"Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings%2cGoogle.Api.Gax.IScheduler%2cSystem.Nullable%7bSystem.DateTime%7d%2cGoogle.Api.Gax.IClock%2cSystem.Nullable%7bSystem.TimeSpan%7d)\" data-throw-if-not-resolved=\"false\"></xref>\nor <xref href=\"Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings%2cGoogle.Api.Gax.IScheduler%2cSystem.Nullable%7bSystem.TimeSpan%7d)\" data-throw-if-not-resolved=\"false\"></xref> to create a sequence of attempts that follow the specified settings.\n"
  example: []
  syntax:
    content: public sealed class RetryAttempt
    content.vb: Public NotInheritable Class RetryAttempt
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Api.Gax.Grpc.RetryAttempt.AttemptNumber
  commentId: P:Google.Api.Gax.Grpc.RetryAttempt.AttemptNumber
  id: AttemptNumber
  parent: Google.Api.Gax.Grpc.RetryAttempt
  langs:
  - csharp
  - vb
  name: AttemptNumber
  nameWithType: RetryAttempt.AttemptNumber
  fullName: Google.Api.Gax.Grpc.RetryAttempt.AttemptNumber
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/RetryAttempt.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: AttemptNumber
    path: Google.Api.Gax.Grpc/RetryAttempt.cs
    startLine: 30
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe 1-based number of this attempt. If this is equal to <xref href=\"Google.Api.Gax.Grpc.RetrySettings.MaxAttempts\" data-throw-if-not-resolved=\"false\"></xref> for the settings\nused to create this attempt, <xref href=\"Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry(System.Exception)\" data-throw-if-not-resolved=\"false\"></xref> will always return false.\n"
  example: []
  syntax:
    content: public int AttemptNumber { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property AttemptNumber As Integer
  overload: Google.Api.Gax.Grpc.RetryAttempt.AttemptNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff
  commentId: P:Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff
  id: JitteredBackoff
  parent: Google.Api.Gax.Grpc.RetryAttempt
  langs:
  - csharp
  - vb
  name: JitteredBackoff
  nameWithType: RetryAttempt.JitteredBackoff
  fullName: Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/RetryAttempt.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: JitteredBackoff
    path: Google.Api.Gax.Grpc/RetryAttempt.cs
    startLine: 36
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe time that will be used to sleep or delay in <xref href=\"Google.Api.Gax.Grpc.RetryAttempt.Backoff(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\nThis has already had jitter applied to it.\n"
  example: []
  syntax:
    content: public TimeSpan JitteredBackoff { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property JitteredBackoff As TimeSpan
  overload: Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.TimeSpan})
  commentId: M:Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.TimeSpan})
  id: CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.TimeSpan})
  parent: Google.Api.Gax.Grpc.RetryAttempt
  langs:
  - csharp
  - vb
  name: CreateRetrySequence(RetrySettings, IScheduler, Nullable<TimeSpan>)
  nameWithType: RetryAttempt.CreateRetrySequence(RetrySettings, IScheduler, Nullable<TimeSpan>)
  fullName: Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings, Google.Api.Gax.IScheduler, System.Nullable<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/RetryAttempt.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CreateRetrySequence
    path: Google.Api.Gax.Grpc/RetryAttempt.cs
    startLine: 48
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nReturns a sequence of retry attempts. The sequence has <xref href=\"Google.Api.Gax.Grpc.RetrySettings.MaxAttempts\" data-throw-if-not-resolved=\"false\"></xref> elements, and calling\n<xref href=\"Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry(System.Exception)\" data-throw-if-not-resolved=\"false\"></xref> on the last attempt will always return false. This overload assumes no deadline,\nand so does not require a clock.\n"
  example: []
  syntax:
    content: public static IEnumerable<RetryAttempt> CreateRetrySequence(RetrySettings settings, IScheduler scheduler, TimeSpan? initialBackoffOverride = default(TimeSpan? ))
    parameters:
    - id: settings
      type: Google.Api.Gax.Grpc.RetrySettings
      description: The retry settings to create a sequence for. Must not be null.
    - id: scheduler
      type: Google.Api.Gax.IScheduler
      description: The scheduler to use for delays.
    - id: initialBackoffOverride
      type: System.Nullable{System.TimeSpan}
      description: >-
        An override value to allow an initial backoff which is not the same

        as <xref href="Google.Api.Gax.Grpc.RetrySettings.InitialBackoff" data-throw-if-not-resolved="false"></xref>. This is typically to allow an &quot;immediate first retry&quot;.
    return:
      type: System.Collections.Generic.IEnumerable{Google.Api.Gax.Grpc.RetryAttempt}
      description: ''
    content.vb: Public Shared Function CreateRetrySequence(settings As RetrySettings, scheduler As IScheduler, initialBackoffOverride As TimeSpan? = Nothing) As IEnumerable(Of RetryAttempt)
  overload: Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence*
  nameWithType.vb: RetryAttempt.CreateRetrySequence(RetrySettings, IScheduler, Nullable(Of TimeSpan))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings, Google.Api.Gax.IScheduler, System.Nullable(Of System.TimeSpan))
  name.vb: CreateRetrySequence(RetrySettings, IScheduler, Nullable(Of TimeSpan))
- uid: Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.DateTime},Google.Api.Gax.IClock,System.Nullable{System.TimeSpan})
  commentId: M:Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.DateTime},Google.Api.Gax.IClock,System.Nullable{System.TimeSpan})
  id: CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.DateTime},Google.Api.Gax.IClock,System.Nullable{System.TimeSpan})
  parent: Google.Api.Gax.Grpc.RetryAttempt
  langs:
  - csharp
  - vb
  name: CreateRetrySequence(RetrySettings, IScheduler, Nullable<DateTime>, IClock, Nullable<TimeSpan>)
  nameWithType: RetryAttempt.CreateRetrySequence(RetrySettings, IScheduler, Nullable<DateTime>, IClock, Nullable<TimeSpan>)
  fullName: Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings, Google.Api.Gax.IScheduler, System.Nullable<System.DateTime>, Google.Api.Gax.IClock, System.Nullable<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/RetryAttempt.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: CreateRetrySequence
    path: Google.Api.Gax.Grpc/RetryAttempt.cs
    startLine: 72
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nReturns a sequence of retry attempts. The sequence has <xref href=\"Google.Api.Gax.Grpc.RetrySettings.MaxAttempts\" data-throw-if-not-resolved=\"false\"></xref> elements, and calling\n<xref href=\"Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry(System.Exception)\" data-throw-if-not-resolved=\"false\"></xref> on the last attempt will always return false.\n"
  example: []
  syntax:
    content: public static IEnumerable<RetryAttempt> CreateRetrySequence(RetrySettings settings, IScheduler scheduler, DateTime? deadline, IClock clock, TimeSpan? initialBackoffOverride = default(TimeSpan? ))
    parameters:
    - id: settings
      type: Google.Api.Gax.Grpc.RetrySettings
      description: The retry settings to create a sequence for. Must not be null.
    - id: scheduler
      type: Google.Api.Gax.IScheduler
      description: The scheduler to use for delays.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: The overall deadline for the operation.
    - id: clock
      type: Google.Api.Gax.IClock
      description: The clock to use to compare the current time with the deadline.
    - id: initialBackoffOverride
      type: System.Nullable{System.TimeSpan}
      description: >-
        An override value to allow an initial backoff which is not the same

        as <xref href="Google.Api.Gax.Grpc.RetrySettings.InitialBackoff" data-throw-if-not-resolved="false"></xref>. This is typically to allow an &quot;immediate first retry&quot;.
    return:
      type: System.Collections.Generic.IEnumerable{Google.Api.Gax.Grpc.RetryAttempt}
      description: ''
    content.vb: Public Shared Function CreateRetrySequence(settings As RetrySettings, scheduler As IScheduler, deadline As Date?, clock As IClock, initialBackoffOverride As TimeSpan? = Nothing) As IEnumerable(Of RetryAttempt)
  overload: Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence*
  nameWithType.vb: RetryAttempt.CreateRetrySequence(RetrySettings, IScheduler, Nullable(Of DateTime), IClock, Nullable(Of TimeSpan))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings, Google.Api.Gax.IScheduler, System.Nullable(Of System.DateTime), Google.Api.Gax.IClock, System.Nullable(Of System.TimeSpan))
  name.vb: CreateRetrySequence(RetrySettings, IScheduler, Nullable(Of DateTime), IClock, Nullable(Of TimeSpan))
- uid: Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry(System.Exception)
  commentId: M:Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry(System.Exception)
  id: ShouldRetry(System.Exception)
  parent: Google.Api.Gax.Grpc.RetryAttempt
  langs:
  - csharp
  - vb
  name: ShouldRetry(Exception)
  nameWithType: RetryAttempt.ShouldRetry(Exception)
  fullName: Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry(System.Exception)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/RetryAttempt.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ShouldRetry
    path: Google.Api.Gax.Grpc/RetryAttempt.cs
    startLine: 101
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nIndicates whether the operation should be retried when the given exception has been thrown.\nThis will return false if the exception indicates that the operation shouldn&apos;t be retried,\nor the maximum number of attempts has been reached, or the next backoff would exceed the overall\ndeadline. (It is assumed that <xref href=\"Google.Api.Gax.Grpc.RetryAttempt.Backoff(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>\nwill be called immediately afterwards.)\n"
  example: []
  syntax:
    content: public bool ShouldRetry(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception thrown by the retriable operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the operation should be retried; <code>false</code> otherwise.
    content.vb: Public Function ShouldRetry(exception As Exception) As Boolean
  overload: Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Gax.Grpc.RetryAttempt.Backoff(System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Grpc.RetryAttempt.Backoff(System.Threading.CancellationToken)
  id: Backoff(System.Threading.CancellationToken)
  parent: Google.Api.Gax.Grpc.RetryAttempt
  langs:
  - csharp
  - vb
  name: Backoff(CancellationToken)
  nameWithType: RetryAttempt.Backoff(CancellationToken)
  fullName: Google.Api.Gax.Grpc.RetryAttempt.Backoff(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/RetryAttempt.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Backoff
    path: Google.Api.Gax.Grpc/RetryAttempt.cs
    startLine: 110
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nSynchronously sleeps for a period of <xref href=\"Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Backoff(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to apply to the sleep operation.
    content.vb: Public Sub Backoff(cancellationToken As CancellationToken)
  overload: Google.Api.Gax.Grpc.RetryAttempt.Backoff*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync(System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync(System.Threading.CancellationToken)
  id: BackoffAsync(System.Threading.CancellationToken)
  parent: Google.Api.Gax.Grpc.RetryAttempt
  langs:
  - csharp
  - vb
  name: BackoffAsync(CancellationToken)
  nameWithType: RetryAttempt.BackoffAsync(CancellationToken)
  fullName: Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/RetryAttempt.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: BackoffAsync
    path: Google.Api.Gax.Grpc/RetryAttempt.cs
    startLine: 117
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nAsynchronously delays for a period of <xref href=\"Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task BackoffAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to apply to the delay operation.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function BackoffAsync(cancellationToken As CancellationToken) As Task
  overload: Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.DateTime},Google.Api.Gax.IClock,System.Nullable{System.TimeSpan})
  commentId: M:Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.DateTime},Google.Api.Gax.IClock,System.Nullable{System.TimeSpan})
  isExternal: true
- uid: Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.TimeSpan})
  commentId: M:Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.TimeSpan})
  isExternal: true
- uid: Google.Api.Gax.Grpc
  commentId: N:Google.Api.Gax.Grpc
  name: Google.Api.Gax.Grpc
  nameWithType: Google.Api.Gax.Grpc
  fullName: Google.Api.Gax.Grpc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Api.Gax.Grpc.RetrySettings.MaxAttempts
  commentId: P:Google.Api.Gax.Grpc.RetrySettings.MaxAttempts
  isExternal: true
- uid: Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry(System.Exception)
  commentId: M:Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry(System.Exception)
  isExternal: true
- uid: Google.Api.Gax.Grpc.RetryAttempt.AttemptNumber*
  commentId: Overload:Google.Api.Gax.Grpc.RetryAttempt.AttemptNumber
  name: AttemptNumber
  nameWithType: RetryAttempt.AttemptNumber
  fullName: Google.Api.Gax.Grpc.RetryAttempt.AttemptNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Api.Gax.Grpc.RetryAttempt.Backoff(System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Grpc.RetryAttempt.Backoff(System.Threading.CancellationToken)
  isExternal: true
- uid: Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync(System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync(System.Threading.CancellationToken)
  isExternal: true
- uid: Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff*
  commentId: Overload:Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff
  name: JitteredBackoff
  nameWithType: RetryAttempt.JitteredBackoff
  fullName: Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Google.Api.Gax.Grpc.RetrySettings.InitialBackoff
  commentId: P:Google.Api.Gax.Grpc.RetrySettings.InitialBackoff
  isExternal: true
- uid: Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence*
  commentId: Overload:Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence
  name: CreateRetrySequence
  nameWithType: RetryAttempt.CreateRetrySequence
  fullName: Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence
- uid: Google.Api.Gax.Grpc.RetrySettings
  commentId: T:Google.Api.Gax.Grpc.RetrySettings
  parent: Google.Api.Gax.Grpc
  name: RetrySettings
  nameWithType: RetrySettings
  fullName: Google.Api.Gax.Grpc.RetrySettings
- uid: Google.Api.Gax.IScheduler
  commentId: T:Google.Api.Gax.IScheduler
  parent: Google.Api.Gax
  name: IScheduler
  nameWithType: IScheduler
  fullName: Google.Api.Gax.IScheduler
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Google.Api.Gax.Grpc.RetryAttempt}
  commentId: T:System.Collections.Generic.IEnumerable{Google.Api.Gax.Grpc.RetryAttempt}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<RetryAttempt>
  nameWithType: IEnumerable<RetryAttempt>
  fullName: System.Collections.Generic.IEnumerable<Google.Api.Gax.Grpc.RetryAttempt>
  nameWithType.vb: IEnumerable(Of RetryAttempt)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Google.Api.Gax.Grpc.RetryAttempt)
  name.vb: IEnumerable(Of RetryAttempt)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Api.Gax.Grpc.RetryAttempt
    name: RetryAttempt
    nameWithType: RetryAttempt
    fullName: Google.Api.Gax.Grpc.RetryAttempt
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Api.Gax.Grpc.RetryAttempt
    name: RetryAttempt
    nameWithType: RetryAttempt
    fullName: Google.Api.Gax.Grpc.RetryAttempt
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax
  commentId: N:Google.Api.Gax
  name: Google.Api.Gax
  nameWithType: Google.Api.Gax
  fullName: Google.Api.Gax
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.IClock
  commentId: T:Google.Api.Gax.IClock
  parent: Google.Api.Gax
  name: IClock
  nameWithType: IClock
  fullName: Google.Api.Gax.IClock
- uid: Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry*
  commentId: Overload:Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry
  name: ShouldRetry
  nameWithType: RetryAttempt.ShouldRetry
  fullName: Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff
  commentId: P:Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff
  isExternal: true
- uid: Google.Api.Gax.Grpc.RetryAttempt.Backoff*
  commentId: Overload:Google.Api.Gax.Grpc.RetryAttempt.Backoff
  name: Backoff
  nameWithType: RetryAttempt.Backoff
  fullName: Google.Api.Gax.Grpc.RetryAttempt.Backoff
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync*
  commentId: Overload:Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync
  name: BackoffAsync
  nameWithType: RetryAttempt.BackoffAsync
  fullName: Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
