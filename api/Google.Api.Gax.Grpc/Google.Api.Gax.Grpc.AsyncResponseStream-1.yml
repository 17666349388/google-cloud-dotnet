### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.Grpc.AsyncResponseStream`1
  commentId: T:Google.Api.Gax.Grpc.AsyncResponseStream`1
  id: AsyncResponseStream`1
  parent: Google.Api.Gax.Grpc
  children:
  - Google.Api.Gax.Grpc.AsyncResponseStream`1.Current
  - Google.Api.Gax.Grpc.AsyncResponseStream`1.DisposeAsync
  - Google.Api.Gax.Grpc.AsyncResponseStream`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  - Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync
  - Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: AsyncResponseStream<TResponse>
  nameWithType: AsyncResponseStream<TResponse>
  fullName: Google.Api.Gax.Grpc.AsyncResponseStream<TResponse>
  type: Class
  source:
    remote:
      path: Google.Api.Gax.Grpc/AsyncResponseStream.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: AsyncResponseStream
    path: Google.Api.Gax.Grpc/AsyncResponseStream.cs
    startLine: 29
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nAn adapter from the gRPC stream representation (<xref href=\"Grpc.Core.IAsyncStreamReader%601\" data-throw-if-not-resolved=\"false\"></xref>) to <xref href=\"System.Collections.Generic.IAsyncEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"System.Collections.Generic.IAsyncEnumerator%601\" data-throw-if-not-resolved=\"false\"></xref>. Note that <xref href=\"Google.Api.Gax.Grpc.AsyncResponseStream%601.GetAsyncEnumerator(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> can only\nbe called once per instance due to the &quot;only iterate once&quot; nature of the response stream.\n"
  remarks: "\nThis type implements both of the standard asynchronous sequence interfaces for simplicity of use:\n<ul><li></li><li></li><li></li></ul>\n"
  example: []
  syntax:
    content: 'public sealed class AsyncResponseStream<TResponse> : IAsyncEnumerable<TResponse>, IAsyncEnumerator<TResponse>, IAsyncDisposable'
    typeParameters:
    - id: TResponse
      description: The response type.
    content.vb: >-
      Public NotInheritable Class AsyncResponseStream(Of TResponse)
          Implements IAsyncEnumerable(Of TResponse), IAsyncEnumerator(Of TResponse), IAsyncDisposable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IAsyncEnumerable{{TResponse}}
  - System.Collections.Generic.IAsyncEnumerator{{TResponse}}
  - System.IAsyncDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: AsyncResponseStream(Of TResponse)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Google.Api.Gax.Grpc.AsyncResponseStream(Of TResponse)
  name.vb: AsyncResponseStream(Of TResponse)
- uid: Google.Api.Gax.Grpc.AsyncResponseStream`1.Current
  commentId: P:Google.Api.Gax.Grpc.AsyncResponseStream`1.Current
  id: Current
  parent: Google.Api.Gax.Grpc.AsyncResponseStream`1
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: AsyncResponseStream<TResponse>.Current
  fullName: Google.Api.Gax.Grpc.AsyncResponseStream<TResponse>.Current
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/AsyncResponseStream.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Current
    path: Google.Api.Gax.Grpc/AsyncResponseStream.cs
    startLine: 39
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  example: []
  syntax:
    content: public TResponse Current { get; }
    parameters: []
    return:
      type: '{TResponse}'
    content.vb: Public ReadOnly Property Current As TResponse
  overload: Google.Api.Gax.Grpc.AsyncResponseStream`1.Current*
  implements:
  - System.Collections.Generic.IAsyncEnumerator{{TResponse}}.Current
  nameWithType.vb: AsyncResponseStream(Of TResponse).Current
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Google.Api.Gax.Grpc.AsyncResponseStream(Of TResponse).Current
- uid: Google.Api.Gax.Grpc.AsyncResponseStream`1.DisposeAsync
  commentId: M:Google.Api.Gax.Grpc.AsyncResponseStream`1.DisposeAsync
  id: DisposeAsync
  parent: Google.Api.Gax.Grpc.AsyncResponseStream`1
  langs:
  - csharp
  - vb
  name: DisposeAsync()
  nameWithType: AsyncResponseStream<TResponse>.DisposeAsync()
  fullName: Google.Api.Gax.Grpc.AsyncResponseStream<TResponse>.DisposeAsync()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/AsyncResponseStream.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: DisposeAsync
    path: Google.Api.Gax.Grpc/AsyncResponseStream.cs
    startLine: 44
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  example: []
  syntax:
    content: public ValueTask DisposeAsync()
    return:
      type: System.Threading.Tasks.ValueTask
    content.vb: Public Function DisposeAsync As ValueTask
  overload: Google.Api.Gax.Grpc.AsyncResponseStream`1.DisposeAsync*
  implements:
  - System.IAsyncDisposable.DisposeAsync
  nameWithType.vb: AsyncResponseStream(Of TResponse).DisposeAsync()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.AsyncResponseStream(Of TResponse).DisposeAsync()
- uid: Google.Api.Gax.Grpc.AsyncResponseStream`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Grpc.AsyncResponseStream`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  id: GetAsyncEnumerator(System.Threading.CancellationToken)
  parent: Google.Api.Gax.Grpc.AsyncResponseStream`1
  langs:
  - csharp
  - vb
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: AsyncResponseStream<TResponse>.GetAsyncEnumerator(CancellationToken)
  fullName: Google.Api.Gax.Grpc.AsyncResponseStream<TResponse>.GetAsyncEnumerator(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/AsyncResponseStream.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: GetAsyncEnumerator
    path: Google.Api.Gax.Grpc/AsyncResponseStream.cs
    startLine: 53
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nBegins iterating over the response stream, using the specified cancellation token. This method can only be called\nonce per instance.\n"
  example: []
  syntax:
    content: public IAsyncEnumerator<TResponse> GetAsyncEnumerator(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to use in subsequent <xref href="Google.Api.Gax.Grpc.AsyncResponseStream%601.MoveNextAsync" data-throw-if-not-resolved="false"></xref> calls.
    return:
      type: System.Collections.Generic.IAsyncEnumerator{{TResponse}}
      description: An iterator over the response stream.
    content.vb: Public Function GetAsyncEnumerator(cancellationToken As CancellationToken = Nothing) As IAsyncEnumerator(Of TResponse)
  overload: Google.Api.Gax.Grpc.AsyncResponseStream`1.GetAsyncEnumerator*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This method has already been called on this instance.
  implements:
  - System.Collections.Generic.IAsyncEnumerable{{TResponse}}.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: AsyncResponseStream(Of TResponse).GetAsyncEnumerator(CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.AsyncResponseStream(Of TResponse).GetAsyncEnumerator(System.Threading.CancellationToken)
- uid: Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync(System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync(System.Threading.CancellationToken)
  id: MoveNextAsync(System.Threading.CancellationToken)
  parent: Google.Api.Gax.Grpc.AsyncResponseStream`1
  langs:
  - csharp
  - vb
  name: MoveNextAsync(CancellationToken)
  nameWithType: AsyncResponseStream<TResponse>.MoveNextAsync(CancellationToken)
  fullName: Google.Api.Gax.Grpc.AsyncResponseStream<TResponse>.MoveNextAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/AsyncResponseStream.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MoveNextAsync
    path: Google.Api.Gax.Grpc/AsyncResponseStream.cs
    startLine: 69
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nMoves to the next item, using the specified cancellation token.\n"
  remarks: ''
  example: []
  syntax:
    content: public ValueTask<bool> MoveNextAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to use for this step.
    return:
      type: System.Threading.Tasks.ValueTask{System.Boolean}
      description: A task that will complete with a result of true if the enumerator was successfully advanced to the next element, or false if the enumerator has passed the end of the collection.
    content.vb: Public Function MoveNextAsync(cancellationToken As CancellationToken) As ValueTask(Of Boolean)
  overload: Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync*
  nameWithType.vb: AsyncResponseStream(Of TResponse).MoveNextAsync(CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.AsyncResponseStream(Of TResponse).MoveNextAsync(System.Threading.CancellationToken)
- uid: Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync
  commentId: M:Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync
  id: MoveNextAsync
  parent: Google.Api.Gax.Grpc.AsyncResponseStream`1
  langs:
  - csharp
  - vb
  name: MoveNextAsync()
  nameWithType: AsyncResponseStream<TResponse>.MoveNextAsync()
  fullName: Google.Api.Gax.Grpc.AsyncResponseStream<TResponse>.MoveNextAsync()
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/AsyncResponseStream.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: MoveNextAsync
    path: Google.Api.Gax.Grpc/AsyncResponseStream.cs
    startLine: 75
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nMoves to the next item, using the cancellation token configured by <xref href=\"Google.Api.Gax.Grpc.AsyncResponseStream%601.GetAsyncEnumerator(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ValueTask<bool> MoveNextAsync()
    return:
      type: System.Threading.Tasks.ValueTask{System.Boolean}
    content.vb: Public Function MoveNextAsync As ValueTask(Of Boolean)
  overload: Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync*
  implements:
  - System.Collections.Generic.IAsyncEnumerator{{TResponse}}.MoveNextAsync
  nameWithType.vb: AsyncResponseStream(Of TResponse).MoveNextAsync()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.AsyncResponseStream(Of TResponse).MoveNextAsync()
references:
- uid: Grpc.Core.IAsyncStreamReader`1
  commentId: T:Grpc.Core.IAsyncStreamReader`1
  isExternal: true
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerator`1
  commentId: T:System.Collections.Generic.IAsyncEnumerator`1
  isExternal: true
  name: IAsyncEnumerator<T>
  nameWithType: IAsyncEnumerator<T>
  fullName: System.Collections.Generic.IAsyncEnumerator<T>
  nameWithType.vb: IAsyncEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerator(Of T)
  name.vb: IAsyncEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Grpc.AsyncResponseStream`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:Google.Api.Gax.Grpc.AsyncResponseStream`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  isExternal: true
- uid: Google.Api.Gax.Grpc
  commentId: N:Google.Api.Gax.Grpc
  name: Google.Api.Gax.Grpc
  nameWithType: Google.Api.Gax.Grpc
  fullName: Google.Api.Gax.Grpc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IAsyncEnumerable{{TResponse}}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<TResponse>
  nameWithType: IAsyncEnumerable<TResponse>
  fullName: System.Collections.Generic.IAsyncEnumerable<TResponse>
  nameWithType.vb: IAsyncEnumerable(Of TResponse)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of TResponse)
  name.vb: IAsyncEnumerable(Of TResponse)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerator{{TResponse}}
  commentId: T:System.Collections.Generic.IAsyncEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerator`1
  name: IAsyncEnumerator<TResponse>
  nameWithType: IAsyncEnumerator<TResponse>
  fullName: System.Collections.Generic.IAsyncEnumerator<TResponse>
  nameWithType.vb: IAsyncEnumerator(Of TResponse)
  fullName.vb: System.Collections.Generic.IAsyncEnumerator(Of TResponse)
  name.vb: IAsyncEnumerator(Of TResponse)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerator`1
    name: IAsyncEnumerator
    nameWithType: IAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IAsyncDisposable
  commentId: T:System.IAsyncDisposable
  parent: System
  isExternal: true
  name: IAsyncDisposable
  nameWithType: IAsyncDisposable
  fullName: System.IAsyncDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Google.Api.Gax.Grpc.AsyncResponseStream`1.Current*
  commentId: Overload:Google.Api.Gax.Grpc.AsyncResponseStream`1.Current
  name: Current
  nameWithType: AsyncResponseStream<TResponse>.Current
  fullName: Google.Api.Gax.Grpc.AsyncResponseStream<TResponse>.Current
  nameWithType.vb: AsyncResponseStream(Of TResponse).Current
  fullName.vb: Google.Api.Gax.Grpc.AsyncResponseStream(Of TResponse).Current
- uid: System.Collections.Generic.IAsyncEnumerator{{TResponse}}.Current
  commentId: P:System.Collections.Generic.IAsyncEnumerator{`0}.Current
  parent: System.Collections.Generic.IAsyncEnumerator{{TResponse}}
  definition: System.Collections.Generic.IAsyncEnumerator`1.Current
  name: Current
  nameWithType: IAsyncEnumerator<TResponse>.Current
  fullName: System.Collections.Generic.IAsyncEnumerator<TResponse>.Current
  nameWithType.vb: IAsyncEnumerator(Of TResponse).Current
  fullName.vb: System.Collections.Generic.IAsyncEnumerator(Of TResponse).Current
- uid: '{TResponse}'
  commentId: '!:TResponse'
  definition: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: System.Collections.Generic.IAsyncEnumerator`1.Current
  commentId: P:System.Collections.Generic.IAsyncEnumerator`1.Current
  isExternal: true
  name: Current
  nameWithType: IAsyncEnumerator<T>.Current
  fullName: System.Collections.Generic.IAsyncEnumerator<T>.Current
  nameWithType.vb: IAsyncEnumerator(Of T).Current
  fullName.vb: System.Collections.Generic.IAsyncEnumerator(Of T).Current
- uid: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: Google.Api.Gax.Grpc.AsyncResponseStream`1.DisposeAsync*
  commentId: Overload:Google.Api.Gax.Grpc.AsyncResponseStream`1.DisposeAsync
  name: DisposeAsync
  nameWithType: AsyncResponseStream<TResponse>.DisposeAsync
  fullName: Google.Api.Gax.Grpc.AsyncResponseStream<TResponse>.DisposeAsync
  nameWithType.vb: AsyncResponseStream(Of TResponse).DisposeAsync
  fullName.vb: Google.Api.Gax.Grpc.AsyncResponseStream(Of TResponse).DisposeAsync
- uid: System.IAsyncDisposable.DisposeAsync
  commentId: M:System.IAsyncDisposable.DisposeAsync
  parent: System.IAsyncDisposable
  isExternal: true
  name: DisposeAsync()
  nameWithType: IAsyncDisposable.DisposeAsync()
  fullName: System.IAsyncDisposable.DisposeAsync()
  spec.csharp:
  - uid: System.IAsyncDisposable.DisposeAsync
    name: DisposeAsync
    nameWithType: IAsyncDisposable.DisposeAsync
    fullName: System.IAsyncDisposable.DisposeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IAsyncDisposable.DisposeAsync
    name: DisposeAsync
    nameWithType: IAsyncDisposable.DisposeAsync
    fullName: System.IAsyncDisposable.DisposeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.ValueTask
  commentId: T:System.Threading.Tasks.ValueTask
  parent: System.Threading.Tasks
  isExternal: true
  name: ValueTask
  nameWithType: ValueTask
  fullName: System.Threading.Tasks.ValueTask
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync
  commentId: M:Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Google.Api.Gax.Grpc.AsyncResponseStream`1.GetAsyncEnumerator*
  commentId: Overload:Google.Api.Gax.Grpc.AsyncResponseStream`1.GetAsyncEnumerator
  name: GetAsyncEnumerator
  nameWithType: AsyncResponseStream<TResponse>.GetAsyncEnumerator
  fullName: Google.Api.Gax.Grpc.AsyncResponseStream<TResponse>.GetAsyncEnumerator
  nameWithType.vb: AsyncResponseStream(Of TResponse).GetAsyncEnumerator
  fullName.vb: Google.Api.Gax.Grpc.AsyncResponseStream(Of TResponse).GetAsyncEnumerator
- uid: System.Collections.Generic.IAsyncEnumerable{{TResponse}}.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:System.Collections.Generic.IAsyncEnumerable{`0}.GetAsyncEnumerator(System.Threading.CancellationToken)
  parent: System.Collections.Generic.IAsyncEnumerable{{TResponse}}
  definition: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: IAsyncEnumerable<TResponse>.GetAsyncEnumerator(CancellationToken)
  fullName: System.Collections.Generic.IAsyncEnumerable<TResponse>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: IAsyncEnumerable(Of TResponse).GetAsyncEnumerator(CancellationToken)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of TResponse).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable<TResponse>.GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable<TResponse>.GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable(Of TResponse).GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable(Of TResponse).GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  commentId: M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
  isExternal: true
  name: GetAsyncEnumerator(CancellationToken)
  nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator(CancellationToken)
  fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator(System.Threading.CancellationToken)
  nameWithType.vb: IAsyncEnumerable(Of T).GetAsyncEnumerator(CancellationToken)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable<T>.GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable<T>.GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)
    name: GetAsyncEnumerator
    nameWithType: IAsyncEnumerable(Of T).GetAsyncEnumerator
    fullName: System.Collections.Generic.IAsyncEnumerable(Of T).GetAsyncEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync*
  commentId: Overload:Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync
  name: MoveNextAsync
  nameWithType: AsyncResponseStream<TResponse>.MoveNextAsync
  fullName: Google.Api.Gax.Grpc.AsyncResponseStream<TResponse>.MoveNextAsync
  nameWithType.vb: AsyncResponseStream(Of TResponse).MoveNextAsync
  fullName.vb: Google.Api.Gax.Grpc.AsyncResponseStream(Of TResponse).MoveNextAsync
- uid: System.Threading.Tasks.ValueTask{System.Boolean}
  commentId: T:System.Threading.Tasks.ValueTask{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  name: ValueTask<Boolean>
  nameWithType: ValueTask<Boolean>
  fullName: System.Threading.Tasks.ValueTask<System.Boolean>
  nameWithType.vb: ValueTask(Of Boolean)
  fullName.vb: System.Threading.Tasks.ValueTask(Of System.Boolean)
  name.vb: ValueTask(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerator{{TResponse}}.MoveNextAsync
  commentId: M:System.Collections.Generic.IAsyncEnumerator{`0}.MoveNextAsync
  parent: System.Collections.Generic.IAsyncEnumerator{{TResponse}}
  definition: System.Collections.Generic.IAsyncEnumerator`1.MoveNextAsync
  name: MoveNextAsync()
  nameWithType: IAsyncEnumerator<TResponse>.MoveNextAsync()
  fullName: System.Collections.Generic.IAsyncEnumerator<TResponse>.MoveNextAsync()
  nameWithType.vb: IAsyncEnumerator(Of TResponse).MoveNextAsync()
  fullName.vb: System.Collections.Generic.IAsyncEnumerator(Of TResponse).MoveNextAsync()
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerator`1.MoveNextAsync
    name: MoveNextAsync
    nameWithType: IAsyncEnumerator<TResponse>.MoveNextAsync
    fullName: System.Collections.Generic.IAsyncEnumerator<TResponse>.MoveNextAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerator`1.MoveNextAsync
    name: MoveNextAsync
    nameWithType: IAsyncEnumerator(Of TResponse).MoveNextAsync
    fullName: System.Collections.Generic.IAsyncEnumerator(Of TResponse).MoveNextAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerator`1.MoveNextAsync
  commentId: M:System.Collections.Generic.IAsyncEnumerator`1.MoveNextAsync
  isExternal: true
  name: MoveNextAsync()
  nameWithType: IAsyncEnumerator<T>.MoveNextAsync()
  fullName: System.Collections.Generic.IAsyncEnumerator<T>.MoveNextAsync()
  nameWithType.vb: IAsyncEnumerator(Of T).MoveNextAsync()
  fullName.vb: System.Collections.Generic.IAsyncEnumerator(Of T).MoveNextAsync()
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerator`1.MoveNextAsync
    name: MoveNextAsync
    nameWithType: IAsyncEnumerator<T>.MoveNextAsync
    fullName: System.Collections.Generic.IAsyncEnumerator<T>.MoveNextAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerator`1.MoveNextAsync
    name: MoveNextAsync
    nameWithType: IAsyncEnumerator(Of T).MoveNextAsync
    fullName: System.Collections.Generic.IAsyncEnumerator(Of T).MoveNextAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
