### YamlMime:ManagedReference
items:
- uid: Google.Api.Gax.Grpc.ApiCall`2
  commentId: T:Google.Api.Gax.Grpc.ApiCall`2
  id: ApiCall`2
  parent: Google.Api.Gax.Grpc
  children:
  - Google.Api.Gax.Grpc.ApiCall`2.Async(`0,Google.Api.Gax.Grpc.CallSettings)
  - Google.Api.Gax.Grpc.ApiCall`2.BaseCallSettings
  - Google.Api.Gax.Grpc.ApiCall`2.Sync(`0,Google.Api.Gax.Grpc.CallSettings)
  - Google.Api.Gax.Grpc.ApiCall`2.WithCallSettingsOverlay(System.Func{`0,Google.Api.Gax.Grpc.CallSettings})
  - Google.Api.Gax.Grpc.ApiCall`2.WithExceptionCustomizer(System.Func{Grpc.Core.RpcException,Grpc.Core.RpcException})
  - Google.Api.Gax.Grpc.ApiCall`2.WithGoogleRequestParam(System.String,System.Func{`0,System.String})
  langs:
  - csharp
  - vb
  name: ApiCall<TRequest, TResponse>
  nameWithType: ApiCall<TRequest, TResponse>
  fullName: Google.Api.Gax.Grpc.ApiCall<TRequest, TResponse>
  type: Class
  source:
    remote:
      path: Google.Api.Gax.Grpc/ApiCall.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: ApiCall
    path: Google.Api.Gax.Grpc/ApiCall.cs
    startLine: 102
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nBridge between an RPC method (with synchronous and asynchronous variants) and higher level\nabstractions, applying call settings as required.\n"
  example: []
  syntax:
    content: >-
      public sealed class ApiCall<TRequest, TResponse>
          where TRequest : class, IMessage<TRequest> where TResponse : class, IMessage<TResponse>
    typeParameters:
    - id: TRequest
      description: RPC request type
    - id: TResponse
      description: RPC response type
    content.vb: Public NotInheritable Class ApiCall(Of TRequest As {Class, IMessage(Of TRequest)}, TResponse As {Class, IMessage(Of TResponse)})
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ApiCall(Of TRequest, TResponse)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Google.Api.Gax.Grpc.ApiCall(Of TRequest, TResponse)
  name.vb: ApiCall(Of TRequest, TResponse)
- uid: Google.Api.Gax.Grpc.ApiCall`2.BaseCallSettings
  commentId: P:Google.Api.Gax.Grpc.ApiCall`2.BaseCallSettings
  id: BaseCallSettings
  parent: Google.Api.Gax.Grpc.ApiCall`2
  langs:
  - csharp
  - vb
  name: BaseCallSettings
  nameWithType: ApiCall<TRequest, TResponse>.BaseCallSettings
  fullName: Google.Api.Gax.Grpc.ApiCall<TRequest, TResponse>.BaseCallSettings
  type: Property
  source:
    remote:
      path: Google.Api.Gax.Grpc/ApiCall.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: BaseCallSettings
    path: Google.Api.Gax.Grpc/ApiCall.cs
    startLine: 123
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nThe base <xref href=\"Google.Api.Gax.Grpc.CallSettings\" data-throw-if-not-resolved=\"false\"></xref> for this API call; these can be further overridden by providing\na <code>CallSettings</code> to <xref href=\"Google.Api.Gax.Grpc.ApiCall%602.Async(%600%2cGoogle.Api.Gax.Grpc.CallSettings)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Google.Api.Gax.Grpc.ApiCall%602.Sync(%600%2cGoogle.Api.Gax.Grpc.CallSettings)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CallSettings BaseCallSettings { get; }
    parameters: []
    return:
      type: Google.Api.Gax.Grpc.CallSettings
    content.vb: Public ReadOnly Property BaseCallSettings As CallSettings
  overload: Google.Api.Gax.Grpc.ApiCall`2.BaseCallSettings*
  nameWithType.vb: ApiCall(Of TRequest, TResponse).BaseCallSettings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Google.Api.Gax.Grpc.ApiCall(Of TRequest, TResponse).BaseCallSettings
- uid: Google.Api.Gax.Grpc.ApiCall`2.Async(`0,Google.Api.Gax.Grpc.CallSettings)
  commentId: M:Google.Api.Gax.Grpc.ApiCall`2.Async(`0,Google.Api.Gax.Grpc.CallSettings)
  id: Async(`0,Google.Api.Gax.Grpc.CallSettings)
  parent: Google.Api.Gax.Grpc.ApiCall`2
  langs:
  - csharp
  - vb
  name: Async(TRequest, CallSettings)
  nameWithType: ApiCall<TRequest, TResponse>.Async(TRequest, CallSettings)
  fullName: Google.Api.Gax.Grpc.ApiCall<TRequest, TResponse>.Async(TRequest, Google.Api.Gax.Grpc.CallSettings)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ApiCall.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Async
    path: Google.Api.Gax.Grpc/ApiCall.cs
    startLine: 133
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nPerforms an RPC call asynchronously.\n"
  example: []
  syntax:
    content: public Task<TResponse> Async(TRequest request, CallSettings perCallCallSettings)
    parameters:
    - id: request
      type: '{TRequest}'
      description: The RPC request.
    - id: perCallCallSettings
      type: Google.Api.Gax.Grpc.CallSettings
      description: >-
        The call settings to apply to this specific call,

        overriding defaults where necessary.
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
      description: >-
        A task representing the asynchronous operation. The result of the completed task

        will be the RPC response.
    content.vb: Public Function Async(request As TRequest, perCallCallSettings As CallSettings) As Task(Of TResponse)
  overload: Google.Api.Gax.Grpc.ApiCall`2.Async*
  nameWithType.vb: ApiCall(Of TRequest, TResponse).Async(TRequest, CallSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.ApiCall(Of TRequest, TResponse).Async(TRequest, Google.Api.Gax.Grpc.CallSettings)
- uid: Google.Api.Gax.Grpc.ApiCall`2.Sync(`0,Google.Api.Gax.Grpc.CallSettings)
  commentId: M:Google.Api.Gax.Grpc.ApiCall`2.Sync(`0,Google.Api.Gax.Grpc.CallSettings)
  id: Sync(`0,Google.Api.Gax.Grpc.CallSettings)
  parent: Google.Api.Gax.Grpc.ApiCall`2
  langs:
  - csharp
  - vb
  name: Sync(TRequest, CallSettings)
  nameWithType: ApiCall<TRequest, TResponse>.Sync(TRequest, CallSettings)
  fullName: Google.Api.Gax.Grpc.ApiCall<TRequest, TResponse>.Sync(TRequest, Google.Api.Gax.Grpc.CallSettings)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ApiCall.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: Sync
    path: Google.Api.Gax.Grpc/ApiCall.cs
    startLine: 143
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nPerforms an RPC call synchronously.\n"
  example: []
  syntax:
    content: public TResponse Sync(TRequest request, CallSettings perCallCallSettings)
    parameters:
    - id: request
      type: '{TRequest}'
      description: The RPC request.
    - id: perCallCallSettings
      type: Google.Api.Gax.Grpc.CallSettings
      description: >-
        The call settings to apply to this specific call,

        overriding defaults where necessary.
    return:
      type: '{TResponse}'
      description: The RPC response.
    content.vb: Public Function Sync(request As TRequest, perCallCallSettings As CallSettings) As TResponse
  overload: Google.Api.Gax.Grpc.ApiCall`2.Sync*
  nameWithType.vb: ApiCall(Of TRequest, TResponse).Sync(TRequest, CallSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.ApiCall(Of TRequest, TResponse).Sync(TRequest, Google.Api.Gax.Grpc.CallSettings)
- uid: Google.Api.Gax.Grpc.ApiCall`2.WithCallSettingsOverlay(System.Func{`0,Google.Api.Gax.Grpc.CallSettings})
  commentId: M:Google.Api.Gax.Grpc.ApiCall`2.WithCallSettingsOverlay(System.Func{`0,Google.Api.Gax.Grpc.CallSettings})
  id: WithCallSettingsOverlay(System.Func{`0,Google.Api.Gax.Grpc.CallSettings})
  parent: Google.Api.Gax.Grpc.ApiCall`2
  langs:
  - csharp
  - vb
  name: WithCallSettingsOverlay(Func<TRequest, CallSettings>)
  nameWithType: ApiCall<TRequest, TResponse>.WithCallSettingsOverlay(Func<TRequest, CallSettings>)
  fullName: Google.Api.Gax.Grpc.ApiCall<TRequest, TResponse>.WithCallSettingsOverlay(System.Func<TRequest, Google.Api.Gax.Grpc.CallSettings>)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ApiCall.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WithCallSettingsOverlay
    path: Google.Api.Gax.Grpc/ApiCall.cs
    startLine: 169
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nConstructs a new <xref href=\"Google.Api.Gax.Grpc.ApiCall%602\" data-throw-if-not-resolved=\"false\"></xref> that applies an overlay to\nthe underlying <xref href=\"Google.Api.Gax.Grpc.CallSettings\" data-throw-if-not-resolved=\"false\"></xref>. If a value exists in both the original and\nthe overlay, the overlay takes priority.\n"
  example: []
  syntax:
    content: public ApiCall<TRequest, TResponse> WithCallSettingsOverlay(Func<TRequest, CallSettings> callSettingsOverlayFn)
    parameters:
    - id: callSettingsOverlayFn
      type: System.Func{{TRequest},Google.Api.Gax.Grpc.CallSettings}
      description: Function that builds the overlay <xref href="Google.Api.Gax.Grpc.CallSettings" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Google.Api.Gax.Grpc.ApiCall`2
      description: A new <xref href="Google.Api.Gax.Grpc.ApiCall%602" data-throw-if-not-resolved="false"></xref> with the overlay applied.
    content.vb: Public Function WithCallSettingsOverlay(callSettingsOverlayFn As Func(Of TRequest, CallSettings)) As ApiCall(Of TRequest, TResponse)
  overload: Google.Api.Gax.Grpc.ApiCall`2.WithCallSettingsOverlay*
  nameWithType.vb: ApiCall(Of TRequest, TResponse).WithCallSettingsOverlay(Func(Of TRequest, CallSettings))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.ApiCall(Of TRequest, TResponse).WithCallSettingsOverlay(System.Func(Of TRequest, Google.Api.Gax.Grpc.CallSettings))
  name.vb: WithCallSettingsOverlay(Func(Of TRequest, CallSettings))
- uid: Google.Api.Gax.Grpc.ApiCall`2.WithExceptionCustomizer(System.Func{Grpc.Core.RpcException,Grpc.Core.RpcException})
  commentId: M:Google.Api.Gax.Grpc.ApiCall`2.WithExceptionCustomizer(System.Func{Grpc.Core.RpcException,Grpc.Core.RpcException})
  id: WithExceptionCustomizer(System.Func{Grpc.Core.RpcException,Grpc.Core.RpcException})
  parent: Google.Api.Gax.Grpc.ApiCall`2
  langs:
  - csharp
  - vb
  name: WithExceptionCustomizer(Func<RpcException, RpcException>)
  nameWithType: ApiCall<TRequest, TResponse>.WithExceptionCustomizer(Func<RpcException, RpcException>)
  fullName: Google.Api.Gax.Grpc.ApiCall<TRequest, TResponse>.WithExceptionCustomizer(System.Func<Grpc.Core.RpcException, Grpc.Core.RpcException>)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ApiCall.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WithExceptionCustomizer
    path: Google.Api.Gax.Grpc/ApiCall.cs
    startLine: 186
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nConstructs a new <xref href=\"Google.Api.Gax.Grpc.ApiCall%602\" data-throw-if-not-resolved=\"false\"></xref> that applies an exception customizer\nto both the synchronous and asynchronous calls.\n"
  remarks: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">customizer</code> will be passed any exception that is thrown by the underlying API call.\nIf it returns null, the original exception is retained and passed on. Otherwise, the returned exception is\nthrown in place of the original one.\n"
  example: []
  syntax:
    content: public ApiCall<TRequest, TResponse> WithExceptionCustomizer(Func<RpcException, RpcException> customizer)
    parameters:
    - id: customizer
      type: System.Func{Grpc.Core.RpcException,Grpc.Core.RpcException}
      description: The exception customizer to apply. Must not be null.
    return:
      type: Google.Api.Gax.Grpc.ApiCall`2
      description: A new <xref href="Google.Api.Gax.Grpc.ApiCall%602" data-throw-if-not-resolved="false"></xref> with the exception customizer applied.
    content.vb: Public Function WithExceptionCustomizer(customizer As Func(Of RpcException, RpcException)) As ApiCall(Of TRequest, TResponse)
  overload: Google.Api.Gax.Grpc.ApiCall`2.WithExceptionCustomizer*
  nameWithType.vb: ApiCall(Of TRequest, TResponse).WithExceptionCustomizer(Func(Of RpcException, RpcException))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.ApiCall(Of TRequest, TResponse).WithExceptionCustomizer(System.Func(Of Grpc.Core.RpcException, Grpc.Core.RpcException))
  name.vb: WithExceptionCustomizer(Func(Of RpcException, RpcException))
- uid: Google.Api.Gax.Grpc.ApiCall`2.WithGoogleRequestParam(System.String,System.Func{`0,System.String})
  commentId: M:Google.Api.Gax.Grpc.ApiCall`2.WithGoogleRequestParam(System.String,System.Func{`0,System.String})
  id: WithGoogleRequestParam(System.String,System.Func{`0,System.String})
  parent: Google.Api.Gax.Grpc.ApiCall`2
  langs:
  - csharp
  - vb
  name: WithGoogleRequestParam(String, Func<TRequest, String>)
  nameWithType: ApiCall<TRequest, TResponse>.WithGoogleRequestParam(String, Func<TRequest, String>)
  fullName: Google.Api.Gax.Grpc.ApiCall<TRequest, TResponse>.WithGoogleRequestParam(System.String, System.Func<TRequest, System.String>)
  type: Method
  source:
    remote:
      path: Google.Api.Gax.Grpc/ApiCall.cs
      branch: master
      repo: https://github.com/googleapis/gax-dotnet
    id: WithGoogleRequestParam
    path: Google.Api.Gax.Grpc/ApiCall.cs
    startLine: 204
  assemblies:
  - Google.Api.Gax.Grpc
  namespace: Google.Api.Gax.Grpc
  summary: "\nConstructs a new <xref href=\"Google.Api.Gax.Grpc.ApiCall%602\" data-throw-if-not-resolved=\"false\"></xref> that applies an x-goog-request-params header to each request,\nusing the specified parameter name and a value derived from the request.\n"
  remarks: Values produced by the function are URL-encoded; it is expected that <code data-dev-comment-type="paramref" class="paramref">parameterName</code> is already URL-encoded.
  example: []
  syntax:
    content: public ApiCall<TRequest, TResponse> WithGoogleRequestParam(string parameterName, Func<TRequest, string> valueSelector)
    parameters:
    - id: parameterName
      type: System.String
      description: The parameter name in the header. Must not be null.
    - id: valueSelector
      type: System.Func{{TRequest},System.String}
      description: >-
        A function to call on each request, to determine the value to specify in the header.

        The parameter must not be null, but may return null.
    return:
      type: Google.Api.Gax.Grpc.ApiCall`2
      description: A new <xref href="Google.Api.Gax.Grpc.ApiCall%602" data-throw-if-not-resolved="false"></xref> which applies the header on each request.
    content.vb: Public Function WithGoogleRequestParam(parameterName As String, valueSelector As Func(Of TRequest, String)) As ApiCall(Of TRequest, TResponse)
  overload: Google.Api.Gax.Grpc.ApiCall`2.WithGoogleRequestParam*
  nameWithType.vb: ApiCall(Of TRequest, TResponse).WithGoogleRequestParam(String, Func(Of TRequest, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Google.Api.Gax.Grpc.ApiCall(Of TRequest, TResponse).WithGoogleRequestParam(System.String, System.Func(Of TRequest, System.String))
  name.vb: WithGoogleRequestParam(String, Func(Of TRequest, String))
references:
- uid: Google.Api.Gax.Grpc
  commentId: N:Google.Api.Gax.Grpc
  name: Google.Api.Gax.Grpc
  nameWithType: Google.Api.Gax.Grpc
  fullName: Google.Api.Gax.Grpc
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Api.Gax.Grpc.CallSettings
  commentId: T:Google.Api.Gax.Grpc.CallSettings
  parent: Google.Api.Gax.Grpc
  name: CallSettings
  nameWithType: CallSettings
  fullName: Google.Api.Gax.Grpc.CallSettings
- uid: Google.Api.Gax.Grpc.ApiCall`2.Async(`0,Google.Api.Gax.Grpc.CallSettings)
  commentId: M:Google.Api.Gax.Grpc.ApiCall`2.Async(`0,Google.Api.Gax.Grpc.CallSettings)
  isExternal: true
- uid: Google.Api.Gax.Grpc.ApiCall`2.Sync(`0,Google.Api.Gax.Grpc.CallSettings)
  commentId: M:Google.Api.Gax.Grpc.ApiCall`2.Sync(`0,Google.Api.Gax.Grpc.CallSettings)
  isExternal: true
- uid: Google.Api.Gax.Grpc.ApiCall`2.BaseCallSettings*
  commentId: Overload:Google.Api.Gax.Grpc.ApiCall`2.BaseCallSettings
  name: BaseCallSettings
  nameWithType: ApiCall<TRequest, TResponse>.BaseCallSettings
  fullName: Google.Api.Gax.Grpc.ApiCall<TRequest, TResponse>.BaseCallSettings
  nameWithType.vb: ApiCall(Of TRequest, TResponse).BaseCallSettings
  fullName.vb: Google.Api.Gax.Grpc.ApiCall(Of TRequest, TResponse).BaseCallSettings
- uid: Google.Api.Gax.Grpc.ApiCall`2.Async*
  commentId: Overload:Google.Api.Gax.Grpc.ApiCall`2.Async
  name: Async
  nameWithType: ApiCall<TRequest, TResponse>.Async
  fullName: Google.Api.Gax.Grpc.ApiCall<TRequest, TResponse>.Async
  nameWithType.vb: ApiCall(Of TRequest, TResponse).Async
  fullName.vb: Google.Api.Gax.Grpc.ApiCall(Of TRequest, TResponse).Async
- uid: '{TRequest}'
  commentId: '!:TRequest'
  definition: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: System.Threading.Tasks.Task{{TResponse}}
  commentId: T:System.Threading.Tasks.Task{`1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResponse>
  nameWithType: Task<TResponse>
  fullName: System.Threading.Tasks.Task<TResponse>
  nameWithType.vb: Task(Of TResponse)
  fullName.vb: System.Threading.Tasks.Task(Of TResponse)
  name.vb: Task(Of TResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Api.Gax.Grpc.ApiCall`2.Sync*
  commentId: Overload:Google.Api.Gax.Grpc.ApiCall`2.Sync
  name: Sync
  nameWithType: ApiCall<TRequest, TResponse>.Sync
  fullName: Google.Api.Gax.Grpc.ApiCall<TRequest, TResponse>.Sync
  nameWithType.vb: ApiCall(Of TRequest, TResponse).Sync
  fullName.vb: Google.Api.Gax.Grpc.ApiCall(Of TRequest, TResponse).Sync
- uid: '{TResponse}'
  commentId: '!:TResponse'
  definition: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: TResponse
  commentId: '!:TResponse'
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: Google.Api.Gax.Grpc.ApiCall`2
  commentId: T:Google.Api.Gax.Grpc.ApiCall`2
  parent: Google.Api.Gax.Grpc
  name: ApiCall<TRequest, TResponse>
  nameWithType: ApiCall<TRequest, TResponse>
  fullName: Google.Api.Gax.Grpc.ApiCall<TRequest, TResponse>
  nameWithType.vb: ApiCall(Of TRequest, TResponse)
  fullName.vb: Google.Api.Gax.Grpc.ApiCall(Of TRequest, TResponse)
  name.vb: ApiCall(Of TRequest, TResponse)
  spec.csharp:
  - uid: Google.Api.Gax.Grpc.ApiCall`2
    name: ApiCall
    nameWithType: ApiCall
    fullName: Google.Api.Gax.Grpc.ApiCall
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Api.Gax.Grpc.ApiCall`2
    name: ApiCall
    nameWithType: ApiCall
    fullName: Google.Api.Gax.Grpc.ApiCall
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Grpc.ApiCall`2.WithCallSettingsOverlay*
  commentId: Overload:Google.Api.Gax.Grpc.ApiCall`2.WithCallSettingsOverlay
  name: WithCallSettingsOverlay
  nameWithType: ApiCall<TRequest, TResponse>.WithCallSettingsOverlay
  fullName: Google.Api.Gax.Grpc.ApiCall<TRequest, TResponse>.WithCallSettingsOverlay
  nameWithType.vb: ApiCall(Of TRequest, TResponse).WithCallSettingsOverlay
  fullName.vb: Google.Api.Gax.Grpc.ApiCall(Of TRequest, TResponse).WithCallSettingsOverlay
- uid: System.Func{{TRequest},Google.Api.Gax.Grpc.CallSettings}
  commentId: T:System.Func{`0,Google.Api.Gax.Grpc.CallSettings}
  parent: System
  definition: System.Func`2
  name: Func<TRequest, CallSettings>
  nameWithType: Func<TRequest, CallSettings>
  fullName: System.Func<TRequest, Google.Api.Gax.Grpc.CallSettings>
  nameWithType.vb: Func(Of TRequest, CallSettings)
  fullName.vb: System.Func(Of TRequest, Google.Api.Gax.Grpc.CallSettings)
  name.vb: Func(Of TRequest, CallSettings)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Api.Gax.Grpc.CallSettings
    name: CallSettings
    nameWithType: CallSettings
    fullName: Google.Api.Gax.Grpc.CallSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Api.Gax.Grpc.CallSettings
    name: CallSettings
    nameWithType: CallSettings
    fullName: Google.Api.Gax.Grpc.CallSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Grpc.ApiCall`2.WithExceptionCustomizer*
  commentId: Overload:Google.Api.Gax.Grpc.ApiCall`2.WithExceptionCustomizer
  name: WithExceptionCustomizer
  nameWithType: ApiCall<TRequest, TResponse>.WithExceptionCustomizer
  fullName: Google.Api.Gax.Grpc.ApiCall<TRequest, TResponse>.WithExceptionCustomizer
  nameWithType.vb: ApiCall(Of TRequest, TResponse).WithExceptionCustomizer
  fullName.vb: Google.Api.Gax.Grpc.ApiCall(Of TRequest, TResponse).WithExceptionCustomizer
- uid: System.Func{Grpc.Core.RpcException,Grpc.Core.RpcException}
  commentId: T:System.Func{Grpc.Core.RpcException,Grpc.Core.RpcException}
  parent: System
  definition: System.Func`2
  name: Func<RpcException, RpcException>
  nameWithType: Func<RpcException, RpcException>
  fullName: System.Func<Grpc.Core.RpcException, Grpc.Core.RpcException>
  nameWithType.vb: Func(Of RpcException, RpcException)
  fullName.vb: System.Func(Of Grpc.Core.RpcException, Grpc.Core.RpcException)
  name.vb: Func(Of RpcException, RpcException)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Grpc.Core.RpcException
    name: RpcException
    nameWithType: RpcException
    fullName: Grpc.Core.RpcException
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.RpcException
    name: RpcException
    nameWithType: RpcException
    fullName: Grpc.Core.RpcException
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Grpc.Core.RpcException
    name: RpcException
    nameWithType: RpcException
    fullName: Grpc.Core.RpcException
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Grpc.Core.RpcException
    name: RpcException
    nameWithType: RpcException
    fullName: Grpc.Core.RpcException
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Grpc.ApiCall`2.WithGoogleRequestParam*
  commentId: Overload:Google.Api.Gax.Grpc.ApiCall`2.WithGoogleRequestParam
  name: WithGoogleRequestParam
  nameWithType: ApiCall<TRequest, TResponse>.WithGoogleRequestParam
  fullName: Google.Api.Gax.Grpc.ApiCall<TRequest, TResponse>.WithGoogleRequestParam
  nameWithType.vb: ApiCall(Of TRequest, TResponse).WithGoogleRequestParam
  fullName.vb: Google.Api.Gax.Grpc.ApiCall(Of TRequest, TResponse).WithGoogleRequestParam
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{{TRequest},System.String}
  commentId: T:System.Func{`0,System.String}
  parent: System
  definition: System.Func`2
  name: Func<TRequest, String>
  nameWithType: Func<TRequest, String>
  fullName: System.Func<TRequest, System.String>
  nameWithType.vb: Func(Of TRequest, String)
  fullName.vb: System.Func(Of TRequest, System.String)
  name.vb: Func(Of TRequest, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
